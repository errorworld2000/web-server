<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1589" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="469.26" y="1599.5" ></text>
</g>
<g >
<title>napi_complete_done (11,553,028 samples, 0.01%)</title><rect x="1175.8" y="1605" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1178.77" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1941" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (34,624,149 samples, 0.04%)</title><rect x="648.2" y="1685" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="651.22" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="613" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="623.5" ></text>
</g>
<g >
<title>__fget_light (26,673,936 samples, 0.03%)</title><rect x="849.4" y="1701" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="852.39" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (38,200,327 samples, 0.05%)</title><rect x="911.0" y="1717" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="913.98" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="293" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="303.5" ></text>
</g>
<g >
<title>handle_softirqs (8,033,129 samples, 0.01%)</title><rect x="1173.7" y="1733" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1176.72" y="1743.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (11,198,812 samples, 0.01%)</title><rect x="723.9" y="1541" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="726.89" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (7,805,407 samples, 0.01%)</title><rect x="701.5" y="1749" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="704.49" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7,485,479 samples, 0.01%)</title><rect x="565.1" y="1141" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="568.06" y="1151.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (8,016,728 samples, 0.01%)</title><rect x="606.3" y="1333" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="609.26" y="1343.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,190,386 samples, 0.01%)</title><rect x="439.9" y="1605" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="442.94" y="1615.5" ></text>
</g>
<g >
<title>sch_direct_xmit (208,969,135 samples, 0.25%)</title><rect x="274.4" y="1413" width="2.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="277.36" y="1423.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (23,053,692 samples, 0.03%)</title><rect x="103.0" y="1749" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="106.04" y="1759.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (116,856,918 samples, 0.14%)</title><rect x="985.9" y="1765" width="1.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="988.91" y="1775.5" ></text>
</g>
<g >
<title>import_iovec (19,997,680 samples, 0.02%)</title><rect x="575.6" y="1701" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="578.65" y="1711.5" ></text>
</g>
<g >
<title>selinux_ip_postroute_compat (15,720,438 samples, 0.02%)</title><rect x="569.4" y="1445" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="572.43" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (9,743,652 samples, 0.01%)</title><rect x="699.6" y="1733" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="702.61" y="1743.5" ></text>
</g>
<g >
<title>napi_complete_done (45,098,668 samples, 0.05%)</title><rect x="124.5" y="1301" width="0.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="127.54" y="1311.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (19,897,769 samples, 0.02%)</title><rect x="298.6" y="1925" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="301.56" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (130,033,629 samples, 0.16%)</title><rect x="24.0" y="1701" width="1.8" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="26.97" y="1711.5" ></text>
</g>
<g >
<title>__put_user_nocheck_4 (8,195,967 samples, 0.01%)</title><rect x="578.8" y="1829" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="581.82" y="1839.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (15,247,257 samples, 0.02%)</title><rect x="329.2" y="1701" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="332.16" y="1711.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (24,310,052 samples, 0.03%)</title><rect x="80.8" y="1669" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="83.76" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (12,652,713 samples, 0.02%)</title><rect x="815.8" y="1765" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="818.79" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (69,237,575 samples, 0.08%)</title><rect x="1082.2" y="1749" width="1.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1085.18" y="1759.5" ></text>
</g>
<g >
<title>netvsc_poll (13,169,734 samples, 0.02%)</title><rect x="526.7" y="1637" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="529.73" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (13,377,237 samples, 0.02%)</title><rect x="1173.1" y="1605" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1176.10" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (12,930,938 samples, 0.02%)</title><rect x="662.5" y="1765" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="665.52" y="1775.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::tuple&lt;true, true&gt; (21,098,356 samples, 0.03%)</title><rect x="325.4" y="1717" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="328.39" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (7,661,320 samples, 0.01%)</title><rect x="178.2" y="1701" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="181.23" y="1711.5" ></text>
</g>
<g >
<title>handle_softirqs (8,617,696 samples, 0.01%)</title><rect x="1144.3" y="1685" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1147.28" y="1695.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (32,469,136 samples, 0.04%)</title><rect x="837.5" y="1669" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="840.45" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,279,046 samples, 0.01%)</title><rect x="84.9" y="1589" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="87.92" y="1599.5" ></text>
</g>
<g >
<title>__check_object_size (16,073,536 samples, 0.02%)</title><rect x="238.3" y="1573" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="241.31" y="1583.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (23,723,720 samples, 0.03%)</title><rect x="617.9" y="1765" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="620.88" y="1775.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (36,177,299 samples, 0.04%)</title><rect x="55.5" y="1717" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="58.47" y="1727.5" ></text>
</g>
<g >
<title>__napi_poll (24,955,747 samples, 0.03%)</title><rect x="82.6" y="1701" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="85.60" y="1711.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Epoller*, std::default_delete&lt;Epoller&gt; &gt; (11,546,224 samples, 0.01%)</title><rect x="146.5" y="1861" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="149.47" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (8,363,008 samples, 0.01%)</title><rect x="775.5" y="1717" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="778.49" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (36,024,061 samples, 0.04%)</title><rect x="1053.0" y="1717" width="0.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1056.01" y="1727.5" ></text>
</g>
<g >
<title>security_file_permission (44,198,482 samples, 0.05%)</title><rect x="283.8" y="1669" width="0.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="286.76" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (12,066,176 samples, 0.01%)</title><rect x="739.7" y="1909" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="742.66" y="1919.5" ></text>
</g>
<g >
<title>irq_exit_rcu (22,933,215 samples, 0.03%)</title><rect x="210.1" y="1669" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="213.13" y="1679.5" ></text>
</g>
<g >
<title>path_init (15,063,903 samples, 0.02%)</title><rect x="951.9" y="1605" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="954.90" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (76,932,184 samples, 0.09%)</title><rect x="640.9" y="1733" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="643.87" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (15,405,832 samples, 0.02%)</title><rect x="992.1" y="1733" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="995.10" y="1743.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,496,094 samples, 0.01%)</title><rect x="1014.3" y="1461" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1017.28" y="1471.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1205" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="430.41" y="1215.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (1,890,948,409 samples, 2.27%)</title><rect x="1051.4" y="1781" width="26.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1054.41" y="1791.5" >H..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (8,480,700 samples, 0.01%)</title><rect x="568.1" y="1285" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="571.12" y="1295.5" ></text>
</g>
<g >
<title>handle_softirqs (40,225,328 samples, 0.05%)</title><rect x="860.9" y="1365" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="863.85" y="1375.5" ></text>
</g>
<g >
<title>irq_exit_rcu (33,593,794 samples, 0.04%)</title><rect x="293.1" y="1701" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="296.12" y="1711.5" ></text>
</g>
<g >
<title>napi_complete_done (15,290,330 samples, 0.02%)</title><rect x="650.2" y="1621" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="653.16" y="1631.5" ></text>
</g>
<g >
<title>sch_direct_xmit (195,098,863 samples, 0.23%)</title><rect x="862.3" y="1413" width="2.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="865.33" y="1423.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1,357,321,529 samples, 1.63%)</title><rect x="1146.7" y="1637" width="19.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1149.72" y="1647.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,757,239 samples, 0.02%)</title><rect x="439.9" y="1749" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="442.94" y="1759.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::allocate (13,444,404 samples, 0.02%)</title><rect x="764.0" y="1685" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="766.96" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_erase (18,599,587 samples, 0.02%)</title><rect x="930.5" y="1749" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="933.51" y="1759.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (24,774,839 samples, 0.03%)</title><rect x="817.0" y="1637" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="820.04" y="1647.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (21,208,322 samples, 0.03%)</title><rect x="740.1" y="1813" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="743.14" y="1823.5" ></text>
</g>
<g >
<title>netvsc_poll (7,407,017 samples, 0.01%)</title><rect x="1079.0" y="1653" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1082.03" y="1663.5" ></text>
</g>
<g >
<title>irq_exit_rcu (15,714,971 samples, 0.02%)</title><rect x="980.2" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="983.16" y="1647.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7,973,340 samples, 0.01%)</title><rect x="1142.0" y="1701" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1145.05" y="1711.5" ></text>
</g>
<g >
<title>Channel::OnWrite (2,926,129,447 samples, 3.51%)</title><rect x="686.5" y="1909" width="41.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="689.52" y="1919.5" >Cha..</text>
</g>
<g >
<title>napi_complete_done (12,049,055 samples, 0.01%)</title><rect x="746.0" y="1909" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="749.00" y="1919.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,270,831 samples, 0.01%)</title><rect x="214.2" y="1541" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="217.18" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (206,090,657 samples, 0.25%)</title><rect x="53.3" y="1733" width="2.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="56.25" y="1743.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (17,864,943 samples, 0.02%)</title><rect x="1040.6" y="2037" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1043.58" y="2047.5" ></text>
</g>
<g >
<title>__mod_timer (45,035,515 samples, 0.05%)</title><rect x="1014.1" y="1493" width="0.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1017.14" y="1503.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (8,071,695 samples, 0.01%)</title><rect x="318.1" y="1717" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="321.09" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (11,172,978 samples, 0.01%)</title><rect x="99.0" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="102.02" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (11,073,398 samples, 0.01%)</title><rect x="777.9" y="1653" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="780.94" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (10,965,558 samples, 0.01%)</title><rect x="77.0" y="1781" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="79.96" y="1791.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (8,349,014 samples, 0.01%)</title><rect x="259.2" y="1797" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="262.20" y="1807.5" ></text>
</g>
<g >
<title>_int_malloc (42,688,472 samples, 0.05%)</title><rect x="453.0" y="2053" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="456.03" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1605" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1615.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (5,700,825,189 samples, 6.84%)</title><rect x="751.3" y="1845" width="80.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="754.30" y="1855.5" >std::__in..</text>
</g>
<g >
<title>irq_exit_rcu (8,496,094 samples, 0.01%)</title><rect x="1014.3" y="1429" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1017.28" y="1439.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,252,038 samples, 0.01%)</title><rect x="707.9" y="1525" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="710.88" y="1535.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (14,342,058 samples, 0.02%)</title><rect x="1153.0" y="1397" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1156.03" y="1407.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,770,691 samples, 0.02%)</title><rect x="603.9" y="1573" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="606.90" y="1583.5" ></text>
</g>
<g >
<title>filename_lookup (208,115,274 samples, 0.25%)</title><rect x="214.9" y="1637" width="3.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="217.94" y="1647.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (7,213,882 samples, 0.01%)</title><rect x="1122.6" y="1605" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1125.56" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_erase_at_end (11,369,743 samples, 0.01%)</title><rect x="637.0" y="1733" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="639.98" y="1743.5" ></text>
</g>
<g >
<title>default_wake_function (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1253" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="925.16" y="1263.5" ></text>
</g>
<g >
<title>napi_gro_receive (13,377,237 samples, 0.02%)</title><rect x="1173.1" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1176.10" y="1647.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (19,562,008 samples, 0.02%)</title><rect x="617.2" y="1701" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="620.18" y="1711.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (58,326,414 samples, 0.07%)</title><rect x="183.5" y="1685" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="186.45" y="1695.5" ></text>
</g>
<g >
<title>__do_softirq (7,143,655 samples, 0.01%)</title><rect x="1120.0" y="1573" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1122.96" y="1583.5" ></text>
</g>
<g >
<title>vmbus_sendpacket (10,477,897 samples, 0.01%)</title><rect x="1008.2" y="1301" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1011.20" y="1311.5" ></text>
</g>
<g >
<title>net_rx_action (11,094,995 samples, 0.01%)</title><rect x="971.1" y="1541" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="974.08" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (12,776,042 samples, 0.02%)</title><rect x="515.4" y="1765" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="518.43" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1445" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="186.34" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,621,156,124 samples, 1.95%)</title><rect x="995.9" y="1781" width="23.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="998.90" y="1791.5" >d..</text>
</g>
<g >
<title>tcp_v4_do_rcv (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1749" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="747.77" y="1759.5" ></text>
</g>
<g >
<title>napi_complete_done (7,815,769 samples, 0.01%)</title><rect x="296.3" y="1717" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="299.31" y="1727.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (24,587,716 samples, 0.03%)</title><rect x="432.1" y="1573" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="435.08" y="1583.5" ></text>
</g>
<g >
<title>fput (8,024,754 samples, 0.01%)</title><rect x="383.8" y="1733" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="386.75" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (13,047,709 samples, 0.02%)</title><rect x="1113.2" y="1637" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1116.24" y="1647.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,072,047 samples, 0.01%)</title><rect x="28.8" y="1733" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="31.79" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (11,943,763 samples, 0.01%)</title><rect x="421.2" y="1349" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="424.24" y="1359.5" ></text>
</g>
<g >
<title>handle_softirqs (15,905,162 samples, 0.02%)</title><rect x="847.9" y="1733" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="850.87" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,640,164 samples, 0.01%)</title><rect x="1129.4" y="1605" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1132.35" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (198,225,864 samples, 0.24%)</title><rect x="790.7" y="1733" width="2.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="793.72" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,634,752 samples, 0.01%)</title><rect x="905.0" y="1557" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="908.03" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (26,461,863 samples, 0.03%)</title><rect x="1113.5" y="1797" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1116.54" y="1807.5" ></text>
</g>
<g >
<title>lookup_fast (14,649,043 samples, 0.02%)</title><rect x="1100.7" y="1573" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1103.67" y="1583.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (37,869,669 samples, 0.05%)</title><rect x="906.9" y="1749" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="909.94" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="2005" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="2015.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (33,392,809 samples, 0.04%)</title><rect x="50.0" y="1765" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="53.03" y="1775.5" ></text>
</g>
<g >
<title>ip_list_rcv (10,436,407 samples, 0.01%)</title><rect x="584.4" y="1557" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="587.43" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1573" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1583.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (34,295,120 samples, 0.04%)</title><rect x="201.4" y="1669" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="204.36" y="1679.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (429,114,423 samples, 0.51%)</title><rect x="161.2" y="1781" width="6.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="164.24" y="1791.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (11,922,218 samples, 0.01%)</title><rect x="966.4" y="1557" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="969.44" y="1567.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (18,927,233 samples, 0.02%)</title><rect x="1135.7" y="1685" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1138.67" y="1695.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (11,972,053 samples, 0.01%)</title><rect x="1137.9" y="1765" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1140.93" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (37,793,102 samples, 0.05%)</title><rect x="307.9" y="2053" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="310.85" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1349" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1359.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (11,213,546 samples, 0.01%)</title><rect x="199.8" y="1653" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="202.78" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (16,594,723 samples, 0.02%)</title><rect x="462.9" y="1509" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="465.94" y="1519.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (2,852,145,539 samples, 3.42%)</title><rect x="97.1" y="1861" width="40.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="100.15" y="1871.5" >std..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (80,333,358 samples, 0.10%)</title><rect x="342.0" y="1701" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="344.98" y="1711.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (89,521,247 samples, 0.11%)</title><rect x="660.8" y="1749" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="663.84" y="1759.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1,022,443,582 samples, 1.23%)</title><rect x="118.2" y="1589" width="14.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="121.24" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (12,721,777 samples, 0.02%)</title><rect x="652.0" y="1461" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="654.98" y="1471.5" ></text>
</g>
<g >
<title>irq_exit_rcu (29,127,084 samples, 0.03%)</title><rect x="581.8" y="1765" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="584.80" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (42,544,649 samples, 0.05%)</title><rect x="501.8" y="1685" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="504.76" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (15,579,535 samples, 0.02%)</title><rect x="213.2" y="1445" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="216.16" y="1455.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,404,815,017 samples, 1.69%)</title><rect x="705.7" y="1685" width="19.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="708.67" y="1695.5" ></text>
</g>
<g >
<title>irq_exit_rcu (23,558,848 samples, 0.03%)</title><rect x="734.6" y="1701" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="737.58" y="1711.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (27,225,812 samples, 0.03%)</title><rect x="942.7" y="1749" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="945.72" y="1759.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (17,925,187 samples, 0.02%)</title><rect x="318.7" y="1765" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="321.75" y="1775.5" ></text>
</g>
<g >
<title>std::function&lt;void  (70,185,185 samples, 0.08%)</title><rect x="1049.6" y="1781" width="1.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1052.57" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (16,167,294 samples, 0.02%)</title><rect x="179.9" y="1701" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="182.87" y="1711.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1749" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="295.80" y="1759.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1429" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="186.34" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (192,585,111 samples, 0.23%)</title><rect x="1069.5" y="1765" width="2.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1072.50" y="1775.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (512,473,252 samples, 0.61%)</title><rect x="361.3" y="1685" width="7.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="364.26" y="1695.5" ></text>
</g>
<g >
<title>__inet_lookup_established (8,283,568 samples, 0.01%)</title><rect x="124.7" y="1189" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="127.66" y="1199.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,008,551 samples, 0.01%)</title><rect x="1008.0" y="1141" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1010.95" y="1151.5" ></text>
</g>
<g >
<title>kmem_cache_free (14,747,011 samples, 0.02%)</title><rect x="67.3" y="1637" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="70.33" y="1647.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (8,423,993 samples, 0.01%)</title><rect x="960.9" y="1797" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="963.86" y="1807.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (31,630,523 samples, 0.04%)</title><rect x="964.1" y="1797" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="967.14" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,780,159 samples, 0.01%)</title><rect x="123.0" y="1285" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="125.99" y="1295.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (27,501,234 samples, 0.03%)</title><rect x="495.7" y="1701" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="498.67" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1637" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (11,841,314 samples, 0.01%)</title><rect x="273.0" y="1269" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="276.04" y="1279.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,810,535 samples, 0.01%)</title><rect x="582.0" y="1621" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="584.99" y="1631.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,342,622 samples, 0.01%)</title><rect x="855.1" y="1509" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="858.11" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="597" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="607.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (13,041,175 samples, 0.02%)</title><rect x="739.5" y="1925" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="742.46" y="1935.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,754,268 samples, 0.01%)</title><rect x="34.7" y="1669" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="37.72" y="1679.5" ></text>
</g>
<g >
<title>do_epoll_ctl (113,917,517 samples, 0.14%)</title><rect x="540.2" y="1605" width="1.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="543.24" y="1615.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (8,088,082 samples, 0.01%)</title><rect x="282.2" y="1541" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="285.22" y="1551.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,385,464 samples, 0.01%)</title><rect x="1121.0" y="1573" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1124.00" y="1583.5" ></text>
</g>
<g >
<title>___slab_alloc (8,088,082 samples, 0.01%)</title><rect x="282.2" y="1525" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="285.22" y="1535.5" ></text>
</g>
<g >
<title>__skb_flow_dissect (14,482,794 samples, 0.02%)</title><rect x="862.0" y="1381" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="865.02" y="1391.5" ></text>
</g>
<g >
<title>sock_poll (26,259,361 samples, 0.03%)</title><rect x="836.3" y="1573" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="839.32" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1221" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1231.5" ></text>
</g>
<g >
<title>_int_free (37,009,498 samples, 0.04%)</title><rect x="1184.5" y="2037" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1187.47" y="2047.5" ></text>
</g>
<g >
<title>hv_ringbuffer_write (51,968,917 samples, 0.06%)</title><rect x="1010.6" y="1301" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1013.63" y="1311.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (54,049,787 samples, 0.06%)</title><rect x="1066.3" y="1685" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1069.30" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="341" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="351.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (13,377,237 samples, 0.02%)</title><rect x="1173.1" y="1653" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1176.10" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1749" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1759.5" ></text>
</g>
<g >
<title>__secure_computing (15,679,861 samples, 0.02%)</title><rect x="505.6" y="1685" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="508.62" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (29,541,274 samples, 0.04%)</title><rect x="230.0" y="1797" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="232.97" y="1807.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,627,962 samples, 0.01%)</title><rect x="917.9" y="1653" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="920.93" y="1663.5" ></text>
</g>
<g >
<title>malloc (85,450,640 samples, 0.10%)</title><rect x="156.3" y="2053" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="159.34" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="917" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="927.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,238,679 samples, 0.01%)</title><rect x="1152.1" y="1205" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1155.05" y="1215.5" ></text>
</g>
<g >
<title>netvsc_poll (7,468,225 samples, 0.01%)</title><rect x="347.8" y="1637" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="350.82" y="1647.5" ></text>
</g>
<g >
<title>netvsc_poll (8,961,558 samples, 0.01%)</title><rect x="1140.9" y="1589" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1143.88" y="1599.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,147,124 samples, 0.01%)</title><rect x="429.5" y="1429" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="432.49" y="1439.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (8,968,174 samples, 0.01%)</title><rect x="974.6" y="1573" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="977.56" y="1583.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (30,306,568 samples, 0.04%)</title><rect x="149.8" y="1797" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="152.75" y="1807.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (12,858,406 samples, 0.02%)</title><rect x="292.6" y="1749" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="295.62" y="1759.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (15,905,162 samples, 0.02%)</title><rect x="847.9" y="1749" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="850.87" y="1759.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,177,283 samples, 0.01%)</title><rect x="413.9" y="1637" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="416.89" y="1647.5" ></text>
</g>
<g >
<title>vfs_fstatat (496,256,550 samples, 0.60%)</title><rect x="64.1" y="1669" width="7.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="67.05" y="1679.5" ></text>
</g>
<g >
<title>napi_complete_done (9,137,745 samples, 0.01%)</title><rect x="777.9" y="1605" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="780.94" y="1615.5" ></text>
</g>
<g >
<title>ip_queue_xmit (819,564,619 samples, 0.98%)</title><rect x="1150.2" y="1541" width="11.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1153.24" y="1551.5" ></text>
</g>
<g >
<title>do_epoll_ctl (171,324,011 samples, 0.21%)</title><rect x="899.9" y="1605" width="2.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="902.92" y="1615.5" ></text>
</g>
<g >
<title>std::make_move_iterator&lt;char*&gt; (8,355,283 samples, 0.01%)</title><rect x="202.3" y="1701" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="205.29" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_established (8,613,235 samples, 0.01%)</title><rect x="1008.0" y="1093" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1010.97" y="1103.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (18,982,173 samples, 0.02%)</title><rect x="793.2" y="1701" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="796.16" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (30,264,450 samples, 0.04%)</title><rect x="524.9" y="1797" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="527.93" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (103,856,808 samples, 0.12%)</title><rect x="845.3" y="1765" width="1.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="848.31" y="1775.5" ></text>
</g>
<g >
<title>__siphash_unaligned (7,563,977 samples, 0.01%)</title><rect x="1152.2" y="1429" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1155.25" y="1439.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (482,292,003 samples, 0.58%)</title><rect x="602.1" y="1781" width="6.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="605.13" y="1791.5" ></text>
</g>
<g >
<title>handle_softirqs (12,288,760 samples, 0.01%)</title><rect x="1035.7" y="1957" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1038.68" y="1967.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,160,263 samples, 0.01%)</title><rect x="1040.6" y="1845" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1043.61" y="1855.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (11,909,884 samples, 0.01%)</title><rect x="1163.1" y="1461" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1166.06" y="1471.5" ></text>
</g>
<g >
<title>__fget_light (26,800,811 samples, 0.03%)</title><rect x="247.1" y="1573" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="250.06" y="1583.5" ></text>
</g>
<g >
<title>ip_finish_output (343,798,896 samples, 0.41%)</title><rect x="564.2" y="1477" width="4.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="567.17" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (9,002,017 samples, 0.01%)</title><rect x="1188.5" y="1877" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1191.51" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (8,195,207 samples, 0.01%)</title><rect x="273.1" y="1157" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="276.10" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (16,137,318 samples, 0.02%)</title><rect x="28.9" y="1765" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="31.89" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1237" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1247.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,152,732 samples, 0.01%)</title><rect x="865.1" y="1285" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="868.14" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (13,499,567 samples, 0.02%)</title><rect x="174.3" y="1637" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="177.25" y="1647.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (78,028,436 samples, 0.09%)</title><rect x="685.3" y="1797" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="688.30" y="1807.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (9,843,907 samples, 0.01%)</title><rect x="345.0" y="1765" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="348.02" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (88,902,149 samples, 0.11%)</title><rect x="1030.2" y="1861" width="1.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1033.16" y="1871.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (16,429,442 samples, 0.02%)</title><rect x="844.8" y="1717" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="847.80" y="1727.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,196,704 samples, 0.01%)</title><rect x="46.3" y="1669" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="49.27" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (12,633,555 samples, 0.02%)</title><rect x="52.9" y="1749" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="55.93" y="1759.5" ></text>
</g>
<g >
<title>handle_softirqs (7,123,157 samples, 0.01%)</title><rect x="929.1" y="1621" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="932.06" y="1631.5" ></text>
</g>
<g >
<title>memcpy_orig (7,455,401 samples, 0.01%)</title><rect x="864.2" y="1285" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="867.22" y="1295.5" ></text>
</g>
<g >
<title>hash_conntrack_raw (9,438,229 samples, 0.01%)</title><rect x="419.5" y="1429" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="422.54" y="1439.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1733" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="295.80" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1621" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1631.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::deallocate (35,647,115 samples, 0.04%)</title><rect x="251.7" y="1685" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="254.66" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="181" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="191.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,447,309 samples, 0.01%)</title><rect x="224.2" y="1717" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="227.20" y="1727.5" ></text>
</g>
<g >
<title>ip_list_rcv (11,471,970 samples, 0.01%)</title><rect x="606.3" y="1413" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="609.26" y="1423.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,797,356 samples, 0.01%)</title><rect x="435.8" y="1877" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="438.79" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (30,832,199 samples, 0.04%)</title><rect x="990.0" y="1781" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="992.97" y="1791.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, 0ul&gt; (21,483,555 samples, 0.03%)</title><rect x="25.4" y="1637" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="28.41" y="1647.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (7,122,417 samples, 0.01%)</title><rect x="59.7" y="1749" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="62.69" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="965" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="975.5" ></text>
</g>
<g >
<title>selinux_xfrm_postroute_last (8,840,994 samples, 0.01%)</title><rect x="1161.1" y="1429" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1164.12" y="1439.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1541" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="186.34" y="1551.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (14,827,730 samples, 0.02%)</title><rect x="60.5" y="1605" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="63.49" y="1615.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,383,578,974 samples, 1.66%)</title><rect x="998.2" y="1685" width="19.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1001.20" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (10,060,443 samples, 0.01%)</title><rect x="234.8" y="1653" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="237.84" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1477" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1487.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (94,987,538 samples, 0.11%)</title><rect x="431.4" y="1605" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="434.35" y="1615.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (53,968,572 samples, 0.06%)</title><rect x="1152.5" y="1429" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1155.49" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (14,457,726 samples, 0.02%)</title><rect x="940.9" y="1701" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="943.87" y="1711.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (77,091,930 samples, 0.09%)</title><rect x="869.6" y="1605" width="1.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="872.59" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (13,527,822 samples, 0.02%)</title><rect x="1172.9" y="1653" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1175.87" y="1663.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,661,320 samples, 0.01%)</title><rect x="178.2" y="1733" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="181.23" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (15,670,720 samples, 0.02%)</title><rect x="172.0" y="1717" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="174.97" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (8,137,169 samples, 0.01%)</title><rect x="402.1" y="1653" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="405.14" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (56,027,884 samples, 0.07%)</title><rect x="1057.8" y="1717" width="0.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1060.84" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (7,247,214 samples, 0.01%)</title><rect x="608.5" y="1685" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="611.47" y="1695.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (14,365,676 samples, 0.02%)</title><rect x="674.3" y="1541" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="677.27" y="1551.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (10,796,308 samples, 0.01%)</title><rect x="149.2" y="1925" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="152.24" y="1935.5" ></text>
</g>
<g >
<title>[web-server] (7,118,206 samples, 0.01%)</title><rect x="1104.8" y="1749" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1107.77" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (11,228,368 samples, 0.01%)</title><rect x="556.0" y="1605" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="559.00" y="1615.5" ></text>
</g>
<g >
<title>netvsc_poll (7,076,822 samples, 0.01%)</title><rect x="1012.0" y="1349" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1015.00" y="1359.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (31,800,400 samples, 0.04%)</title><rect x="13.9" y="1637" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="16.91" y="1647.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,517,942 samples, 0.01%)</title><rect x="604.0" y="1445" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="606.96" y="1455.5" ></text>
</g>
<g >
<title>rndis_filter_receive (8,417,222 samples, 0.01%)</title><rect x="971.1" y="1493" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="974.12" y="1503.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (63,289,408 samples, 0.08%)</title><rect x="44.4" y="1701" width="0.9" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="47.43" y="1711.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (15,559,079 samples, 0.02%)</title><rect x="36.1" y="1685" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="39.08" y="1695.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7,283,500 samples, 0.01%)</title><rect x="144.4" y="1365" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="147.42" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1589" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1599.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (7,795,611 samples, 0.01%)</title><rect x="720.6" y="1541" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="723.59" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (10,840,138 samples, 0.01%)</title><rect x="327.4" y="1765" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="330.38" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (15,568,802 samples, 0.02%)</title><rect x="256.1" y="1717" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="259.05" y="1727.5" ></text>
</g>
<g >
<title>rndis_filter_receive (13,049,828 samples, 0.02%)</title><rect x="1156.1" y="1301" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1159.07" y="1311.5" ></text>
</g>
<g >
<title>__napi_poll (14,017,789 samples, 0.02%)</title><rect x="847.9" y="1701" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="850.87" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1493" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1503.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1685" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="469.26" y="1695.5" ></text>
</g>
<g >
<title>std::function&lt;void  (423,226,236 samples, 0.51%)</title><rect x="752.5" y="1765" width="6.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="755.54" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (13,829,884 samples, 0.02%)</title><rect x="36.4" y="1717" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="39.39" y="1727.5" ></text>
</g>
<g >
<title>__napi_poll (14,435,564 samples, 0.02%)</title><rect x="14.0" y="1525" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="17.03" y="1535.5" ></text>
</g>
<g >
<title>x64_sys_call (465,839,834 samples, 0.56%)</title><rect x="578.8" y="1861" width="6.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="581.77" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (7,099,160 samples, 0.01%)</title><rect x="813.1" y="1781" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="816.15" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,843,600 samples, 0.01%)</title><rect x="610.1" y="1557" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="613.13" y="1567.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (10,765,273 samples, 0.01%)</title><rect x="962.8" y="1701" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="965.81" y="1711.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (18,117,290 samples, 0.02%)</title><rect x="99.2" y="1621" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="102.20" y="1631.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (90,342,405 samples, 0.11%)</title><rect x="583.8" y="1797" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="586.78" y="1807.5" ></text>
</g>
<g >
<title>x64_sys_call (7,843,600 samples, 0.01%)</title><rect x="610.1" y="1525" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="613.13" y="1535.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (13,342,587 samples, 0.02%)</title><rect x="195.0" y="1749" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="197.97" y="1759.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1477" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="925.16" y="1487.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char*&gt; (7,149,051 samples, 0.01%)</title><rect x="351.8" y="1637" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="354.77" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="741" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="751.5" ></text>
</g>
<g >
<title>ip_list_rcv (16,509,995 samples, 0.02%)</title><rect x="503.3" y="1573" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="506.29" y="1583.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc_cs (7,271,156 samples, 0.01%)</title><rect x="534.1" y="1589" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="537.13" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="597" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="607.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1461" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1471.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (25,098,158 samples, 0.03%)</title><rect x="144.2" y="1461" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="147.19" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1589" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="747.77" y="1599.5" ></text>
</g>
<g >
<title>__strlen_avx2 (8,727,031 samples, 0.01%)</title><rect x="663.5" y="1749" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="666.50" y="1759.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (38,555,077 samples, 0.05%)</title><rect x="124.6" y="1237" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="127.63" y="1247.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;true, char*, char*&gt; (10,789,257 samples, 0.01%)</title><rect x="937.7" y="1621" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="940.73" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (37,869,669 samples, 0.05%)</title><rect x="906.9" y="1717" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="909.94" y="1727.5" ></text>
</g>
<g >
<title>nft_do_chain (30,855,066 samples, 0.04%)</title><rect x="1005.9" y="1445" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1008.90" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (8,692,452 samples, 0.01%)</title><rect x="1105.4" y="1749" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1108.37" y="1759.5" ></text>
</g>
<g >
<title>__napi_poll (26,699,885 samples, 0.03%)</title><rect x="357.7" y="1653" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="360.73" y="1663.5" ></text>
</g>
<g >
<title>handle_softirqs (11,224,105 samples, 0.01%)</title><rect x="233.3" y="1621" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="236.30" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (16,684,676 samples, 0.02%)</title><rect x="121.8" y="1413" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="124.82" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_writev (1,535,072,800 samples, 1.84%)</title><rect x="554.3" y="1749" width="21.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="557.29" y="1759.5" >_..</text>
</g>
<g >
<title>ip_list_rcv (7,661,320 samples, 0.01%)</title><rect x="178.2" y="1589" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="181.23" y="1599.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,177,283 samples, 0.01%)</title><rect x="413.9" y="1653" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="416.89" y="1663.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (238,076,326 samples, 0.29%)</title><rect x="926.0" y="1733" width="3.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="929.02" y="1743.5" ></text>
</g>
<g >
<title>mutex_lock (7,991,835 samples, 0.01%)</title><rect x="1047.6" y="1589" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1050.60" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (21,265,295 samples, 0.03%)</title><rect x="985.3" y="1733" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="988.29" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1221" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1231.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (9,145,514 samples, 0.01%)</title><rect x="22.2" y="1685" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="25.19" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (9,104,406 samples, 0.01%)</title><rect x="610.1" y="1589" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="613.11" y="1599.5" ></text>
</g>
<g >
<title>_copy_from_iter (47,079,946 samples, 0.06%)</title><rect x="416.0" y="1605" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="418.95" y="1615.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,757,736 samples, 0.01%)</title><rect x="1045.5" y="1445" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1048.49" y="1455.5" ></text>
</g>
<g >
<title>net_rx_action (26,939,315 samples, 0.03%)</title><rect x="878.1" y="1717" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="881.08" y="1727.5" ></text>
</g>
<g >
<title>strncpy_from_user (75,137,461 samples, 0.09%)</title><rect x="947.5" y="1621" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="950.45" y="1631.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (66,598,817 samples, 0.08%)</title><rect x="242.2" y="1797" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="245.21" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (11,961,193 samples, 0.01%)</title><rect x="842.0" y="1781" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="845.01" y="1791.5" ></text>
</g>
<g >
<title>__ip_local_out (261,352,934 samples, 0.31%)</title><rect x="1150.6" y="1493" width="3.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1153.64" y="1503.5" ></text>
</g>
<g >
<title>ip_local_deliver (18,941,124 samples, 0.02%)</title><rect x="1155.8" y="1205" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1158.78" y="1215.5" ></text>
</g>
<g >
<title>epoll_ctl (10,160,732 samples, 0.01%)</title><rect x="1110.0" y="1733" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1113.03" y="1743.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (13,668,447 samples, 0.02%)</title><rect x="715.0" y="1173" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="717.97" y="1183.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,623,595 samples, 0.02%)</title><rect x="84.9" y="1749" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="87.87" y="1759.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,904,066,853 samples, 11.88%)</title><rect x="10.2" y="2005" width="140.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.25" y="2015.5" >std::thread::_Inv..</text>
</g>
<g >
<title>sysvec_hyperv_callback (8,105,077 samples, 0.01%)</title><rect x="539.7" y="1605" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="542.70" y="1615.5" ></text>
</g>
<g >
<title>should_failslab (10,259,953 samples, 0.01%)</title><rect x="947.3" y="1621" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="950.31" y="1631.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,068,201 samples, 0.01%)</title><rect x="298.5" y="1909" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="301.46" y="1919.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,400,420 samples, 0.01%)</title><rect x="731.5" y="1749" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="734.52" y="1759.5" ></text>
</g>
<g >
<title>tcp_current_mss (22,205,319 samples, 0.03%)</title><rect x="1164.3" y="1589" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1167.27" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (11,121,246 samples, 0.01%)</title><rect x="398.9" y="1509" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="401.95" y="1519.5" ></text>
</g>
<g >
<title>selinux_inode_permission (9,282,825 samples, 0.01%)</title><rect x="658.3" y="1573" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="661.35" y="1583.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char*, char*&gt; (51,948,658 samples, 0.06%)</title><rect x="670.0" y="1733" width="0.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="672.98" y="1743.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (2,931,558,023 samples, 3.52%)</title><rect x="978.5" y="1861" width="41.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="981.55" y="1871.5" >std..</text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,238,679 samples, 0.01%)</title><rect x="1152.1" y="1253" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1155.05" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (62,435,852 samples, 0.07%)</title><rect x="24.8" y="1669" width="0.9" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="27.83" y="1679.5" ></text>
</g>
<g >
<title>std::function&lt;void  (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1781" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="171.38" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::clear (7,374,445 samples, 0.01%)</title><rect x="667.9" y="1781" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="670.86" y="1791.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (38,046,495 samples, 0.05%)</title><rect x="497.6" y="1701" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="500.58" y="1711.5" ></text>
</g>
<g >
<title>netvsc_poll (9,249,553 samples, 0.01%)</title><rect x="1128.3" y="1557" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1131.29" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="901" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="911.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="533" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="543.5" ></text>
</g>
<g >
<title>tcp_rcv_established (9,995,806 samples, 0.01%)</title><rect x="125.2" y="1093" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="128.25" y="1103.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (13,801,111 samples, 0.02%)</title><rect x="141.6" y="1573" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="144.56" y="1583.5" ></text>
</g>
<g >
<title>sock_def_readable (9,704,484 samples, 0.01%)</title><rect x="1024.5" y="1413" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1027.55" y="1423.5" ></text>
</g>
<g >
<title>release_sock (16,115,065 samples, 0.02%)</title><rect x="556.2" y="1621" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="559.25" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10,005,657 samples, 0.01%)</title><rect x="592.3" y="2021" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="595.28" y="2031.5" ></text>
</g>
<g >
<title>__fdget (8,769,053 samples, 0.01%)</title><rect x="1045.8" y="1605" width="0.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1048.77" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (9,790,921 samples, 0.01%)</title><rect x="307.4" y="2053" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="310.39" y="2063.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (44,303,590 samples, 0.05%)</title><rect x="356.1" y="1733" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="359.07" y="1743.5" ></text>
</g>
<g >
<title>handle_softirqs (8,589,037 samples, 0.01%)</title><rect x="225.1" y="1701" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="228.10" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (82,277,256 samples, 0.10%)</title><rect x="934.4" y="1749" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="937.42" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1237" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1247.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,342,805 samples, 0.01%)</title><rect x="318.4" y="1653" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="321.38" y="1663.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,340,124 samples, 0.01%)</title><rect x="577.5" y="1877" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="580.48" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1509" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1519.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::find (93,541,236 samples, 0.11%)</title><rect x="445.3" y="1909" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="448.30" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,413,018 samples, 0.01%)</title><rect x="293.2" y="1493" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="296.20" y="1503.5" ></text>
</g>
<g >
<title>nf_hook_slow (53,115,775 samples, 0.06%)</title><rect x="569.1" y="1477" width="0.7" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="572.06" y="1487.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (6,015,383,396 samples, 7.22%)</title><rect x="601.3" y="1829" width="85.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="604.31" y="1839.5" >HttpConn::..</text>
</g>
<g >
<title>inode_has_perm (17,520,269 samples, 0.02%)</title><rect x="386.0" y="1637" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="389.03" y="1647.5" ></text>
</g>
<g >
<title>__napi_poll (7,196,704 samples, 0.01%)</title><rect x="46.3" y="1605" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="49.27" y="1615.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (12,355,898 samples, 0.01%)</title><rect x="706.3" y="1589" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="709.34" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="581" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="591.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (7,691,618 samples, 0.01%)</title><rect x="404.4" y="1765" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="407.42" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (29,549,333 samples, 0.04%)</title><rect x="908.4" y="1701" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="911.43" y="1711.5" ></text>
</g>
<g >
<title>do_iter_write (1,446,174,325 samples, 1.74%)</title><rect x="555.2" y="1701" width="20.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="558.17" y="1711.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (33,236,804 samples, 0.04%)</title><rect x="735.8" y="1909" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="738.78" y="1919.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1685" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="925.16" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned long&gt; (9,197,243 samples, 0.01%)</title><rect x="198.1" y="1749" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="201.06" y="1759.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (11,066,933 samples, 0.01%)</title><rect x="980.2" y="1461" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="983.18" y="1471.5" ></text>
</g>
<g >
<title>napi_complete_done (10,351,719 samples, 0.01%)</title><rect x="893.7" y="1909" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="896.68" y="1919.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,863,323 samples, 0.01%)</title><rect x="503.3" y="1493" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="506.29" y="1503.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (342,882,223 samples, 0.41%)</title><rect x="469.0" y="1749" width="4.9" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="472.02" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (14,790,412 samples, 0.02%)</title><rect x="798.6" y="1749" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="801.63" y="1759.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (17,979,412 samples, 0.02%)</title><rect x="168.8" y="1749" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="171.80" y="1759.5" ></text>
</g>
<g >
<title>sock_poll (86,242,184 samples, 0.10%)</title><rect x="1025.4" y="1797" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1028.44" y="1807.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (1,814,835,230 samples, 2.18%)</title><rect x="760.2" y="1781" width="25.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="763.16" y="1791.5" >H..</text>
</g>
<g >
<title>vfs_read (571,006,559 samples, 0.69%)</title><rect x="968.2" y="1717" width="8.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="971.22" y="1727.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,684,537 samples, 0.01%)</title><rect x="582.5" y="1797" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="585.51" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (648,651,010 samples, 0.78%)</title><rect x="798.8" y="1749" width="9.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="801.84" y="1759.5" ></text>
</g>
<g >
<title>handle_softirqs (22,474,549 samples, 0.03%)</title><rect x="584.4" y="1669" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="587.43" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (8,926,783 samples, 0.01%)</title><rect x="345.4" y="1765" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="348.36" y="1775.5" ></text>
</g>
<g >
<title>napi_complete_done (14,614,824 samples, 0.02%)</title><rect x="62.9" y="1573" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="65.86" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1493" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1503.5" ></text>
</g>
<g >
<title>ep_poll_callback (7,911,046 samples, 0.01%)</title><rect x="1024.6" y="1349" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1027.57" y="1359.5" ></text>
</g>
<g >
<title>__strlen_avx2 (11,401,126 samples, 0.01%)</title><rect x="221.2" y="1749" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="224.18" y="1759.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (20,696,546 samples, 0.02%)</title><rect x="260.9" y="1765" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="263.89" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="757" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="767.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,509,260 samples, 0.01%)</title><rect x="559.4" y="1493" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="562.43" y="1503.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (344,190,969 samples, 0.41%)</title><rect x="1128.0" y="1701" width="4.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1130.99" y="1711.5" ></text>
</g>
<g >
<title>rndis_filter_receive (7,465,884 samples, 0.01%)</title><rect x="131.2" y="1333" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="134.21" y="1343.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,351,719 samples, 0.01%)</title><rect x="893.7" y="1829" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="896.68" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (10,025,698 samples, 0.01%)</title><rect x="550.0" y="1733" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="553.04" y="1743.5" ></text>
</g>
<g >
<title>tcp_push (9,960,130 samples, 0.01%)</title><rect x="999.4" y="1621" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1002.42" y="1631.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,060,119 samples, 0.01%)</title><rect x="925.8" y="1573" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="928.84" y="1583.5" ></text>
</g>
<g >
<title>napi_gro_receive (22,103,943 samples, 0.03%)</title><rect x="731.9" y="1637" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="734.90" y="1647.5" ></text>
</g>
<g >
<title>check_stack_object (8,888,258 samples, 0.01%)</title><rect x="948.3" y="1605" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="951.31" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="581" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="591.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (11,097,802 samples, 0.01%)</title><rect x="100.6" y="1589" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="103.56" y="1599.5" ></text>
</g>
<g >
<title>__fput (7,843,600 samples, 0.01%)</title><rect x="610.1" y="1477" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="613.13" y="1487.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (13,144,705 samples, 0.02%)</title><rect x="841.4" y="1781" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="844.36" y="1791.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,507,946 samples, 0.01%)</title><rect x="193.9" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="196.87" y="1647.5" ></text>
</g>
<g >
<title>TimerManager::Tick (39,478,528 samples, 0.05%)</title><rect x="738.6" y="1925" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="741.55" y="1935.5" ></text>
</g>
<g >
<title>vfs_writev (1,611,860,725 samples, 1.93%)</title><rect x="262.0" y="1717" width="22.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="264.99" y="1727.5" >v..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (15,849,336 samples, 0.02%)</title><rect x="543.5" y="1733" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="546.53" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1941" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (15,367,613 samples, 0.02%)</title><rect x="924.0" y="1749" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="927.02" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="165" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node_ptr (60,170,969 samples, 0.07%)</title><rect x="839.9" y="1701" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="842.92" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (11,372,148 samples, 0.01%)</title><rect x="961.8" y="1749" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="964.83" y="1759.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,965,320,676 samples, 11.96%)</title><rect x="158.9" y="2005" width="141.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="161.87" y="2015.5" >std::thread::_Inv..</text>
</g>
<g >
<title>std::__shared_count&lt; (28,143,052 samples, 0.03%)</title><rect x="1177.1" y="1877" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1180.10" y="1887.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,002,017 samples, 0.01%)</title><rect x="1188.5" y="1845" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1191.51" y="1855.5" ></text>
</g>
<g >
<title>handle_dots (19,800,071 samples, 0.02%)</title><rect x="69.9" y="1573" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="72.93" y="1583.5" ></text>
</g>
<g >
<title>handle_softirqs (45,257,211 samples, 0.05%)</title><rect x="1024.1" y="1733" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1027.11" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1669" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1679.5" ></text>
</g>
<g >
<title>sch_direct_xmit (240,516,862 samples, 0.29%)</title><rect x="1157.2" y="1413" width="3.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1160.22" y="1423.5" ></text>
</g>
<g >
<title>netvsc_poll (11,914,981 samples, 0.01%)</title><rect x="562.2" y="1301" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="565.25" y="1311.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (10,516,382 samples, 0.01%)</title><rect x="847.9" y="1605" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="850.90" y="1615.5" ></text>
</g>
<g >
<title>security_inode_permission (65,045,972 samples, 0.08%)</title><rect x="68.6" y="1573" width="0.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="71.60" y="1583.5" ></text>
</g>
<g >
<title>ip_output (421,606,842 samples, 0.51%)</title><rect x="859.8" y="1493" width="6.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="862.84" y="1503.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (9,765,702,225 samples, 11.72%)</title><rect x="895.5" y="2037" width="138.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="898.52" y="2047.5" >std::thread::_Sta..</text>
</g>
<g >
<title>__netif_receive_skb_list_core (12,322,232 samples, 0.01%)</title><rect x="231.7" y="1589" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="234.71" y="1599.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (23,082,151 samples, 0.03%)</title><rect x="934.7" y="1717" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="937.75" y="1727.5" ></text>
</g>
<g >
<title>try_to_wake_up (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1237" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="925.16" y="1247.5" ></text>
</g>
<g >
<title>clear_bhb_loop (18,207,213 samples, 0.02%)</title><rect x="245.5" y="1653" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="248.51" y="1663.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (12,188,023 samples, 0.01%)</title><rect x="554.0" y="1765" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="557.01" y="1775.5" ></text>
</g>
<g >
<title>__strlen_avx2 (8,286,979 samples, 0.01%)</title><rect x="57.0" y="1749" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="59.97" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,447,309 samples, 0.01%)</title><rect x="224.2" y="1765" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="227.20" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (15,766,250 samples, 0.02%)</title><rect x="407.7" y="1733" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="410.68" y="1743.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (10,632,524 samples, 0.01%)</title><rect x="941.9" y="1749" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="944.90" y="1759.5" ></text>
</g>
<g >
<title>netvsc_poll (8,925,385 samples, 0.01%)</title><rect x="1066.2" y="1573" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1069.17" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (17,679,770 samples, 0.02%)</title><rect x="674.3" y="1589" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="677.27" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (201,948,896 samples, 0.24%)</title><rect x="461.1" y="1621" width="2.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="464.10" y="1631.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (17,105,108 samples, 0.02%)</title><rect x="553.8" y="1765" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="556.76" y="1775.5" ></text>
</g>
<g >
<title>[web-server] (8,765,934 samples, 0.01%)</title><rect x="912.2" y="1765" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="915.16" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (14,984,466 samples, 0.02%)</title><rect x="343.5" y="1749" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="346.46" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="165" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="175.5" ></text>
</g>
<g >
<title>x64_sys_call (525,498,593 samples, 0.63%)</title><rect x="361.1" y="1717" width="7.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="364.08" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1509" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="782.08" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (83,506,814 samples, 0.10%)</title><rect x="777.2" y="1749" width="1.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="780.20" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1317" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1327.5" ></text>
</g>
<g >
<title>net_rx_action (20,249,162 samples, 0.02%)</title><rect x="877.8" y="1717" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="880.79" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,626,129,097 samples, 1.95%)</title><rect x="411.3" y="1797" width="23.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="414.28" y="1807.5" >e..</text>
</g>
<g >
<title>clear_bhb_loop (16,214,619 samples, 0.02%)</title><rect x="943.9" y="1733" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="946.87" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (14,219,990 samples, 0.02%)</title><rect x="885.2" y="1909" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="888.15" y="1919.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (9,787,324 samples, 0.01%)</title><rect x="52.0" y="1685" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="54.98" y="1695.5" ></text>
</g>
<g >
<title>security_inode_permission (54,661,756 samples, 0.07%)</title><rect x="1099.3" y="1573" width="0.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1102.27" y="1583.5" ></text>
</g>
<g >
<title>_int_malloc (40,547,957 samples, 0.05%)</title><rect x="304.8" y="2053" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="307.81" y="2063.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (28,667,792 samples, 0.03%)</title><rect x="401.8" y="1749" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="404.85" y="1759.5" ></text>
</g>
<g >
<title>mutex_unlock (11,279,128 samples, 0.01%)</title><rect x="691.5" y="1605" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="694.53" y="1615.5" ></text>
</g>
<g >
<title>netvsc_poll (8,046,277 samples, 0.01%)</title><rect x="163.3" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="166.30" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (7,089,128 samples, 0.01%)</title><rect x="58.4" y="1637" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="61.42" y="1647.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,938,879 samples, 0.01%)</title><rect x="1047.1" y="1573" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1050.12" y="1583.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (313,831,904 samples, 0.38%)</title><rect x="833.6" y="1701" width="4.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="836.63" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (10,085,748 samples, 0.01%)</title><rect x="192.1" y="1701" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="195.07" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (89,895,174 samples, 0.11%)</title><rect x="445.3" y="1893" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="448.32" y="1903.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,968,086 samples, 0.01%)</title><rect x="1167.1" y="1637" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1170.05" y="1647.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (13,565,993 samples, 0.02%)</title><rect x="43.0" y="1717" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="46.01" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,378,860 samples, 0.01%)</title><rect x="141.2" y="1541" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="144.23" y="1551.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*, std::shared_ptr&lt;Channel&gt; &gt; (25,038,227 samples, 0.03%)</title><rect x="740.1" y="1893" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="743.11" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (8,656,876 samples, 0.01%)</title><rect x="772.4" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="775.38" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (12,049,657 samples, 0.01%)</title><rect x="769.9" y="1701" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="772.87" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,699,475 samples, 0.01%)</title><rect x="387.4" y="1349" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="390.42" y="1359.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9,043,579 samples, 0.01%)</title><rect x="141.6" y="1525" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="144.61" y="1535.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long&gt; (7,296,265 samples, 0.01%)</title><rect x="644.9" y="1717" width="0.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="647.94" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,863,913 samples, 0.01%)</title><rect x="981.2" y="1461" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="984.17" y="1471.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1269" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="295.80" y="1279.5" ></text>
</g>
<g >
<title>ip_finish_output2 (354,172,577 samples, 0.42%)</title><rect x="860.3" y="1445" width="5.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="863.29" y="1455.5" ></text>
</g>
<g >
<title>__napi_poll (14,257,638 samples, 0.02%)</title><rect x="800.4" y="1605" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="803.42" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (11,376,647 samples, 0.01%)</title><rect x="173.2" y="1685" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="176.24" y="1695.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (354,922,373 samples, 0.43%)</title><rect x="97.6" y="1781" width="5.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="100.62" y="1791.5" ></text>
</g>
<g >
<title>irq_exit_rcu (12,288,760 samples, 0.01%)</title><rect x="1035.7" y="1989" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1038.68" y="1999.5" ></text>
</g>
<g >
<title>__napi_poll (13,247,196 samples, 0.02%)</title><rect x="397.0" y="1525" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="400.03" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (7,378,040 samples, 0.01%)</title><rect x="845.9" y="1621" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="848.93" y="1631.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (9,207,402 samples, 0.01%)</title><rect x="1181.0" y="1909" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1183.98" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (20,680,105 samples, 0.02%)</title><rect x="221.5" y="1749" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="224.51" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1685" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="186.34" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1429" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1439.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (28,015,217 samples, 0.03%)</title><rect x="448.1" y="1829" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="451.14" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_first_not_of (16,747,552 samples, 0.02%)</title><rect x="627.3" y="1765" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="630.27" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (10,585,197 samples, 0.01%)</title><rect x="1049.3" y="1669" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1052.30" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="341" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="351.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,661,320 samples, 0.01%)</title><rect x="178.2" y="1621" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="181.23" y="1631.5" ></text>
</g>
<g >
<title>tcp_send_mss (25,971,133 samples, 0.03%)</title><rect x="1164.2" y="1605" width="0.4" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1167.25" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (88,844,497 samples, 0.11%)</title><rect x="883.2" y="1893" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="886.19" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (28,569,103 samples, 0.03%)</title><rect x="819.2" y="1797" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="822.20" y="1807.5" ></text>
</g>
<g >
<title>netvsc_poll (18,393,694 samples, 0.02%)</title><rect x="1113.2" y="1685" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1116.22" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (42,489,524 samples, 0.05%)</title><rect x="181.1" y="1685" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="184.11" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1525" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1535.5" ></text>
</g>
<g >
<title>tcp_rcv_established (8,894,092 samples, 0.01%)</title><rect x="715.0" y="1125" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="718.04" y="1135.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (324,178,268 samples, 0.39%)</title><rect x="98.0" y="1701" width="4.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="100.98" y="1711.5" ></text>
</g>
<g >
<title>__do_softirq (56,230,280 samples, 0.07%)</title><rect x="272.6" y="1381" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="275.55" y="1391.5" ></text>
</g>
<g >
<title>__napi_poll (11,190,386 samples, 0.01%)</title><rect x="439.9" y="1701" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="442.94" y="1711.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (815,619,361 samples, 0.98%)</title><rect x="1020.2" y="1925" width="11.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1023.23" y="1935.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (5,693,313,807 samples, 6.83%)</title><rect x="751.4" y="1829" width="80.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="754.38" y="1839.5" >HttpConn:..</text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="405" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="415.5" ></text>
</g>
<g >
<title>rndis_filter_receive (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1301" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="430.41" y="1311.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (13,030,397 samples, 0.02%)</title><rect x="1059.5" y="1765" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1062.50" y="1775.5" ></text>
</g>
<g >
<title>load_balance (7,533,234 samples, 0.01%)</title><rect x="584.8" y="1717" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="587.78" y="1727.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (15,934,242 samples, 0.02%)</title><rect x="1021.0" y="1861" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1024.00" y="1871.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (111,368,759 samples, 0.13%)</title><rect x="408.1" y="1781" width="1.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="411.08" y="1791.5" ></text>
</g>
<g >
<title>__napi_poll (8,052,005 samples, 0.01%)</title><rect x="622.8" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="625.78" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (34,032,949 samples, 0.04%)</title><rect x="1155.6" y="1285" width="0.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1158.59" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (333,371,553 samples, 0.40%)</title><rect x="613.1" y="1733" width="4.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="616.12" y="1743.5" ></text>
</g>
<g >
<title>sock_read_iter (430,111,340 samples, 0.52%)</title><rect x="970.2" y="1701" width="6.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="973.16" y="1711.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (30,820,838 samples, 0.04%)</title><rect x="133.9" y="1573" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="136.88" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (8,396,931 samples, 0.01%)</title><rect x="293.2" y="1445" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="296.23" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1301" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="213" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="223.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (7,076,822 samples, 0.01%)</title><rect x="1012.0" y="1317" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1015.00" y="1327.5" ></text>
</g>
<g >
<title>tcp_data_queue (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1301" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="928.84" y="1311.5" ></text>
</g>
<g >
<title>memcpy_orig (25,119,955 samples, 0.03%)</title><rect x="126.9" y="1349" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="129.91" y="1359.5" ></text>
</g>
<g >
<title>nf_hook_slow (7,788,948 samples, 0.01%)</title><rect x="428.1" y="1493" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="431.05" y="1503.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (34,608,688 samples, 0.04%)</title><rect x="468.5" y="1749" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="471.53" y="1759.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (18,181,959 samples, 0.02%)</title><rect x="52.0" y="1717" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="54.95" y="1727.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (18,386,406 samples, 0.02%)</title><rect x="572.5" y="1557" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="575.52" y="1567.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (7,702,271 samples, 0.01%)</title><rect x="558.0" y="1605" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="561.04" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (11,528,943 samples, 0.01%)</title><rect x="614.8" y="1685" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="617.81" y="1695.5" ></text>
</g>
<g >
<title>__wake_up_common (7,208,810 samples, 0.01%)</title><rect x="674.4" y="1365" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="677.37" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (11,336,121 samples, 0.01%)</title><rect x="919.8" y="1717" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="922.82" y="1727.5" ></text>
</g>
<g >
<title>netvsc_poll (13,986,030 samples, 0.02%)</title><rect x="867.7" y="1349" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="870.67" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (7,469,714 samples, 0.01%)</title><rect x="618.6" y="1765" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="621.65" y="1775.5" ></text>
</g>
<g >
<title>__memchr_avx2 (14,870,956 samples, 0.02%)</title><rect x="594.2" y="2053" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="597.16" y="2063.5" ></text>
</g>
<g >
<title>__napi_poll (18,390,310 samples, 0.02%)</title><rect x="584.4" y="1637" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="587.43" y="1647.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,169,734 samples, 0.02%)</title><rect x="526.7" y="1717" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="529.73" y="1727.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,648,821 samples, 0.01%)</title><rect x="833.8" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="836.79" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (12,516,515 samples, 0.02%)</title><rect x="1053.1" y="1701" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1056.09" y="1711.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (730,064,718 samples, 0.88%)</title><rect x="728.2" y="1925" width="10.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="731.22" y="1935.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (11,730,348 samples, 0.01%)</title><rect x="265.5" y="1605" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="268.52" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (49,707,881 samples, 0.06%)</title><rect x="188.0" y="1749" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="191.01" y="1759.5" ></text>
</g>
<g >
<title>handle_softirqs (7,074,555 samples, 0.01%)</title><rect x="327.2" y="1701" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="330.18" y="1711.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (230,745,577 samples, 0.28%)</title><rect x="1094.5" y="1637" width="3.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1097.48" y="1647.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (338,985,833 samples, 0.41%)</title><rect x="1044.6" y="1717" width="4.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1047.65" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (26,311,119 samples, 0.03%)</title><rect x="1089.4" y="1685" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1092.38" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (22,920,676 samples, 0.03%)</title><rect x="440.1" y="1685" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="443.14" y="1695.5" ></text>
</g>
<g >
<title>__strlen_avx2 (7,431,211 samples, 0.01%)</title><rect x="1103.7" y="1765" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1106.71" y="1775.5" ></text>
</g>
<g >
<title>__do_softirq (11,025,626 samples, 0.01%)</title><rect x="825.0" y="1573" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="827.98" y="1583.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (22,675,862 samples, 0.03%)</title><rect x="793.1" y="1717" width="0.3" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="796.10" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::clear (31,792,278 samples, 0.04%)</title><rect x="1181.3" y="1925" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1184.34" y="1935.5" ></text>
</g>
<g >
<title>putname (19,899,792 samples, 0.02%)</title><rect x="1097.9" y="1653" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1100.90" y="1663.5" ></text>
</g>
<g >
<title>__wake_up_sync (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1621" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="747.77" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (11,466,816 samples, 0.01%)</title><rect x="1147.2" y="1605" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1150.18" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="261" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="271.5" ></text>
</g>
<g >
<title>avc_has_perm (16,071,276 samples, 0.02%)</title><rect x="235.1" y="1621" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="238.08" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::empty (9,197,459 samples, 0.01%)</title><rect x="194.7" y="1765" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="197.70" y="1775.5" ></text>
</g>
<g >
<title>do_syscall_64 (674,920,069 samples, 0.81%)</title><rect x="231.3" y="1781" width="9.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="234.25" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (16,141,447 samples, 0.02%)</title><rect x="903.5" y="1653" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="906.54" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (37,595,333 samples, 0.05%)</title><rect x="915.5" y="1685" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="918.47" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,321,765 samples, 0.01%)</title><rect x="619.3" y="1765" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="622.29" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1525" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1535.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1493" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="925.16" y="1503.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (15,057,662 samples, 0.02%)</title><rect x="1093.1" y="1685" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1096.07" y="1695.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,350,092 samples, 0.01%)</title><rect x="399.0" y="1397" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="401.97" y="1407.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,162,330 samples, 0.01%)</title><rect x="711.1" y="1413" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="714.14" y="1423.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (32,570,652 samples, 0.04%)</title><rect x="54.8" y="1653" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="57.85" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (15,916,302 samples, 0.02%)</title><rect x="146.4" y="1877" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="149.41" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="389" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (10,375,101 samples, 0.01%)</title><rect x="318.9" y="1749" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="321.86" y="1759.5" ></text>
</g>
<g >
<title>Channel::OnEvents (8,948,825,796 samples, 10.74%)</title><rect x="1042.5" y="1925" width="126.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1045.46" y="1935.5" >Channel::OnEvents</text>
</g>
<g >
<title>syscall_enter_from_user_mode (23,505,866 samples, 0.03%)</title><rect x="412.0" y="1765" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="414.96" y="1775.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (8,690,401 samples, 0.01%)</title><rect x="416.9" y="1605" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="419.94" y="1615.5" ></text>
</g>
<g >
<title>vmbus_sendpacket (52,638,784 samples, 0.06%)</title><rect x="425.8" y="1317" width="0.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="428.84" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (7,976,963 samples, 0.01%)</title><rect x="638.0" y="1765" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="641.00" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (7,876,432 samples, 0.01%)</title><rect x="899.3" y="1525" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="902.33" y="1535.5" ></text>
</g>
<g >
<title>__napi_poll (7,147,124 samples, 0.01%)</title><rect x="429.5" y="1365" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="432.49" y="1375.5" ></text>
</g>
<g >
<title>netvsc_poll (10,598,624 samples, 0.01%)</title><rect x="208.2" y="1637" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="211.19" y="1647.5" ></text>
</g>
<g >
<title>__strlen_avx2 (12,310,680 samples, 0.01%)</title><rect x="1138.4" y="1765" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1141.38" y="1775.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,760,778 samples, 0.01%)</title><rect x="598.2" y="2021" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="601.19" y="2031.5" ></text>
</g>
<g >
<title>__napi_poll (7,378,040 samples, 0.01%)</title><rect x="845.9" y="1605" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="848.93" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (19,460,331 samples, 0.02%)</title><rect x="62.9" y="1621" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="65.86" y="1631.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (26,006,397 samples, 0.03%)</title><rect x="645.1" y="1701" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="648.10" y="1711.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (18,168,442 samples, 0.02%)</title><rect x="847.8" y="1797" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="850.83" y="1807.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (8,838,382 samples, 0.01%)</title><rect x="871.8" y="1589" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="874.79" y="1599.5" ></text>
</g>
<g >
<title>napi_complete_done (10,570,407 samples, 0.01%)</title><rect x="942.8" y="1621" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="945.85" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (7,757,952 samples, 0.01%)</title><rect x="944.6" y="1429" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="947.60" y="1439.5" ></text>
</g>
<g >
<title>ip_local_deliver (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1349" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1002.78" y="1359.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (7,336,899 samples, 0.01%)</title><rect x="696.5" y="1749" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="699.51" y="1759.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (389,903,368 samples, 0.47%)</title><rect x="459.6" y="1717" width="5.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="462.62" y="1727.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (24,555,883 samples, 0.03%)</title><rect x="650.1" y="1701" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="653.14" y="1711.5" ></text>
</g>
<g >
<title>napi_complete_done (10,591,659 samples, 0.01%)</title><rect x="552.7" y="1669" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="555.69" y="1679.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7,339,219 samples, 0.01%)</title><rect x="581.7" y="1509" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="584.70" y="1519.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (12,721,777 samples, 0.02%)</title><rect x="652.0" y="1445" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="654.98" y="1455.5" ></text>
</g>
<g >
<title>napi_complete_done (8,902,703 samples, 0.01%)</title><rect x="14.0" y="1493" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="17.03" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (7,831,649 samples, 0.01%)</title><rect x="668.3" y="1765" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="671.28" y="1775.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (10,538,567 samples, 0.01%)</title><rect x="116.0" y="1573" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="119.02" y="1583.5" ></text>
</g>
<g >
<title>vmbus_sendpacket (50,521,505 samples, 0.06%)</title><rect x="567.9" y="1317" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="570.88" y="1327.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (28,540,934 samples, 0.03%)</title><rect x="1155.7" y="1237" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1158.67" y="1247.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,351,719 samples, 0.01%)</title><rect x="893.7" y="1797" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="896.68" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (36,702,695 samples, 0.04%)</title><rect x="58.2" y="1669" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="61.22" y="1679.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (11,401,513 samples, 0.01%)</title><rect x="1082.9" y="1717" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1085.92" y="1727.5" ></text>
</g>
<g >
<title>_copy_from_iter (18,344,326 samples, 0.02%)</title><rect x="117.5" y="1605" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="120.49" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (44,588,027 samples, 0.05%)</title><rect x="990.7" y="1717" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="993.66" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="85" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (462,704,053 samples, 0.56%)</title><rect x="328.3" y="1749" width="6.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="331.29" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (11,959,995 samples, 0.01%)</title><rect x="301.3" y="2021" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="304.34" y="2031.5" ></text>
</g>
<g >
<title>x64_sys_call (167,723,387 samples, 0.20%)</title><rect x="689.5" y="1637" width="2.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="692.47" y="1647.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,068,201 samples, 0.01%)</title><rect x="298.5" y="1877" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="301.46" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1205" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1215.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (54,965,988 samples, 0.07%)</title><rect x="1092.9" y="1717" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1095.90" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (820,236,093 samples, 0.98%)</title><rect x="83.3" y="1797" width="11.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="86.34" y="1807.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1365" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="925.16" y="1375.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char*&gt; (8,894,463 samples, 0.01%)</title><rect x="644.6" y="1637" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="647.58" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1573" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1583.5" ></text>
</g>
<g >
<title>__GI___writev (1,834,791,683 samples, 2.20%)</title><rect x="1143.0" y="1813" width="26.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1145.98" y="1823.5" >_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (24,316,682 samples, 0.03%)</title><rect x="1071.5" y="1749" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1074.54" y="1759.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (28,048,336 samples, 0.03%)</title><rect x="380.7" y="1749" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="383.68" y="1759.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (100,714,064 samples, 0.12%)</title><rect x="292.3" y="1797" width="1.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="295.34" y="1807.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (7,504,719 samples, 0.01%)</title><rect x="1094.3" y="1653" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1097.34" y="1663.5" ></text>
</g>
<g >
<title>generic_permission (19,659,272 samples, 0.02%)</title><rect x="365.8" y="1573" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="368.83" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (31,752,184 samples, 0.04%)</title><rect x="1034.0" y="2021" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="2031.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (14,951,513 samples, 0.02%)</title><rect x="541.2" y="1589" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="544.15" y="1599.5" ></text>
</g>
<g >
<title>handle_softirqs (7,714,784 samples, 0.01%)</title><rect x="571.6" y="1397" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="574.57" y="1407.5" ></text>
</g>
<g >
<title>ip_list_rcv (10,516,382 samples, 0.01%)</title><rect x="847.9" y="1621" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="850.90" y="1631.5" ></text>
</g>
<g >
<title>ip_list_rcv (34,032,949 samples, 0.04%)</title><rect x="1155.6" y="1253" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1158.59" y="1263.5" ></text>
</g>
<g >
<title>__check_object_size (9,207,074 samples, 0.01%)</title><rect x="361.7" y="1621" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="364.71" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (13,051,347 samples, 0.02%)</title><rect x="404.6" y="1781" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="407.58" y="1791.5" ></text>
</g>
<g >
<title>rep_movs_alternative (28,810,717 samples, 0.03%)</title><rect x="1122.0" y="1557" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1125.04" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (12,919,702 samples, 0.02%)</title><rect x="1115.2" y="1669" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1118.25" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1093" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1157" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1167.5" ></text>
</g>
<g >
<title>netvsc_poll (18,391,018 samples, 0.02%)</title><rect x="964.3" y="1685" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="967.30" y="1695.5" ></text>
</g>
<g >
<title>__napi_poll (12,328,208 samples, 0.01%)</title><rect x="586.1" y="1749" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="589.08" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="197" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (7,500,446 samples, 0.01%)</title><rect x="195.4" y="1733" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="198.39" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (358,282,867 samples, 0.43%)</title><rect x="979.6" y="1749" width="5.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="982.62" y="1759.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,349,812 samples, 0.02%)</title><rect x="384.3" y="1669" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="387.33" y="1679.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1237" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="928.84" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1173" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1183.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (8,410,862 samples, 0.01%)</title><rect x="932.8" y="1765" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="935.83" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (25,867,757 samples, 0.03%)</title><rect x="407.3" y="1717" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="410.32" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="981" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="991.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (9,755,743 samples, 0.01%)</title><rect x="210.2" y="1493" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="213.19" y="1503.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, char*&gt; (24,457,629 samples, 0.03%)</title><rect x="227.7" y="1685" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="230.68" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (9,953,506 samples, 0.01%)</title><rect x="748.7" y="2053" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="751.69" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1701" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (21,770,579 samples, 0.03%)</title><rect x="272.6" y="1285" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="275.60" y="1295.5" ></text>
</g>
<g >
<title>__fdget (17,161,927 samples, 0.02%)</title><rect x="314.3" y="1589" width="0.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="317.34" y="1599.5" ></text>
</g>
<g >
<title>tcp_data_ready (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1285" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="928.84" y="1295.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (9,798,333 samples, 0.01%)</title><rect x="1164.0" y="1557" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1166.95" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (438,995,423 samples, 0.53%)</title><rect x="475.8" y="1749" width="6.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="478.78" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1269" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1279.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (20,713,091 samples, 0.02%)</title><rect x="399.1" y="1589" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="402.10" y="1599.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (11,986,312 samples, 0.01%)</title><rect x="1066.0" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1069.00" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,648,821 samples, 0.01%)</title><rect x="833.8" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="836.79" y="1679.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (7,226,832 samples, 0.01%)</title><rect x="839.0" y="1781" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="842.03" y="1791.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (14,847,137 samples, 0.02%)</title><rect x="806.0" y="1541" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="809.02" y="1551.5" ></text>
</g>
<g >
<title>__qdisc_run (12,032,533 samples, 0.01%)</title><rect x="273.4" y="1413" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="276.37" y="1423.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (10,574,210 samples, 0.01%)</title><rect x="1176.0" y="1589" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1178.96" y="1599.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (959,668,755 samples, 1.15%)</title><rect x="417.1" y="1589" width="13.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="420.11" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (14,978,728 samples, 0.02%)</title><rect x="1090.8" y="1477" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1093.79" y="1487.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::tuple&lt;true, true&gt; (7,876,009 samples, 0.01%)</title><rect x="766.5" y="1717" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="769.47" y="1727.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,516,382 samples, 0.01%)</title><rect x="847.9" y="1589" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="850.90" y="1599.5" ></text>
</g>
<g >
<title>nft_do_chain (40,842,536 samples, 0.05%)</title><rect x="122.8" y="1445" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="125.78" y="1455.5" ></text>
</g>
<g >
<title>napi_complete_done (21,806,054 samples, 0.03%)</title><rect x="1027.4" y="1605" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1030.44" y="1615.5" ></text>
</g>
<g >
<title>selinux_socket_recvmsg (47,920,682 samples, 0.06%)</title><rect x="682.9" y="1653" width="0.7" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="685.94" y="1663.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (63,813,139 samples, 0.08%)</title><rect x="953.6" y="1749" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="956.56" y="1759.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (18,433,412 samples, 0.02%)</title><rect x="800.4" y="1685" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="803.36" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1125" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1135.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (283,648,762 samples, 0.34%)</title><rect x="460.1" y="1669" width="4.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="463.09" y="1679.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,876,432 samples, 0.01%)</title><rect x="899.3" y="1589" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="902.33" y="1599.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (25,138,202 samples, 0.03%)</title><rect x="522.8" y="1637" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="525.82" y="1647.5" ></text>
</g>
<g >
<title>__napi_poll (8,050,396 samples, 0.01%)</title><rect x="583.4" y="1685" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="586.36" y="1695.5" ></text>
</g>
<g >
<title>step_into (8,353,175 samples, 0.01%)</title><rect x="659.0" y="1573" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="662.03" y="1583.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,399,838 samples, 0.01%)</title><rect x="720.4" y="1525" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="723.38" y="1535.5" ></text>
</g>
<g >
<title>tcp_push (9,652,230 samples, 0.01%)</title><rect x="556.5" y="1621" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="559.53" y="1631.5" ></text>
</g>
<g >
<title>__alloc_skb (81,413,934 samples, 0.10%)</title><rect x="281.8" y="1589" width="1.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="284.76" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (7,497,297 samples, 0.01%)</title><rect x="516.9" y="1749" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="519.92" y="1759.5" ></text>
</g>
<g >
<title>filename_lookup (235,841,910 samples, 0.28%)</title><rect x="1098.3" y="1637" width="3.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1101.26" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (15,284,646 samples, 0.02%)</title><rect x="445.0" y="1893" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="448.00" y="1903.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc_cs (9,955,991 samples, 0.01%)</title><rect x="428.7" y="1557" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="431.65" y="1567.5" ></text>
</g>
<g >
<title>std::function&lt;void  (6,034,237,141 samples, 7.24%)</title><rect x="11.4" y="1893" width="85.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="14.38" y="1903.5" >std::funct..</text>
</g>
<g >
<title>__fput (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1477" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="171.38" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="485" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="495.5" ></text>
</g>
<g >
<title>sch_direct_xmit (195,211,701 samples, 0.23%)</title><rect x="716.2" y="1413" width="2.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="719.20" y="1423.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (26,725,361 samples, 0.03%)</title><rect x="985.2" y="1765" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="988.21" y="1775.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (20,616,151 samples, 0.02%)</title><rect x="696.1" y="1781" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="699.08" y="1791.5" ></text>
</g>
<g >
<title>clear_bhb_loop (7,807,467 samples, 0.01%)</title><rect x="287.1" y="1877" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="290.15" y="1887.5" ></text>
</g>
<g >
<title>__tcp_select_window (8,200,331 samples, 0.01%)</title><rect x="855.0" y="1541" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="857.99" y="1551.5" ></text>
</g>
<g >
<title>walk_component (57,210,722 samples, 0.07%)</title><rect x="1100.2" y="1589" width="0.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1103.17" y="1599.5" ></text>
</g>
<g >
<title>napi_complete_done (11,346,516 samples, 0.01%)</title><rect x="162.0" y="1541" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="165.04" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (29,209,732 samples, 0.04%)</title><rect x="408.8" y="1701" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="411.77" y="1711.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (353,434,360 samples, 0.42%)</title><rect x="1137.2" y="1797" width="5.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1140.19" y="1807.5" ></text>
</g>
<g >
<title>__napi_poll (10,969,271 samples, 0.01%)</title><rect x="603.9" y="1525" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="606.94" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1893" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="549" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="559.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (9,029,011 samples, 0.01%)</title><rect x="125.5" y="1365" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="128.50" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (47,249,750 samples, 0.06%)</title><rect x="1064.4" y="1685" width="0.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1067.40" y="1695.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (33,807,278 samples, 0.04%)</title><rect x="744.4" y="2053" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="747.43" y="2063.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (24,021,270 samples, 0.03%)</title><rect x="817.5" y="1749" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="820.48" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="309" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="319.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="549" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="559.5" ></text>
</g>
<g >
<title>getname_flags (199,643,647 samples, 0.24%)</title><rect x="361.6" y="1653" width="2.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="364.63" y="1663.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,299,996 samples, 0.01%)</title><rect x="734.6" y="1525" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="737.60" y="1535.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (19,636,088 samples, 0.02%)</title><rect x="632.0" y="1733" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="634.96" y="1743.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (12,746,272 samples, 0.02%)</title><rect x="980.2" y="1477" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="983.18" y="1487.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1461" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="186.34" y="1471.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (2,904,746,743 samples, 3.49%)</title><rect x="832.5" y="1829" width="41.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="835.47" y="1839.5" >Htt..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (9,500,673 samples, 0.01%)</title><rect x="138.6" y="1861" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="141.59" y="1871.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::allocate (11,888,165 samples, 0.01%)</title><rect x="1055.8" y="1685" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1058.79" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (11,330,791 samples, 0.01%)</title><rect x="478.3" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="481.26" y="1599.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;EventLoop::ModChannel (7,074,882 samples, 0.01%)</title><rect x="979.6" y="1733" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="982.64" y="1743.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1141" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="430.41" y="1151.5" ></text>
</g>
<g >
<title>netvsc_poll (7,252,038 samples, 0.01%)</title><rect x="707.9" y="1461" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="710.88" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (9,645,467 samples, 0.01%)</title><rect x="1077.4" y="1749" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1080.40" y="1759.5" ></text>
</g>
<g >
<title>inode_has_perm (19,044,512 samples, 0.02%)</title><rect x="677.3" y="1637" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="680.34" y="1647.5" ></text>
</g>
<g >
<title>sock_def_readable (7,513,023 samples, 0.01%)</title><rect x="1175.6" y="1365" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1178.59" y="1375.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (29,127,084 samples, 0.03%)</title><rect x="581.8" y="1781" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="584.80" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="869" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="879.5" ></text>
</g>
<g >
<title>avc_lookup (10,576,916 samples, 0.01%)</title><rect x="88.4" y="1589" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="91.38" y="1599.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (12,819,711 samples, 0.02%)</title><rect x="824.9" y="1605" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="827.95" y="1615.5" ></text>
</g>
<g >
<title>netvsc_poll (7,210,592 samples, 0.01%)</title><rect x="116.0" y="1493" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="119.02" y="1503.5" ></text>
</g>
<g >
<title>__secure_computing (15,442,025 samples, 0.02%)</title><rect x="689.2" y="1605" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="692.16" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (124,486,878 samples, 0.15%)</title><rect x="322.4" y="1701" width="1.7" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="325.38" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (9,814,191 samples, 0.01%)</title><rect x="227.0" y="1797" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="230.02" y="1807.5" ></text>
</g>
<g >
<title>__errno_location (15,850,719 samples, 0.02%)</title><rect x="963.5" y="1813" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="966.54" y="1823.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (437,131,725 samples, 0.52%)</title><rect x="729.1" y="1845" width="6.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="732.10" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="661" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="671.5" ></text>
</g>
<g >
<title>nf_hook_slow (44,399,044 samples, 0.05%)</title><rect x="427.3" y="1477" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="430.26" y="1487.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (48,591,079 samples, 0.06%)</title><rect x="796.3" y="1749" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="799.34" y="1759.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (2,846,944,316 samples, 3.42%)</title><rect x="97.2" y="1829" width="40.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="100.22" y="1839.5" >Htt..</text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1541" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1551.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (8,322,536 samples, 0.01%)</title><rect x="1053.1" y="1685" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1056.15" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (40,847,611 samples, 0.05%)</title><rect x="1088.3" y="1701" width="0.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1091.28" y="1711.5" ></text>
</g>
<g >
<title>rw_verify_area (38,359,415 samples, 0.05%)</title><rect x="1017.8" y="1685" width="0.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1020.79" y="1695.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (15,779,497 samples, 0.02%)</title><rect x="485.1" y="1733" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="488.13" y="1743.5" ></text>
</g>
<g >
<title>napi_complete_done (9,422,144 samples, 0.01%)</title><rect x="944.6" y="1573" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="947.60" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (7,614,538 samples, 0.01%)</title><rect x="79.1" y="1765" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="82.08" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (12,359,929 samples, 0.01%)</title><rect x="688.0" y="1525" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="691.05" y="1535.5" ></text>
</g>
<g >
<title>handle_softirqs (7,407,017 samples, 0.01%)</title><rect x="1079.0" y="1701" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1082.03" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="677" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="687.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (82,385,181 samples, 0.10%)</title><rect x="369.7" y="1749" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="372.72" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="437" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="447.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (9,043,579 samples, 0.01%)</title><rect x="141.6" y="1557" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="144.61" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,757,952 samples, 0.01%)</title><rect x="944.6" y="1477" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="947.60" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="69" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="79.5" ></text>
</g>
<g >
<title>ip_list_rcv (10,490,926 samples, 0.01%)</title><rect x="734.6" y="1557" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="737.60" y="1567.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,961,558 samples, 0.01%)</title><rect x="1140.9" y="1701" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1143.88" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_established (8,732,019 samples, 0.01%)</title><rect x="422.8" y="1125" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="425.84" y="1135.5" ></text>
</g>
<g >
<title>do_iter_write (1,566,690,124 samples, 1.88%)</title><rect x="262.3" y="1701" width="22.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="265.29" y="1711.5" >d..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (7,663,017 samples, 0.01%)</title><rect x="75.5" y="1765" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="78.48" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="981" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="991.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (816,509,467 samples, 0.98%)</title><rect x="118.8" y="1557" width="11.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="121.78" y="1567.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (42,712,104 samples, 0.05%)</title><rect x="643.3" y="1669" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="646.29" y="1679.5" ></text>
</g>
<g >
<title>__memchr_avx2 (27,044,116 samples, 0.03%)</title><rect x="1183.7" y="2037" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1186.72" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (7,072,047 samples, 0.01%)</title><rect x="28.8" y="1685" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="31.79" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="693" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="703.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (19,815,012 samples, 0.02%)</title><rect x="890.5" y="2053" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="893.45" y="2063.5" ></text>
</g>
<g >
<title>HttpRouter::Route (1,344,202,366 samples, 1.61%)</title><rect x="646.0" y="1781" width="19.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="648.95" y="1791.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (2,917,155,938 samples, 3.50%)</title><rect x="978.7" y="1829" width="41.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="981.75" y="1839.5" >Htt..</text>
</g>
<g >
<title>handle_softirqs (14,123,476 samples, 0.02%)</title><rect x="13.2" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="16.24" y="1615.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (922,329,892 samples, 1.11%)</title><rect x="1090.5" y="1765" width="13.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1093.48" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="181" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="191.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="789" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="799.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (60,883,975 samples, 0.07%)</title><rect x="808.0" y="1749" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="811.04" y="1759.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7,437,251 samples, 0.01%)</title><rect x="69.2" y="1285" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="72.22" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (30,480,097 samples, 0.04%)</title><rect x="1076.5" y="1685" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1079.53" y="1695.5" ></text>
</g>
<g >
<title>do_writev (1,597,929,329 samples, 1.92%)</title><rect x="704.0" y="1733" width="22.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="707.04" y="1743.5" >d..</text>
</g>
<g >
<title>__x64_sys_epoll_ctl (211,798,979 samples, 0.25%)</title><rect x="14.4" y="1621" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="17.44" y="1631.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (21,030,750 samples, 0.03%)</title><rect x="674.3" y="1701" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="677.27" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1189" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1199.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (12,182,055 samples, 0.01%)</title><rect x="884.5" y="1893" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="887.48" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (10,701,183 samples, 0.01%)</title><rect x="843.4" y="1765" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="846.42" y="1775.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (11,173,602 samples, 0.01%)</title><rect x="1176.3" y="1813" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1179.35" y="1823.5" ></text>
</g>
<g >
<title>nf_conntrack_in (142,500,296 samples, 0.17%)</title><rect x="856.2" y="1445" width="2.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="859.23" y="1455.5" ></text>
</g>
<g >
<title>mutex_lock (8,094,448 samples, 0.01%)</title><rect x="902.2" y="1589" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="905.20" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (9,340,124 samples, 0.01%)</title><rect x="577.5" y="1765" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="580.48" y="1775.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (8,084,458 samples, 0.01%)</title><rect x="497.8" y="1621" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="500.80" y="1631.5" ></text>
</g>
<g >
<title>__napi_poll (15,714,971 samples, 0.02%)</title><rect x="980.2" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="983.16" y="1583.5" ></text>
</g>
<g >
<title>__check_heap_object (11,485,546 samples, 0.01%)</title><rect x="363.8" y="1589" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="366.76" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (35,452,959 samples, 0.04%)</title><rect x="59.0" y="1717" width="0.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="62.00" y="1727.5" ></text>
</g>
<g >
<title>netvsc_poll (10,969,271 samples, 0.01%)</title><rect x="603.9" y="1509" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="606.94" y="1519.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (21,789,583 samples, 0.03%)</title><rect x="591.1" y="53" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="594.08" y="63.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (8,368,428 samples, 0.01%)</title><rect x="290.3" y="1605" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="293.26" y="1615.5" ></text>
</g>
<g >
<title>sk_reset_timer (74,438,041 samples, 0.09%)</title><rect x="130.9" y="1525" width="1.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="133.93" y="1535.5" ></text>
</g>
<g >
<title>release_sock (33,170,861 samples, 0.04%)</title><rect x="387.8" y="1637" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="390.76" y="1647.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (8,489,624 samples, 0.01%)</title><rect x="358.0" y="1605" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="360.97" y="1615.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,156,049 samples, 0.01%)</title><rect x="99.0" y="1445" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="102.02" y="1455.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (2,988,359,931 samples, 3.59%)</title><rect x="243.8" y="1829" width="42.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="246.80" y="1839.5" >Htt..</text>
</g>
<g >
<title>net_rx_action (9,776,215 samples, 0.01%)</title><rect x="34.5" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="37.54" y="1599.5" ></text>
</g>
<g >
<title>__napi_poll (7,714,784 samples, 0.01%)</title><rect x="571.6" y="1365" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="574.57" y="1375.5" ></text>
</g>
<g >
<title>security_file_permission (116,205,739 samples, 0.14%)</title><rect x="528.7" y="1685" width="1.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="531.74" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (60,313,005 samples, 0.07%)</title><rect x="700.2" y="1733" width="0.8" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="703.17" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_established (9,588,116 samples, 0.01%)</title><rect x="652.0" y="1397" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="655.03" y="1407.5" ></text>
</g>
<g >
<title>irq_exit_rcu (23,880,075 samples, 0.03%)</title><rect x="942.8" y="1717" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="945.77" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1925" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1935.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (50,204,623 samples, 0.06%)</title><rect x="341.3" y="1701" width="0.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="344.27" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (23,313,846 samples, 0.03%)</title><rect x="1089.4" y="1669" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1092.40" y="1679.5" ></text>
</g>
<g >
<title>ip_finish_output2 (369,710,578 samples, 0.44%)</title><rect x="1006.7" y="1445" width="5.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1009.72" y="1455.5" ></text>
</g>
<g >
<title>x64_sys_call (465,968,421 samples, 0.56%)</title><rect x="875.0" y="1861" width="6.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="877.98" y="1871.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (9,789,423 samples, 0.01%)</title><rect x="1176.7" y="1893" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1179.74" y="1903.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (120,603,972 samples, 0.14%)</title><rect x="440.6" y="1813" width="1.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="443.57" y="1823.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (26,699,885 samples, 0.03%)</title><rect x="357.7" y="1701" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="360.73" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (23,042,111 samples, 0.03%)</title><rect x="144.2" y="1445" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="147.22" y="1455.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Epoller*, std::default_delete&lt;Epoller&gt; &gt; (7,358,989 samples, 0.01%)</title><rect x="465.0" y="1637" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="468.02" y="1647.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (38,464,665 samples, 0.05%)</title><rect x="526.7" y="1765" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="529.65" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;Channel&gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (15,981,397 samples, 0.02%)</title><rect x="297.4" y="1877" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="300.36" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (8,740,595 samples, 0.01%)</title><rect x="706.1" y="1605" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="709.07" y="1615.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1,070,631,273 samples, 1.28%)</title><rect x="1149.1" y="1589" width="15.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1152.06" y="1599.5" ></text>
</g>
<g >
<title>nft_do_chain (58,750,063 samples, 0.07%)</title><rect x="858.7" y="1445" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="861.66" y="1455.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (143,835,167 samples, 0.17%)</title><rect x="322.2" y="1717" width="2.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="325.24" y="1727.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,776,215 samples, 0.01%)</title><rect x="34.5" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="37.54" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (14,554,757 samples, 0.02%)</title><rect x="762.4" y="1717" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="765.45" y="1727.5" ></text>
</g>
<g >
<title>sock_def_readable (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1269" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="928.84" y="1279.5" ></text>
</g>
<g >
<title>selinux_file_permission (66,845,363 samples, 0.08%)</title><rect x="529.4" y="1669" width="1.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="532.44" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (53,895,402 samples, 0.06%)</title><rect x="472.5" y="1717" width="0.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="475.48" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (10,863,375 samples, 0.01%)</title><rect x="89.8" y="1429" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="92.81" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (21,732,934 samples, 0.03%)</title><rect x="663.7" y="1749" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="666.69" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1957" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1397" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1407.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (6,022,460,697 samples, 7.23%)</title><rect x="11.5" y="1877" width="85.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="14.55" y="1887.5" >std::_Func..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (278,911,790 samples, 0.33%)</title><rect x="180.3" y="1701" width="4.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="183.33" y="1711.5" ></text>
</g>
<g >
<title>malloc (7,123,179 samples, 0.01%)</title><rect x="24.6" y="1669" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="27.60" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (125,449,486 samples, 0.15%)</title><rect x="544.3" y="1733" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="547.31" y="1743.5" ></text>
</g>
<g >
<title>handle_softirqs (22,528,622 samples, 0.03%)</title><rect x="942.8" y="1685" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="945.77" y="1695.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (410,549,451 samples, 0.49%)</title><rect x="752.7" y="1733" width="5.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="755.66" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (10,383,260 samples, 0.01%)</title><rect x="422.8" y="1141" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="425.82" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (8,005,175 samples, 0.01%)</title><rect x="307.5" y="2037" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="310.53" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="453" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1733" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="925.16" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_first_not_of (17,380,491 samples, 0.02%)</title><rect x="775.9" y="1765" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="778.94" y="1775.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (177,505,049 samples, 0.21%)</title><rect x="531.7" y="1637" width="2.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="534.72" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1781" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (9,990,250 samples, 0.01%)</title><rect x="233.3" y="1525" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="236.30" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (8,105,077 samples, 0.01%)</title><rect x="539.7" y="1541" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="542.70" y="1551.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1589" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="171.38" y="1599.5" ></text>
</g>
<g >
<title>do_epoll_ctl (92,068,601 samples, 0.11%)</title><rect x="835.4" y="1605" width="1.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="838.45" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (27,361,346 samples, 0.03%)</title><rect x="178.6" y="1765" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="181.58" y="1775.5" ></text>
</g>
<g >
<title>napi_complete_done (8,566,871 samples, 0.01%)</title><rect x="247.5" y="1461" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="250.52" y="1471.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,236,971 samples, 0.01%)</title><rect x="357.8" y="1541" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="360.76" y="1551.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,407,017 samples, 0.01%)</title><rect x="1079.0" y="1733" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1082.03" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (79,910,050 samples, 0.10%)</title><rect x="623.7" y="1685" width="1.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="626.74" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (8,788,808 samples, 0.01%)</title><rect x="141.3" y="1477" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="144.25" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (10,346,515 samples, 0.01%)</title><rect x="223.9" y="1781" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="226.85" y="1791.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (38,850,785 samples, 0.05%)</title><rect x="590.1" y="1781" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="593.08" y="1791.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (16,502,081 samples, 0.02%)</title><rect x="670.7" y="1733" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="673.74" y="1743.5" ></text>
</g>
<g >
<title>schedule (70,396,444 samples, 0.08%)</title><rect x="584.1" y="1781" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="587.06" y="1791.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,536,701 samples, 0.01%)</title><rect x="412.0" y="1701" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="415.00" y="1711.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (144,709,755 samples, 0.17%)</title><rect x="250.6" y="1781" width="2.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="253.60" y="1791.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (7,607,670 samples, 0.01%)</title><rect x="75.1" y="1749" width="0.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="78.15" y="1759.5" ></text>
</g>
<g >
<title>napi_complete_done (8,388,478 samples, 0.01%)</title><rect x="880.5" y="1605" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="883.53" y="1615.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,453,944 samples, 0.01%)</title><rect x="397.0" y="1445" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="400.03" y="1455.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (7,208,810 samples, 0.01%)</title><rect x="674.4" y="1285" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="677.37" y="1295.5" ></text>
</g>
<g >
<title>netvsc_send (94,191,365 samples, 0.11%)</title><rect x="425.3" y="1349" width="1.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="428.25" y="1359.5" ></text>
</g>
<g >
<title>selinux_socket_sendmsg (37,088,004 samples, 0.04%)</title><rect x="1166.1" y="1637" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1169.06" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (31,876,293 samples, 0.04%)</title><rect x="598.8" y="2053" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="601.77" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (20,510,394 samples, 0.02%)</title><rect x="740.8" y="2021" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="2031.5" ></text>
</g>
<g >
<title>__secure_computing (19,606,218 samples, 0.02%)</title><rect x="800.7" y="1685" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="803.68" y="1695.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1461" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1002.78" y="1471.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (14,741,395 samples, 0.02%)</title><rect x="437.2" y="1845" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="440.17" y="1855.5" ></text>
</g>
<g >
<title>lock_sock_nested (44,860,113 samples, 0.05%)</title><rect x="89.6" y="1637" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="92.56" y="1647.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (8,543,281 samples, 0.01%)</title><rect x="1177.5" y="1893" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1180.52" y="1903.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (10,006,481 samples, 0.01%)</title><rect x="1099.9" y="1541" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1102.86" y="1551.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (389,973,256 samples, 0.47%)</title><rect x="1053.6" y="1749" width="5.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1056.59" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (8,541,410 samples, 0.01%)</title><rect x="781.4" y="1717" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="784.43" y="1727.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,378,040 samples, 0.01%)</title><rect x="845.9" y="1701" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="848.93" y="1711.5" ></text>
</g>
<g >
<title>__close (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1573" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="171.38" y="1583.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (57,879,886 samples, 0.07%)</title><rect x="279.8" y="1541" width="0.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="282.76" y="1551.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1557" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="925.16" y="1567.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (14,123,476 samples, 0.02%)</title><rect x="13.2" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="16.24" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="293" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="303.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="565" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (63,476,945 samples, 0.08%)</title><rect x="1070.5" y="1749" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1073.47" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (12,813,382 samples, 0.02%)</title><rect x="1188.5" y="2037" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1191.48" y="2047.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,558,942 samples, 0.01%)</title><rect x="1045.5" y="1589" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1048.49" y="1599.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (10,672,868 samples, 0.01%)</title><rect x="1153.0" y="1381" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1156.05" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="773" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (12,104,134 samples, 0.01%)</title><rect x="30.5" y="1701" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="33.53" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (320,700,039 samples, 0.38%)</title><rect x="833.6" y="1717" width="4.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="836.56" y="1727.5" ></text>
</g>
<g >
<title>x64_sys_call (164,916,380 samples, 0.20%)</title><rect x="1045.7" y="1637" width="2.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1048.74" y="1647.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (18,248,249 samples, 0.02%)</title><rect x="795.9" y="1637" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="798.86" y="1647.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (11,340,640 samples, 0.01%)</title><rect x="621.5" y="1701" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="624.49" y="1711.5" ></text>
</g>
<g >
<title>rndis_filter_receive (8,075,743 samples, 0.01%)</title><rect x="236.4" y="1493" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="239.39" y="1503.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (7,223,248 samples, 0.01%)</title><rect x="841.7" y="1749" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="844.65" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,642,282 samples, 0.01%)</title><rect x="670.5" y="1621" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="673.47" y="1631.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,589,037 samples, 0.01%)</title><rect x="225.1" y="1749" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="228.10" y="1759.5" ></text>
</g>
<g >
<title>handle_softirqs (26,511,501 samples, 0.03%)</title><rect x="1175.8" y="1669" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1178.77" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (7,665,346 samples, 0.01%)</title><rect x="475.2" y="1765" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="478.17" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (62,732,981 samples, 0.08%)</title><rect x="351.3" y="1717" width="0.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="354.27" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::empty (11,126,447 samples, 0.01%)</title><rect x="636.3" y="1765" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="639.29" y="1775.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (74,511,846 samples, 0.09%)</title><rect x="206.3" y="1749" width="1.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="209.32" y="1759.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (40,483,801 samples, 0.05%)</title><rect x="422.7" y="1413" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="425.70" y="1423.5" ></text>
</g>
<g >
<title>avc_has_perm (8,072,464 samples, 0.01%)</title><rect x="433.6" y="1605" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="436.65" y="1615.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;TimerManager::TimerNode&gt;::shared_ptr (12,481,904 samples, 0.01%)</title><rect x="447.2" y="1909" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="450.25" y="1919.5" ></text>
</g>
<g >
<title>std::function&lt;void  (64,163,463 samples, 0.08%)</title><rect x="903.9" y="1781" width="0.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="906.92" y="1791.5" ></text>
</g>
<g >
<title>handle_softirqs (13,770,691 samples, 0.02%)</title><rect x="603.9" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="606.90" y="1567.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (55,065,538 samples, 0.07%)</title><rect x="238.3" y="1605" width="0.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="241.28" y="1615.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (337,164,518 samples, 0.40%)</title><rect x="1044.7" y="1701" width="4.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1047.67" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (17,638,286 samples, 0.02%)</title><rect x="838.3" y="1749" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="841.30" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (8,894,092 samples, 0.01%)</title><rect x="715.0" y="1141" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="718.04" y="1151.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (88,902,149 samples, 0.11%)</title><rect x="1030.2" y="1877" width="1.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1033.16" y="1887.5" ></text>
</g>
<g >
<title>__rcu_read_lock (9,033,896 samples, 0.01%)</title><rect x="215.1" y="1605" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="218.06" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (17,653,374 samples, 0.02%)</title><rect x="543.5" y="1765" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="546.50" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,826,567 samples, 0.01%)</title><rect x="752.9" y="1525" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="755.91" y="1535.5" ></text>
</g>
<g >
<title>_raw_write_unlock_irq (43,012,512 samples, 0.05%)</title><rect x="439.9" y="1813" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="442.94" y="1823.5" ></text>
</g>
<g >
<title>irq_exit_rcu (21,030,750 samples, 0.03%)</title><rect x="674.3" y="1717" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="677.27" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (137,705,464 samples, 0.17%)</title><rect x="1140.2" y="1765" width="2.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1143.21" y="1775.5" ></text>
</g>
<g >
<title>sock_def_readable (9,132,117 samples, 0.01%)</title><rect x="1024.2" y="1461" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1027.24" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_S_equals (10,380,138 samples, 0.01%)</title><rect x="700.7" y="1685" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="703.70" y="1695.5" ></text>
</g>
<g >
<title>handle_softirqs (8,860,791 samples, 0.01%)</title><rect x="804.3" y="1557" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="807.26" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="2005" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (13,901,142 samples, 0.02%)</title><rect x="420.2" y="1413" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="423.19" y="1423.5" ></text>
</g>
<g >
<title>nf_hook_slow (11,714,708 samples, 0.01%)</title><rect x="720.0" y="1493" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="723.00" y="1503.5" ></text>
</g>
<g >
<title>__napi_poll (7,115,937 samples, 0.01%)</title><rect x="859.1" y="1333" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="862.06" y="1343.5" ></text>
</g>
<g >
<title>selinux_file_permission (35,669,739 samples, 0.04%)</title><rect x="1166.8" y="1653" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1169.79" y="1663.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,689,740 samples, 0.01%)</title><rect x="98.2" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="101.19" y="1663.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (22,580,491 samples, 0.03%)</title><rect x="225.4" y="1781" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="228.45" y="1791.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (18,139,074 samples, 0.02%)</title><rect x="844.5" y="1685" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="847.46" y="1695.5" ></text>
</g>
<g >
<title>selinux_file_permission (34,917,956 samples, 0.04%)</title><rect x="433.3" y="1653" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="436.29" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,190,386 samples, 0.01%)</title><rect x="439.9" y="1621" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="442.94" y="1631.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (10,280,043 samples, 0.01%)</title><rect x="326.3" y="1765" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="329.33" y="1775.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,224,105 samples, 0.01%)</title><rect x="233.3" y="1653" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="236.30" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1989" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1999.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (32,514,905 samples, 0.04%)</title><rect x="396.9" y="1637" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="399.94" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1925" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1935.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (23,042,223 samples, 0.03%)</title><rect x="45.8" y="1685" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="48.80" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="805" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="815.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (101,408,424 samples, 0.12%)</title><rect x="146.7" y="1893" width="1.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="149.69" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (16,144,584 samples, 0.02%)</title><rect x="1049.2" y="1685" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1052.22" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (22,857,288 samples, 0.03%)</title><rect x="714.8" y="1269" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="717.84" y="1279.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (39,295,881 samples, 0.05%)</title><rect x="936.9" y="1717" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="939.93" y="1727.5" ></text>
</g>
<g >
<title>napi_complete_done (24,874,451 samples, 0.03%)</title><rect x="1007.4" y="1301" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1010.40" y="1311.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (228,388,612 samples, 0.27%)</title><rect x="781.3" y="1733" width="3.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="784.30" y="1743.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,730,377 samples, 0.02%)</title><rect x="752.9" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="755.91" y="1631.5" ></text>
</g>
<g >
<title>handle_softirqs (12,994,125 samples, 0.02%)</title><rect x="606.3" y="1525" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="609.26" y="1535.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,853,383 samples, 0.01%)</title><rect x="878.2" y="1557" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="881.25" y="1567.5" ></text>
</g>
<g >
<title>sock_poll (83,044,441 samples, 0.10%)</title><rect x="1173.8" y="1797" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.84" y="1807.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,155,189 samples, 0.01%)</title><rect x="311.8" y="1461" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="314.78" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (7,764,648 samples, 0.01%)</title><rect x="128.0" y="1285" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="131.04" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (118,820,610 samples, 0.14%)</title><rect x="981.7" y="1621" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="984.71" y="1631.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (7,214,938 samples, 0.01%)</title><rect x="924.2" y="1749" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="927.24" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (10,480,665 samples, 0.01%)</title><rect x="733.4" y="1781" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="736.43" y="1791.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@@GLIBC_2.2.5 (13,701,092 samples, 0.02%)</title><rect x="738.7" y="1877" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="741.71" y="1887.5" ></text>
</g>
<g >
<title>__do_softirq (11,914,981 samples, 0.01%)</title><rect x="562.2" y="1365" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="565.25" y="1375.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,094,779 samples, 0.01%)</title><rect x="662.8" y="1733" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="665.76" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (7,297,747 samples, 0.01%)</title><rect x="1068.6" y="1669" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1071.61" y="1679.5" ></text>
</g>
<g >
<title>operator delete (9,763,099 samples, 0.01%)</title><rect x="954.7" y="1765" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="957.73" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (7,862,518 samples, 0.01%)</title><rect x="641.5" y="1669" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="644.49" y="1679.5" ></text>
</g>
<g >
<title>handle_softirqs (10,708,042 samples, 0.01%)</title><rect x="131.2" y="1397" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="134.16" y="1407.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (26,428,366 samples, 0.03%)</title><rect x="606.4" y="1589" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="609.44" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1445" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1455.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (16,419,506 samples, 0.02%)</title><rect x="162.0" y="1653" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="165.02" y="1663.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (12,940,381 samples, 0.02%)</title><rect x="1141.5" y="1653" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1144.50" y="1663.5" ></text>
</g>
<g >
<title>_copy_from_iter (7,244,863 samples, 0.01%)</title><rect x="555.9" y="1621" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="558.90" y="1631.5" ></text>
</g>
<g >
<title>rw_verify_area (143,351,738 samples, 0.17%)</title><rect x="233.8" y="1701" width="2.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="236.80" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (75,469,720 samples, 0.09%)</title><rect x="445.5" y="1877" width="1.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="448.46" y="1887.5" ></text>
</g>
<g >
<title>TimerManager::GetNextTick (7,190,033 samples, 0.01%)</title><rect x="874.4" y="1909" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="877.41" y="1919.5" ></text>
</g>
<g >
<title>__napi_poll (20,479,008 samples, 0.02%)</title><rect x="734.6" y="1637" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="737.58" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (21,695,478 samples, 0.03%)</title><rect x="176.1" y="1717" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="179.13" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::erase (44,466,728 samples, 0.05%)</title><rect x="785.2" y="1765" width="0.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="788.23" y="1775.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (10,737,171 samples, 0.01%)</title><rect x="19.8" y="1701" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="22.80" y="1711.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (18,043,841 samples, 0.02%)</title><rect x="594.7" y="2053" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="597.68" y="2063.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (63,013,047 samples, 0.08%)</title><rect x="92.1" y="1605" width="0.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="95.11" y="1615.5" ></text>
</g>
<g >
<title>irq_exit_rcu (12,433,339 samples, 0.01%)</title><rect x="538.8" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="541.77" y="1647.5" ></text>
</g>
<g >
<title>tcp_rcv_established (9,258,675 samples, 0.01%)</title><rect x="443.0" y="1429" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="445.97" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (32,407,138 samples, 0.04%)</title><rect x="355.3" y="1669" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="358.25" y="1679.5" ></text>
</g>
<g >
<title>__napi_poll (17,864,943 samples, 0.02%)</title><rect x="1040.6" y="1941" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1043.58" y="1951.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,964,144 samples, 0.01%)</title><rect x="16.6" y="1573" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="19.56" y="1583.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (9,182,790 samples, 0.01%)</title><rect x="440.3" y="1509" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="443.28" y="1519.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1685" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="171.38" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (84,774,088 samples, 0.10%)</title><rect x="495.4" y="1749" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="498.40" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1845" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="725" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (220,934,443 samples, 0.27%)</title><rect x="245.2" y="1669" width="3.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="248.17" y="1679.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (7,177,837 samples, 0.01%)</title><rect x="884.8" y="1893" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="887.77" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (14,879,177 samples, 0.02%)</title><rect x="877.9" y="1605" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="880.87" y="1615.5" ></text>
</g>
<g >
<title>tcp_poll (30,199,772 samples, 0.04%)</title><rect x="733.6" y="1781" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="736.60" y="1791.5" ></text>
</g>
<g >
<title>netvsc_poll (11,695,179 samples, 0.01%)</title><rect x="261.0" y="1637" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="263.97" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (12,522,215 samples, 0.02%)</title><rect x="880.7" y="1557" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="883.68" y="1567.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (2,974,005,695 samples, 3.57%)</title><rect x="1127.0" y="1861" width="42.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1129.98" y="1871.5" >std..</text>
</g>
<g >
<title>[web-server] (8,265,193 samples, 0.01%)</title><rect x="628.2" y="1749" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="631.22" y="1759.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (14,689,404 samples, 0.02%)</title><rect x="460.7" y="1637" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="463.70" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (249,760,038 samples, 0.30%)</title><rect x="790.2" y="1765" width="3.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="793.17" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (24,688,938 samples, 0.03%)</title><rect x="141.4" y="1717" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="144.43" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (7,074,555 samples, 0.01%)</title><rect x="327.2" y="1685" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="330.18" y="1695.5" ></text>
</g>
<g >
<title>clear_bhb_loop (20,578,431 samples, 0.02%)</title><rect x="651.2" y="1733" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="654.17" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1381" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1391.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,863,913 samples, 0.01%)</title><rect x="981.2" y="1477" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="984.17" y="1487.5" ></text>
</g>
<g >
<title>rndis_filter_receive (13,652,178 samples, 0.02%)</title><rect x="581.9" y="1669" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="584.92" y="1679.5" ></text>
</g>
<g >
<title>netvsc_send (10,162,208 samples, 0.01%)</title><rect x="273.4" y="1333" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="276.40" y="1343.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,792,498 samples, 0.01%)</title><rect x="1002.6" y="1493" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1005.64" y="1503.5" ></text>
</g>
<g >
<title>irq_exit_rcu (28,453,619 samples, 0.03%)</title><rect x="1090.7" y="1717" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1093.74" y="1727.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (5,948,768,038 samples, 7.14%)</title><rect x="310.4" y="1845" width="84.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="313.41" y="1855.5" >std::__in..</text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1813" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1823.5" ></text>
</g>
<g >
<title>__strlen_avx2 (25,946,301 samples, 0.03%)</title><rect x="1184.1" y="2037" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1187.10" y="2047.5" ></text>
</g>
<g >
<title>TimerManager::Tick (48,611,081 samples, 0.06%)</title><rect x="884.7" y="1925" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="887.66" y="1935.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,662,509,531 samples, 11.59%)</title><rect x="749.9" y="2005" width="136.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="752.91" y="2015.5" >std::thread::_Inv..</text>
</g>
<g >
<title>ip_sublist_rcv (24,874,451 samples, 0.03%)</title><rect x="1007.4" y="1237" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1010.40" y="1247.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,751,435 samples, 0.01%)</title><rect x="754.0" y="1445" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="757.04" y="1455.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,397,284 samples, 0.01%)</title><rect x="410.9" y="1653" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="413.91" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (48,687,257 samples, 0.06%)</title><rect x="1075.2" y="1701" width="0.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1078.21" y="1711.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (11,657,792 samples, 0.01%)</title><rect x="649.1" y="1749" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="652.05" y="1759.5" ></text>
</g>
<g >
<title>detach_if_pending (7,916,763 samples, 0.01%)</title><rect x="721.9" y="1477" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="724.87" y="1487.5" ></text>
</g>
<g >
<title>__napi_poll (11,073,398 samples, 0.01%)</title><rect x="777.9" y="1637" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="780.94" y="1647.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (26,939,315 samples, 0.03%)</title><rect x="878.1" y="1749" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="881.08" y="1759.5" ></text>
</g>
<g >
<title>_copy_from_user (8,206,306 samples, 0.01%)</title><rect x="163.6" y="1605" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="166.65" y="1615.5" ></text>
</g>
<g >
<title>__mod_timer (60,830,544 samples, 0.07%)</title><rect x="131.0" y="1493" width="0.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="134.02" y="1503.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (16,170,483 samples, 0.02%)</title><rect x="258.3" y="1685" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="261.27" y="1695.5" ></text>
</g>
<g >
<title>Epoller::GetEventFd (8,851,753 samples, 0.01%)</title><rect x="137.9" y="1909" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="140.86" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (30,600,412 samples, 0.04%)</title><rect x="256.3" y="1733" width="0.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="259.27" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1013" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1023.5" ></text>
</g>
<g >
<title>pick_next_task_fair (11,144,659 samples, 0.01%)</title><rect x="584.7" y="1749" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="587.75" y="1759.5" ></text>
</g>
<g >
<title>__napi_poll (50,553,899 samples, 0.06%)</title><rect x="272.6" y="1333" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="275.55" y="1343.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,082,801 samples, 0.01%)</title><rect x="519.4" y="1765" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="522.38" y="1775.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (7,296,084 samples, 0.01%)</title><rect x="1018.2" y="1589" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1021.20" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (491,210,729 samples, 0.59%)</title><rect x="287.1" y="1893" width="6.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="290.07" y="1903.5" ></text>
</g>
<g >
<title>tcp_push (1,064,223,456 samples, 1.28%)</title><rect x="854.1" y="1605" width="15.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="857.07" y="1615.5" ></text>
</g>
<g >
<title>selinux_ip_postroute_compat (14,907,819 samples, 0.02%)</title><rect x="277.8" y="1445" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="280.81" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1253" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1263.5" ></text>
</g>
<g >
<title>ip_list_rcv (12,984,790 samples, 0.02%)</title><rect x="1007.9" y="1221" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1010.91" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1781" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1791.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (30,577,051 samples, 0.04%)</title><rect x="55.5" y="1701" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="58.49" y="1711.5" ></text>
</g>
<g >
<title>vfs_fstatat (461,435,219 samples, 0.55%)</title><rect x="506.5" y="1669" width="6.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="509.45" y="1679.5" ></text>
</g>
<g >
<title>kfree_skbmem (7,407,541 samples, 0.01%)</title><rect x="826.5" y="1605" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="829.53" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (8,034,962 samples, 0.01%)</title><rect x="184.7" y="1717" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="187.74" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (24,602,903 samples, 0.03%)</title><rect x="1018.9" y="1797" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1021.92" y="1807.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (80,608,768 samples, 0.10%)</title><rect x="698.8" y="1781" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="701.75" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (11,008,195 samples, 0.01%)</title><rect x="636.1" y="1749" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="639.11" y="1759.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (64,886,869 samples, 0.08%)</title><rect x="92.1" y="1621" width="0.9" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="95.11" y="1631.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (384,394,932 samples, 0.46%)</title><rect x="687.8" y="1717" width="5.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="690.82" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1045" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1055.5" ></text>
</g>
<g >
<title>rndis_filter_receive (7,689,887 samples, 0.01%)</title><rect x="733.5" y="1653" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="736.47" y="1663.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (9,132,117 samples, 0.01%)</title><rect x="1024.2" y="1445" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1027.24" y="1455.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (52,837,721 samples, 0.06%)</title><rect x="501.7" y="1733" width="0.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="504.72" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,247,196 samples, 0.02%)</title><rect x="397.0" y="1589" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="400.03" y="1599.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc_cs (10,931,791 samples, 0.01%)</title><rect x="239.6" y="1589" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="242.61" y="1599.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (406,440,425 samples, 0.49%)</title><rect x="898.0" y="1701" width="5.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="901.01" y="1711.5" ></text>
</g>
<g >
<title>__mod_timer (55,459,980 samples, 0.07%)</title><rect x="1163.0" y="1493" width="0.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1165.97" y="1503.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (26,965,838 samples, 0.03%)</title><rect x="304.0" y="2053" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="307.05" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,351,719 samples, 0.01%)</title><rect x="893.7" y="1813" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="896.68" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (10,570,407 samples, 0.01%)</title><rect x="942.8" y="1589" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="945.85" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9,559,190 samples, 0.01%)</title><rect x="60.5" y="1509" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="63.55" y="1519.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,241,773 samples, 0.01%)</title><rect x="672.4" y="1621" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="675.41" y="1631.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (34,757,798 samples, 0.04%)</title><rect x="628.4" y="1749" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="631.36" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (13,451,272 samples, 0.02%)</title><rect x="250.0" y="1749" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="253.02" y="1759.5" ></text>
</g>
<g >
<title>do_writev (1,561,089,232 samples, 1.87%)</title><rect x="996.6" y="1733" width="22.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="999.63" y="1743.5" >d..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (305,311,838 samples, 0.37%)</title><rect x="914.7" y="1701" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="917.69" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (20,317,784 samples, 0.02%)</title><rect x="1090.8" y="1605" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1093.77" y="1615.5" ></text>
</g>
<g >
<title>loopthread2 (10,447,809,276 samples, 12.54%)</title><rect x="308.7" y="2069" width="148.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="311.74" y="2079.5" >loopthread2</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (9,938,382 samples, 0.01%)</title><rect x="171.4" y="1701" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="174.37" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1589" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="925.16" y="1599.5" ></text>
</g>
<g >
<title>__napi_poll (24,207,435 samples, 0.03%)</title><rect x="1175.8" y="1637" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1178.77" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (20,877,441 samples, 0.03%)</title><rect x="693.0" y="1685" width="0.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="695.96" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (10,252,430 samples, 0.01%)</title><rect x="811.7" y="1749" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="814.69" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="773" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="783.5" ></text>
</g>
<g >
<title>HttpConn::Close (16,295,567 samples, 0.02%)</title><rect x="904.9" y="1797" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="907.95" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (8,080,562 samples, 0.01%)</title><rect x="1142.2" y="1717" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1145.22" y="1727.5" ></text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (8,151,839 samples, 0.01%)</title><rect x="788.4" y="1765" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="791.45" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (7,249,479 samples, 0.01%)</title><rect x="857.0" y="1333" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="859.98" y="1343.5" ></text>
</g>
<g >
<title>ksys_read (573,866,513 samples, 0.69%)</title><rect x="821.7" y="1733" width="8.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="824.71" y="1743.5" ></text>
</g>
<g >
<title>copy_iovec_from_user (7,075,611 samples, 0.01%)</title><rect x="434.0" y="1685" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="436.97" y="1695.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (14,450,582 samples, 0.02%)</title><rect x="934.8" y="1669" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="937.81" y="1679.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (17,953,168 samples, 0.02%)</title><rect x="26.5" y="1685" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="29.46" y="1695.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (217,057,191 samples, 0.26%)</title><rect x="43.3" y="1717" width="3.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="46.30" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (14,688,075 samples, 0.02%)</title><rect x="693.9" y="1717" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="696.85" y="1727.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,688,113 samples, 0.01%)</title><rect x="1172.7" y="1749" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1175.70" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (8,305,994 samples, 0.01%)</title><rect x="181.0" y="1685" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="183.99" y="1695.5" ></text>
</g>
<g >
<title>tcp_poll (7,104,668 samples, 0.01%)</title><rect x="691.2" y="1573" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="694.24" y="1583.5" ></text>
</g>
<g >
<title>irq_exit_rcu (12,432,807 samples, 0.01%)</title><rect x="995.0" y="1765" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="997.96" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (46,939,455 samples, 0.06%)</title><rect x="908.3" y="1717" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="911.26" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (29,395,129 samples, 0.04%)</title><rect x="796.5" y="1669" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="799.52" y="1679.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (8,431,726 samples, 0.01%)</title><rect x="229.7" y="1605" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="232.65" y="1615.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (50,429,546 samples, 0.06%)</title><rect x="268.2" y="1429" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="271.17" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (467,251,012 samples, 0.56%)</title><rect x="620.4" y="1765" width="6.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="623.41" y="1775.5" ></text>
</g>
<g >
<title>lock_sock_nested (48,122,094 samples, 0.06%)</title><rect x="387.1" y="1637" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="390.08" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (7,970,478 samples, 0.01%)</title><rect x="701.2" y="1717" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="704.25" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (12,377,320 samples, 0.01%)</title><rect x="18.4" y="1685" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="21.35" y="1695.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (22,802,076 samples, 0.03%)</title><rect x="1034.4" y="2021" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1037.44" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (10,699,475 samples, 0.01%)</title><rect x="387.4" y="1445" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="390.42" y="1455.5" ></text>
</g>
<g >
<title>net_rx_action (10,878,711 samples, 0.01%)</title><rect x="1128.3" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1131.29" y="1599.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (7,513,023 samples, 0.01%)</title><rect x="1175.6" y="1349" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1178.59" y="1359.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (28,437,393 samples, 0.03%)</title><rect x="1090.0" y="1765" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1093.01" y="1775.5" ></text>
</g>
<g >
<title>sock_poll (74,478,237 samples, 0.09%)</title><rect x="142.3" y="1797" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="145.30" y="1807.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (7,335,066 samples, 0.01%)</title><rect x="466.0" y="1701" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="468.98" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (25,041,331 samples, 0.03%)</title><rect x="102.7" y="1765" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="105.69" y="1775.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (16,317,057 samples, 0.02%)</title><rect x="1119.4" y="1605" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1122.40" y="1615.5" ></text>
</g>
<g >
<title>vmbus_next_request_id (16,174,059 samples, 0.02%)</title><rect x="568.3" y="1285" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="571.26" y="1295.5" ></text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (10,804,880 samples, 0.01%)</title><rect x="436.0" y="1925" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="438.95" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="437" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="447.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (7,283,500 samples, 0.01%)</title><rect x="144.4" y="1381" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="147.42" y="1391.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (7,595,557 samples, 0.01%)</title><rect x="859.5" y="1477" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="862.53" y="1487.5" ></text>
</g>
<g >
<title>do_epoll_wait (446,429,982 samples, 0.54%)</title><rect x="138.9" y="1829" width="6.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="141.89" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="725" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="735.5" ></text>
</g>
<g >
<title>[unknown] (11,400,820 samples, 0.01%)</title><rect x="551.5" y="1749" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="554.52" y="1759.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2,868,571,195 samples, 3.44%)</title><rect x="96.9" y="1893" width="40.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="99.91" y="1903.5" >std..</text>
</g>
<g >
<title>path_init (18,551,823 samples, 0.02%)</title><rect x="659.2" y="1605" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="662.15" y="1615.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,046,204 samples, 0.01%)</title><rect x="423.2" y="1221" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="426.16" y="1231.5" ></text>
</g>
<g >
<title>handle_softirqs (11,838,551 samples, 0.01%)</title><rect x="531.3" y="1557" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="534.26" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (235,187,267 samples, 0.28%)</title><rect x="590.8" y="2053" width="3.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="593.83" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1877" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="747.77" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (22,103,943 samples, 0.03%)</title><rect x="731.9" y="1621" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="734.90" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (209,131,597 samples, 0.25%)</title><rect x="886.7" y="2053" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.73" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="709" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (11,854,634 samples, 0.01%)</title><rect x="23.5" y="1685" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="26.50" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (7,378,828 samples, 0.01%)</title><rect x="26.2" y="1701" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="29.20" y="1711.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (35,344,571 samples, 0.04%)</title><rect x="791.8" y="1701" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="794.82" y="1711.5" ></text>
</g>
<g >
<title>handle_softirqs (9,030,291 samples, 0.01%)</title><rect x="246.0" y="1557" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="248.98" y="1567.5" ></text>
</g>
<g >
<title>malloc (10,285,502 samples, 0.01%)</title><rect x="102.7" y="1749" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="105.71" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,946,319 samples, 0.01%)</title><rect x="873.6" y="1749" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="876.64" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="821" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="831.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (21,337,094 samples, 0.03%)</title><rect x="1067.3" y="1701" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1070.26" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="2005" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1269" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1279.5" ></text>
</g>
<g >
<title>tcp_poll (11,913,215 samples, 0.01%)</title><rect x="165.3" y="1557" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="168.35" y="1567.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (8,084,458 samples, 0.01%)</title><rect x="497.8" y="1637" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="500.80" y="1647.5" ></text>
</g>
<g >
<title>tcp_poll (28,077,256 samples, 0.03%)</title><rect x="291.8" y="1781" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="294.79" y="1791.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (11,509,213 samples, 0.01%)</title><rect x="349.1" y="1717" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="352.06" y="1727.5" ></text>
</g>
<g >
<title>netvsc_poll (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1621" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1178.57" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1157" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1167.5" ></text>
</g>
<g >
<title>netvsc_poll (7,123,157 samples, 0.01%)</title><rect x="929.1" y="1573" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="932.06" y="1583.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,714,840 samples, 0.02%)</title><rect x="803.0" y="1557" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="806.05" y="1567.5" ></text>
</g>
<g >
<title>netvsc_poll (9,649,911 samples, 0.01%)</title><rect x="1143.2" y="1685" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1146.23" y="1695.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,107,971 samples, 0.01%)</title><rect x="69.2" y="1509" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="72.22" y="1519.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (328,220,012 samples, 0.39%)</title><rect x="538.5" y="1733" width="4.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="541.54" y="1743.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (25,038,227 samples, 0.03%)</title><rect x="740.1" y="1877" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="743.11" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (27,554,702 samples, 0.03%)</title><rect x="1088.4" y="1669" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1091.36" y="1679.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (11,384,479 samples, 0.01%)</title><rect x="940.7" y="1653" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="943.68" y="1663.5" ></text>
</g>
<g >
<title>vmbus_sendpacket (42,637,369 samples, 0.05%)</title><rect x="276.3" y="1317" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="279.27" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (38,476,705 samples, 0.05%)</title><rect x="576.1" y="1797" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="579.14" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (43,800,185 samples, 0.05%)</title><rect x="885.9" y="1813" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="888.88" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="229" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (37,479,972 samples, 0.04%)</title><rect x="1054.5" y="1701" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1057.52" y="1711.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::allocate (14,399,155 samples, 0.02%)</title><rect x="322.7" y="1685" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="325.73" y="1695.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7,376,631 samples, 0.01%)</title><rect x="468.9" y="1669" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="471.87" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,589,037 samples, 0.01%)</title><rect x="225.1" y="1765" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="228.10" y="1775.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (127,278,283 samples, 0.15%)</title><rect x="729.7" y="1797" width="1.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="732.72" y="1807.5" ></text>
</g>
<g >
<title>lookup_fast (20,367,682 samples, 0.02%)</title><rect x="951.5" y="1573" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="954.49" y="1583.5" ></text>
</g>
<g >
<title>__napi_poll (14,773,367 samples, 0.02%)</title><rect x="944.6" y="1605" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="947.57" y="1615.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (40,225,328 samples, 0.05%)</title><rect x="860.9" y="1397" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="863.85" y="1407.5" ></text>
</g>
<g >
<title>__seccomp_filter (11,987,746 samples, 0.01%)</title><rect x="383.0" y="1717" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="386.02" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="949" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (8,390,213 samples, 0.01%)</title><rect x="780.5" y="1733" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="783.49" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (12,996,692 samples, 0.02%)</title><rect x="1189.1" y="2037" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1192.07" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (438,995,423 samples, 0.53%)</title><rect x="475.8" y="1733" width="6.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="478.78" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1717" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (8,492,289 samples, 0.01%)</title><rect x="910.1" y="1637" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="913.11" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (102,775,700 samples, 0.12%)</title><rect x="448.8" y="2037" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.78" y="2047.5" ></text>
</g>
<g >
<title>strncpy_from_user (79,167,744 samples, 0.09%)</title><rect x="1096.6" y="1621" width="1.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1099.63" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="517" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="527.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (10,690,229 samples, 0.01%)</title><rect x="817.6" y="1717" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="820.56" y="1727.5" ></text>
</g>
<g >
<title>netvsc_poll (13,340,280 samples, 0.02%)</title><rect x="541.2" y="1477" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="544.15" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1125" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1135.5" ></text>
</g>
<g >
<title>__virt_addr_valid (10,773,489 samples, 0.01%)</title><rect x="1121.8" y="1557" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1124.76" y="1567.5" ></text>
</g>
<g >
<title>__check_object_size (45,026,402 samples, 0.05%)</title><rect x="363.6" y="1605" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="366.56" y="1615.5" ></text>
</g>
<g >
<title>preempt_count_add (8,023,690 samples, 0.01%)</title><rect x="387.9" y="1605" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="390.93" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (7,407,017 samples, 0.01%)</title><rect x="1079.0" y="1685" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1082.03" y="1695.5" ></text>
</g>
<g >
<title>handle_softirqs (11,433,348 samples, 0.01%)</title><rect x="1152.0" y="1349" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1155.03" y="1359.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,340,124 samples, 0.01%)</title><rect x="577.5" y="1717" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="580.48" y="1727.5" ></text>
</g>
<g >
<title>napi_complete_done (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1605" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="782.08" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="629" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;char*&gt; (146,167,564 samples, 0.18%)</title><rect x="377.7" y="1781" width="2.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="380.71" y="1791.5" ></text>
</g>
<g >
<title>__ip_finish_output (378,661,280 samples, 0.45%)</title><rect x="123.9" y="1461" width="5.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="126.91" y="1471.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (13,025,357 samples, 0.02%)</title><rect x="940.9" y="1685" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="943.89" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="837" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="847.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (140,065,867 samples, 0.17%)</title><rect x="908.9" y="1717" width="2.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="911.92" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_comp_iter&lt;char const*&gt; (8,638,190 samples, 0.01%)</title><rect x="41.9" y="1733" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="44.93" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (14,255,933 samples, 0.02%)</title><rect x="244.8" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="247.84" y="1647.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (37,640,922 samples, 0.05%)</title><rect x="1172.8" y="1797" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1175.85" y="1807.5" ></text>
</g>
<g >
<title>ip_list_rcv (43,007,060 samples, 0.05%)</title><rect x="124.6" y="1253" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="127.57" y="1263.5" ></text>
</g>
<g >
<title>epoll_ctl (13,451,072 samples, 0.02%)</title><rect x="409.7" y="1733" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="412.73" y="1743.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (216,390,451 samples, 0.26%)</title><rect x="825.7" y="1637" width="3.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="828.67" y="1647.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (34,627,294 samples, 0.04%)</title><rect x="984.0" y="1669" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="986.96" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (45,257,211 samples, 0.05%)</title><rect x="1024.1" y="1797" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1027.11" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="101" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (783,491,492 samples, 0.94%)</title><rect x="381.4" y="1797" width="11.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="384.36" y="1807.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,640,164 samples, 0.01%)</title><rect x="1129.4" y="1621" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1132.35" y="1631.5" ></text>
</g>
<g >
<title>_int_malloc (59,453,306 samples, 0.07%)</title><rect x="155.1" y="2053" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="158.11" y="2063.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,831,151 samples, 0.02%)</title><rect x="183.1" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="186.15" y="1663.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,906,809 samples, 0.01%)</title><rect x="703.6" y="1701" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="706.63" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (58,892,844 samples, 0.07%)</title><rect x="368.8" y="1749" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="371.84" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="165" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="175.5" ></text>
</g>
<g >
<title>netvsc_poll (23,061,344 samples, 0.03%)</title><rect x="880.5" y="1621" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="883.53" y="1631.5" ></text>
</g>
<g >
<title>napi_complete_done (18,303,938 samples, 0.02%)</title><rect x="798.1" y="1621" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="801.07" y="1631.5" ></text>
</g>
<g >
<title>nf_hook_slow (233,713,605 samples, 0.28%)</title><rect x="560.5" y="1477" width="3.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="563.47" y="1487.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (15,586,895 samples, 0.02%)</title><rect x="552.7" y="1749" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="555.69" y="1759.5" ></text>
</g>
<g >
<title>netvsc_xmit (10,477,897 samples, 0.01%)</title><rect x="1008.2" y="1349" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1011.20" y="1359.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (10,787,276 samples, 0.01%)</title><rect x="1165.0" y="1541" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1168.04" y="1551.5" ></text>
</g>
<g >
<title>handle_softirqs (30,512,604 samples, 0.04%)</title><rect x="564.9" y="1365" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="567.92" y="1375.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1573" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="295.80" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (422,039,524 samples, 0.51%)</title><rect x="897.8" y="1749" width="6.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="900.84" y="1759.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (36,427,044 samples, 0.04%)</title><rect x="453.6" y="2053" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="456.64" y="2063.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (39,209,529 samples, 0.05%)</title><rect x="1166.0" y="1653" width="0.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1169.03" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="629" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="639.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (8,727,643 samples, 0.01%)</title><rect x="838.8" y="1701" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="841.78" y="1711.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (7,944,183 samples, 0.01%)</title><rect x="1067.1" y="1701" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1070.14" y="1711.5" ></text>
</g>
<g >
<title>__napi_poll (10,672,868 samples, 0.01%)</title><rect x="1153.0" y="1317" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1156.05" y="1327.5" ></text>
</g>
<g >
<title>loopthread1 (10,599,419,418 samples, 12.72%)</title><rect x="158.7" y="2069" width="150.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="161.66" y="2079.5" >loopthread1</text>
</g>
<g >
<title>security_socket_recvmsg (48,445,121 samples, 0.06%)</title><rect x="1123.3" y="1669" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1126.33" y="1679.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,368,428 samples, 0.01%)</title><rect x="290.3" y="1621" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="293.26" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_last_not_of (8,434,348 samples, 0.01%)</title><rect x="776.2" y="1765" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="779.18" y="1775.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,871,845,080 samples, 11.85%)</title><rect x="1042.1" y="2053" width="139.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1045.13" y="2063.5" >[libstdc++.so.6.0..</text>
</g>
<g >
<title>tcp_skb_entail (14,316,487 samples, 0.02%)</title><rect x="281.5" y="1605" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="284.54" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (19,298,354 samples, 0.02%)</title><rect x="197.1" y="1765" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="200.14" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="517" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="527.5" ></text>
</g>
<g >
<title>__fdget_pos (43,486,847 samples, 0.05%)</title><rect x="527.7" y="1717" width="0.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="530.70" y="1727.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,617,696 samples, 0.01%)</title><rect x="1144.3" y="1749" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1147.28" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (14,873,190 samples, 0.02%)</title><rect x="586.1" y="1845" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="589.08" y="1855.5" ></text>
</g>
<g >
<title>vmbus_sendpacket (50,102,677 samples, 0.06%)</title><rect x="717.7" y="1317" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="720.69" y="1327.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7,665,188 samples, 0.01%)</title><rect x="409.4" y="1701" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="412.44" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1189" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1199.5" ></text>
</g>
<g >
<title>napi_complete_done (12,359,929 samples, 0.01%)</title><rect x="688.0" y="1541" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="691.05" y="1551.5" ></text>
</g>
<g >
<title>clear_bhb_loop (12,433,916 samples, 0.01%)</title><rect x="848.5" y="1781" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="851.54" y="1791.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (354,819,181 samples, 0.43%)</title><rect x="41.3" y="1749" width="5.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="44.35" y="1759.5" ></text>
</g>
<g >
<title>napi_complete_done (7,238,679 samples, 0.01%)</title><rect x="1152.1" y="1285" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1155.05" y="1295.5" ></text>
</g>
<g >
<title>netvsc_poll (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1621" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="782.08" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1429" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1002.78" y="1439.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (9,472,250 samples, 0.01%)</title><rect x="884.5" y="1861" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="887.51" y="1871.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (12,718,259 samples, 0.02%)</title><rect x="996.2" y="1765" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="999.21" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1557" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1567.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (16,987,172 samples, 0.02%)</title><rect x="167.5" y="1765" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="170.54" y="1775.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,162,330 samples, 0.01%)</title><rect x="711.1" y="1365" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="714.14" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="693" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="703.5" ></text>
</g>
<g >
<title>nf_hook_slow (231,268,485 samples, 0.28%)</title><rect x="710.2" y="1477" width="3.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="713.18" y="1487.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,432,807 samples, 0.01%)</title><rect x="995.0" y="1749" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="997.96" y="1759.5" ></text>
</g>
<g >
<title>psi_group_change (7,075,811 samples, 0.01%)</title><rect x="881.1" y="1733" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="884.07" y="1743.5" ></text>
</g>
<g >
<title>handle_softirqs (16,102,136 samples, 0.02%)</title><rect x="800.4" y="1637" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="803.39" y="1647.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (20,522,395 samples, 0.02%)</title><rect x="16.7" y="1589" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="19.67" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (56,053,066 samples, 0.07%)</title><rect x="992.7" y="1701" width="0.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="995.67" y="1711.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (14,165,100 samples, 0.02%)</title><rect x="1031.6" y="1893" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1034.57" y="1903.5" ></text>
</g>
<g >
<title>EventLoop::IsInLoopThread (24,265,839 samples, 0.03%)</title><rect x="602.1" y="1765" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="605.15" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;Channel&gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (7,866,797 samples, 0.01%)</title><rect x="148.2" y="1877" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="151.23" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1765" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (72,804,742 samples, 0.09%)</title><rect x="643.9" y="1717" width="1.0" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="646.91" y="1727.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,491,874 samples, 0.02%)</title><rect x="208.2" y="1717" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="211.17" y="1727.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,121,246 samples, 0.01%)</title><rect x="398.9" y="1573" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="401.95" y="1583.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (10,229,618 samples, 0.01%)</title><rect x="1017.0" y="1557" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1019.96" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,919,619 samples, 0.01%)</title><rect x="565.0" y="1205" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="568.01" y="1215.5" ></text>
</g>
<g >
<title>handle_softirqs (14,773,367 samples, 0.02%)</title><rect x="944.6" y="1637" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="947.57" y="1647.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1557" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="951.32" y="1567.5" ></text>
</g>
<g >
<title>__mod_timer (61,910,080 samples, 0.07%)</title><rect x="571.3" y="1493" width="0.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="574.27" y="1503.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (20,847,167 samples, 0.03%)</title><rect x="210.7" y="1701" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="213.68" y="1711.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (12,121,047 samples, 0.01%)</title><rect x="641.2" y="1669" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="644.25" y="1679.5" ></text>
</g>
<g >
<title>handle_softirqs (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1669" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="782.08" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;epoll_event, std::allocator&lt;epoll_event&gt; &gt;::size (8,103,508 samples, 0.01%)</title><rect x="436.3" y="1893" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="439.29" y="1903.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,060,443 samples, 0.01%)</title><rect x="234.8" y="1605" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="237.84" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node_ptr (47,600,579 samples, 0.06%)</title><rect x="545.1" y="1701" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="548.08" y="1711.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (406,606,079 samples, 0.49%)</title><rect x="538.1" y="1797" width="5.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="541.08" y="1807.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt; &gt; (29,925,659 samples, 0.04%)</title><rect x="448.1" y="1845" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="451.11" y="1855.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (159,823,157 samples, 0.19%)</title><rect x="862.5" y="1397" width="2.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="865.48" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (8,780,307 samples, 0.01%)</title><rect x="894.5" y="2053" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="897.47" y="2063.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (11,516,248 samples, 0.01%)</title><rect x="265.7" y="1589" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="268.71" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (8,465,226 samples, 0.01%)</title><rect x="712.0" y="1333" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="715.04" y="1343.5" ></text>
</g>
<g >
<title>__fget_light (17,832,392 samples, 0.02%)</title><rect x="398.7" y="1573" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="401.67" y="1583.5" ></text>
</g>
<g >
<title>__check_object_size (22,517,451 samples, 0.03%)</title><rect x="707.1" y="1605" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="710.10" y="1615.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,906,809 samples, 0.01%)</title><rect x="703.6" y="1733" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="706.63" y="1743.5" ></text>
</g>
<g >
<title>rndis_filter_receive (11,190,386 samples, 0.01%)</title><rect x="439.9" y="1669" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="442.94" y="1679.5" ></text>
</g>
<g >
<title>release_sock (8,538,211 samples, 0.01%)</title><rect x="531.5" y="1637" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="534.46" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1525" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="295.80" y="1535.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,422,144 samples, 0.01%)</title><rect x="944.6" y="1509" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="947.60" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="277" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="287.5" ></text>
</g>
<g >
<title>do_epoll_ctl (134,519,306 samples, 0.16%)</title><rect x="163.8" y="1605" width="2.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="166.85" y="1615.5" ></text>
</g>
<g >
<title>netvsc_poll (8,421,630 samples, 0.01%)</title><rect x="927.7" y="1573" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="930.67" y="1583.5" ></text>
</g>
<g >
<title>x64_sys_call (126,643,426 samples, 0.15%)</title><rect x="246.4" y="1637" width="1.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="249.41" y="1647.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (9,904,066,853 samples, 11.88%)</title><rect x="10.2" y="1957" width="140.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="13.25" y="1967.5" >EventLoopThread::..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (198,897,018 samples, 0.24%)</title><rect x="340.5" y="1717" width="2.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="343.52" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt;::empty (9,048,154 samples, 0.01%)</title><rect x="1180.3" y="1893" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1183.32" y="1903.5" ></text>
</g>
<g >
<title>__napi_poll (12,288,760 samples, 0.01%)</title><rect x="1035.7" y="1925" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1038.68" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (80,468,212 samples, 0.10%)</title><rect x="795.2" y="1717" width="1.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="798.16" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (10,035,076 samples, 0.01%)</title><rect x="758.3" y="1669" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="761.31" y="1679.5" ></text>
</g>
<g >
<title>handle_softirqs (9,582,050 samples, 0.01%)</title><rect x="561.3" y="1349" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="564.33" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (15,773,741 samples, 0.02%)</title><rect x="194.5" y="1749" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="197.46" y="1759.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (17,864,943 samples, 0.02%)</title><rect x="1040.6" y="1989" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1043.58" y="1999.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (61,415,015 samples, 0.07%)</title><rect x="830.9" y="1797" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="833.91" y="1807.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (8,987,545 samples, 0.01%)</title><rect x="429.3" y="1461" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="432.26" y="1471.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (38,295,507 samples, 0.05%)</title><rect x="1182.3" y="2021" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1185.28" y="2031.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,333,147 samples, 0.02%)</title><rect x="314.7" y="1557" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="317.74" y="1567.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (11,633,375 samples, 0.01%)</title><rect x="62.9" y="1493" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="65.86" y="1503.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (56,230,280 samples, 0.07%)</title><rect x="272.6" y="1397" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="275.55" y="1407.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (63,729,871 samples, 0.08%)</title><rect x="1162.9" y="1541" width="0.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1165.92" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (31,286,814 samples, 0.04%)</title><rect x="361.8" y="1621" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="364.84" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="373" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="383.5" ></text>
</g>
<g >
<title>__napi_poll (9,355,454 samples, 0.01%)</title><rect x="399.0" y="1493" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="401.97" y="1503.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (38,942,014 samples, 0.05%)</title><rect x="294.4" y="1909" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="297.43" y="1919.5" ></text>
</g>
<g >
<title>__ip_local_out (267,993,878 samples, 0.32%)</title><rect x="855.9" y="1493" width="3.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="858.87" y="1503.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (5,941,719,368 samples, 7.13%)</title><rect x="310.4" y="1829" width="84.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="313.43" y="1839.5" >HttpConn:..</text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (8,075,699 samples, 0.01%)</title><rect x="81.3" y="1717" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="84.30" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (27,891,788 samples, 0.03%)</title><rect x="356.2" y="1701" width="0.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="359.16" y="1711.5" ></text>
</g>
<g >
<title>ip_list_rcv (11,548,850 samples, 0.01%)</title><rect x="688.1" y="1493" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="691.06" y="1503.5" ></text>
</g>
<g >
<title>ip_finish_output (375,912,900 samples, 0.45%)</title><rect x="1006.7" y="1477" width="5.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1009.65" y="1487.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (25,061,613 samples, 0.03%)</title><rect x="838.6" y="1733" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="841.60" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (19,045,968 samples, 0.02%)</title><rect x="170.6" y="1749" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="173.60" y="1759.5" ></text>
</g>
<g >
<title>pick_next_task_fair (10,353,312 samples, 0.01%)</title><rect x="144.7" y="1749" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="147.72" y="1759.5" ></text>
</g>
<g >
<title>netvsc_poll (11,471,970 samples, 0.01%)</title><rect x="606.3" y="1477" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="609.26" y="1487.5" ></text>
</g>
<g >
<title>__napi_poll (21,030,750 samples, 0.03%)</title><rect x="674.3" y="1653" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="677.27" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (17,413,949 samples, 0.02%)</title><rect x="966.4" y="1669" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="969.44" y="1679.5" ></text>
</g>
<g >
<title>walk_component (53,707,461 samples, 0.06%)</title><rect x="69.8" y="1589" width="0.7" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="72.78" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::erase (36,356,296 samples, 0.04%)</title><rect x="491.2" y="1765" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="494.22" y="1775.5" ></text>
</g>
<g >
<title>selinux_file_permission (87,559,138 samples, 0.11%)</title><rect x="234.4" y="1669" width="1.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="237.35" y="1679.5" ></text>
</g>
<g >
<title>__virt_addr_valid (15,021,249 samples, 0.02%)</title><rect x="389.9" y="1557" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="392.93" y="1567.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (11,400,820 samples, 0.01%)</title><rect x="551.5" y="1781" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="554.52" y="1791.5" ></text>
</g>
<g >
<title>netvsc_poll (34,141,865 samples, 0.04%)</title><rect x="422.8" y="1317" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="425.79" y="1327.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1381" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="430.41" y="1391.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (32,636,496 samples, 0.04%)</title><rect x="972.8" y="1621" width="0.5" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="975.80" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (9,060,119 samples, 0.01%)</title><rect x="925.8" y="1541" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="928.84" y="1551.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1429" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="430.41" y="1439.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (13,047,709 samples, 0.02%)</title><rect x="1113.2" y="1653" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1116.24" y="1663.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (24,472,219 samples, 0.03%)</title><rect x="231.6" y="1749" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="234.61" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,437,251 samples, 0.01%)</title><rect x="69.2" y="1317" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="72.22" y="1327.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (23,304,737 samples, 0.03%)</title><rect x="907.1" y="1685" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="910.06" y="1695.5" ></text>
</g>
<g >
<title>__napi_poll (26,300,796 samples, 0.03%)</title><rect x="798.1" y="1653" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="801.07" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1685" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1695.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,140,667 samples, 0.01%)</title><rect x="1071.8" y="1717" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1074.79" y="1727.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (120,889,558 samples, 0.15%)</title><rect x="143.4" y="1797" width="1.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="146.37" y="1807.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (122,578,979 samples, 0.15%)</title><rect x="402.3" y="1765" width="1.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="405.31" y="1775.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,277,371 samples, 0.01%)</title><rect x="1172.9" y="1589" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1175.90" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::_M_erase_at_end (35,537,327 samples, 0.04%)</title><rect x="149.7" y="1909" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="152.71" y="1919.5" ></text>
</g>
<g >
<title>irq_exit_rcu (46,837,187 samples, 0.06%)</title><rect x="1027.4" y="1701" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1030.36" y="1711.5" ></text>
</g>
<g >
<title>handle_softirqs (7,751,435 samples, 0.01%)</title><rect x="754.0" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="757.04" y="1567.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (7,151,242 samples, 0.01%)</title><rect x="584.5" y="1461" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="587.48" y="1471.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (160,018,228 samples, 0.19%)</title><rect x="656.9" y="1605" width="2.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="659.89" y="1615.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,160,300 samples, 0.01%)</title><rect x="33.3" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="36.32" y="1647.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,589,037 samples, 0.01%)</title><rect x="225.1" y="1717" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="228.10" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equal_to_iter (9,749,889 samples, 0.01%)</title><rect x="767.7" y="1765" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="770.68" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (9,455,957 samples, 0.01%)</title><rect x="649.4" y="1749" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="652.37" y="1759.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8,028,104 samples, 0.01%)</title><rect x="406.2" y="1765" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="409.22" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1093" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1989" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1999.5" ></text>
</g>
<g >
<title>malloc (102,579,277 samples, 0.12%)</title><rect x="454.2" y="2053" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="457.15" y="2063.5" ></text>
</g>
<g >
<title>HttpResponse::Clear (12,009,608 samples, 0.01%)</title><rect x="491.9" y="1781" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="494.90" y="1791.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10,505,841 samples, 0.01%)</title><rect x="759.8" y="1749" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="762.83" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (11,454,174 samples, 0.01%)</title><rect x="1130.6" y="1589" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1133.60" y="1599.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (17,231,670 samples, 0.02%)</title><rect x="549.5" y="1685" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="552.51" y="1695.5" ></text>
</g>
<g >
<title>__secure_computing (17,401,978 samples, 0.02%)</title><rect x="85.1" y="1733" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="88.11" y="1743.5" ></text>
</g>
<g >
<title>netvsc_xmit (145,910,845 samples, 0.18%)</title><rect x="126.6" y="1365" width="2.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="129.61" y="1375.5" ></text>
</g>
<g >
<title>netvsc_poll (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1317" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="430.41" y="1327.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (2,824,972,105 samples, 3.39%)</title><rect x="537.5" y="1845" width="40.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="540.48" y="1855.5" >std..</text>
</g>
<g >
<title>netvsc_send (98,241,398 samples, 0.12%)</title><rect x="863.3" y="1349" width="1.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="866.29" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (40,333,537 samples, 0.05%)</title><rect x="765.6" y="1717" width="0.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="768.64" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (10,480,665 samples, 0.01%)</title><rect x="733.4" y="1701" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="736.43" y="1711.5" ></text>
</g>
<g >
<title>sock_write_iter (1,373,043,824 samples, 1.65%)</title><rect x="555.6" y="1669" width="19.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="558.58" y="1679.5" ></text>
</g>
<g >
<title>napi_complete_done (7,826,567 samples, 0.01%)</title><rect x="752.9" y="1541" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="755.91" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1509" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="925.16" y="1519.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (9,838,472 samples, 0.01%)</title><rect x="609.8" y="1717" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="612.80" y="1727.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (12,322,232 samples, 0.01%)</title><rect x="231.7" y="1557" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="234.71" y="1567.5" ></text>
</g>
<g >
<title>handle_softirqs (31,384,078 samples, 0.04%)</title><rect x="442.9" y="1669" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="445.95" y="1679.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (213,843,467 samples, 0.26%)</title><rect x="388.4" y="1637" width="3.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="391.45" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1317" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1327.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (32,237,204 samples, 0.04%)</title><rect x="27.2" y="1765" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="30.16" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (126,937,305 samples, 0.15%)</title><rect x="250.8" y="1749" width="1.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="253.85" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (9,317,524 samples, 0.01%)</title><rect x="758.9" y="1749" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="761.85" y="1759.5" ></text>
</g>
<g >
<title>netvsc_poll (10,042,044 samples, 0.01%)</title><rect x="918.0" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="921.03" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (9,088,650 samples, 0.01%)</title><rect x="739.1" y="1925" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="742.11" y="1935.5" ></text>
</g>
<g >
<title>__errno_location (7,878,816 samples, 0.01%)</title><rect x="524.2" y="1813" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="527.22" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1589" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="295.80" y="1599.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (28,265,507 samples, 0.03%)</title><rect x="1016.8" y="1573" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1019.77" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::cbegin (7,468,710 samples, 0.01%)</title><rect x="793.6" y="1749" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="796.60" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (17,804,995 samples, 0.02%)</title><rect x="629.9" y="1749" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="632.90" y="1759.5" ></text>
</g>
<g >
<title>netvsc_poll (11,400,420 samples, 0.01%)</title><rect x="731.5" y="1685" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="734.52" y="1695.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (14,471,262 samples, 0.02%)</title><rect x="550.9" y="1685" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="553.86" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (15,916,302 samples, 0.02%)</title><rect x="146.4" y="1893" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="149.41" y="1903.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,661,320 samples, 0.01%)</title><rect x="178.2" y="1573" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="181.23" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (203,163,387 samples, 0.24%)</title><rect x="754.4" y="1621" width="2.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="757.40" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1685" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1695.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (26,330,203 samples, 0.03%)</title><rect x="473.9" y="1765" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="476.88" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1333" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1343.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (15,669,777 samples, 0.02%)</title><rect x="141.5" y="1605" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="144.53" y="1615.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,030,291 samples, 0.01%)</title><rect x="246.0" y="1589" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="248.98" y="1599.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (319,020,885 samples, 0.38%)</title><rect x="106.7" y="1797" width="4.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="109.71" y="1807.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (14,012,890 samples, 0.02%)</title><rect x="524.7" y="1749" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="527.70" y="1759.5" ></text>
</g>
<g >
<title>netvsc_poll (15,545,057 samples, 0.02%)</title><rect x="65.7" y="1493" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="68.72" y="1503.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (46,837,187 samples, 0.06%)</title><rect x="1027.4" y="1685" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1030.36" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1861" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1429" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1439.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,073,398 samples, 0.01%)</title><rect x="777.9" y="1717" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="780.94" y="1727.5" ></text>
</g>
<g >
<title>__napi_poll (16,433,416 samples, 0.02%)</title><rect x="893.7" y="1941" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="896.68" y="1951.5" ></text>
</g>
<g >
<title>handle_softirqs (7,733,348 samples, 0.01%)</title><rect x="655.1" y="1541" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="658.08" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="421" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="431.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,400,562 samples, 0.01%)</title><rect x="280.0" y="1445" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="282.98" y="1455.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::find (95,568,758 samples, 0.11%)</title><rect x="883.1" y="1909" width="1.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="886.12" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (9,043,579 samples, 0.01%)</title><rect x="141.6" y="1541" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="144.61" y="1551.5" ></text>
</g>
<g >
<title>handle_softirqs (12,730,377 samples, 0.02%)</title><rect x="752.9" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="755.91" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="325" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;char*&gt; (119,905,770 samples, 0.14%)</title><rect x="961.6" y="1781" width="1.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="964.61" y="1791.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (16,340,937 samples, 0.02%)</title><rect x="919.0" y="1701" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="922.04" y="1711.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (26,752,942 samples, 0.03%)</title><rect x="1181.4" y="1829" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1184.38" y="1839.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,203,203 samples, 0.01%)</title><rect x="880.7" y="1493" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="883.73" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (12,819,711 samples, 0.02%)</title><rect x="824.9" y="1621" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="827.95" y="1631.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (13,542,937 samples, 0.02%)</title><rect x="693.9" y="1701" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="696.85" y="1711.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (30,431,984 samples, 0.04%)</title><rect x="294.6" y="1861" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="297.55" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (32,778,479 samples, 0.04%)</title><rect x="699.1" y="1701" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="702.10" y="1711.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (16,594,723 samples, 0.02%)</title><rect x="462.9" y="1573" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="465.94" y="1583.5" ></text>
</g>
<g >
<title>check_preemption_disabled (7,429,937 samples, 0.01%)</title><rect x="210.8" y="1669" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="213.85" y="1679.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,535,305 samples, 0.01%)</title><rect x="744.8" y="2021" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="747.77" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (10,503,795 samples, 0.01%)</title><rect x="440.3" y="1621" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="443.28" y="1631.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1557" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="782.08" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1733" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="405" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::empty (14,903,601 samples, 0.02%)</title><rect x="1136.2" y="1765" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1139.16" y="1775.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::allocate (15,073,245 samples, 0.02%)</title><rect x="173.6" y="1685" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="176.55" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (14,786,339 samples, 0.02%)</title><rect x="465.9" y="1733" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="468.93" y="1743.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (94,898,982 samples, 0.11%)</title><rect x="133.3" y="1605" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="136.27" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (7,574,627 samples, 0.01%)</title><rect x="407.5" y="1669" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="410.52" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1301" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1311.5" ></text>
</g>
<g >
<title>net_rx_action (12,432,807 samples, 0.01%)</title><rect x="995.0" y="1717" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="997.96" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (7,354,031 samples, 0.01%)</title><rect x="748.0" y="1973" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="751.02" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (19,252,417 samples, 0.02%)</title><rect x="995.2" y="1797" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="998.16" y="1807.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (7,284,516 samples, 0.01%)</title><rect x="20.1" y="1749" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="23.11" y="1759.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (12,432,807 samples, 0.01%)</title><rect x="995.0" y="1781" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="997.96" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (5,884,466,108 samples, 7.06%)</title><rect x="160.1" y="1861" width="83.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="163.11" y="1871.5" >std::__in..</text>
</g>
<g >
<title>netif_receive_skb_list_internal (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1557" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1178.57" y="1567.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (16,735,751 samples, 0.02%)</title><rect x="626.3" y="1701" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="629.32" y="1711.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,433,339 samples, 0.01%)</title><rect x="538.8" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="541.77" y="1631.5" ></text>
</g>
<g >
<title>selinux_socket_sendmsg (23,350,258 samples, 0.03%)</title><rect x="574.6" y="1637" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="577.63" y="1647.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (12,067,199 samples, 0.01%)</title><rect x="498.2" y="1653" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="501.17" y="1663.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (14,255,933 samples, 0.02%)</title><rect x="244.8" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="247.84" y="1663.5" ></text>
</g>
<g >
<title>operator delete (9,527,908 samples, 0.01%)</title><rect x="695.5" y="1669" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="698.45" y="1679.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (18,130,534 samples, 0.02%)</title><rect x="658.8" y="1557" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="661.76" y="1567.5" ></text>
</g>
<g >
<title>do_epoll_wait (434,508,557 samples, 0.52%)</title><rect x="579.0" y="1829" width="6.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="582.03" y="1839.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,789,029 samples, 0.01%)</title><rect x="1002.6" y="1525" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1005.63" y="1535.5" ></text>
</g>
<g >
<title>__list_add_valid_or_report (12,550,573 samples, 0.02%)</title><rect x="901.3" y="1589" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="904.30" y="1599.5" ></text>
</g>
<g >
<title>x64_sys_call (1,539,977,049 samples, 1.85%)</title><rect x="554.2" y="1765" width="21.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="557.22" y="1775.5" >x..</text>
</g>
<g >
<title>HttpConn::HandleRead (4,912,766,156 samples, 5.90%)</title><rect x="12.2" y="1813" width="69.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="15.21" y="1823.5" >HttpCon..</text>
</g>
<g >
<title>irq_exit_rcu (8,364,083 samples, 0.01%)</title><rect x="1047.1" y="1557" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1050.12" y="1567.5" ></text>
</g>
<g >
<title>do_epoll_ctl (98,141,781 samples, 0.12%)</title><rect x="981.8" y="1605" width="1.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="984.78" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1877" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1887.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,340,124 samples, 0.01%)</title><rect x="577.5" y="1861" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="580.48" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (16,509,995 samples, 0.02%)</title><rect x="503.3" y="1589" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="506.29" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="85" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (10,273,263 samples, 0.01%)</title><rect x="79.9" y="1797" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="82.88" y="1807.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+ (10,798,877 samples, 0.01%)</title><rect x="474.7" y="1765" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="477.67" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,624,871,120 samples, 1.95%)</title><rect x="553.1" y="1797" width="23.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="556.13" y="1807.5" >e..</text>
</g>
<g >
<title>net_rx_action (8,364,083 samples, 0.01%)</title><rect x="1047.1" y="1509" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1050.12" y="1519.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (10,816,866 samples, 0.01%)</title><rect x="448.9" y="53" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="451.93" y="63.5" ></text>
</g>
<g >
<title>schedule (79,563,560 samples, 0.10%)</title><rect x="880.1" y="1781" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="883.06" y="1791.5" ></text>
</g>
<g >
<title>netvsc_xmit (138,951,401 samples, 0.17%)</title><rect x="1009.4" y="1365" width="2.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1012.42" y="1375.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (135,301,644 samples, 0.16%)</title><rect x="839.4" y="1749" width="1.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="842.41" y="1759.5" ></text>
</g>
<g >
<title>___slab_alloc (11,198,812 samples, 0.01%)</title><rect x="723.9" y="1525" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="726.89" y="1535.5" ></text>
</g>
<g >
<title>tcp_rcv_established (9,061,641 samples, 0.01%)</title><rect x="503.3" y="1445" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="506.32" y="1455.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (14,071,440 samples, 0.02%)</title><rect x="1082.5" y="1685" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1085.54" y="1695.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (83,705,316 samples, 0.10%)</title><rect x="826.7" y="1621" width="1.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="829.70" y="1631.5" ></text>
</g>
<g >
<title>[web-server] (19,340,069 samples, 0.02%)</title><rect x="618.4" y="1765" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="621.35" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="757" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="767.5" ></text>
</g>
<g >
<title>net_rx_action (14,773,367 samples, 0.02%)</title><rect x="944.6" y="1621" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="947.57" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,378,860 samples, 0.01%)</title><rect x="141.2" y="1525" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="144.23" y="1535.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (32,293,848 samples, 0.04%)</title><rect x="87.0" y="1669" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="89.95" y="1679.5" ></text>
</g>
<g >
<title>__strlen_avx2 (12,190,978 samples, 0.01%)</title><rect x="955.8" y="1749" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="958.81" y="1759.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,104,921,819 samples, 1.33%)</title><rect x="979.1" y="1813" width="15.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="982.07" y="1823.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (10,236,590 samples, 0.01%)</title><rect x="359.8" y="1717" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="362.84" y="1727.5" ></text>
</g>
<g >
<title>tcp_send_mss (18,569,076 samples, 0.02%)</title><rect x="281.3" y="1605" width="0.2" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="284.27" y="1615.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (10,174,602 samples, 0.01%)</title><rect x="885.6" y="1925" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="888.64" y="1935.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,695,179 samples, 0.01%)</title><rect x="261.0" y="1701" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="263.97" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (35,098,319 samples, 0.04%)</title><rect x="145.8" y="1893" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="148.78" y="1903.5" ></text>
</g>
<g >
<title>__napi_poll (9,446,445 samples, 0.01%)</title><rect x="733.4" y="1685" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="736.45" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (9,071,461 samples, 0.01%)</title><rect x="224.6" y="1781" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="227.58" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (8,802,029 samples, 0.01%)</title><rect x="23.5" y="1653" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="26.54" y="1663.5" ></text>
</g>
<g >
<title>napi_complete_done (17,534,189 samples, 0.02%)</title><rect x="82.6" y="1669" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="85.63" y="1679.5" ></text>
</g>
<g >
<title>__secure_computing (9,386,698 samples, 0.01%)</title><rect x="62.7" y="1701" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="65.72" y="1711.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::end (7,928,012 samples, 0.01%)</title><rect x="295.4" y="1909" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="298.37" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (12,892,864 samples, 0.02%)</title><rect x="422.8" y="1285" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="425.82" y="1295.5" ></text>
</g>
<g >
<title>__seccomp_filter (9,104,056 samples, 0.01%)</title><rect x="246.1" y="1589" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="249.13" y="1599.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,268,113 samples, 0.01%)</title><rect x="336.7" y="1749" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="339.67" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7,151,242 samples, 0.01%)</title><rect x="584.5" y="1445" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="587.48" y="1455.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (81,796,401 samples, 0.10%)</title><rect x="625.0" y="1685" width="1.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="627.97" y="1695.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8,373,216 samples, 0.01%)</title><rect x="748.7" y="2021" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="751.69" y="2031.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (7,342,805 samples, 0.01%)</title><rect x="318.4" y="1589" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="321.38" y="1599.5" ></text>
</g>
<g >
<title>napi_gro_receive (12,180,482 samples, 0.01%)</title><rect x="141.2" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="144.21" y="1647.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,906,809 samples, 0.01%)</title><rect x="703.6" y="1717" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="706.63" y="1727.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (21,668,464 samples, 0.03%)</title><rect x="962.4" y="1637" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="965.35" y="1647.5" ></text>
</g>
<g >
<title>getname_flags (198,954,398 samples, 0.24%)</title><rect x="653.3" y="1653" width="2.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="656.33" y="1663.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,506,648 samples, 0.01%)</title><rect x="929.0" y="1685" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="932.04" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (7,968,086 samples, 0.01%)</title><rect x="1167.1" y="1525" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1170.05" y="1535.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (19,690,420 samples, 0.02%)</title><rect x="259.7" y="1781" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="262.66" y="1791.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (14,180,220 samples, 0.02%)</title><rect x="427.3" y="1445" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="430.33" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1669" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1679.5" ></text>
</g>
<g >
<title>nft_counter_eval (18,361,148 samples, 0.02%)</title><rect x="1153.9" y="1429" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1156.94" y="1439.5" ></text>
</g>
<g >
<title>release_sock (19,066,394 samples, 0.02%)</title><rect x="825.2" y="1637" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="828.15" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (9,242,440 samples, 0.01%)</title><rect x="960.7" y="1797" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="963.70" y="1807.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,400,562 samples, 0.01%)</title><rect x="280.0" y="1429" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="282.98" y="1439.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (11,121,246 samples, 0.01%)</title><rect x="398.9" y="1589" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="401.95" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (26,416,725 samples, 0.03%)</title><rect x="19.6" y="1733" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="22.62" y="1743.5" ></text>
</g>
<g >
<title>std::function&lt;void  (342,379,360 samples, 0.41%)</title><rect x="538.4" y="1765" width="4.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="541.36" y="1775.5" ></text>
</g>
<g >
<title>x64_sys_call (9,584,008 samples, 0.01%)</title><rect x="952.4" y="1733" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="955.42" y="1743.5" ></text>
</g>
<g >
<title>__check_object_size (62,538,788 samples, 0.08%)</title><rect x="508.6" y="1605" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="511.56" y="1615.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc_cs (7,377,226 samples, 0.01%)</title><rect x="1013.8" y="1557" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1016.80" y="1567.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (9,732,093 samples, 0.01%)</title><rect x="368.6" y="1733" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="371.57" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (10,436,407 samples, 0.01%)</title><rect x="584.4" y="1589" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="587.43" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (5,965,689,069 samples, 7.16%)</title><rect x="310.2" y="1877" width="84.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="313.19" y="1887.5" >std::_Fun..</text>
</g>
<g >
<title>ip_sublist_rcv (29,826,716 samples, 0.04%)</title><rect x="144.2" y="1541" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="147.19" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (31,179,782 samples, 0.04%)</title><rect x="983.5" y="1669" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="986.52" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,388,478 samples, 0.01%)</title><rect x="880.5" y="1589" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="883.53" y="1599.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,860,791 samples, 0.01%)</title><rect x="804.3" y="1573" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="807.26" y="1583.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (13,243,813 samples, 0.02%)</title><rect x="581.6" y="1781" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="584.62" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="181" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="191.5" ></text>
</g>
<g >
<title>selinux_socket_sendmsg (7,883,947 samples, 0.01%)</title><rect x="1166.6" y="1653" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1169.58" y="1663.5" ></text>
</g>
<g >
<title>__seccomp_filter (13,292,246 samples, 0.02%)</title><rect x="63.2" y="1669" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="66.20" y="1679.5" ></text>
</g>
<g >
<title>ep_poll_callback (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1205" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="928.84" y="1215.5" ></text>
</g>
<g >
<title>nf_ct_get_tuple (9,066,913 samples, 0.01%)</title><rect x="122.1" y="1429" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="125.11" y="1439.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,160,263 samples, 0.01%)</title><rect x="1040.6" y="1893" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1043.61" y="1903.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (19,877,119 samples, 0.02%)</title><rect x="220.9" y="1749" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="223.90" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (8,967,249 samples, 0.01%)</title><rect x="1054.0" y="1685" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1056.97" y="1695.5" ></text>
</g>
<g >
<title>read (1,029,218,209 samples, 1.24%)</title><rect x="82.2" y="1813" width="14.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="85.18" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (30,240,635 samples, 0.04%)</title><rect x="872.5" y="1797" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="875.45" y="1807.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,333,147 samples, 0.02%)</title><rect x="314.7" y="1573" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="317.74" y="1583.5" ></text>
</g>
<g >
<title>__napi_poll (7,343,560 samples, 0.01%)</title><rect x="413.9" y="1589" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="416.89" y="1599.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,457,169 samples, 0.01%)</title><rect x="784.4" y="1669" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="787.42" y="1679.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (15,219,453 samples, 0.02%)</title><rect x="239.5" y="1605" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="242.55" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (8,287,569 samples, 0.01%)</title><rect x="894.4" y="2053" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="897.35" y="2063.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,115,937 samples, 0.01%)</title><rect x="859.1" y="1397" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="862.06" y="1407.5" ></text>
</g>
<g >
<title>nf_hook_slow (248,235,354 samples, 0.30%)</title><rect x="856.0" y="1477" width="3.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="859.02" y="1487.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (26,595,673 samples, 0.03%)</title><rect x="100.7" y="1589" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="103.72" y="1599.5" ></text>
</g>
<g >
<title>tcp_tso_segs (8,750,342 samples, 0.01%)</title><rect x="722.9" y="1557" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="725.94" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1077" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1445" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (11,659,385 samples, 0.01%)</title><rect x="1179.3" y="1877" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1182.34" y="1887.5" ></text>
</g>
<g >
<title>ip_list_rcv (10,770,830 samples, 0.01%)</title><rect x="880.7" y="1525" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="883.71" y="1535.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (10,737,171 samples, 0.01%)</title><rect x="19.8" y="1685" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="22.80" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1077" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_M_next (27,700,287 samples, 0.03%)</title><rect x="402.7" y="1717" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="405.66" y="1727.5" ></text>
</g>
<g >
<title>__check_object_size (30,116,679 samples, 0.04%)</title><rect x="532.8" y="1573" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="535.85" y="1583.5" ></text>
</g>
<g >
<title>netvsc_xmit (156,482,226 samples, 0.19%)</title><rect x="274.7" y="1365" width="2.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="277.69" y="1375.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (11,178,116 samples, 0.01%)</title><rect x="662.3" y="1765" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="665.33" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1653" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,365,698 samples, 0.01%)</title><rect x="443.2" y="1541" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="446.18" y="1551.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1,239,493,053 samples, 1.49%)</title><rect x="415.2" y="1621" width="17.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="418.18" y="1631.5" ></text>
</g>
<g >
<title>netvsc_poll (14,751,439 samples, 0.02%)</title><rect x="89.8" y="1509" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="92.76" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (484,438,257 samples, 0.58%)</title><rect x="138.6" y="1877" width="6.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="141.56" y="1887.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,656,876 samples, 0.01%)</title><rect x="772.4" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="775.38" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (60,825,115 samples, 0.07%)</title><rect x="181.7" y="1685" width="0.9" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="184.71" y="1695.5" ></text>
</g>
<g >
<title>Epoller::ModFd (9,690,925 samples, 0.01%)</title><rect x="459.7" y="1701" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="462.67" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (37,172,959 samples, 0.04%)</title><rect x="902.7" y="1669" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="905.67" y="1679.5" ></text>
</g>
<g >
<title>handle_softirqs (8,925,385 samples, 0.01%)</title><rect x="1066.2" y="1621" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1069.17" y="1631.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (17,864,943 samples, 0.02%)</title><rect x="1040.6" y="2021" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1043.58" y="2031.5" ></text>
</g>
<g >
<title>check_stack_object (8,917,539 samples, 0.01%)</title><rect x="1097.6" y="1605" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1100.57" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="805" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="815.5" ></text>
</g>
<g >
<title>napi_gro_receive (11,365,698 samples, 0.01%)</title><rect x="443.2" y="1573" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="446.18" y="1583.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (16,655,467 samples, 0.02%)</title><rect x="652.0" y="1685" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="654.98" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (12,940,236 samples, 0.02%)</title><rect x="1079.2" y="1765" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1082.21" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (8,042,642 samples, 0.01%)</title><rect x="60.6" y="1477" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="63.57" y="1487.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (11,929,614 samples, 0.01%)</title><rect x="402.1" y="1685" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="405.08" y="1695.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (7,208,695 samples, 0.01%)</title><rect x="52.3" y="1701" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="55.26" y="1711.5" ></text>
</g>
<g >
<title>netvsc_xmit (138,609,644 samples, 0.17%)</title><rect x="862.8" y="1365" width="1.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="865.75" y="1375.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,313,760 samples, 0.01%)</title><rect x="972.6" y="1573" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="975.63" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (16,851,126 samples, 0.02%)</title><rect x="1034.9" y="2021" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1037.90" y="2031.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (99,119,547 samples, 0.12%)</title><rect x="495.3" y="1765" width="1.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="498.27" y="1775.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,057,869 samples, 0.01%)</title><rect x="485.0" y="1717" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="487.97" y="1727.5" ></text>
</g>
<g >
<title>netvsc_poll (12,432,807 samples, 0.01%)</title><rect x="995.0" y="1685" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="997.96" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (14,808,734 samples, 0.02%)</title><rect x="162.0" y="1557" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="165.04" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (12,833,276 samples, 0.02%)</title><rect x="316.0" y="1669" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="318.99" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (22,857,288 samples, 0.03%)</title><rect x="714.8" y="1285" width="0.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="717.84" y="1295.5" ></text>
</g>
<g >
<title>[web-server] (11,790,616 samples, 0.01%)</title><rect x="483.6" y="1749" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="486.61" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (13,530,929 samples, 0.02%)</title><rect x="1139.1" y="1781" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1142.06" y="1791.5" ></text>
</g>
<g >
<title>std::make_move_iterator&lt;char*&gt; (8,992,490 samples, 0.01%)</title><rect x="1086.0" y="1701" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1088.99" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (10,863,375 samples, 0.01%)</title><rect x="89.8" y="1461" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="92.81" y="1471.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,160,300 samples, 0.01%)</title><rect x="33.3" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="36.32" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1413" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1423.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,471,970 samples, 0.01%)</title><rect x="606.3" y="1445" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="609.26" y="1455.5" ></text>
</g>
<g >
<title>__secure_computing (9,378,739 samples, 0.01%)</title><rect x="397.3" y="1605" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="400.27" y="1615.5" ></text>
</g>
<g >
<title>__napi_poll (7,342,622 samples, 0.01%)</title><rect x="855.1" y="1445" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="858.11" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="901" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="911.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7,757,952 samples, 0.01%)</title><rect x="944.6" y="1413" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="947.60" y="1423.5" ></text>
</g>
<g >
<title>operator delete (7,465,164 samples, 0.01%)</title><rect x="73.6" y="1765" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="76.59" y="1775.5" ></text>
</g>
<g >
<title>avc_lookup (8,838,382 samples, 0.01%)</title><rect x="871.8" y="1573" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="874.79" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7,541,502 samples, 0.01%)</title><rect x="1183.3" y="2021" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1186.34" y="2031.5" ></text>
</g>
<g >
<title>epoll_ctl (352,147,142 samples, 0.42%)</title><rect x="459.9" y="1685" width="5.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="462.93" y="1695.5" ></text>
</g>
<g >
<title>do_epoll_ctl (174,078,176 samples, 0.21%)</title><rect x="461.4" y="1605" width="2.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="464.36" y="1615.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (9,857,769,951 samples, 11.83%)</title><rect x="1042.3" y="1973" width="139.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1045.33" y="1983.5" >std::__invoke_imp..</text>
</g>
<g >
<title>__local_bh_enable_ip (8,876,143 samples, 0.01%)</title><rect x="121.8" y="1397" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="124.82" y="1407.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (11,066,933 samples, 0.01%)</title><rect x="980.2" y="1429" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="983.18" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node_ptr (44,108,988 samples, 0.05%)</title><rect x="251.6" y="1701" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="254.56" y="1711.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (19,290,601 samples, 0.02%)</title><rect x="382.7" y="1749" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="385.68" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1509" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1519.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (23,156,776 samples, 0.03%)</title><rect x="740.1" y="1829" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="743.11" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::push_back (16,846,882 samples, 0.02%)</title><rect x="738.3" y="1909" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="741.31" y="1919.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,640,164 samples, 0.01%)</title><rect x="1129.4" y="1589" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1132.35" y="1599.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (34,330,379 samples, 0.04%)</title><rect x="798.0" y="1749" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="801.01" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+ (8,849,369 samples, 0.01%)</title><rect x="767.6" y="1765" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="770.56" y="1775.5" ></text>
</g>
<g >
<title>schedule (99,679,880 samples, 0.12%)</title><rect x="143.7" y="1781" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.67" y="1791.5" ></text>
</g>
<g >
<title>ip_queue_xmit (764,425,784 samples, 0.92%)</title><rect x="709.7" y="1541" width="10.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="712.73" y="1551.5" ></text>
</g>
<g >
<title>__wake_up_common (7,896,714 samples, 0.01%)</title><rect x="144.3" y="1333" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="147.31" y="1343.5" ></text>
</g>
<g >
<title>[web-server] (12,648,298 samples, 0.02%)</title><rect x="931.3" y="1765" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="934.28" y="1775.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (303,021,086 samples, 0.36%)</title><rect x="190.0" y="1765" width="4.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="193.00" y="1775.5" ></text>
</g>
<g >
<title>kmalloc_reserve (45,997,261 samples, 0.06%)</title><rect x="1016.1" y="1573" width="0.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1019.11" y="1583.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (20,847,167 samples, 0.03%)</title><rect x="210.7" y="1717" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="213.68" y="1727.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (11,023,983 samples, 0.01%)</title><rect x="724.6" y="1557" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="727.59" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="351.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (154,254,873 samples, 0.19%)</title><rect x="862.5" y="1381" width="2.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="865.53" y="1391.5" ></text>
</g>
<g >
<title>vmbus_sendpacket (10,162,208 samples, 0.01%)</title><rect x="273.4" y="1301" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="276.40" y="1311.5" ></text>
</g>
<g >
<title>netvsc_poll (7,519,736 samples, 0.01%)</title><rect x="157.4" y="1925" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="160.42" y="1935.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (49,300,307 samples, 0.06%)</title><rect x="323.2" y="1653" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="326.22" y="1663.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,412,072 samples, 0.01%)</title><rect x="1077.1" y="1653" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1080.13" y="1663.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (18,433,165 samples, 0.02%)</title><rect x="869.8" y="1557" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="872.83" y="1567.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (7,993,913 samples, 0.01%)</title><rect x="1030.0" y="1877" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1033.04" y="1887.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (329,017,373 samples, 0.39%)</title><rect x="762.0" y="1749" width="4.7" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="765.03" y="1759.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1397" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="951.32" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1061" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="117" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="127.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1477" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1487.5" ></text>
</g>
<g >
<title>HttpConn::Close (9,275,627 samples, 0.01%)</title><rect x="466.2" y="1797" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="469.24" y="1807.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,330,791 samples, 0.01%)</title><rect x="478.3" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="481.26" y="1647.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (12,488,856 samples, 0.01%)</title><rect x="298.9" y="1925" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="301.86" y="1935.5" ></text>
</g>
<g >
<title>netvsc_poll (11,986,312 samples, 0.01%)</title><rect x="1066.0" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1069.00" y="1567.5" ></text>
</g>
<g >
<title>__memchr_avx2 (21,633,827 samples, 0.03%)</title><rect x="889.7" y="2053" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="892.69" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (9,013,688 samples, 0.01%)</title><rect x="372.4" y="1749" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="375.44" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (11,400,420 samples, 0.01%)</title><rect x="731.5" y="1717" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="734.52" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (12,745,033 samples, 0.02%)</title><rect x="249.5" y="1653" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="252.48" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (42,860,622 samples, 0.05%)</title><rect x="585.7" y="1877" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="588.68" y="1887.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,714,784 samples, 0.01%)</title><rect x="571.6" y="1429" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="574.57" y="1439.5" ></text>
</g>
<g >
<title>netvsc_poll (8,676,397 samples, 0.01%)</title><rect x="183.2" y="1557" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="186.20" y="1567.5" ></text>
</g>
<g >
<title>ip_queue_xmit (797,704,983 samples, 0.96%)</title><rect x="267.1" y="1541" width="11.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="270.12" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1013" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (16,151,072 samples, 0.02%)</title><rect x="588.2" y="1893" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="591.24" y="1903.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (20,576,318 samples, 0.02%)</title><rect x="452.1" y="2053" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="455.06" y="2063.5" ></text>
</g>
<g >
<title>__close (11,628,825 samples, 0.01%)</title><rect x="905.0" y="1573" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="908.01" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;int&gt;, true&gt;::_M_cget (7,717,957 samples, 0.01%)</title><rect x="738.1" y="1861" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="741.12" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,066,616 samples, 0.01%)</title><rect x="442.9" y="1589" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="445.95" y="1599.5" ></text>
</g>
<g >
<title>netvsc_poll (9,446,445 samples, 0.01%)</title><rect x="733.4" y="1669" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="736.45" y="1679.5" ></text>
</g>
<g >
<title>__do_softirq (54,266,523 samples, 0.07%)</title><rect x="1007.4" y="1381" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1010.37" y="1391.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (320,911,439 samples, 0.39%)</title><rect x="631.4" y="1749" width="4.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="634.35" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (49,136,554 samples, 0.06%)</title><rect x="248.3" y="1669" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="251.29" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,339,219 samples, 0.01%)</title><rect x="581.7" y="1605" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="584.70" y="1615.5" ></text>
</g>
<g >
<title>lookup_fast (20,095,384 samples, 0.02%)</title><rect x="367.6" y="1573" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="370.55" y="1583.5" ></text>
</g>
<g >
<title>handle_softirqs (9,758,984 samples, 0.01%)</title><rect x="1095.0" y="1541" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1097.97" y="1551.5" ></text>
</g>
<g >
<title>operator delete (11,327,940 samples, 0.01%)</title><rect x="958.2" y="1781" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="961.22" y="1791.5" ></text>
</g>
<g >
<title>irq_exit_rcu (18,504,533 samples, 0.02%)</title><rect x="672.3" y="1765" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="675.32" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (13,651,665 samples, 0.02%)</title><rect x="738.0" y="1877" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="741.03" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1589" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (12,474,870 samples, 0.01%)</title><rect x="197.5" y="1765" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="200.46" y="1775.5" ></text>
</g>
<g >
<title>tcp_skb_entail (9,551,115 samples, 0.01%)</title><rect x="869.5" y="1605" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="872.45" y="1615.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (14,474,449 samples, 0.02%)</title><rect x="624.7" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="627.66" y="1663.5" ></text>
</g>
<g >
<title>lock_timer_base (11,064,177 samples, 0.01%)</title><rect x="280.3" y="1477" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="283.32" y="1487.5" ></text>
</g>
<g >
<title>ip_list_rcv (15,290,330 samples, 0.02%)</title><rect x="650.2" y="1573" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="653.16" y="1583.5" ></text>
</g>
<g >
<title>validate_xmit_skb (9,244,748 samples, 0.01%)</title><rect x="568.8" y="1381" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="571.84" y="1391.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::allocate (22,918,236 samples, 0.03%)</title><rect x="615.1" y="1685" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="618.08" y="1695.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, 0ul&gt; (18,170,863 samples, 0.02%)</title><rect x="616.1" y="1637" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="619.09" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1365" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1375.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (29,132,914 samples, 0.03%)</title><rect x="58.3" y="1653" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="61.30" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="421" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="431.5" ></text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (7,443,161 samples, 0.01%)</title><rect x="1020.1" y="1925" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1023.12" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,516,130 samples, 0.01%)</title><rect x="65.7" y="1461" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="68.74" y="1471.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,064,650 samples, 0.01%)</title><rect x="901.7" y="1365" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="904.71" y="1375.5" ></text>
</g>
<g >
<title>tcp_rcv_established (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1093" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="430.41" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_last_not_of (21,007,342 samples, 0.03%)</title><rect x="186.0" y="1765" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="188.99" y="1775.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (20,560,119 samples, 0.02%)</title><rect x="93.0" y="1605" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="96.03" y="1615.5" ></text>
</g>
<g >
<title>Channel::OnEvents (8,776,736,889 samples, 10.53%)</title><rect x="895.8" y="1925" width="124.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="898.82" y="1935.5" >Channel::OnEvents</text>
</g>
<g >
<title>netvsc_poll (8,105,077 samples, 0.01%)</title><rect x="539.7" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="542.70" y="1519.5" ></text>
</g>
<g >
<title>__napi_poll (54,266,523 samples, 0.07%)</title><rect x="1007.4" y="1333" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1010.37" y="1343.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (24,555,883 samples, 0.03%)</title><rect x="650.1" y="1733" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="653.14" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (15,547,843 samples, 0.02%)</title><rect x="706.3" y="1605" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="709.34" y="1615.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (22,996,079 samples, 0.03%)</title><rect x="355.4" y="1653" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="358.39" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (9,494,087 samples, 0.01%)</title><rect x="1060.5" y="1765" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1063.45" y="1775.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1029" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="430.41" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (10,186,821 samples, 0.01%)</title><rect x="612.8" y="1701" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="615.81" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (49,519,350 samples, 0.06%)</title><rect x="501.7" y="1717" width="0.7" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="504.74" y="1727.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (11,664,798 samples, 0.01%)</title><rect x="19.2" y="1717" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="22.20" y="1727.5" ></text>
</g>
<g >
<title>netvsc_poll (7,714,784 samples, 0.01%)</title><rect x="571.6" y="1349" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="574.57" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1845" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (43,007,060 samples, 0.05%)</title><rect x="124.6" y="1269" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="127.57" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="741" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (7,289,192 samples, 0.01%)</title><rect x="794.4" y="1749" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="797.43" y="1759.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (148,294,354 samples, 0.18%)</title><rect x="1009.3" y="1381" width="2.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1012.29" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1461" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1471.5" ></text>
</g>
<g >
<title>operator new (10,019,489 samples, 0.01%)</title><rect x="30.0" y="1717" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="32.97" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (13,527,822 samples, 0.02%)</title><rect x="1172.9" y="1637" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1175.87" y="1647.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (96,715,141 samples, 0.12%)</title><rect x="867.2" y="1541" width="1.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="870.19" y="1551.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (155,475,902 samples, 0.19%)</title><rect x="560.5" y="1461" width="2.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="563.49" y="1471.5" ></text>
</g>
<g >
<title>__napi_poll (10,060,443 samples, 0.01%)</title><rect x="234.8" y="1557" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="237.84" y="1567.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (12,288,760 samples, 0.01%)</title><rect x="1035.7" y="2005" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1038.68" y="2015.5" ></text>
</g>
<g >
<title>__x64_sys_writev (1,618,363,010 samples, 1.94%)</title><rect x="1144.8" y="1749" width="22.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1147.78" y="1759.5" >_..</text>
</g>
<g >
<title>_int_free (14,419,475 samples, 0.02%)</title><rect x="304.6" y="2053" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="307.60" y="2063.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (11,331,168 samples, 0.01%)</title><rect x="1057.1" y="1621" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1060.10" y="1631.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (27,603,109 samples, 0.03%)</title><rect x="110.6" y="1685" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="113.59" y="1695.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7,797,383 samples, 0.01%)</title><rect x="552.7" y="1541" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="555.73" y="1551.5" ></text>
</g>
<g >
<title>selinux_ip_postroute (32,320,448 samples, 0.04%)</title><rect x="129.4" y="1461" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="132.43" y="1471.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (80,846,409 samples, 0.10%)</title><rect x="992.3" y="1733" width="1.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="995.32" y="1743.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (10,614,695 samples, 0.01%)</title><rect x="1123.1" y="1605" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1126.12" y="1615.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (24,472,219 samples, 0.03%)</title><rect x="231.6" y="1733" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="234.61" y="1743.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (10,174,842 samples, 0.01%)</title><rect x="756.1" y="1589" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="759.07" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (9,470,470 samples, 0.01%)</title><rect x="598.4" y="2053" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="601.40" y="2063.5" ></text>
</g>
<g >
<title>rw_verify_area (137,091,327 samples, 0.16%)</title><rect x="528.6" y="1701" width="2.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="531.64" y="1711.5" ></text>
</g>
<g >
<title>vfs_writev (1,518,702,618 samples, 1.82%)</title><rect x="114.7" y="1717" width="21.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="117.72" y="1727.5" >v..</text>
</g>
<g >
<title>__napi_poll (9,249,553 samples, 0.01%)</title><rect x="1128.3" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1131.29" y="1583.5" ></text>
</g>
<g >
<title>release_sock (21,451,663 samples, 0.03%)</title><rect x="1147.1" y="1621" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1150.13" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (484,632,172 samples, 0.58%)</title><rect x="578.5" y="1893" width="6.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="581.51" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7,991,799 samples, 0.01%)</title><rect x="478.3" y="1493" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="481.28" y="1503.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1573" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="951.32" y="1583.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (195,314,525 samples, 0.23%)</title><rect x="653.3" y="1637" width="2.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="656.33" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1637" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1647.5" ></text>
</g>
<g >
<title>netvsc_poll (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1637" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="295.80" y="1647.5" ></text>
</g>
<g >
<title>EventLoop::IsInLoopThread (10,969,996 samples, 0.01%)</title><rect x="12.5" y="1765" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="15.47" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (24,526,355 samples, 0.03%)</title><rect x="23.3" y="1701" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.34" y="1711.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (14,976,414 samples, 0.02%)</title><rect x="670.8" y="1701" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="673.77" y="1711.5" ></text>
</g>
<g >
<title>napi_complete_done (9,002,017 samples, 0.01%)</title><rect x="1188.5" y="1909" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1191.51" y="1919.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,902,703 samples, 0.01%)</title><rect x="14.0" y="1445" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="17.03" y="1455.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (12,063,380 samples, 0.01%)</title><rect x="898.2" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="901.24" y="1663.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (339,549,402 samples, 0.41%)</title><rect x="613.1" y="1749" width="4.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="616.07" y="1759.5" ></text>
</g>
<g >
<title>handle_softirqs (9,304,849 samples, 0.01%)</title><rect x="100.6" y="1525" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="103.59" y="1535.5" ></text>
</g>
<g >
<title>rep_movs_alternative (38,229,884 samples, 0.05%)</title><rect x="853.0" y="1589" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="856.00" y="1599.5" ></text>
</g>
<g >
<title>sock_recvmsg (417,381,553 samples, 0.50%)</title><rect x="970.3" y="1685" width="6.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="973.34" y="1695.5" ></text>
</g>
<g >
<title>do_iter_write (1,535,724,743 samples, 1.84%)</title><rect x="1145.6" y="1701" width="21.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1148.64" y="1711.5" >d..</text>
</g>
<g >
<title>__strlen_avx2 (10,448,984 samples, 0.01%)</title><rect x="354.0" y="1749" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="356.98" y="1759.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (16,786,834 samples, 0.02%)</title><rect x="951.5" y="1557" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="954.52" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (8,482,788 samples, 0.01%)</title><rect x="619.5" y="1765" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="622.46" y="1775.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,197,834 samples, 0.01%)</title><rect x="725.4" y="1621" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="728.41" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1663.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (7,690,907 samples, 0.01%)</title><rect x="226.1" y="1781" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="229.12" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (451,806,690 samples, 0.54%)</title><rect x="1061.7" y="1749" width="6.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1064.71" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (12,433,339 samples, 0.01%)</title><rect x="538.8" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="541.77" y="1599.5" ></text>
</g>
<g >
<title>napi_complete_done (13,837,025 samples, 0.02%)</title><rect x="231.7" y="1621" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="234.69" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (20,210,064 samples, 0.02%)</title><rect x="1110.5" y="1797" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1113.52" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1749" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1759.5" ></text>
</g>
<g >
<title>__GI___pthread_self (7,946,823 samples, 0.01%)</title><rect x="161.3" y="1749" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="164.29" y="1759.5" ></text>
</g>
<g >
<title>selinux_file_permission (60,118,311 samples, 0.07%)</title><rect x="725.6" y="1653" width="0.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="728.63" y="1663.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (25,789,491 samples, 0.03%)</title><rect x="880.5" y="1733" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="883.51" y="1743.5" ></text>
</g>
<g >
<title>netvsc_poll (12,740,646 samples, 0.02%)</title><rect x="624.7" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="627.69" y="1567.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (61,508,319 samples, 0.07%)</title><rect x="532.8" y="1589" width="0.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="535.85" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="917" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="927.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,268,113 samples, 0.01%)</title><rect x="336.7" y="1717" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="339.67" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (31,368,717 samples, 0.04%)</title><rect x="285.0" y="1797" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="287.98" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1365" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (17,754,602 samples, 0.02%)</title><rect x="37.7" y="1765" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="40.67" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1989" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1999.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, char*, char*&gt; (20,062,362 samples, 0.02%)</title><rect x="644.3" y="1637" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="647.30" y="1647.5" ></text>
</g>
<g >
<title>handle_softirqs (16,439,327 samples, 0.02%)</title><rect x="702.5" y="1733" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="705.52" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (25,789,491 samples, 0.03%)</title><rect x="880.5" y="1717" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="883.51" y="1727.5" ></text>
</g>
<g >
<title>EventLoop::IsInLoopThread (12,899,206 samples, 0.02%)</title><rect x="1127.5" y="1765" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1130.54" y="1775.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (14,863,741 samples, 0.02%)</title><rect x="817.8" y="1749" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="820.84" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (16,433,416 samples, 0.02%)</title><rect x="893.7" y="1957" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="896.68" y="1967.5" ></text>
</g>
<g >
<title>path_init (26,920,179 samples, 0.03%)</title><rect x="70.5" y="1605" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="73.54" y="1615.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1621" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="469.26" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (24,929,040 samples, 0.03%)</title><rect x="991.3" y="1733" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="994.29" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1797" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="747.77" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (11,845,865 samples, 0.01%)</title><rect x="50.9" y="1765" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="53.85" y="1775.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (2,863,477,323 samples, 3.44%)</title><rect x="395.2" y="1845" width="40.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="398.17" y="1855.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (16,985,237 samples, 0.02%)</title><rect x="932.0" y="1765" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="934.98" y="1775.5" ></text>
</g>
<g >
<title>vfs_fstatat (522,238,207 samples, 0.63%)</title><rect x="1094.3" y="1669" width="7.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1097.26" y="1679.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (16,921,294 samples, 0.02%)</title><rect x="27.6" y="1765" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="30.61" y="1775.5" ></text>
</g>
<g >
<title>ip_list_rcv (12,892,864 samples, 0.02%)</title><rect x="422.8" y="1253" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="425.82" y="1263.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (14,090,172 samples, 0.02%)</title><rect x="200.0" y="1717" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="202.98" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (18,759,990 samples, 0.02%)</title><rect x="1027.5" y="1573" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1030.49" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1061" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1071.5" ></text>
</g>
<g >
<title>handle_softirqs (13,349,812 samples, 0.02%)</title><rect x="384.3" y="1621" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="387.33" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1621" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (16,586,168 samples, 0.02%)</title><rect x="429.8" y="1461" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="432.80" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1413" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1423.5" ></text>
</g>
<g >
<title>std::function&lt;void  (376,254,325 samples, 0.45%)</title><rect x="395.8" y="1765" width="5.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="398.82" y="1775.5" ></text>
</g>
<g >
<title>__secure_computing (11,699,887 samples, 0.01%)</title><rect x="312.8" y="1605" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="315.81" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (34,032,949 samples, 0.04%)</title><rect x="1155.6" y="1269" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1158.59" y="1279.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,086,044,300 samples, 1.30%)</title><rect x="244.0" y="1813" width="15.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="247.02" y="1823.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (5,567,515,775 samples, 6.68%)</title><rect x="458.3" y="1861" width="78.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="461.32" y="1871.5" >std::__in..</text>
</g>
<g >
<title>__seccomp_filter (14,832,617 samples, 0.02%)</title><rect x="99.2" y="1589" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="102.22" y="1599.5" ></text>
</g>
<g >
<title>nf_hook_slow (9,548,155 samples, 0.01%)</title><rect x="865.8" y="1493" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="868.81" y="1503.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1,083,847,966 samples, 1.30%)</title><rect x="265.9" y="1589" width="15.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="268.87" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (8,052,005 samples, 0.01%)</title><rect x="622.8" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="625.78" y="1599.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (12,757,239 samples, 0.02%)</title><rect x="439.9" y="1781" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="442.94" y="1791.5" ></text>
</g>
<g >
<title>netvsc_poll (10,060,443 samples, 0.01%)</title><rect x="234.8" y="1541" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="237.84" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (27,812,655 samples, 0.03%)</title><rect x="837.0" y="1669" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="840.04" y="1679.5" ></text>
</g>
<g >
<title>__napi_poll (52,067,552 samples, 0.06%)</title><rect x="1155.6" y="1333" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1158.56" y="1343.5" ></text>
</g>
<g >
<title>handle_softirqs (7,342,622 samples, 0.01%)</title><rect x="855.1" y="1477" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="858.11" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (14,878,351 samples, 0.02%)</title><rect x="652.0" y="1541" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="654.98" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2,933,457,984 samples, 3.52%)</title><rect x="978.5" y="1877" width="41.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="981.52" y="1887.5" >std..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (72,895,906 samples, 0.09%)</title><rect x="206.3" y="1717" width="1.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="209.34" y="1727.5" ></text>
</g>
<g >
<title>fill_pg_buf (9,444,745 samples, 0.01%)</title><rect x="1157.6" y="1365" width="0.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1160.56" y="1375.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (45,246,530 samples, 0.05%)</title><rect x="990.6" y="1733" width="0.7" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="993.65" y="1743.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (8,624,565 samples, 0.01%)</title><rect x="578.6" y="1845" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="581.63" y="1855.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (24,044,138 samples, 0.03%)</title><rect x="201.9" y="1669" width="0.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="204.92" y="1679.5" ></text>
</g>
<g >
<title>__virt_addr_valid (11,183,680 samples, 0.01%)</title><rect x="852.7" y="1589" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="855.73" y="1599.5" ></text>
</g>
<g >
<title>netif_skb_features (7,926,355 samples, 0.01%)</title><rect x="718.8" y="1365" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="721.76" y="1375.5" ></text>
</g>
<g >
<title>net_rx_action (8,792,498 samples, 0.01%)</title><rect x="1002.6" y="1461" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1005.64" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (476,885,374 samples, 0.57%)</title><rect x="768.9" y="1765" width="6.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="771.85" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (16,916,044 samples, 0.02%)</title><rect x="1024.1" y="1557" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1027.13" y="1567.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,714,840 samples, 0.02%)</title><rect x="803.0" y="1605" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="806.05" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (37,417,110 samples, 0.04%)</title><rect x="574.0" y="1573" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="576.97" y="1583.5" ></text>
</g>
<g >
<title>generic_permission (7,944,232 samples, 0.01%)</title><rect x="1099.2" y="1573" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1102.16" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1349" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="951.32" y="1359.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (35,481,125 samples, 0.04%)</title><rect x="791.3" y="1685" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="794.30" y="1695.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (74,888,462 samples, 0.09%)</title><rect x="764.2" y="1685" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="767.15" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (8,681,432 samples, 0.01%)</title><rect x="565.0" y="1157" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="568.04" y="1167.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (9,111,997 samples, 0.01%)</title><rect x="650.2" y="1541" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="653.20" y="1551.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (20,284,877 samples, 0.02%)</title><rect x="1113.2" y="1781" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1116.19" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::push_back (17,904,114 samples, 0.02%)</title><rect x="297.3" y="1909" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="300.33" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_established (8,199,381 samples, 0.01%)</title><rect x="1027.6" y="1429" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1030.59" y="1439.5" ></text>
</g>
<g >
<title>ip_local_deliver (9,559,190 samples, 0.01%)</title><rect x="60.5" y="1525" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="63.55" y="1535.5" ></text>
</g>
<g >
<title>netvsc_poll (10,536,701 samples, 0.01%)</title><rect x="412.0" y="1637" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="415.00" y="1647.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (30,255,273 samples, 0.04%)</title><rect x="440.1" y="1797" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="443.12" y="1807.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::deallocate (26,498,535 samples, 0.03%)</title><rect x="545.2" y="1685" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="548.25" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="357" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="367.5" ></text>
</g>
<g >
<title>__virt_addr_valid (18,267,419 samples, 0.02%)</title><rect x="947.9" y="1589" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="950.92" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,008,551 samples, 0.01%)</title><rect x="1008.0" y="1157" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1010.95" y="1167.5" ></text>
</g>
<g >
<title>ep_poll_callback (9,132,117 samples, 0.01%)</title><rect x="1024.2" y="1397" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1027.24" y="1407.5" ></text>
</g>
<g >
<title>napi_complete_done (16,916,044 samples, 0.02%)</title><rect x="1024.1" y="1669" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1027.13" y="1679.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (13,781,820 samples, 0.02%)</title><rect x="712.0" y="1397" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="715.01" y="1407.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (30,512,604 samples, 0.04%)</title><rect x="564.9" y="1397" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="567.92" y="1407.5" ></text>
</g>
<g >
<title>memset_orig (10,191,538 samples, 0.01%)</title><rect x="431.9" y="1557" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="434.94" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1349" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1359.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long&gt; (7,555,038 samples, 0.01%)</title><rect x="55.4" y="1717" width="0.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="58.36" y="1727.5" ></text>
</g>
<g >
<title>read (1,027,782,019 samples, 1.23%)</title><rect x="671.8" y="1813" width="14.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="674.85" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (46,798,044 samples, 0.06%)</title><rect x="58.1" y="1701" width="0.7" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="61.15" y="1711.5" ></text>
</g>
<g >
<title>selinux_ip_postroute_compat (14,136,500 samples, 0.02%)</title><rect x="865.5" y="1445" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="868.48" y="1455.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (17,790,290 samples, 0.02%)</title><rect x="51.7" y="1701" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="54.70" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,413,018 samples, 0.01%)</title><rect x="293.2" y="1509" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="296.20" y="1519.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (2,875,417,479 samples, 3.45%)</title><rect x="395.0" y="1861" width="40.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="398.00" y="1871.5" >std..</text>
</g>
<g >
<title>ep_item_poll.isra.0 (18,017,316 samples, 0.02%)</title><rect x="1130.8" y="1589" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1133.79" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1765" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="747.77" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (9,422,144 samples, 0.01%)</title><rect x="944.6" y="1557" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="947.60" y="1567.5" ></text>
</g>
<g >
<title>rndis_filter_receive (13,308,896 samples, 0.02%)</title><rect x="440.2" y="1669" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="443.24" y="1679.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (14,450,582 samples, 0.02%)</title><rect x="934.8" y="1685" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="937.81" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (7,775,797 samples, 0.01%)</title><rect x="58.8" y="1701" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="61.81" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (17,594,664 samples, 0.02%)</title><rect x="191.1" y="1717" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="194.08" y="1727.5" ></text>
</g>
<g >
<title>clear_bhb_loop (11,473,469 samples, 0.01%)</title><rect x="688.7" y="1653" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="691.73" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (119,073,118 samples, 0.14%)</title><rect x="251.0" y="1733" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="253.96" y="1743.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (112,981,806 samples, 0.14%)</title><rect x="1171.0" y="1813" width="1.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1174.04" y="1823.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc_cs (15,018,375 samples, 0.02%)</title><rect x="682.5" y="1589" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="685.50" y="1599.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (4,144,820,954 samples, 4.97%)</title><rect x="20.2" y="1797" width="58.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="23.22" y="1807.5" >HttpCo..</text>
</g>
<g >
<title>std::shared_ptr&lt;TimerManager::TimerNode&gt;::shared_ptr (7,282,741 samples, 0.01%)</title><rect x="588.8" y="1909" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="591.84" y="1919.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (12,678,028 samples, 0.02%)</title><rect x="625.9" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="628.95" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1333" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1343.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (36,034,635 samples, 0.04%)</title><rect x="1090.7" y="1749" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1093.67" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (13,856,410 samples, 0.02%)</title><rect x="1024.5" y="1477" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1027.49" y="1487.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (10,156,722 samples, 0.01%)</title><rect x="746.0" y="1845" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="749.03" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (7,522,353 samples, 0.01%)</title><rect x="993.9" y="1797" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="996.91" y="1807.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (17,861,657 samples, 0.02%)</title><rect x="708.3" y="1589" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="711.26" y="1599.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (15,129,470 samples, 0.02%)</title><rect x="465.6" y="1733" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="468.60" y="1743.5" ></text>
</g>
<g >
<title>copy_iovec_from_user (19,997,680 samples, 0.02%)</title><rect x="575.6" y="1685" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="578.65" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (27,484,883 samples, 0.03%)</title><rect x="591.1" y="2021" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (14,879,177 samples, 0.02%)</title><rect x="877.9" y="1621" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="880.87" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1861" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1871.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (7,162,702 samples, 0.01%)</title><rect x="430.2" y="1557" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="433.16" y="1567.5" ></text>
</g>
<g >
<title>lock_sock_nested (49,151,615 samples, 0.06%)</title><rect x="678.7" y="1637" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="681.67" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="277" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="287.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (8,792,044 samples, 0.01%)</title><rect x="19.2" y="1701" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="22.20" y="1711.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (38,761,126 samples, 0.05%)</title><rect x="418.9" y="1429" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="421.86" y="1439.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,582,050 samples, 0.01%)</title><rect x="561.3" y="1397" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="564.33" y="1407.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (349,597,866 samples, 0.42%)</title><rect x="833.2" y="1781" width="5.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="836.22" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1765" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="405" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="415.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (12,984,790 samples, 0.02%)</title><rect x="1007.9" y="1205" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1010.91" y="1215.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (16,641,682 samples, 0.02%)</title><rect x="357.7" y="1605" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="360.73" y="1615.5" ></text>
</g>
<g >
<title>__napi_poll (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1637" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="925.16" y="1647.5" ></text>
</g>
<g >
<title>handle_softirqs (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1669" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="925.16" y="1679.5" ></text>
</g>
<g >
<title>__fput_sync (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1493" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="171.38" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (13,160,814 samples, 0.02%)</title><rect x="984.5" y="1685" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="987.48" y="1695.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (196,517,704 samples, 0.24%)</title><rect x="191.5" y="1717" width="2.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="194.51" y="1727.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (17,418,847 samples, 0.02%)</title><rect x="861.0" y="1173" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="863.96" y="1183.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (7,165,999 samples, 0.01%)</title><rect x="246.3" y="1637" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="249.29" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (7,141,500 samples, 0.01%)</title><rect x="102.5" y="1685" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="105.47" y="1695.5" ></text>
</g>
<g >
<title>ip_list_rcv (24,874,451 samples, 0.03%)</title><rect x="1007.4" y="1253" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1010.40" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (56,426,548 samples, 0.07%)</title><rect x="500.9" y="1733" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="503.88" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,619,096 samples, 0.01%)</title><rect x="247.5" y="1557" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="250.52" y="1567.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (8,968,549 samples, 0.01%)</title><rect x="1086.5" y="1685" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1089.47" y="1695.5" ></text>
</g>
<g >
<title>__seccomp_filter (14,452,165 samples, 0.02%)</title><rect x="944.9" y="1669" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="947.89" y="1679.5" ></text>
</g>
<g >
<title>ip_local_out (684,322,019 samples, 0.82%)</title><rect x="1003.3" y="1509" width="9.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1006.25" y="1519.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (35,495,784 samples, 0.04%)</title><rect x="422.8" y="1397" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="425.77" y="1407.5" ></text>
</g>
<g >
<title>ip_queue_xmit (742,098,039 samples, 0.89%)</title><rect x="559.6" y="1541" width="10.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="562.62" y="1551.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (105,911,736 samples, 0.13%)</title><rect x="1173.5" y="1813" width="1.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1176.51" y="1823.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (7,369,174 samples, 0.01%)</title><rect x="1053.4" y="1685" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1056.36" y="1695.5" ></text>
</g>
<g >
<title>copy_iovec_from_user (26,816,801 samples, 0.03%)</title><rect x="1018.4" y="1685" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1021.36" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+ (10,768,417 samples, 0.01%)</title><rect x="618.8" y="1765" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="621.75" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (71,162,843 samples, 0.09%)</title><rect x="348.4" y="1749" width="1.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="351.38" y="1759.5" ></text>
</g>
<g >
<title>__close (7,843,600 samples, 0.01%)</title><rect x="610.1" y="1573" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="613.13" y="1583.5" ></text>
</g>
<g >
<title>skb_clone (7,128,950 samples, 0.01%)</title><rect x="130.6" y="1557" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="133.62" y="1567.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,062,985 samples, 0.01%)</title><rect x="35.8" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="38.79" y="1631.5" ></text>
</g>
<g >
<title>rep_movs_alternative (23,532,346 samples, 0.03%)</title><rect x="238.7" y="1557" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="241.66" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,151,242 samples, 0.01%)</title><rect x="584.5" y="1509" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="587.48" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1877" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (94,131,407 samples, 0.11%)</title><rect x="986.2" y="1733" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="989.23" y="1743.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (41,064,005 samples, 0.05%)</title><rect x="201.3" y="1717" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="204.29" y="1727.5" ></text>
</g>
<g >
<title>putname (23,472,022 samples, 0.03%)</title><rect x="656.1" y="1653" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="659.14" y="1663.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (149,691,539 samples, 0.18%)</title><rect x="710.3" y="1461" width="2.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="713.27" y="1471.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (142,641,061 samples, 0.17%)</title><rect x="437.9" y="1797" width="2.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="440.92" y="1807.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (22,715,328 samples, 0.03%)</title><rect x="80.8" y="1653" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="83.79" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1733" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1743.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (7,911,046 samples, 0.01%)</title><rect x="1024.6" y="1285" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1027.57" y="1295.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (12,235,863 samples, 0.01%)</title><rect x="213.2" y="1333" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="216.21" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (76,354,499 samples, 0.09%)</title><rect x="336.8" y="1749" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="339.85" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (11,172,978 samples, 0.01%)</title><rect x="99.0" y="1541" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="102.02" y="1551.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (53,182,379 samples, 0.06%)</title><rect x="940.3" y="1717" width="0.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="943.34" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (7,760,778 samples, 0.01%)</title><rect x="598.2" y="1973" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="601.19" y="1983.5" ></text>
</g>
<g >
<title>epoll_ctl (9,400,733 samples, 0.01%)</title><rect x="846.8" y="1733" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="849.83" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (16,528,411 samples, 0.02%)</title><rect x="846.5" y="1733" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="849.50" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1349" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="928.84" y="1359.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (5,955,558,559 samples, 7.15%)</title><rect x="310.3" y="1861" width="84.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="313.31" y="1871.5" >std::__in..</text>
</g>
<g >
<title>__do_sys_newfstatat (470,614,187 samples, 0.56%)</title><rect x="506.3" y="1685" width="6.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="509.34" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (16,949,165 samples, 0.02%)</title><rect x="330.2" y="1685" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="333.16" y="1695.5" ></text>
</g>
<g >
<title>nft_do_chain (10,941,231 samples, 0.01%)</title><rect x="270.4" y="1461" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="273.39" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (12,996,692 samples, 0.02%)</title><rect x="1189.1" y="2053" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1192.07" y="2063.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (79,422,822 samples, 0.10%)</title><rect x="615.4" y="1685" width="1.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="618.40" y="1695.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (481,295,140 samples, 0.58%)</title><rect x="395.5" y="1797" width="6.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="398.46" y="1807.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (280,116,552 samples, 0.34%)</title><rect x="486.4" y="1749" width="3.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="489.37" y="1759.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (40,333,157 samples, 0.05%)</title><rect x="98.9" y="1637" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.89" y="1647.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (9,306,036 samples, 0.01%)</title><rect x="583.9" y="1781" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="586.93" y="1791.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,898,796 samples, 0.01%)</title><rect x="303.9" y="1989" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="306.92" y="1999.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8,696,319 samples, 0.01%)</title><rect x="745.1" y="2053" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="748.11" y="2063.5" ></text>
</g>
<g >
<title>security_file_permission (39,276,796 samples, 0.05%)</title><rect x="575.0" y="1669" width="0.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="578.02" y="1679.5" ></text>
</g>
<g >
<title>selinux_parse_skb.constprop.0 (9,821,405 samples, 0.01%)</title><rect x="1161.0" y="1429" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1163.98" y="1439.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,397,284 samples, 0.01%)</title><rect x="410.9" y="1637" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="413.91" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (15,120,622 samples, 0.02%)</title><rect x="521.0" y="1797" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="523.96" y="1807.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,860,791 samples, 0.01%)</title><rect x="804.3" y="1605" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="807.26" y="1615.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;EventLoop,  (11,324,497 samples, 0.01%)</title><rect x="668.7" y="1797" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="671.66" y="1807.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (197,174,641 samples, 0.24%)</title><rect x="985.8" y="1797" width="2.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="988.78" y="1807.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,635,533 samples, 0.01%)</title><rect x="181.6" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="184.59" y="1631.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9,905,354 samples, 0.01%)</title><rect x="994.5" y="1797" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="997.45" y="1807.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (27,870,600 samples, 0.03%)</title><rect x="791.9" y="1669" width="0.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="794.88" y="1679.5" ></text>
</g>
<g >
<title>selinux_file_permission (66,685,606 samples, 0.08%)</title><rect x="1117.8" y="1669" width="1.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1120.82" y="1679.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (826,908,428 samples, 0.99%)</title><rect x="208.1" y="1765" width="11.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="211.07" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1029" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1039.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (15,286,066 samples, 0.02%)</title><rect x="565.0" y="1269" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="567.99" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;char*&gt; (110,736,341 samples, 0.13%)</title><rect x="80.1" y="1781" width="1.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="83.15" y="1791.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (7,935,920 samples, 0.01%)</title><rect x="530.7" y="1685" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="533.74" y="1695.5" ></text>
</g>
<g >
<title>__schedule (76,963,548 samples, 0.09%)</title><rect x="880.1" y="1765" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="883.10" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (47,541,671 samples, 0.06%)</title><rect x="927.1" y="1701" width="0.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="930.14" y="1711.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (15,821,322 samples, 0.02%)</title><rect x="250.6" y="1749" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="253.62" y="1759.5" ></text>
</g>
<g >
<title>__skb_clone (10,900,709 samples, 0.01%)</title><rect x="1161.8" y="1525" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1164.85" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (38,136,557 samples, 0.05%)</title><rect x="296.5" y="1845" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="299.53" y="1855.5" ></text>
</g>
<g >
<title>netvsc_poll (39,581,846 samples, 0.05%)</title><rect x="144.1" y="1621" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="147.08" y="1631.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (24,083,932 samples, 0.03%)</title><rect x="1177.2" y="1861" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1180.16" y="1871.5" ></text>
</g>
<g >
<title>vmbus_next_request_id (14,826,695 samples, 0.02%)</title><rect x="864.3" y="1285" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="867.33" y="1295.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,754,268 samples, 0.01%)</title><rect x="34.7" y="1637" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="37.72" y="1647.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (50,289,835 samples, 0.06%)</title><rect x="771.8" y="1685" width="0.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="774.79" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (11,704,207 samples, 0.01%)</title><rect x="376.5" y="1749" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="379.50" y="1759.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (7,653,665 samples, 0.01%)</title><rect x="774.5" y="1701" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="777.55" y="1711.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (8,610,746 samples, 0.01%)</title><rect x="414.5" y="1589" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="417.50" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (472,846,532 samples, 0.57%)</title><rect x="801.2" y="1701" width="6.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="804.24" y="1711.5" ></text>
</g>
<g >
<title>ip_finish_output (365,883,320 samples, 0.44%)</title><rect x="713.9" y="1477" width="5.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="716.89" y="1487.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (5,758,426,955 samples, 6.91%)</title><rect x="896.8" y="1861" width="81.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="899.81" y="1871.5" >std::__in..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (21,574,932 samples, 0.03%)</title><rect x="956.2" y="1749" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="959.25" y="1759.5" ></text>
</g>
<g >
<title>__do_softirq (12,063,653 samples, 0.01%)</title><rect x="679.0" y="1573" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="682.00" y="1583.5" ></text>
</g>
<g >
<title>__strlen_avx2 (13,676,926 samples, 0.02%)</title><rect x="74.5" y="1749" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="77.53" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (16,668,329 samples, 0.02%)</title><rect x="901.7" y="1589" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="904.68" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (217,333,452 samples, 0.26%)</title><rect x="1045.1" y="1669" width="3.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1048.05" y="1679.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (7,862,518 samples, 0.01%)</title><rect x="641.5" y="1685" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="644.49" y="1695.5" ></text>
</g>
<g >
<title>__inode_security_revalidate (8,092,163 samples, 0.01%)</title><rect x="216.5" y="1541" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="219.52" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="655.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (9,349,514 samples, 0.01%)</title><rect x="397.4" y="1621" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="400.40" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10,052,862 samples, 0.01%)</title><rect x="380.8" y="1525" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="383.79" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_read (640,598,714 samples, 0.77%)</title><rect x="967.2" y="1749" width="9.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="970.24" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (9,856,527 samples, 0.01%)</title><rect x="541.2" y="1445" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="544.15" y="1455.5" ></text>
</g>
<g >
<title>ip_list_rcv (20,871,830 samples, 0.03%)</title><rect x="1024.5" y="1589" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1027.45" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (15,510,385 samples, 0.02%)</title><rect x="1062.3" y="1701" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1065.31" y="1711.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (21,490,443 samples, 0.03%)</title><rect x="933.7" y="1765" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="936.74" y="1775.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (413,124,631 samples, 0.50%)</title><rect x="897.9" y="1717" width="5.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="900.94" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (16,806,432 samples, 0.02%)</title><rect x="249.4" y="1685" width="0.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="252.42" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1285" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1557" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="501" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_last_not_of (17,403,303 samples, 0.02%)</title><rect x="920.6" y="1765" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="923.61" y="1775.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (20,095,384 samples, 0.02%)</title><rect x="367.6" y="1557" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="370.55" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (7,408,542 samples, 0.01%)</title><rect x="59.4" y="1701" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="62.40" y="1711.5" ></text>
</g>
<g >
<title>clear_bhb_loop (20,633,820 samples, 0.02%)</title><rect x="753.5" y="1653" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="756.45" y="1663.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (10,130,771 samples, 0.01%)</title><rect x="881.6" y="1893" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="884.63" y="1903.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (8,944,489 samples, 0.01%)</title><rect x="63.8" y="1701" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="66.77" y="1711.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (10,570,407 samples, 0.01%)</title><rect x="942.8" y="1557" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="945.85" y="1567.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (19,750,202 samples, 0.02%)</title><rect x="781.6" y="1717" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="784.55" y="1727.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (791,883,455 samples, 0.95%)</title><rect x="267.2" y="1525" width="11.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="270.15" y="1535.5" ></text>
</g>
<g >
<title>__secure_computing (14,856,289 samples, 0.02%)</title><rect x="981.3" y="1605" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="984.31" y="1615.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, char*&gt; (39,823,580 samples, 0.05%)</title><rect x="670.0" y="1685" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="673.04" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (7,805,407 samples, 0.01%)</title><rect x="701.5" y="1717" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="704.49" y="1727.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (54,490,337 samples, 0.07%)</title><rect x="423.4" y="1413" width="0.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="426.37" y="1423.5" ></text>
</g>
<g >
<title>perf_ctx_disable (8,720,136 samples, 0.01%)</title><rect x="292.7" y="1733" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="295.68" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (14,005,105 samples, 0.02%)</title><rect x="360.2" y="1557" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="363.21" y="1567.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (43,865,336 samples, 0.05%)</title><rect x="607.8" y="1669" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="610.85" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (21,094,073 samples, 0.03%)</title><rect x="612.1" y="1749" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="615.14" y="1759.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,879,824 samples, 0.01%)</title><rect x="39.0" y="1717" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="41.95" y="1727.5" ></text>
</g>
<g >
<title>security_inode_permission (72,750,306 samples, 0.09%)</title><rect x="657.3" y="1573" width="1.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="660.32" y="1583.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (79,241,123 samples, 0.10%)</title><rect x="72.2" y="1749" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="75.22" y="1759.5" ></text>
</g>
<g >
<title>ip_list_rcv (10,503,795 samples, 0.01%)</title><rect x="440.3" y="1589" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="443.28" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (9,956,136 samples, 0.01%)</title><rect x="617.5" y="1717" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="620.55" y="1727.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (191,398,347 samples, 0.23%)</title><rect x="1087.2" y="1765" width="2.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1090.22" y="1775.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,160,300 samples, 0.01%)</title><rect x="33.3" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="36.32" y="1663.5" ></text>
</g>
<g >
<title>_int_malloc (66,758,803 samples, 0.08%)</title><rect x="595.3" y="2053" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="598.30" y="2063.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,617,696 samples, 0.01%)</title><rect x="1144.3" y="1717" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1147.28" y="1727.5" ></text>
</g>
<g >
<title>vfs_writev (1,547,742,797 samples, 1.86%)</title><rect x="704.8" y="1717" width="21.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="707.75" y="1727.5" >v..</text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="197" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (11,501,266 samples, 0.01%)</title><rect x="388.0" y="1621" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="391.04" y="1631.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1717" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="469.26" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (8,094,779 samples, 0.01%)</title><rect x="662.8" y="1669" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="665.76" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (9,707,074 samples, 0.01%)</title><rect x="90.3" y="1621" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="93.27" y="1631.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (15,246,029 samples, 0.02%)</title><rect x="643.5" y="1621" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="646.48" y="1631.5" ></text>
</g>
<g >
<title>x64_sys_call (611,596,380 samples, 0.73%)</title><rect x="821.3" y="1765" width="8.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="824.26" y="1775.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (10,999,321 samples, 0.01%)</title><rect x="611.9" y="1749" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="614.92" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="613" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="623.5" ></text>
</g>
<g >
<title>handle_softirqs (11,025,626 samples, 0.01%)</title><rect x="825.0" y="1557" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="827.98" y="1567.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (61,654,073 samples, 0.07%)</title><rect x="881.9" y="1909" width="0.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="884.87" y="1919.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (19,572,108 samples, 0.02%)</title><rect x="1112.0" y="1701" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1114.98" y="1711.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (392,266,070 samples, 0.47%)</title><rect x="311.5" y="1701" width="5.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="314.49" y="1711.5" ></text>
</g>
<g >
<title>rb_insert_color (7,718,536 samples, 0.01%)</title><rect x="867.1" y="1541" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="870.05" y="1551.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,354,031 samples, 0.01%)</title><rect x="748.0" y="2021" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="751.02" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (26,154,060 samples, 0.03%)</title><rect x="647.4" y="1685" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="650.43" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="709" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="719.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (18,125,403 samples, 0.02%)</title><rect x="282.5" y="1573" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="285.53" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (12,213,733 samples, 0.01%)</title><rect x="1183.5" y="2021" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1186.52" y="2031.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (15,734,143 samples, 0.02%)</title><rect x="132.3" y="1557" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="135.31" y="1567.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (30,628,023 samples, 0.04%)</title><rect x="501.1" y="1701" width="0.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="504.07" y="1711.5" ></text>
</g>
<g >
<title>rw_verify_area (160,019,733 samples, 0.19%)</title><rect x="86.8" y="1701" width="2.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="89.76" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (26,168,795 samples, 0.03%)</title><rect x="919.4" y="1717" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="922.45" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="821" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (69,030,054 samples, 0.08%)</title><rect x="922.4" y="1749" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="925.44" y="1759.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (9,258,675 samples, 0.01%)</title><rect x="443.0" y="1477" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="445.97" y="1487.5" ></text>
</g>
<g >
<title>netvsc_poll (8,094,779 samples, 0.01%)</title><rect x="662.8" y="1637" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="665.76" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (213,304,534 samples, 0.26%)</title><rect x="1083.8" y="1733" width="3.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1086.80" y="1743.5" ></text>
</g>
<g >
<title>__virt_addr_valid (14,255,806 samples, 0.02%)</title><rect x="363.9" y="1589" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="366.92" y="1599.5" ></text>
</g>
<g >
<title>x64_sys_call (204,193,629 samples, 0.25%)</title><rect x="313.1" y="1637" width="2.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="316.10" y="1647.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (45,257,211 samples, 0.05%)</title><rect x="1024.1" y="1781" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1027.11" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (12,629,389 samples, 0.02%)</title><rect x="1180.9" y="1925" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1183.93" y="1935.5" ></text>
</g>
<g >
<title>tcp_send_mss (16,606,765 samples, 0.02%)</title><rect x="723.3" y="1605" width="0.3" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="726.34" y="1615.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (29,841,966 samples, 0.04%)</title><rect x="542.5" y="1669" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="545.53" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (27,516,595 samples, 0.03%)</title><rect x="89.7" y="1621" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="92.73" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,385,901 samples, 0.01%)</title><rect x="1066.0" y="1509" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1069.03" y="1519.5" ></text>
</g>
<g >
<title>validate_xmit_skb (22,817,490 samples, 0.03%)</title><rect x="426.7" y="1381" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="429.65" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (298,777,472 samples, 0.36%)</title><rect x="898.4" y="1669" width="4.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="901.44" y="1679.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (2,861,536,567 samples, 3.43%)</title><rect x="395.2" y="1829" width="40.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="398.20" y="1839.5" >Htt..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (106,340,402 samples, 0.13%)</title><rect x="1030.0" y="1893" width="1.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1033.04" y="1903.5" ></text>
</g>
<g >
<title>handle_softirqs (7,468,225 samples, 0.01%)</title><rect x="347.8" y="1685" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="350.82" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (12,037,140 samples, 0.01%)</title><rect x="153.7" y="2037" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="156.70" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1285" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1295.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (13,007,703 samples, 0.02%)</title><rect x="641.5" y="1717" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="644.47" y="1727.5" ></text>
</g>
<g >
<title>__wake_up_sync (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1317" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="295.80" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="501" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="511.5" ></text>
</g>
<g >
<title>handle_softirqs (8,635,533 samples, 0.01%)</title><rect x="181.6" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="184.59" y="1615.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (9,060,119 samples, 0.01%)</title><rect x="925.8" y="1653" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="928.84" y="1663.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,354,031 samples, 0.01%)</title><rect x="748.0" y="2005" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="751.02" y="2015.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,517,942 samples, 0.01%)</title><rect x="604.0" y="1429" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="606.96" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1141" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1151.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (29,925,659 samples, 0.04%)</title><rect x="448.1" y="1861" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="451.11" y="1871.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1477" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="186.34" y="1487.5" ></text>
</g>
<g >
<title>release_sock (23,521,950 samples, 0.03%)</title><rect x="414.7" y="1621" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="417.72" y="1631.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,814,896 samples, 0.01%)</title><rect x="1130.6" y="1541" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1133.63" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="853" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="863.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,052,862 samples, 0.01%)</title><rect x="380.8" y="1557" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="383.79" y="1567.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (72,433,271 samples, 0.09%)</title><rect x="407.1" y="1781" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="410.05" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (25,149,771 samples, 0.03%)</title><rect x="124.8" y="1141" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="127.80" y="1151.5" ></text>
</g>
<g >
<title>__napi_poll (10,619,096 samples, 0.01%)</title><rect x="247.5" y="1493" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="250.52" y="1503.5" ></text>
</g>
<g >
<title>inet_sendmsg (1,308,595,382 samples, 1.57%)</title><rect x="414.2" y="1653" width="18.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="417.25" y="1663.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,590,027 samples, 0.02%)</title><rect x="873.6" y="1861" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="876.64" y="1871.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12,644,376 samples, 0.02%)</title><rect x="937.1" y="1605" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="940.11" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="949" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="959.5" ></text>
</g>
<g >
<title>rndis_filter_receive (16,030,957 samples, 0.02%)</title><rect x="423.0" y="1301" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="426.05" y="1311.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (19,396,941 samples, 0.02%)</title><rect x="1058.3" y="1685" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1061.33" y="1695.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (7,513,023 samples, 0.01%)</title><rect x="1175.6" y="1237" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1178.59" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;Channel&gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (8,406,125 samples, 0.01%)</title><rect x="1031.6" y="1877" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1034.63" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1717" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_first_not_of (16,006,615 samples, 0.02%)</title><rect x="335.2" y="1765" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="338.25" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (8,668,090 samples, 0.01%)</title><rect x="252.3" y="1669" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="255.30" y="1679.5" ></text>
</g>
<g >
<title>netvsc_poll (10,860,659 samples, 0.01%)</title><rect x="1188.5" y="1925" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1191.51" y="1935.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,349,812 samples, 0.02%)</title><rect x="384.3" y="1637" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="387.33" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (70,049,139 samples, 0.08%)</title><rect x="647.1" y="1733" width="1.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="650.14" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (25,098,158 samples, 0.03%)</title><rect x="144.2" y="1493" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="147.19" y="1503.5" ></text>
</g>
<g >
<title>vfs_statx (244,765,685 samples, 0.29%)</title><rect x="1098.2" y="1653" width="3.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1101.18" y="1663.5" ></text>
</g>
<g >
<title>sock_read_iter (348,117,483 samples, 0.42%)</title><rect x="235.8" y="1701" width="5.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="238.83" y="1711.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (7,665,048 samples, 0.01%)</title><rect x="281.1" y="1557" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="284.11" y="1567.5" ></text>
</g>
<g >
<title>__fget_light (22,630,935 samples, 0.03%)</title><rect x="1130.3" y="1573" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1133.25" y="1583.5" ></text>
</g>
<g >
<title>napi_complete_done (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1461" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="951.32" y="1471.5" ></text>
</g>
<g >
<title>HttpRouter::Route (1,408,977,264 samples, 1.69%)</title><rect x="353.4" y="1781" width="20.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="356.40" y="1791.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (8,226,950 samples, 0.01%)</title><rect x="708.0" y="1605" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="710.98" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,114,888 samples, 0.01%)</title><rect x="259.7" y="1653" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="262.75" y="1663.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (385,347,736 samples, 0.46%)</title><rect x="1127.5" y="1781" width="5.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1130.54" y="1791.5" ></text>
</g>
<g >
<title>sock_poll (87,232,975 samples, 0.10%)</title><rect x="441.0" y="1797" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="444.01" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (420,048,206 samples, 0.50%)</title><rect x="12.6" y="1749" width="6.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="15.65" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1029" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1039.5" ></text>
</g>
<g >
<title>avc_has_perm (7,971,737 samples, 0.01%)</title><rect x="719.8" y="1413" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="722.77" y="1423.5" ></text>
</g>
<g >
<title>__ip_local_out (274,135,862 samples, 0.33%)</title><rect x="267.6" y="1493" width="3.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="270.60" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="277" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="287.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="837" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="847.5" ></text>
</g>
<g >
<title>irq_exit_rcu (25,789,491 samples, 0.03%)</title><rect x="880.5" y="1701" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="883.51" y="1711.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (25,355,847 samples, 0.03%)</title><rect x="574.6" y="1653" width="0.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="577.60" y="1663.5" ></text>
</g>
<g >
<title>__do_softirq (46,800,141 samples, 0.06%)</title><rect x="714.8" y="1381" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="717.76" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1605" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (17,691,672 samples, 0.02%)</title><rect x="620.1" y="1765" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="623.09" y="1775.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (10,959,942 samples, 0.01%)</title><rect x="462.7" y="1589" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="465.73" y="1599.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,627,962 samples, 0.01%)</title><rect x="917.9" y="1621" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="920.93" y="1631.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1605" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="171.38" y="1615.5" ></text>
</g>
<g >
<title>operator delete (12,320,470 samples, 0.01%)</title><rect x="665.5" y="1781" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="668.47" y="1791.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (23,484,125 samples, 0.03%)</title><rect x="818.8" y="1749" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="821.77" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (46,773,520 samples, 0.06%)</title><rect x="796.4" y="1717" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="799.37" y="1727.5" ></text>
</g>
<g >
<title>inode_permission (79,964,353 samples, 0.10%)</title><rect x="215.9" y="1589" width="1.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="218.86" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (486,185,849 samples, 0.58%)</title><rect x="874.7" y="1893" width="6.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="877.69" y="1903.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (35,265,274 samples, 0.04%)</title><rect x="147.5" y="1829" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="150.46" y="1839.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,986,312 samples, 0.01%)</title><rect x="1066.0" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1069.00" y="1631.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (103,279,605 samples, 0.12%)</title><rect x="109.8" y="1781" width="1.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="112.76" y="1791.5" ></text>
</g>
<g >
<title>std::function&lt;void  (54,983,503 samples, 0.07%)</title><rect x="693.3" y="1781" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="696.31" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="101" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="111.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,535,305 samples, 0.01%)</title><rect x="744.8" y="2037" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="747.77" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (9,879,824 samples, 0.01%)</title><rect x="39.0" y="1653" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="41.95" y="1663.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,062,985 samples, 0.01%)</title><rect x="35.8" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="38.79" y="1663.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (32,847,318 samples, 0.04%)</title><rect x="82.5" y="1781" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="85.53" y="1791.5" ></text>
</g>
<g >
<title>std::function&lt;void  (38,354,971 samples, 0.05%)</title><rect x="543.2" y="1781" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="546.23" y="1791.5" ></text>
</g>
<g >
<title>walk_component (52,132,188 samples, 0.06%)</title><rect x="217.0" y="1589" width="0.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="220.02" y="1599.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (9,711,382 samples, 0.01%)</title><rect x="911.4" y="1685" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="914.36" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="453" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="463.5" ></text>
</g>
<g >
<title>dequeue_task_fair (10,489,918 samples, 0.01%)</title><rect x="292.9" y="1749" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="295.91" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (13,590,027 samples, 0.02%)</title><rect x="873.6" y="1829" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="876.64" y="1839.5" ></text>
</g>
<g >
<title>__ip_local_out (268,491,003 samples, 0.32%)</title><rect x="560.1" y="1493" width="3.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="563.11" y="1503.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,934,288 samples, 0.01%)</title><rect x="307.1" y="2021" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="310.08" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="341" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="351.5" ></text>
</g>
<g >
<title>nft_do_chain_ipv4 (49,782,634 samples, 0.06%)</title><rect x="270.5" y="1461" width="0.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="273.55" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_last_not_of (13,156,555 samples, 0.02%)</title><rect x="482.5" y="1765" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="485.54" y="1775.5" ></text>
</g>
<g >
<title>x64_sys_call (595,900,012 samples, 0.72%)</title><rect x="232.4" y="1765" width="8.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="235.37" y="1775.5" ></text>
</g>
<g >
<title>ksys_read (621,860,629 samples, 0.75%)</title><rect x="675.2" y="1733" width="8.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="678.21" y="1743.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (7,649,120 samples, 0.01%)</title><rect x="609.8" y="1701" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="612.80" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (141,089,953 samples, 0.17%)</title><rect x="103.6" y="1749" width="2.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="106.61" y="1759.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (13,377,493 samples, 0.02%)</title><rect x="265.7" y="1605" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="268.68" y="1615.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (479,794,089 samples, 0.58%)</title><rect x="945.5" y="1685" width="6.8" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="948.47" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (36,841,690 samples, 0.04%)</title><rect x="622.4" y="1685" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="625.39" y="1695.5" ></text>
</g>
<g >
<title>__napi_poll (35,495,784 samples, 0.04%)</title><rect x="422.8" y="1333" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="425.77" y="1343.5" ></text>
</g>
<g >
<title>x64_sys_call (1,666,254,748 samples, 2.00%)</title><rect x="261.3" y="1765" width="23.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="264.29" y="1775.5" >x..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (7,192,282 samples, 0.01%)</title><rect x="108.8" y="1733" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="111.78" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (8,862,351 samples, 0.01%)</title><rect x="693.9" y="1669" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="696.92" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (69,311,601 samples, 0.08%)</title><rect x="986.6" y="1717" width="1.0" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="989.58" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (8,175,998 samples, 0.01%)</title><rect x="1050.7" y="1605" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1053.69" y="1615.5" ></text>
</g>
<g >
<title>handle_softirqs (7,136,147 samples, 0.01%)</title><rect x="556.4" y="1541" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="559.38" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (18,791,665 samples, 0.02%)</title><rect x="886.9" y="2021" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="2031.5" ></text>
</g>
<g >
<title>std::priority_queue&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt;, TimerManager::TimerCmp&gt;::empty (7,365,822 samples, 0.01%)</title><rect x="588.7" y="1909" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="591.71" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="117" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="127.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (44,903,279 samples, 0.05%)</title><rect x="590.0" y="1861" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="593.00" y="1871.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (25,560,900 samples, 0.03%)</title><rect x="968.6" y="1669" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="971.55" y="1679.5" ></text>
</g>
<g >
<title>_int_free (22,404,868 samples, 0.03%)</title><rect x="153.4" y="2037" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="156.39" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1365" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="951.32" y="1375.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,378,860 samples, 0.01%)</title><rect x="141.2" y="1509" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="144.23" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (80,846,409 samples, 0.10%)</title><rect x="992.3" y="1717" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="995.32" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (11,066,933 samples, 0.01%)</title><rect x="980.2" y="1445" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="983.18" y="1455.5" ></text>
</g>
<g >
<title>irq_exit_rcu (32,159,390 samples, 0.04%)</title><rect x="798.0" y="1717" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="801.04" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1973" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1983.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,340,124 samples, 0.01%)</title><rect x="577.5" y="1733" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="580.48" y="1743.5" ></text>
</g>
<g >
<title>handle_softirqs (32,159,390 samples, 0.04%)</title><rect x="798.0" y="1685" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="801.04" y="1695.5" ></text>
</g>
<g >
<title>ip_finish_output (379,197,303 samples, 0.46%)</title><rect x="860.0" y="1477" width="5.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="862.99" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1829" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,708,217 samples, 0.01%)</title><rect x="1189.7" y="2053" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1192.67" y="2063.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (20,399,578 samples, 0.02%)</title><rect x="761.7" y="1733" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="764.74" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (66,165,053 samples, 0.08%)</title><rect x="1139.3" y="1765" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1142.25" y="1775.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (28,496,915 samples, 0.03%)</title><rect x="357.7" y="1733" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="360.71" y="1743.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (21,316,751 samples, 0.03%)</title><rect x="360.5" y="1701" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="363.48" y="1711.5" ></text>
</g>
<g >
<title>handle_softirqs (8,105,077 samples, 0.01%)</title><rect x="539.7" y="1557" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="542.70" y="1567.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (7,550,552 samples, 0.01%)</title><rect x="313.0" y="1637" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="315.98" y="1647.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (26,301,436 samples, 0.03%)</title><rect x="144.2" y="1525" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="147.19" y="1535.5" ></text>
</g>
<g >
<title>__napi_poll (7,603,822 samples, 0.01%)</title><rect x="455.5" y="1941" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="458.45" y="1951.5" ></text>
</g>
<g >
<title>import_iovec (14,580,937 samples, 0.02%)</title><rect x="433.9" y="1701" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="436.89" y="1711.5" ></text>
</g>
<g >
<title>file_has_perm (14,754,096 samples, 0.02%)</title><rect x="969.4" y="1653" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="972.43" y="1663.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,707,568,956 samples, 2.05%)</title><rect x="260.7" y="1781" width="24.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="263.70" y="1791.5" >d..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (40,896,510 samples, 0.05%)</title><rect x="320.5" y="1733" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="323.49" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1797" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1807.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (8,793,819 samples, 0.01%)</title><rect x="360.3" y="1493" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="363.26" y="1503.5" ></text>
</g>
<g >
<title>__napi_poll (7,906,809 samples, 0.01%)</title><rect x="703.6" y="1653" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="706.63" y="1663.5" ></text>
</g>
<g >
<title>detach_if_pending (9,103,055 samples, 0.01%)</title><rect x="429.6" y="1477" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="432.63" y="1487.5" ></text>
</g>
<g >
<title>net_rx_action (10,598,624 samples, 0.01%)</title><rect x="208.2" y="1669" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="211.19" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (10,114,159 samples, 0.01%)</title><rect x="696.8" y="1781" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="699.82" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3,007,495,907 samples, 3.61%)</title><rect x="243.6" y="1877" width="42.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="246.58" y="1887.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (459,171,377 samples, 0.55%)</title><rect x="328.3" y="1733" width="6.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="331.34" y="1743.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (11,651,981 samples, 0.01%)</title><rect x="899.4" y="1621" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="902.44" y="1631.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (16,102,136 samples, 0.02%)</title><rect x="800.4" y="1653" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="803.39" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (50,700,665 samples, 0.06%)</title><rect x="549.2" y="1749" width="0.7" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="552.17" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="181" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="191.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,590,027 samples, 0.02%)</title><rect x="873.6" y="1877" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="876.64" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (32,860,388 samples, 0.04%)</title><rect x="1139.4" y="1701" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1142.42" y="1711.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (14,071,440 samples, 0.02%)</title><rect x="1082.5" y="1701" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1085.54" y="1711.5" ></text>
</g>
<g >
<title>__napi_poll (7,354,031 samples, 0.01%)</title><rect x="748.0" y="1941" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="751.02" y="1951.5" ></text>
</g>
<g >
<title>handle_softirqs (9,360,456 samples, 0.01%)</title><rect x="363.3" y="1541" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="366.30" y="1551.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (8,002,776 samples, 0.01%)</title><rect x="964.3" y="1541" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="967.30" y="1551.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (184,817,991 samples, 0.22%)</title><rect x="1157.5" y="1397" width="2.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1160.47" y="1407.5" ></text>
</g>
<g >
<title>netvsc_poll (13,333,147 samples, 0.02%)</title><rect x="314.7" y="1477" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="317.74" y="1487.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (40,821,295 samples, 0.05%)</title><rect x="585.7" y="1861" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="588.71" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1653" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="469.26" y="1663.5" ></text>
</g>
<g >
<title>__qdisc_run (10,578,792 samples, 0.01%)</title><rect x="125.5" y="1413" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="128.48" y="1423.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Epoller*, std::default_delete&lt;Epoller&gt; &gt; (8,806,884 samples, 0.01%)</title><rect x="1132.7" y="1637" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1135.72" y="1647.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (432,661,304 samples, 0.52%)</title><rect x="602.7" y="1717" width="6.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="605.71" y="1727.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (7,125,457 samples, 0.01%)</title><rect x="713.2" y="1413" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="716.21" y="1423.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1573" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="747.77" y="1583.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (17,676,026 samples, 0.02%)</title><rect x="360.2" y="1701" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="363.21" y="1711.5" ></text>
</g>
<g >
<title>__mod_timer (68,932,748 samples, 0.08%)</title><rect x="429.1" y="1493" width="1.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="432.09" y="1503.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (8,075,699 samples, 0.01%)</title><rect x="81.3" y="1701" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="84.30" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (20,776,102 samples, 0.02%)</title><rect x="356.3" y="1669" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="359.26" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1381" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;Channel&gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (15,104,562 samples, 0.02%)</title><rect x="738.3" y="1877" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="741.34" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1909" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="261" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="271.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="933" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="943.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (49,697,487 samples, 0.06%)</title><rect x="535.3" y="1797" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="538.28" y="1807.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,547,446 samples, 0.01%)</title><rect x="1024.0" y="1765" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1027.00" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (17,682,421 samples, 0.02%)</title><rect x="311.8" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="314.76" y="1599.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (551,181,169 samples, 0.66%)</title><rect x="195.9" y="1781" width="7.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="198.89" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (33,918,958 samples, 0.04%)</title><rect x="638.6" y="1765" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="641.62" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (9,787,324 samples, 0.01%)</title><rect x="52.0" y="1701" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="54.98" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1941" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="485" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="495.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1813" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1823.5" ></text>
</g>
<g >
<title>_copy_from_iter (48,082,266 samples, 0.06%)</title><rect x="557.2" y="1605" width="0.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="560.23" y="1615.5" ></text>
</g>
<g >
<title>_copy_to_iter (29,701,288 samples, 0.04%)</title><rect x="681.6" y="1573" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="684.64" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (116,663,282 samples, 0.14%)</title><rect x="835.3" y="1621" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="838.27" y="1631.5" ></text>
</g>
<g >
<title>newidle_balance (9,393,932 samples, 0.01%)</title><rect x="1028.0" y="1733" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1031.02" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (31,825,948 samples, 0.04%)</title><rect x="787.8" y="1765" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="790.82" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (21,806,054 samples, 0.03%)</title><rect x="1027.4" y="1589" width="0.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1030.44" y="1599.5" ></text>
</g>
<g >
<title>__errno_location (10,245,073 samples, 0.01%)</title><rect x="671.6" y="1813" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="674.63" y="1823.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (20,126,727 samples, 0.02%)</title><rect x="1065.7" y="1669" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1068.68" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (7,141,500 samples, 0.01%)</title><rect x="102.5" y="1669" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="105.47" y="1679.5" ></text>
</g>
<g >
<title>napi_complete_done (8,925,385 samples, 0.01%)</title><rect x="1066.2" y="1557" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1069.17" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (10,897,271 samples, 0.01%)</title><rect x="1005.2" y="1413" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1008.21" y="1423.5" ></text>
</g>
<g >
<title>__strlen_avx2 (7,389,646 samples, 0.01%)</title><rect x="21.6" y="1733" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="24.65" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="165" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="175.5" ></text>
</g>
<g >
<title>handle_softirqs (9,207,254 samples, 0.01%)</title><rect x="668.4" y="1733" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="671.42" y="1743.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (8,936,175 samples, 0.01%)</title><rect x="498.8" y="1685" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="501.83" y="1695.5" ></text>
</g>
<g >
<title>tcp_push (1,085,682,982 samples, 1.30%)</title><rect x="265.9" y="1605" width="15.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="268.87" y="1615.5" ></text>
</g>
<g >
<title>psi_task_switch (7,075,811 samples, 0.01%)</title><rect x="881.1" y="1749" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="884.07" y="1759.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc_cs (9,914,901 samples, 0.01%)</title><rect x="721.0" y="1557" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="724.00" y="1567.5" ></text>
</g>
<g >
<title>napi_complete_done (35,818,188 samples, 0.04%)</title><rect x="144.1" y="1605" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="147.11" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10,413,018 samples, 0.01%)</title><rect x="293.2" y="1461" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="296.20" y="1471.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,121,246 samples, 0.01%)</title><rect x="398.9" y="1541" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="401.95" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1253" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1263.5" ></text>
</g>
<g >
<title>ip_local_out (783,611,778 samples, 0.94%)</title><rect x="1150.6" y="1509" width="11.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1153.59" y="1519.5" ></text>
</g>
<g >
<title>__schedule (52,855,618 samples, 0.06%)</title><rect x="734.4" y="1765" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="737.38" y="1775.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (8,813,802 samples, 0.01%)</title><rect x="1093.7" y="1701" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1096.73" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (449,800,369 samples, 0.54%)</title><rect x="620.6" y="1733" width="6.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="623.62" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (26,429,225 samples, 0.03%)</title><rect x="190.7" y="1733" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="193.66" y="1743.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (8,550,371 samples, 0.01%)</title><rect x="1012.2" y="1445" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1015.22" y="1455.5" ></text>
</g>
<g >
<title>read (888,172,367 samples, 1.07%)</title><rect x="524.4" y="1813" width="12.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="527.40" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9,043,579 samples, 0.01%)</title><rect x="141.6" y="1493" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="144.61" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="965" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="975.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1045" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (15,955,959 samples, 0.02%)</title><rect x="106.3" y="1781" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="109.32" y="1791.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,052,005 samples, 0.01%)</title><rect x="622.8" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="625.78" y="1647.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (16,655,467 samples, 0.02%)</title><rect x="652.0" y="1653" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="654.98" y="1663.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (462,412,345 samples, 0.55%)</title><rect x="875.0" y="1845" width="6.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="878.01" y="1855.5" ></text>
</g>
<g >
<title>__check_heap_object (7,077,140 samples, 0.01%)</title><rect x="213.6" y="1605" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="216.63" y="1615.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,846,290 samples, 0.01%)</title><rect x="137.5" y="1877" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="140.53" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (163,925,502 samples, 0.20%)</title><rect x="936.6" y="1733" width="2.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="939.59" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (33,653,981 samples, 0.04%)</title><rect x="612.6" y="1717" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="615.57" y="1727.5" ></text>
</g>
<g >
<title>nft_do_chain_ipv4 (69,194,070 samples, 0.08%)</title><rect x="858.6" y="1461" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="861.55" y="1471.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (21,174,903 samples, 0.03%)</title><rect x="774.7" y="1685" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="777.75" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (21,485,337 samples, 0.03%)</title><rect x="920.9" y="1765" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="923.85" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (10,385,960 samples, 0.01%)</title><rect x="254.9" y="1765" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="257.93" y="1775.5" ></text>
</g>
<g >
<title>_copy_from_user (9,208,077 samples, 0.01%)</title><rect x="315.8" y="1621" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="318.81" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (13,169,734 samples, 0.02%)</title><rect x="526.7" y="1669" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="529.73" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="565" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="575.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,770,691 samples, 0.02%)</title><rect x="603.9" y="1605" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="606.90" y="1615.5" ></text>
</g>
<g >
<title>set_root (12,087,388 samples, 0.01%)</title><rect x="806.8" y="1557" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="809.84" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (9,495,774 samples, 0.01%)</title><rect x="473.4" y="1717" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="476.43" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (12,072,459 samples, 0.01%)</title><rect x="715.0" y="1157" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="717.99" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (105,400,972 samples, 0.13%)</title><rect x="839.8" y="1717" width="1.5" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="842.82" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (13,019,765 samples, 0.02%)</title><rect x="798.1" y="1477" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="801.09" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (18,639,938 samples, 0.02%)</title><rect x="338.7" y="1765" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="341.70" y="1775.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (8,762,896 samples, 0.01%)</title><rect x="715.2" y="1285" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="718.19" y="1295.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,114,888 samples, 0.01%)</title><rect x="259.7" y="1621" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="262.75" y="1631.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (16,115,954 samples, 0.02%)</title><rect x="1115.2" y="1749" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1118.20" y="1759.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (16,518,285 samples, 0.02%)</title><rect x="89.8" y="1589" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="92.76" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (461,809,769 samples, 0.55%)</title><rect x="913.5" y="1749" width="6.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="916.55" y="1759.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (11,057,139 samples, 0.01%)</title><rect x="1085.1" y="1637" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1088.13" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,238,679 samples, 0.01%)</title><rect x="1152.1" y="1189" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1155.05" y="1199.5" ></text>
</g>
<g >
<title>netvsc_xmit (144,485,970 samples, 0.17%)</title><rect x="566.7" y="1365" width="2.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="569.69" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_read (8,508,858 samples, 0.01%)</title><rect x="674.1" y="1765" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="677.06" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (453,331,426 samples, 0.54%)</title><rect x="179.1" y="1765" width="6.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="182.06" y="1775.5" ></text>
</g>
<g >
<title>__fput_sync (7,843,600 samples, 0.01%)</title><rect x="610.1" y="1493" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="613.13" y="1503.5" ></text>
</g>
<g >
<title>std::function&lt;void  (9,104,406 samples, 0.01%)</title><rect x="610.1" y="1781" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="613.11" y="1791.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char*, char*&gt; (44,325,649 samples, 0.05%)</title><rect x="522.6" y="1733" width="0.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="525.60" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (9,761,984 samples, 0.01%)</title><rect x="374.6" y="1781" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="377.63" y="1791.5" ></text>
</g>
<g >
<title>ip_list_rcv (12,322,232 samples, 0.01%)</title><rect x="231.7" y="1573" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="234.71" y="1583.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (8,374,145 samples, 0.01%)</title><rect x="935.1" y="1701" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="938.07" y="1711.5" ></text>
</g>
<g >
<title>kmem_cache_free (18,453,407 samples, 0.02%)</title><rect x="656.2" y="1637" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="659.22" y="1647.5" ></text>
</g>
<g >
<title>__fget_light (35,315,680 samples, 0.04%)</title><rect x="1116.1" y="1701" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1119.12" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="885" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="895.5" ></text>
</g>
<g >
<title>Channel::OnRead (5,732,803,356 samples, 6.88%)</title><rect x="750.9" y="1909" width="81.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="753.87" y="1919.5" >Channel::..</text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (16,015,274 samples, 0.02%)</title><rect x="337.7" y="1717" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="340.67" y="1727.5" ></text>
</g>
<g >
<title>__strlen_avx2 (14,986,455 samples, 0.02%)</title><rect x="988.8" y="1781" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="991.83" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="533" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (10,614,792 samples, 0.01%)</title><rect x="781.1" y="1717" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="784.08" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (16,713,302 samples, 0.02%)</title><rect x="761.8" y="1717" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="764.77" y="1727.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (11,073,398 samples, 0.01%)</title><rect x="777.9" y="1733" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="780.94" y="1743.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, char*&gt; (7,247,810 samples, 0.01%)</title><rect x="522.6" y="1701" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="525.60" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,797,383 samples, 0.01%)</title><rect x="552.7" y="1573" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="555.73" y="1583.5" ></text>
</g>
<g >
<title>handle_softirqs (12,433,339 samples, 0.01%)</title><rect x="538.8" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="541.77" y="1615.5" ></text>
</g>
<g >
<title>fput (7,532,939 samples, 0.01%)</title><rect x="17.1" y="1605" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="20.08" y="1615.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (314,597,747 samples, 0.38%)</title><rect x="1072.8" y="1749" width="4.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1075.80" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (10,503,795 samples, 0.01%)</title><rect x="440.3" y="1605" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="443.28" y="1615.5" ></text>
</g>
<g >
<title>napi_gro_receive (10,574,210 samples, 0.01%)</title><rect x="1176.0" y="1573" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1178.96" y="1583.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (18,146,008 samples, 0.02%)</title><rect x="893.7" y="2021" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="896.65" y="2031.5" ></text>
</g>
<g >
<title>netvsc_poll (47,382,489 samples, 0.06%)</title><rect x="272.6" y="1317" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="275.58" y="1327.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (10,351,719 samples, 0.01%)</title><rect x="893.7" y="1845" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="896.68" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (17,004,464 samples, 0.02%)</title><rect x="308.4" y="2053" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="311.39" y="2063.5" ></text>
</g>
<g >
<title>lock_timer_base (18,326,619 samples, 0.02%)</title><rect x="429.8" y="1477" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="432.80" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="245" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="255.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1829" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1839.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,871,799 samples, 0.01%)</title><rect x="45.2" y="1669" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="48.22" y="1679.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (341,489,474 samples, 0.41%)</title><rect x="1006.9" y="1429" width="4.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1009.94" y="1439.5" ></text>
</g>
<g >
<title>netvsc_poll (7,072,047 samples, 0.01%)</title><rect x="28.8" y="1653" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="31.79" y="1663.5" ></text>
</g>
<g >
<title>handle_softirqs (13,421,283 samples, 0.02%)</title><rect x="1128.3" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1131.25" y="1615.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (34,800,594 samples, 0.04%)</title><rect x="387.3" y="1621" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="390.27" y="1631.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (84,926,783 samples, 0.10%)</title><rect x="428.9" y="1557" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="431.89" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (9,558,942 samples, 0.01%)</title><rect x="1045.5" y="1541" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1048.49" y="1551.5" ></text>
</g>
<g >
<title>validate_xmit_skb (15,284,141 samples, 0.02%)</title><rect x="277.1" y="1381" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="280.08" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (22,082,697 samples, 0.03%)</title><rect x="1106.0" y="1765" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1109.02" y="1775.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1253" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="928.84" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (33,084,914 samples, 0.04%)</title><rect x="757.5" y="1669" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="760.46" y="1679.5" ></text>
</g>
<g >
<title>ip_finish_output2 (350,009,688 samples, 0.42%)</title><rect x="714.1" y="1445" width="4.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="717.06" y="1455.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1381" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="925.16" y="1391.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1317" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="951.32" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (7,651,537 samples, 0.01%)</title><rect x="1105.5" y="1749" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1108.50" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (16,916,044 samples, 0.02%)</title><rect x="1024.1" y="1509" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1027.13" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="933" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="943.5" ></text>
</g>
<g >
<title>__memchr_avx2 (53,095,059 samples, 0.06%)</title><rect x="301.5" y="2037" width="0.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="304.53" y="2047.5" ></text>
</g>
<g >
<title>inode_has_perm (10,742,609 samples, 0.01%)</title><rect x="969.5" y="1637" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="972.49" y="1647.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (44,794,236 samples, 0.05%)</title><rect x="471.2" y="1653" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="474.23" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1909" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_erase (25,644,411 samples, 0.03%)</title><rect x="785.4" y="1749" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="788.38" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (65,181,028 samples, 0.08%)</title><rect x="58.0" y="1717" width="0.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="61.02" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (9,755,903 samples, 0.01%)</title><rect x="857.9" y="1333" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="860.87" y="1343.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (7,128,977 samples, 0.01%)</title><rect x="210.4" y="1557" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="213.36" y="1567.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (11,141,566 samples, 0.01%)</title><rect x="145.5" y="1893" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="148.50" y="1903.5" ></text>
</g>
<g >
<title>__alloc_skb (82,637,734 samples, 0.10%)</title><rect x="1164.7" y="1589" width="1.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1167.74" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_node_allocator (8,424,272 samples, 0.01%)</title><rect x="105.2" y="1701" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="108.23" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (39,672,611 samples, 0.05%)</title><rect x="731.7" y="1717" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="734.73" y="1727.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, char*&gt; (26,956,083 samples, 0.03%)</title><rect x="817.0" y="1685" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="820.01" y="1695.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1,049,322,021 samples, 1.26%)</title><rect x="854.3" y="1573" width="14.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="857.25" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (39,765,808 samples, 0.05%)</title><rect x="175.4" y="1717" width="0.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="178.44" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (9,653,581 samples, 0.01%)</title><rect x="450.1" y="2021" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="453.05" y="2031.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (238,636,806 samples, 0.29%)</title><rect x="642.3" y="1749" width="3.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="645.34" y="1759.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (37,955,361 samples, 0.05%)</title><rect x="84.8" y="1765" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.82" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (14,337,555 samples, 0.02%)</title><rect x="609.7" y="1765" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="612.74" y="1775.5" ></text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (7,222,188 samples, 0.01%)</title><rect x="410.6" y="1813" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="413.61" y="1823.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (47,744,841 samples, 0.06%)</title><rect x="649.0" y="1765" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="651.96" y="1775.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (8,625,960 samples, 0.01%)</title><rect x="663.9" y="1733" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="666.88" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (11,810,146 samples, 0.01%)</title><rect x="999.0" y="1605" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1001.99" y="1615.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1285" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="430.41" y="1295.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,882,009 samples, 0.01%)</title><rect x="562.2" y="1269" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="565.25" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (18,312,899 samples, 0.02%)</title><rect x="335.0" y="1765" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="337.99" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (11,564,397 samples, 0.01%)</title><rect x="1041.0" y="2053" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1044.02" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;int&gt;, true&gt;::_M_cget (8,183,023 samples, 0.01%)</title><rect x="1179.4" y="1861" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1182.39" y="1871.5" ></text>
</g>
<g >
<title>std::make_move_iterator&lt;char*&gt; (9,405,844 samples, 0.01%)</title><rect x="352.0" y="1701" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="354.96" y="1711.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (10,967,540 samples, 0.01%)</title><rect x="287.9" y="1813" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="290.93" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (13,160,814 samples, 0.02%)</title><rect x="984.5" y="1669" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="987.48" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,758,984 samples, 0.01%)</title><rect x="1095.0" y="1605" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1097.97" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (7,648,638 samples, 0.01%)</title><rect x="857.2" y="1349" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="860.21" y="1359.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (59,831,855 samples, 0.07%)</title><rect x="53.7" y="1717" width="0.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="56.71" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,863,323 samples, 0.01%)</title><rect x="503.3" y="1509" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="506.29" y="1519.5" ></text>
</g>
<g >
<title>__ip_local_out (252,235,551 samples, 0.30%)</title><rect x="710.1" y="1493" width="3.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="713.06" y="1503.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,268,113 samples, 0.01%)</title><rect x="336.7" y="1733" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="339.67" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1797" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1807.5" ></text>
</g>
<g >
<title>__napi_poll (8,226,950 samples, 0.01%)</title><rect x="708.0" y="1509" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="710.98" y="1519.5" ></text>
</g>
<g >
<title>netvsc_poll (21,030,750 samples, 0.03%)</title><rect x="674.3" y="1637" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="677.27" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (10,227,650 samples, 0.01%)</title><rect x="626.6" y="1717" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="629.64" y="1727.5" ></text>
</g>
<g >
<title>selinux_inode_permission (44,708,577 samples, 0.05%)</title><rect x="805.6" y="1557" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="808.62" y="1567.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (17,418,847 samples, 0.02%)</title><rect x="861.0" y="1221" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="863.96" y="1231.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (9,420,373 samples, 0.01%)</title><rect x="1154.0" y="1397" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1157.03" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (11,329,297 samples, 0.01%)</title><rect x="993.6" y="1797" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="996.64" y="1807.5" ></text>
</g>
<g >
<title>handle_softirqs (8,236,466 samples, 0.01%)</title><rect x="158.3" y="1973" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="161.26" y="1983.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (169,350,303 samples, 0.20%)</title><rect x="801.6" y="1637" width="2.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="804.60" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1397" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (8,878,656 samples, 0.01%)</title><rect x="157.8" y="2053" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="160.81" y="2063.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (28,346,751 samples, 0.03%)</title><rect x="141.4" y="1749" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="144.40" y="1759.5" ></text>
</g>
<g >
<title>netvsc_poll (19,021,499 samples, 0.02%)</title><rect x="387.3" y="1509" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="390.34" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="885" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="895.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (72,895,906 samples, 0.09%)</title><rect x="206.3" y="1733" width="1.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="209.34" y="1743.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (30,689,424 samples, 0.04%)</title><rect x="529.0" y="1669" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="532.01" y="1679.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (12,235,863 samples, 0.01%)</title><rect x="213.2" y="1349" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="216.21" y="1359.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (12,452,301 samples, 0.01%)</title><rect x="647.6" y="1653" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="650.60" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_comp_iter&lt;char const*&gt; (9,513,009 samples, 0.01%)</title><rect x="780.0" y="1749" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="783.00" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (7,605,581 samples, 0.01%)</title><rect x="1101.3" y="1509" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1104.33" y="1519.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc_cs (20,539,830 samples, 0.02%)</title><rect x="279.0" y="1557" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="282.05" y="1567.5" ></text>
</g>
<g >
<title>mod_timer (60,386,227 samples, 0.07%)</title><rect x="1163.0" y="1509" width="0.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1165.97" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (11,854,634 samples, 0.01%)</title><rect x="23.5" y="1669" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="26.50" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (14,448,922 samples, 0.02%)</title><rect x="999.7" y="1605" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1002.74" y="1615.5" ></text>
</g>
<g >
<title>netvsc_poll (61,736,200 samples, 0.07%)</title><rect x="124.5" y="1317" width="0.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="127.54" y="1327.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,988,022 samples, 0.01%)</title><rect x="611.9" y="1701" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="614.92" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (16,916,449 samples, 0.02%)</title><rect x="483.0" y="1765" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="486.02" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="101" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="111.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (8,010,118 samples, 0.01%)</title><rect x="759.5" y="1621" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="762.52" y="1631.5" ></text>
</g>
<g >
<title>selinux_file_permission (17,167,547 samples, 0.02%)</title><rect x="235.6" y="1685" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="238.59" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (8,321,816 samples, 0.01%)</title><rect x="1178.1" y="1861" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1181.08" y="1871.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,313,292 samples, 0.01%)</title><rect x="853.6" y="1573" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="856.58" y="1583.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (9,938,823,143 samples, 11.93%)</title><rect x="599.9" y="1989" width="140.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="602.90" y="1999.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>rndis_filter_receive (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1605" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1178.57" y="1615.5" ></text>
</g>
<g >
<title>__check_object_size (31,646,367 samples, 0.04%)</title><rect x="681.2" y="1573" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="684.20" y="1583.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (52,775,766 samples, 0.06%)</title><rect x="378.3" y="1717" width="0.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="381.31" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_established (9,025,864 samples, 0.01%)</title><rect x="82.7" y="1493" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="85.72" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (13,932,526 samples, 0.02%)</title><rect x="1014.6" y="1461" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1017.56" y="1471.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (8,175,998 samples, 0.01%)</title><rect x="1050.7" y="1669" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1053.69" y="1679.5" ></text>
</g>
<g >
<title>handle_softirqs (8,988,022 samples, 0.01%)</title><rect x="611.9" y="1685" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="614.92" y="1695.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,757,736 samples, 0.01%)</title><rect x="1045.5" y="1429" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1048.49" y="1439.5" ></text>
</g>
<g >
<title>__secure_computing (12,079,161 samples, 0.01%)</title><rect x="210.5" y="1685" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="213.51" y="1695.5" ></text>
</g>
<g >
<title>lock_sock_nested (20,661,241 samples, 0.02%)</title><rect x="414.4" y="1621" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="417.43" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (11,079,893 samples, 0.01%)</title><rect x="627.1" y="1765" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="630.11" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1109" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1119.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,754,787 samples, 0.01%)</title><rect x="1121.0" y="1605" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1123.98" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="645" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (17,671,866 samples, 0.02%)</title><rect x="1177.7" y="1909" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1180.69" y="1919.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (9,472,872 samples, 0.01%)</title><rect x="81.5" y="1749" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="84.54" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (9,856,527 samples, 0.01%)</title><rect x="541.2" y="1429" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="544.15" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (22,996,590 samples, 0.03%)</title><rect x="42.7" y="1717" width="0.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="45.68" y="1727.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (18,577,610 samples, 0.02%)</title><rect x="695.2" y="1669" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="698.19" y="1679.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (14,300,657 samples, 0.02%)</title><rect x="223.1" y="1781" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="226.15" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="69" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (20,236,824 samples, 0.02%)</title><rect x="813.4" y="1781" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="816.44" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (30,628,023 samples, 0.04%)</title><rect x="501.1" y="1685" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="504.07" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (10,490,926 samples, 0.01%)</title><rect x="734.6" y="1589" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="737.60" y="1599.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (21,873,625 samples, 0.03%)</title><rect x="163.2" y="1637" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.17" y="1647.5" ></text>
</g>
<g >
<title>handle_softirqs (8,385,464 samples, 0.01%)</title><rect x="1121.0" y="1557" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1124.00" y="1567.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (15,389,957 samples, 0.02%)</title><rect x="867.7" y="1413" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="870.65" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (174,029,084 samples, 0.21%)</title><rect x="981.0" y="1653" width="2.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="984.00" y="1663.5" ></text>
</g>
<g >
<title>__napi_poll (15,817,931 samples, 0.02%)</title><rect x="259.7" y="1701" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="262.72" y="1711.5" ></text>
</g>
<g >
<title>handle_softirqs (9,340,124 samples, 0.01%)</title><rect x="577.5" y="1845" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="580.48" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="869" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="879.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (10,103,204 samples, 0.01%)</title><rect x="290.2" y="1653" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="293.24" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="197" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_free (15,993,583 samples, 0.02%)</title><rect x="1098.0" y="1637" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1100.96" y="1647.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1,003,240,607 samples, 1.20%)</title><rect x="118.5" y="1573" width="14.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="121.51" y="1583.5" ></text>
</g>
<g >
<title>selinux_socket_recvmsg (11,013,757 samples, 0.01%)</title><rect x="976.1" y="1669" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="979.05" y="1679.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (22,766,879 samples, 0.03%)</title><rect x="385.0" y="1669" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="387.96" y="1679.5" ></text>
</g>
<g >
<title>nft_do_chain_ipv4 (71,584,956 samples, 0.09%)</title><rect x="420.7" y="1461" width="1.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="423.70" y="1471.5" ></text>
</g>
<g >
<title>__napi_poll (8,635,533 samples, 0.01%)</title><rect x="181.6" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="184.59" y="1583.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (8,206,133 samples, 0.01%)</title><rect x="134.1" y="1557" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="137.09" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="661" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="671.5" ></text>
</g>
<g >
<title>[unknown] (9,889,416 samples, 0.01%)</title><rect x="1142.2" y="1765" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.22" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (8,192,733 samples, 0.01%)</title><rect x="851.6" y="1605" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="854.58" y="1615.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (29,099,734 samples, 0.03%)</title><rect x="227.6" y="1717" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="230.64" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1541" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="997" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1007.5" ></text>
</g>
<g >
<title>__napi_poll (10,042,044 samples, 0.01%)</title><rect x="918.0" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="921.03" y="1583.5" ></text>
</g>
<g >
<title>netvsc_poll (8,631,893 samples, 0.01%)</title><rect x="898.3" y="1557" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="901.29" y="1567.5" ></text>
</g>
<g >
<title>do_iter_write (1,465,456,493 samples, 1.76%)</title><rect x="997.6" y="1701" width="20.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1000.58" y="1711.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (80,228,056 samples, 0.10%)</title><rect x="826.7" y="1605" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="829.75" y="1615.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,558,942 samples, 0.01%)</title><rect x="1045.5" y="1573" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1048.49" y="1583.5" ></text>
</g>
<g >
<title>[web-server] (12,201,154 samples, 0.01%)</title><rect x="649.8" y="1765" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="652.76" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (23,692,317 samples, 0.03%)</title><rect x="971.0" y="1621" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="974.04" y="1631.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (9,088,926 samples, 0.01%)</title><rect x="132.1" y="1557" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="135.06" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (15,723,506 samples, 0.02%)</title><rect x="448.9" y="69" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.89" y="79.5" ></text>
</g>
<g >
<title>__wake_up_common (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1189" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1002.78" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="677" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="687.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,074,555 samples, 0.01%)</title><rect x="327.2" y="1717" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="330.18" y="1727.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (10,509,260 samples, 0.01%)</title><rect x="559.4" y="1525" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="562.43" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="421" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (11,310,490 samples, 0.01%)</title><rect x="185.6" y="1765" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="188.58" y="1775.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (10,080,533 samples, 0.01%)</title><rect x="754.0" y="1621" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="757.01" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1525" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="186.34" y="1535.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (30,275,150 samples, 0.04%)</title><rect x="1129.3" y="1637" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1132.26" y="1647.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1,058,396,394 samples, 1.27%)</title><rect x="1149.2" y="1573" width="15.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1152.23" y="1583.5" ></text>
</g>
<g >
<title>__wake_up_sync (7,513,023 samples, 0.01%)</title><rect x="1175.6" y="1285" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1178.59" y="1295.5" ></text>
</g>
<g >
<title>Channel::OnEvents (8,982,189,265 samples, 10.78%)</title><rect x="10.5" y="1925" width="127.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="13.53" y="1935.5" >Channel::OnEvents</text>
</g>
<g >
<title>__wake_up_sync (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1189" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="928.84" y="1199.5" ></text>
</g>
<g >
<title>epoll_ctl (328,000,540 samples, 0.39%)</title><rect x="396.2" y="1685" width="4.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="399.19" y="1695.5" ></text>
</g>
<g >
<title>rndis_filter_receive (14,580,722 samples, 0.02%)</title><rect x="443.1" y="1605" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="446.14" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,566,871 samples, 0.01%)</title><rect x="247.5" y="1445" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="250.52" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (61,877,729 samples, 0.07%)</title><rect x="199.6" y="1733" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="202.58" y="1743.5" ></text>
</g>
<g >
<title>sock_write_iter (1,345,103,537 samples, 1.61%)</title><rect x="414.1" y="1669" width="19.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="417.11" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="789" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="799.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (35,122,308 samples, 0.04%)</title><rect x="937.6" y="1669" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="940.60" y="1679.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (20,381,620 samples, 0.02%)</title><rect x="408.9" y="1685" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="411.86" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (11,516,488 samples, 0.01%)</title><rect x="918.0" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="921.03" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (29,274,701 samples, 0.04%)</title><rect x="468.6" y="1717" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="471.58" y="1727.5" ></text>
</g>
<g >
<title>clear_bhb_loop (11,049,479 samples, 0.01%)</title><rect x="411.7" y="1781" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="414.67" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (8,323,093 samples, 0.01%)</title><rect x="172.5" y="1669" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="175.52" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (13,856,410 samples, 0.02%)</title><rect x="1024.5" y="1541" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1027.49" y="1551.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (10,770,860 samples, 0.01%)</title><rect x="1015.0" y="1557" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1017.96" y="1567.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (18,941,124 samples, 0.02%)</title><rect x="1155.8" y="1221" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1158.78" y="1231.5" ></text>
</g>
<g >
<title>netvsc_poll (9,856,379 samples, 0.01%)</title><rect x="820.8" y="1637" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="823.80" y="1647.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,906,666 samples, 0.01%)</title><rect x="1052.5" y="1717" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1055.47" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (10,699,475 samples, 0.01%)</title><rect x="387.4" y="1301" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="390.42" y="1311.5" ></text>
</g>
<g >
<title>putname (9,433,063 samples, 0.01%)</title><rect x="361.4" y="1669" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="364.35" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="373" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="383.5" ></text>
</g>
<g >
<title>tcp_send_mss (20,409,849 samples, 0.02%)</title><rect x="869.2" y="1605" width="0.3" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="872.17" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,238,679 samples, 0.01%)</title><rect x="1152.1" y="1269" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1155.05" y="1279.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,480,665 samples, 0.01%)</title><rect x="733.4" y="1749" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="736.43" y="1759.5" ></text>
</g>
<g >
<title>security_inode_permission (56,312,193 samples, 0.07%)</title><rect x="366.1" y="1573" width="0.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="369.11" y="1583.5" ></text>
</g>
<g >
<title>netvsc_poll (17,159,667 samples, 0.02%)</title><rect x="672.3" y="1685" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="675.34" y="1695.5" ></text>
</g>
<g >
<title>ip_output (435,215,405 samples, 0.52%)</title><rect x="1006.6" y="1493" width="6.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1009.61" y="1503.5" ></text>
</g>
<g >
<title>do_epoll_wait (413,670,884 samples, 0.50%)</title><rect x="1170.6" y="1829" width="5.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1173.65" y="1839.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (22,474,549 samples, 0.03%)</title><rect x="584.4" y="1685" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="587.43" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,475,104 samples, 0.01%)</title><rect x="1101.3" y="1589" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1104.30" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1205" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1215.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (18,326,488 samples, 0.02%)</title><rect x="1185.8" y="2053" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1188.77" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (7,123,157 samples, 0.01%)</title><rect x="929.1" y="1605" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="932.06" y="1615.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,140,667 samples, 0.01%)</title><rect x="1071.8" y="1685" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1074.79" y="1695.5" ></text>
</g>
<g >
<title>handle_softirqs (9,906,647 samples, 0.01%)</title><rect x="839.7" y="1637" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="842.66" y="1647.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (254,729,629 samples, 0.31%)</title><rect x="632.3" y="1733" width="3.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="635.29" y="1743.5" ></text>
</g>
<g >
<title>__napi_poll (20,507,891 samples, 0.02%)</title><rect x="231.7" y="1653" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="234.67" y="1663.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, char*&gt; (38,501,448 samples, 0.05%)</title><rect x="1111.4" y="1701" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1114.36" y="1711.5" ></text>
</g>
<g >
<title>__napi_poll (7,519,736 samples, 0.01%)</title><rect x="157.4" y="1941" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="160.42" y="1951.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (19,290,601 samples, 0.02%)</title><rect x="382.7" y="1733" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="385.68" y="1743.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,462,965 samples, 0.02%)</title><rect x="1152.0" y="1413" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1155.00" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1173" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1183.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,346,516 samples, 0.01%)</title><rect x="162.0" y="1525" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="165.04" y="1535.5" ></text>
</g>
<g >
<title>napi_gro_receive (10,307,572 samples, 0.01%)</title><rect x="423.1" y="1269" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="426.13" y="1279.5" ></text>
</g>
<g >
<title>std::make_move_iterator&lt;char*&gt; (13,024,514 samples, 0.02%)</title><rect x="498.3" y="1701" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="501.34" y="1711.5" ></text>
</g>
<g >
<title>x64_sys_call (1,615,353,643 samples, 1.94%)</title><rect x="703.9" y="1765" width="22.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="706.94" y="1775.5" >x..</text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1701" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (208,024,407 samples, 0.25%)</title><rect x="1128.5" y="1669" width="3.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1131.52" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="245" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="255.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (10,480,665 samples, 0.01%)</title><rect x="733.4" y="1765" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="736.43" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1557" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="469.26" y="1567.5" ></text>
</g>
<g >
<title>napi_complete_done (14,878,351 samples, 0.02%)</title><rect x="652.0" y="1573" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="654.98" y="1583.5" ></text>
</g>
<g >
<title>handle_softirqs (46,837,187 samples, 0.06%)</title><rect x="1027.4" y="1669" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1030.36" y="1679.5" ></text>
</g>
<g >
<title>__napi_poll (9,640,164 samples, 0.01%)</title><rect x="1129.4" y="1525" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1132.35" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (9,582,050 samples, 0.01%)</title><rect x="561.3" y="1333" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="564.33" y="1343.5" ></text>
</g>
<g >
<title>irq_exit_rcu (30,255,273 samples, 0.04%)</title><rect x="440.1" y="1765" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="443.12" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::erase (24,071,427 samples, 0.03%)</title><rect x="47.1" y="1765" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="50.15" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (30,426,012 samples, 0.04%)</title><rect x="682.3" y="1621" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="685.29" y="1631.5" ></text>
</g>
<g >
<title>netvsc_xmit (150,735,609 samples, 0.18%)</title><rect x="716.4" y="1365" width="2.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="719.42" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (8,685,106 samples, 0.01%)</title><rect x="664.2" y="1749" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="667.16" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (8,214,476 samples, 0.01%)</title><rect x="168.1" y="1669" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="171.10" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (12,435,649 samples, 0.01%)</title><rect x="233.3" y="1685" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="236.28" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="997" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1007.5" ></text>
</g>
<g >
<title>netvsc_poll (8,792,498 samples, 0.01%)</title><rect x="1002.6" y="1429" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1005.64" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (9,978,112 samples, 0.01%)</title><rect x="493.8" y="1765" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="496.80" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1541" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1178.57" y="1551.5" ></text>
</g>
<g >
<title>std::function&lt;void  (410,179,926 samples, 0.49%)</title><rect x="161.5" y="1765" width="5.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="164.48" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (10,382,930 samples, 0.01%)</title><rect x="775.8" y="1765" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="778.79" y="1775.5" ></text>
</g>
<g >
<title>ip_finish_output2 (384,130,191 samples, 0.46%)</title><rect x="272.0" y="1445" width="5.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="274.95" y="1455.5" ></text>
</g>
<g >
<title>__errno_location (8,899,706 samples, 0.01%)</title><rect x="380.2" y="1813" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="383.22" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (8,879,295 samples, 0.01%)</title><rect x="796.1" y="1701" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="799.14" y="1711.5" ></text>
</g>
<g >
<title>__get_task_ioprio (9,817,878 samples, 0.01%)</title><rect x="705.4" y="1685" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="708.43" y="1695.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (14,097,929 samples, 0.02%)</title><rect x="505.9" y="1701" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="508.87" y="1711.5" ></text>
</g>
<g >
<title>x64_sys_call (139,170,993 samples, 0.17%)</title><rect x="540.1" y="1637" width="2.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="543.12" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (18,657,101 samples, 0.02%)</title><rect x="894.9" y="2053" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="897.86" y="2063.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (11,685,164 samples, 0.01%)</title><rect x="210.2" y="1509" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="213.19" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (437,388,216 samples, 0.52%)</title><rect x="30.1" y="1717" width="6.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="33.11" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (9,568,103 samples, 0.01%)</title><rect x="476.7" y="1701" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="479.73" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="213" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="223.5" ></text>
</g>
<g >
<title>napi_complete_done (7,882,009 samples, 0.01%)</title><rect x="562.2" y="1285" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="565.25" y="1295.5" ></text>
</g>
<g >
<title>__fdget (20,289,739 samples, 0.02%)</title><rect x="1046.7" y="1589" width="0.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1049.73" y="1599.5" ></text>
</g>
<g >
<title>handle_softirqs (11,785,662 samples, 0.01%)</title><rect x="865.1" y="1365" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="868.14" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="853" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="863.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,042,044 samples, 0.01%)</title><rect x="918.0" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="921.03" y="1631.5" ></text>
</g>
<g >
<title>irq_exit_rcu (17,864,943 samples, 0.02%)</title><rect x="1040.6" y="2005" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1043.58" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (462,191,737 samples, 0.55%)</title><rect x="769.1" y="1749" width="6.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="772.06" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1141" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1151.5" ></text>
</g>
<g >
<title>strncpy_from_user (8,379,628 samples, 0.01%)</title><rect x="214.5" y="1637" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="217.53" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="373" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="383.5" ></text>
</g>
<g >
<title>security_file_permission (120,003,936 samples, 0.14%)</title><rect x="822.5" y="1685" width="1.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="825.49" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (303,175,758 samples, 0.36%)</title><rect x="762.3" y="1733" width="4.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="765.28" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1893" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1903.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (9,656,570 samples, 0.01%)</title><rect x="421.3" y="1173" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="424.27" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1109" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1119.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (16,729,358 samples, 0.02%)</title><rect x="228.1" y="1733" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="231.10" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (10,606,763 samples, 0.01%)</title><rect x="376.8" y="1797" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="379.82" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1381" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (114,202,608 samples, 0.14%)</title><rect x="694.5" y="1733" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="697.46" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,909,884 samples, 0.01%)</title><rect x="1163.1" y="1429" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1166.06" y="1439.5" ></text>
</g>
<g >
<title>selinux_parse_skb.constprop.0 (8,714,449 samples, 0.01%)</title><rect x="1012.5" y="1429" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1015.46" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="933" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="943.5" ></text>
</g>
<g >
<title>skb_clone (8,940,300 samples, 0.01%)</title><rect x="866.2" y="1541" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="869.15" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="405" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="415.5" ></text>
</g>
<g >
<title>tcp_rcv_established (8,793,819 samples, 0.01%)</title><rect x="360.3" y="1397" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="363.26" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1813" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1823.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, char*&gt; (27,050,336 samples, 0.03%)</title><rect x="522.8" y="1685" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="525.79" y="1695.5" ></text>
</g>
<g >
<title>__do_softirq (9,755,903 samples, 0.01%)</title><rect x="857.9" y="1365" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="860.87" y="1375.5" ></text>
</g>
<g >
<title>_copy_to_iter (29,620,967 samples, 0.04%)</title><rect x="390.2" y="1573" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="393.17" y="1583.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,289,542 samples, 0.01%)</title><rect x="186.7" y="1749" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="189.74" y="1759.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (26,842,801 samples, 0.03%)</title><rect x="993.1" y="1685" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="996.09" y="1695.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (21,162,142 samples, 0.03%)</title><rect x="464.6" y="1669" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="467.62" y="1679.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, char*, char*&gt; (16,092,399 samples, 0.02%)</title><rect x="937.7" y="1637" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="940.68" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (11,957,931 samples, 0.01%)</title><rect x="481.5" y="1717" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="484.54" y="1727.5" ></text>
</g>
<g >
<title>__napi_poll (22,127,065 samples, 0.03%)</title><rect x="290.2" y="1701" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="293.21" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (10,118,650 samples, 0.01%)</title><rect x="190.9" y="1717" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="193.89" y="1727.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (9,757,083 samples, 0.01%)</title><rect x="677.4" y="1605" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="680.41" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (10,129,939 samples, 0.01%)</title><rect x="698.9" y="1733" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="701.90" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1717" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="925.16" y="1727.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (24,503,164 samples, 0.03%)</title><rect x="1016.3" y="1541" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1019.29" y="1551.5" ></text>
</g>
<g >
<title>net_rx_action (8,144,801 samples, 0.01%)</title><rect x="679.0" y="1541" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="682.00" y="1551.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equal_to_iter::operator (7,495,033 samples, 0.01%)</title><rect x="780.6" y="1733" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="783.64" y="1743.5" ></text>
</g>
<g >
<title>napi_complete_done (11,943,763 samples, 0.01%)</title><rect x="421.2" y="1301" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="424.24" y="1311.5" ></text>
</g>
<g >
<title>std::function&lt;void  (5,896,373,161 samples, 7.08%)</title><rect x="1043.2" y="1893" width="83.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1046.17" y="1903.5" >std::func..</text>
</g>
<g >
<title>handle_softirqs (7,871,799 samples, 0.01%)</title><rect x="45.2" y="1621" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="48.22" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (18,303,938 samples, 0.02%)</title><rect x="798.1" y="1589" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="801.07" y="1599.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (35,358,701 samples, 0.04%)</title><rect x="870.7" y="1653" width="0.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="873.73" y="1663.5" ></text>
</g>
<g >
<title>rndis_filter_receive (14,078,075 samples, 0.02%)</title><rect x="1027.8" y="1605" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1030.78" y="1615.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,488,956 samples, 0.01%)</title><rect x="857.2" y="1429" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="860.18" y="1439.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (9,423,703 samples, 0.01%)</title><rect x="682.1" y="1605" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="685.13" y="1615.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (15,269,336 samples, 0.02%)</title><rect x="379.2" y="1701" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="382.18" y="1711.5" ></text>
</g>
<g >
<title>lock_sock_nested (21,813,317 samples, 0.03%)</title><rect x="999.0" y="1621" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1001.99" y="1631.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (21,746,071 samples, 0.03%)</title><rect x="205.6" y="1653" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="208.57" y="1663.5" ></text>
</g>
<g >
<title>handle_softirqs (16,168,766 samples, 0.02%)</title><rect x="971.1" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="974.08" y="1567.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (193,439,362 samples, 0.23%)</title><rect x="237.1" y="1637" width="2.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="240.06" y="1647.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (787,503,451 samples, 0.94%)</title><rect x="673.1" y="1797" width="11.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="676.07" y="1807.5" ></text>
</g>
<g >
<title>irq_exit_rcu (21,375,833 samples, 0.03%)</title><rect x="213.1" y="1573" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="216.13" y="1583.5" ></text>
</g>
<g >
<title>path_lookupat (225,383,395 samples, 0.27%)</title><rect x="67.8" y="1621" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="70.81" y="1631.5" ></text>
</g>
<g >
<title>nf_hook_slow (233,103,983 samples, 0.28%)</title><rect x="418.4" y="1477" width="3.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="421.41" y="1487.5" ></text>
</g>
<g >
<title>net_rx_action (26,224,429 samples, 0.03%)</title><rect x="380.7" y="1717" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="383.68" y="1727.5" ></text>
</g>
<g >
<title>nf_conntrack_in (128,120,610 samples, 0.15%)</title><rect x="418.7" y="1445" width="1.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="421.70" y="1455.5" ></text>
</g>
<g >
<title>rndis_filter_receive (7,430,370 samples, 0.01%)</title><rect x="112.7" y="1669" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="115.67" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="117" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="127.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1765" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="171.38" y="1775.5" ></text>
</g>
<g >
<title>__alloc_skb (100,048,295 samples, 0.12%)</title><rect x="1015.9" y="1589" width="1.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1018.95" y="1599.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (564,083,964 samples, 0.68%)</title><rect x="931.1" y="1781" width="8.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="934.09" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1397" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1407.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (7,763,810 samples, 0.01%)</title><rect x="780.2" y="1749" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="783.16" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (10,482,301 samples, 0.01%)</title><rect x="915.3" y="1685" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="918.32" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (11,172,978 samples, 0.01%)</title><rect x="99.0" y="1509" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="102.02" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (15,112,853 samples, 0.02%)</title><rect x="409.7" y="1765" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="412.71" y="1775.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (161,713,598 samples, 0.19%)</title><rect x="126.4" y="1397" width="2.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="129.44" y="1407.5" ></text>
</g>
<g >
<title>netvsc_poll (52,067,552 samples, 0.06%)</title><rect x="1155.6" y="1317" width="0.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1158.56" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1045" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1055.5" ></text>
</g>
<g >
<title>selinux_file_permission (13,560,737 samples, 0.02%)</title><rect x="530.4" y="1685" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="533.39" y="1695.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (7,812,876 samples, 0.01%)</title><rect x="641.7" y="1717" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="644.73" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (10,509,260 samples, 0.01%)</title><rect x="559.4" y="1477" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="562.43" y="1487.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (14,599,937 samples, 0.02%)</title><rect x="380.8" y="1605" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="383.79" y="1615.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (219,349,770 samples, 0.26%)</title><rect x="839.2" y="1797" width="3.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="842.16" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_established (23,391,671 samples, 0.03%)</title><rect x="124.8" y="1125" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="127.83" y="1135.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (13,701,883 samples, 0.02%)</title><rect x="778.2" y="1733" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="781.19" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (30,984,958 samples, 0.04%)</title><rect x="974.7" y="1621" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="977.69" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (17,413,806 samples, 0.02%)</title><rect x="185.1" y="1717" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="188.09" y="1727.5" ></text>
</g>
<g >
<title>security_file_permission (118,547,809 samples, 0.14%)</title><rect x="1117.1" y="1685" width="1.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1120.08" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (18,585,532 samples, 0.02%)</title><rect x="894.6" y="2053" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="897.59" y="2063.5" ></text>
</g>
<g >
<title>__napi_poll (10,062,565 samples, 0.01%)</title><rect x="803.1" y="1509" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="806.07" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="485" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (31,620,716 samples, 0.04%)</title><rect x="1056.5" y="1637" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1059.49" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (101,712,606 samples, 0.12%)</title><rect x="408.2" y="1765" width="1.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="411.16" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::clear (48,364,521 samples, 0.06%)</title><rect x="590.0" y="1925" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="592.97" y="1935.5" ></text>
</g>
<g >
<title>std::function&lt;void  (5,916,860,726 samples, 7.10%)</title><rect x="159.7" y="1893" width="83.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="162.69" y="1903.5" >std::func..</text>
</g>
<g >
<title>handle_softirqs (13,340,280 samples, 0.02%)</title><rect x="541.2" y="1525" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="544.15" y="1535.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (14,699,562 samples, 0.02%)</title><rect x="679.0" y="1605" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="681.98" y="1615.5" ></text>
</g>
<g >
<title>_raw_write_unlock_irq (33,407,002 samples, 0.04%)</title><rect x="290.1" y="1813" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="293.12" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (20,678,232 samples, 0.02%)</title><rect x="189.3" y="1749" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="192.34" y="1759.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,246,094 samples, 0.01%)</title><rect x="519.4" y="1733" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="522.40" y="1743.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (31,789,634 samples, 0.04%)</title><rect x="136.9" y="1797" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="139.92" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,930,668 samples, 0.01%)</title><rect x="244.9" y="1525" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="247.87" y="1535.5" ></text>
</g>
<g >
<title>__napi_poll (9,447,309 samples, 0.01%)</title><rect x="224.2" y="1669" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="227.20" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (120,345,750 samples, 0.14%)</title><rect x="1134.3" y="1733" width="1.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1137.33" y="1743.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,579,409,304 samples, 1.90%)</title><rect x="411.8" y="1781" width="22.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="414.83" y="1791.5" >d..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (219,345,841 samples, 0.26%)</title><rect x="539.0" y="1669" width="3.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="542.01" y="1679.5" ></text>
</g>
<g >
<title>epoll_wait (501,916,924 samples, 0.60%)</title><rect x="578.4" y="1909" width="7.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="581.43" y="1919.5" ></text>
</g>
<g >
<title>handle_softirqs (9,856,379 samples, 0.01%)</title><rect x="820.8" y="1685" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="823.80" y="1695.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,980,105 samples, 0.01%)</title><rect x="440.0" y="1573" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="442.95" y="1583.5" ></text>
</g>
<g >
<title>__memchr_avx2 (22,857,465 samples, 0.03%)</title><rect x="1036.7" y="2053" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1039.75" y="2063.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (10,477,897 samples, 0.01%)</title><rect x="1008.2" y="1365" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1011.20" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (7,993,913 samples, 0.01%)</title><rect x="1030.0" y="1861" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1033.04" y="1871.5" ></text>
</g>
<g >
<title>HttpResponse::Clear (8,067,673 samples, 0.01%)</title><rect x="47.6" y="1781" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="50.56" y="1791.5" ></text>
</g>
<g >
<title>inet_sendmsg (1,327,336,909 samples, 1.59%)</title><rect x="555.8" y="1653" width="18.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="558.81" y="1663.5" ></text>
</g>
<g >
<title>inet_recvmsg (303,764,851 samples, 0.36%)</title><rect x="824.6" y="1669" width="4.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="827.57" y="1679.5" ></text>
</g>
<g >
<title>clear_bhb_loop (8,165,604 samples, 0.01%)</title><rect x="113.2" y="1781" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="116.22" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,152,498 samples, 0.01%)</title><rect x="985.4" y="1653" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="988.41" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (23,934,222 samples, 0.03%)</title><rect x="749.0" y="2053" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="752.02" y="2063.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (7,342,805 samples, 0.01%)</title><rect x="318.4" y="1765" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="321.38" y="1775.5" ></text>
</g>
<g >
<title>__strlen_avx2 (11,949,506 samples, 0.01%)</title><rect x="939.6" y="1749" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="942.60" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="517" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="527.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7,155,189 samples, 0.01%)</title><rect x="311.8" y="1413" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="314.78" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (11,089,696 samples, 0.01%)</title><rect x="429.4" y="1477" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="432.44" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (11,910,545 samples, 0.01%)</title><rect x="258.5" y="1733" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="261.50" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (10,591,659 samples, 0.01%)</title><rect x="552.7" y="1637" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="555.69" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (14,978,728 samples, 0.02%)</title><rect x="1090.8" y="1509" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1093.79" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;char*&gt; (110,098,812 samples, 0.13%)</title><rect x="961.7" y="1765" width="1.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="964.75" y="1775.5" ></text>
</g>
<g >
<title>_int_free (10,072,727 samples, 0.01%)</title><rect x="890.8" y="2053" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="893.85" y="2063.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (25,098,158 samples, 0.03%)</title><rect x="144.2" y="1477" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="147.19" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (72,288,236 samples, 0.09%)</title><rect x="254.3" y="1781" width="1.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="257.30" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (125,476,985 samples, 0.15%)</title><rect x="295.5" y="1893" width="1.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="298.51" y="1903.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,906,647 samples, 0.01%)</title><rect x="839.7" y="1669" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="842.66" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="149" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="159.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,699,475 samples, 0.01%)</title><rect x="387.4" y="1365" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="390.42" y="1375.5" ></text>
</g>
<g >
<title>net_rx_action (9,649,911 samples, 0.01%)</title><rect x="1143.2" y="1717" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1146.23" y="1727.5" ></text>
</g>
<g >
<title>std::make_move_iterator&lt;char*&gt; (13,861,666 samples, 0.02%)</title><rect x="792.3" y="1701" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="795.32" y="1711.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,156,049 samples, 0.01%)</title><rect x="99.0" y="1429" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="102.02" y="1439.5" ></text>
</g>
<g >
<title>selinux_file_permission (9,883,843 samples, 0.01%)</title><rect x="1118.8" y="1685" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1121.76" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (36,450,619 samples, 0.04%)</title><rect x="860.9" y="1317" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="863.91" y="1327.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (27,292,918 samples, 0.03%)</title><rect x="999.6" y="1621" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1002.56" y="1631.5" ></text>
</g>
<g >
<title>std::function&lt;void  (55,505,516 samples, 0.07%)</title><rect x="465.4" y="1781" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="468.38" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (8,438,077 samples, 0.01%)</title><rect x="1146.9" y="1605" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1149.88" y="1615.5" ></text>
</g>
<g >
<title>Channel::OnEvents (8,740,961,839 samples, 10.49%)</title><rect x="750.1" y="1925" width="123.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="753.09" y="1935.5" >Channel::OnEvents</text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="639.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (7,154,086 samples, 0.01%)</title><rect x="414.8" y="1589" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="417.82" y="1599.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (14,255,933 samples, 0.02%)</title><rect x="244.8" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="247.84" y="1631.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,333,147 samples, 0.02%)</title><rect x="314.7" y="1541" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="317.74" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (19,561,987 samples, 0.02%)</title><rect x="338.4" y="1749" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="341.39" y="1759.5" ></text>
</g>
<g >
<title>irq_exit_rcu (12,813,382 samples, 0.02%)</title><rect x="1188.5" y="2005" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1191.48" y="2015.5" ></text>
</g>
<g >
<title>[web-server] (18,695,463 samples, 0.02%)</title><rect x="812.5" y="1781" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="815.48" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,566,871 samples, 0.01%)</title><rect x="247.5" y="1429" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="250.52" y="1439.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (9,462,643,912 samples, 11.35%)</title><rect x="456.8" y="1957" width="134.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="459.84" y="1967.5" >EventLoopThread:..</text>
</g>
<g >
<title>nft_counter_eval (14,734,755 samples, 0.02%)</title><rect x="563.4" y="1429" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="566.39" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (28,777,115 samples, 0.03%)</title><rect x="479.7" y="1669" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="482.69" y="1679.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (16,509,995 samples, 0.02%)</title><rect x="503.3" y="1557" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="506.29" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (8,438,808 samples, 0.01%)</title><rect x="815.4" y="1781" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="818.41" y="1791.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,168,852 samples, 0.01%)</title><rect x="376.7" y="1781" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="379.66" y="1791.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (66,884,800 samples, 0.08%)</title><rect x="536.0" y="1797" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="539.03" y="1807.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (9,180,302 samples, 0.01%)</title><rect x="256.8" y="1717" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="259.80" y="1727.5" ></text>
</g>
<g >
<title>sch_direct_xmit (9,029,011 samples, 0.01%)</title><rect x="125.5" y="1397" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="128.50" y="1407.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (22,406,937 samples, 0.03%)</title><rect x="674.3" y="1733" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="677.25" y="1743.5" ></text>
</g>
<g >
<title>file_has_perm (30,213,364 samples, 0.04%)</title><rect x="385.8" y="1653" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="388.85" y="1663.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long&gt; (12,941,804 samples, 0.02%)</title><rect x="202.5" y="1717" width="0.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="205.48" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (74,300,500 samples, 0.09%)</title><rect x="241.0" y="1797" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="244.03" y="1807.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (35,122,308 samples, 0.04%)</title><rect x="937.6" y="1653" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="940.60" y="1663.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (10,708,042 samples, 0.01%)</title><rect x="131.2" y="1461" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="134.16" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (20,901,709 samples, 0.03%)</title><rect x="482.7" y="1765" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="485.73" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1829" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (41,644,831 samples, 0.05%)</title><rect x="204.3" y="1749" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="207.32" y="1759.5" ></text>
</g>
<g >
<title>netvsc_poll (11,115,827 samples, 0.01%)</title><rect x="524.7" y="1685" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="527.72" y="1695.5" ></text>
</g>
<g >
<title>handle_softirqs (29,127,084 samples, 0.03%)</title><rect x="581.8" y="1733" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="584.80" y="1743.5" ></text>
</g>
<g >
<title>selinux_file_permission (87,733,775 samples, 0.11%)</title><rect x="385.3" y="1669" width="1.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="388.29" y="1679.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (70,806,752 samples, 0.08%)</title><rect x="1155.4" y="1413" width="1.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1158.43" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="245" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="255.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="197" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="207.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (7,482,725 samples, 0.01%)</title><rect x="427.0" y="1381" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="429.97" y="1391.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (15,072,510 samples, 0.02%)</title><rect x="228.1" y="1685" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="231.12" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (9,242,440 samples, 0.01%)</title><rect x="960.7" y="1749" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="963.70" y="1759.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (12,077,526 samples, 0.01%)</title><rect x="122.4" y="1461" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="125.45" y="1471.5" ></text>
</g>
<g >
<title>__GI___stat64 (9,111,941 samples, 0.01%)</title><rect x="662.1" y="1765" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="665.11" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (447,790,603 samples, 0.54%)</title><rect x="179.1" y="1733" width="6.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="182.14" y="1743.5" ></text>
</g>
<g >
<title>sock_poll (23,996,053 samples, 0.03%)</title><rect x="606.4" y="1573" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="609.44" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (9,675,688 samples, 0.01%)</title><rect x="102.9" y="1749" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="105.90" y="1759.5" ></text>
</g>
<g >
<title>selinux_file_permission (12,750,738 samples, 0.02%)</title><rect x="824.2" y="1685" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="827.19" y="1695.5" ></text>
</g>
<g >
<title>napi_complete_done (9,856,527 samples, 0.01%)</title><rect x="541.2" y="1461" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="544.15" y="1471.5" ></text>
</g>
<g >
<title>___slab_alloc (11,884,669 samples, 0.01%)</title><rect x="133.6" y="1525" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="136.62" y="1535.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (46,642,035 samples, 0.06%)</title><rect x="644.1" y="1685" width="0.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="647.07" y="1695.5" ></text>
</g>
<g >
<title>memset_orig (8,709,772 samples, 0.01%)</title><rect x="870.1" y="1557" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="873.09" y="1567.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,503,795 samples, 0.01%)</title><rect x="440.3" y="1557" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="443.28" y="1567.5" ></text>
</g>
<g >
<title>rep_movs_alternative (20,648,492 samples, 0.02%)</title><rect x="1148.2" y="1589" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1151.22" y="1599.5" ></text>
</g>
<g >
<title>netvsc_poll (8,457,169 samples, 0.01%)</title><rect x="784.4" y="1589" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="787.42" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (14,485,841 samples, 0.02%)</title><rect x="980.2" y="1525" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="983.16" y="1535.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (7,302,252 samples, 0.01%)</title><rect x="764.5" y="1637" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="767.53" y="1647.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (29,116,699 samples, 0.03%)</title><rect x="1029.3" y="1877" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1032.28" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (11,704,207 samples, 0.01%)</title><rect x="376.5" y="1781" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="379.50" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1477" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1178.57" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1157" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (72,433,271 samples, 0.09%)</title><rect x="407.1" y="1765" width="1.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="410.05" y="1775.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (7,556,441 samples, 0.01%)</title><rect x="583.8" y="1765" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="586.83" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (11,022,248 samples, 0.01%)</title><rect x="374.4" y="1781" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="377.36" y="1791.5" ></text>
</g>
<g >
<title>__strlen_avx2 (10,130,879 samples, 0.01%)</title><rect x="887.5" y="2021" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="890.51" y="2031.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1333" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="951.32" y="1343.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (11,628,825 samples, 0.01%)</title><rect x="905.0" y="1669" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="908.01" y="1679.5" ></text>
</g>
<g >
<title>__napi_poll (7,400,562 samples, 0.01%)</title><rect x="280.0" y="1365" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="282.98" y="1375.5" ></text>
</g>
<g >
<title>__fget_light (28,005,228 samples, 0.03%)</title><rect x="1144.9" y="1701" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1147.89" y="1711.5" ></text>
</g>
<g >
<title>__fget_light (50,457,542 samples, 0.06%)</title><rect x="232.7" y="1701" width="0.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="235.75" y="1711.5" ></text>
</g>
<g >
<title>netvsc_poll (11,073,398 samples, 0.01%)</title><rect x="777.9" y="1621" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="780.94" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1701" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1711.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (14,487,388 samples, 0.02%)</title><rect x="496.1" y="1669" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="499.08" y="1679.5" ></text>
</g>
<g >
<title>rep_movs_alternative (26,436,716 samples, 0.03%)</title><rect x="681.7" y="1557" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="684.69" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1269" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1279.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,112,787 samples, 0.01%)</title><rect x="123.0" y="1381" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="125.99" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="309" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="319.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,491,874 samples, 0.02%)</title><rect x="208.2" y="1701" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="211.17" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (7,228,362 samples, 0.01%)</title><rect x="619.2" y="1765" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="622.19" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1845" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1855.5" ></text>
</g>
<g >
<title>handle_softirqs (26,939,315 samples, 0.03%)</title><rect x="878.1" y="1733" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="881.08" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,026,006 samples, 0.01%)</title><rect x="1184.9" y="2005" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1187.88" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="837" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="847.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="437" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="447.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,137,745 samples, 0.01%)</title><rect x="777.9" y="1557" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="780.94" y="1567.5" ></text>
</g>
<g >
<title>handle_softirqs (24,555,883 samples, 0.03%)</title><rect x="650.1" y="1685" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="653.14" y="1695.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (7,384,465 samples, 0.01%)</title><rect x="269.8" y="1397" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="272.78" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (8,093,060 samples, 0.01%)</title><rect x="768.1" y="1765" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="771.11" y="1775.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (9,412,967 samples, 0.01%)</title><rect x="879.9" y="1781" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="882.88" y="1791.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,249,162 samples, 0.02%)</title><rect x="877.8" y="1765" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="880.79" y="1775.5" ></text>
</g>
<g >
<title>path_lookupat (199,750,931 samples, 0.24%)</title><rect x="215.1" y="1621" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="218.06" y="1631.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,622,853,781 samples, 1.95%)</title><rect x="113.3" y="1781" width="23.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="116.33" y="1791.5" >d..</text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (9,275,471 samples, 0.01%)</title><rect x="344.3" y="1717" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="347.32" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1349" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="430.41" y="1359.5" ></text>
</g>
<g >
<title>inode_has_perm (11,392,689 samples, 0.01%)</title><rect x="530.1" y="1637" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="533.08" y="1647.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (14,435,564 samples, 0.02%)</title><rect x="14.0" y="1605" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="17.03" y="1615.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (7,818,301 samples, 0.01%)</title><rect x="1021.5" y="1813" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1024.54" y="1823.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,123,157 samples, 0.01%)</title><rect x="929.1" y="1653" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="932.06" y="1663.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (15,735,555 samples, 0.02%)</title><rect x="210.5" y="1701" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="213.46" y="1711.5" ></text>
</g>
<g >
<title>napi_complete_done (7,350,092 samples, 0.01%)</title><rect x="399.0" y="1461" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="401.97" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1717" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1727.5" ></text>
</g>
<g >
<title>__napi_poll (24,940,592 samples, 0.03%)</title><rect x="293.2" y="1637" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="296.17" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1173" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="430.41" y="1183.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (10,629,766 samples, 0.01%)</title><rect x="574.3" y="1557" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="577.35" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (476,883,043 samples, 0.57%)</title><rect x="913.4" y="1765" width="6.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="916.36" y="1775.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (35,333,922 samples, 0.04%)</title><rect x="134.7" y="1653" width="0.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="137.73" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (9,772,983 samples, 0.01%)</title><rect x="546.6" y="1781" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="549.62" y="1791.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (18,146,008 samples, 0.02%)</title><rect x="893.7" y="1989" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="896.65" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (7,064,715 samples, 0.01%)</title><rect x="761.8" y="1653" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="764.81" y="1663.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (11,498,016 samples, 0.01%)</title><rect x="320.9" y="1685" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="323.90" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;char*&gt; (140,706,392 samples, 0.17%)</title><rect x="377.8" y="1765" width="2.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="380.79" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (15,545,057 samples, 0.02%)</title><rect x="65.7" y="1525" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="68.72" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1141" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1151.5" ></text>
</g>
<g >
<title>net_rx_action (15,989,192 samples, 0.02%)</title><rect x="688.0" y="1589" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="691.05" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (9,258,675 samples, 0.01%)</title><rect x="443.0" y="1445" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="445.97" y="1455.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (26,276,098 samples, 0.03%)</title><rect x="1037.1" y="2053" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1040.07" y="2063.5" ></text>
</g>
<g >
<title>__ip_local_out (226,866,190 samples, 0.27%)</title><rect x="1003.3" y="1493" width="3.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1006.31" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1973" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1013" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1023.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (12,646,891 samples, 0.02%)</title><rect x="818.8" y="1637" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="821.85" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="949" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="959.5" ></text>
</g>
<g >
<title>ip_list_rcv (12,746,272 samples, 0.02%)</title><rect x="980.2" y="1493" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="983.18" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1893" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (14,429,661 samples, 0.02%)</title><rect x="321.8" y="1701" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="324.84" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,234,970 samples, 0.01%)</title><rect x="731.6" y="1621" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="734.56" y="1631.5" ></text>
</g>
<g >
<title>__check_object_size (21,710,279 samples, 0.03%)</title><rect x="92.2" y="1573" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="95.18" y="1583.5" ></text>
</g>
<g >
<title>memcpy_orig (20,860,053 samples, 0.03%)</title><rect x="1158.2" y="1349" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1161.25" y="1359.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (157,142,628 samples, 0.19%)</title><rect x="23.8" y="1717" width="2.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="26.80" y="1727.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (445,415,089 samples, 0.53%)</title><rect x="12.5" y="1781" width="6.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="15.47" y="1791.5" ></text>
</g>
<g >
<title>memcpy_orig (20,529,413 samples, 0.02%)</title><rect x="863.0" y="1349" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="866.00" y="1359.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,033,129 samples, 0.01%)</title><rect x="1173.7" y="1781" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1176.72" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (26,575,496 samples, 0.03%)</title><rect x="735.9" y="1877" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="738.88" y="1887.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (29,545,300 samples, 0.04%)</title><rect x="1038.8" y="2053" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1041.85" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (11,172,719 samples, 0.01%)</title><rect x="518.9" y="1781" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="521.91" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (11,656,175 samples, 0.01%)</title><rect x="445.1" y="1877" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="448.05" y="1887.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (18,692,537 samples, 0.02%)</title><rect x="1141.4" y="1669" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1144.45" y="1679.5" ></text>
</g>
<g >
<title>__napi_poll (9,856,379 samples, 0.01%)</title><rect x="820.8" y="1653" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="823.80" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (23,573,283 samples, 0.03%)</title><rect x="1141.8" y="1733" width="0.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1144.83" y="1743.5" ></text>
</g>
<g >
<title>memset_orig (8,252,291 samples, 0.01%)</title><rect x="282.4" y="1557" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="285.41" y="1567.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (9,092,097 samples, 0.01%)</title><rect x="703.8" y="1765" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="706.81" y="1775.5" ></text>
</g>
<g >
<title>netvsc_poll (7,736,283 samples, 0.01%)</title><rect x="1163.1" y="1349" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1166.06" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="645" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="655.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1013" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (220,578,165 samples, 0.26%)</title><rect x="448.6" y="2053" width="3.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.64" y="2063.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,689,740 samples, 0.01%)</title><rect x="98.2" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="101.19" y="1679.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (14,741,395 samples, 0.02%)</title><rect x="437.2" y="1861" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="440.17" y="1871.5" ></text>
</g>
<g >
<title>__napi_poll (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1653" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="295.80" y="1663.5" ></text>
</g>
<g >
<title>cache_from_obj (7,093,765 samples, 0.01%)</title><rect x="92.0" y="1573" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.98" y="1583.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (7,999,362 samples, 0.01%)</title><rect x="1013.4" y="1541" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1016.38" y="1551.5" ></text>
</g>
<g >
<title>net_rx_action (10,060,443 samples, 0.01%)</title><rect x="234.8" y="1573" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="237.84" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (11,673,882 samples, 0.01%)</title><rect x="868.3" y="1461" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="871.32" y="1471.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (23,664,983 samples, 0.03%)</title><rect x="800.6" y="1701" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="803.62" y="1711.5" ></text>
</g>
<g >
<title>_raw_write_unlock_irq (47,188,477 samples, 0.06%)</title><rect x="877.8" y="1813" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="880.79" y="1823.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (7,228,043 samples, 0.01%)</title><rect x="643.0" y="1717" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="645.97" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="869" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="879.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1061" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1071.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (10,070,794 samples, 0.01%)</title><rect x="437.7" y="1813" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="440.73" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9,860,719 samples, 0.01%)</title><rect x="1113.2" y="1525" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1116.24" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="453" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="463.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (15,886,457 samples, 0.02%)</title><rect x="93.5" y="1605" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="96.51" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (9,111,997 samples, 0.01%)</title><rect x="650.2" y="1525" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="653.20" y="1535.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1765" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="469.26" y="1775.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,714,840 samples, 0.02%)</title><rect x="803.0" y="1573" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="806.05" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="661" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="671.5" ></text>
</g>
<g >
<title>__napi_poll (10,860,659 samples, 0.01%)</title><rect x="1188.5" y="1941" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1191.51" y="1951.5" ></text>
</g>
<g >
<title>sock_read_iter (399,714,465 samples, 0.48%)</title><rect x="386.7" y="1701" width="5.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="389.65" y="1711.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (22,477,490 samples, 0.03%)</title><rect x="1047.3" y="1589" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1050.29" y="1599.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (9,945,833 samples, 0.01%)</title><rect x="1179.6" y="1861" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1182.65" y="1871.5" ></text>
</g>
<g >
<title>netvsc_poll (11,842,066 samples, 0.01%)</title><rect x="581.6" y="1685" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="584.64" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="725" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="735.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1845" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1855.5" ></text>
</g>
<g >
<title>selinux_ip_postroute_compat (20,094,381 samples, 0.02%)</title><rect x="427.6" y="1445" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="430.56" y="1455.5" ></text>
</g>
<g >
<title>__napi_poll (11,537,378 samples, 0.01%)</title><rect x="410.9" y="1701" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="413.91" y="1711.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,354,031 samples, 0.01%)</title><rect x="748.0" y="2037" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="751.02" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_last_not_of (17,805,835 samples, 0.02%)</title><rect x="627.5" y="1765" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="630.51" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="213" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="223.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (140,331,459 samples, 0.17%)</title><rect x="139.2" y="1813" width="2.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="142.20" y="1823.5" ></text>
</g>
<g >
<title>tcp_poll (16,001,644 samples, 0.02%)</title><rect x="606.6" y="1557" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="609.55" y="1567.5" ></text>
</g>
<g >
<title>netvsc_poll (10,306,909 samples, 0.01%)</title><rect x="704.6" y="1573" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="707.61" y="1583.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (28,849,548 samples, 0.03%)</title><rect x="610.4" y="1781" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="613.36" y="1791.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (11,624,571 samples, 0.01%)</title><rect x="519.9" y="1781" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="522.88" y="1791.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (3,957,506,058 samples, 4.75%)</title><rect x="759.6" y="1797" width="56.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="762.63" y="1807.5" >HttpC..</text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="693" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="703.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,008,551 samples, 0.01%)</title><rect x="1008.0" y="1189" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1010.95" y="1199.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (66,912,816 samples, 0.08%)</title><rect x="845.4" y="1733" width="1.0" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="848.44" y="1743.5" ></text>
</g>
<g >
<title>tcp_data_ready (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1717" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="747.77" y="1727.5" ></text>
</g>
<g >
<title>tcp_push (964,485,228 samples, 1.16%)</title><rect x="1001.8" y="1605" width="13.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1004.85" y="1615.5" ></text>
</g>
<g >
<title>vfs_writev (1,485,377,768 samples, 1.78%)</title><rect x="554.9" y="1717" width="21.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="557.92" y="1727.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (8,639,996 samples, 0.01%)</title><rect x="722.5" y="1557" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="725.54" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1365" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1375.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (51,346,168 samples, 0.06%)</title><rect x="53.8" y="1685" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="56.77" y="1695.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (35,366,737 samples, 0.04%)</title><rect x="883.9" y="1829" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="886.88" y="1839.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (13,617,151 samples, 0.02%)</title><rect x="216.7" y="1541" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="219.69" y="1551.5" ></text>
</g>
<g >
<title>kmalloc_reserve (37,796,070 samples, 0.05%)</title><rect x="282.0" y="1573" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="284.99" y="1583.5" ></text>
</g>
<g >
<title>selinux_socket_recvmsg (40,446,169 samples, 0.05%)</title><rect x="240.0" y="1653" width="0.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="243.04" y="1663.5" ></text>
</g>
<g >
<title>handle_softirqs (7,876,432 samples, 0.01%)</title><rect x="899.3" y="1557" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="902.33" y="1567.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (12,232,679 samples, 0.01%)</title><rect x="271.3" y="1477" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="274.28" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (15,006,681 samples, 0.02%)</title><rect x="1143.4" y="1797" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1146.37" y="1807.5" ></text>
</g>
<g >
<title>vfs_read (573,296,864 samples, 0.69%)</title><rect x="675.9" y="1717" width="8.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="678.90" y="1727.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (11,548,850 samples, 0.01%)</title><rect x="688.1" y="1477" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="691.06" y="1487.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (12,542,712 samples, 0.02%)</title><rect x="199.8" y="1669" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="202.78" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (33,298,373 samples, 0.04%)</title><rect x="549.3" y="1717" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="552.29" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (17,974,488 samples, 0.02%)</title><rect x="205.9" y="1701" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="208.93" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="805" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="815.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1925" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1935.5" ></text>
</g>
<g >
<title>sock_poll (13,391,258 samples, 0.02%)</title><rect x="247.7" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="250.67" y="1583.5" ></text>
</g>
<g >
<title>lock_sock_nested (27,816,394 samples, 0.03%)</title><rect x="531.1" y="1637" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="534.06" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="149" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="159.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (10,122,253 samples, 0.01%)</title><rect x="966.7" y="1749" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="969.73" y="1759.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (27,387,246 samples, 0.03%)</title><rect x="166.7" y="1669" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="169.74" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (14,348,866 samples, 0.02%)</title><rect x="988.3" y="1781" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="991.34" y="1791.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (462,004,414 samples, 0.55%)</title><rect x="653.0" y="1701" width="6.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="656.03" y="1711.5" ></text>
</g>
<g >
<title>netvsc_select_queue (8,656,176 samples, 0.01%)</title><rect x="566.0" y="1413" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="569.00" y="1423.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (81,504,422 samples, 0.10%)</title><rect x="130.8" y="1541" width="1.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="133.83" y="1551.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (9,860,719 samples, 0.01%)</title><rect x="1113.2" y="1589" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1116.24" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (10,397,930 samples, 0.01%)</title><rect x="172.5" y="1685" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="175.49" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="373" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (7,630,768 samples, 0.01%)</title><rect x="812.0" y="1765" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="814.95" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1701" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1711.5" ></text>
</g>
<g >
<title>__napi_poll (8,421,630 samples, 0.01%)</title><rect x="927.7" y="1589" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="930.67" y="1599.5" ></text>
</g>
<g >
<title>__secure_computing (16,599,822 samples, 0.02%)</title><rect x="99.2" y="1605" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="102.22" y="1615.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,708,042 samples, 0.01%)</title><rect x="131.2" y="1429" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="134.16" y="1439.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,906,666 samples, 0.01%)</title><rect x="1052.5" y="1749" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1055.47" y="1759.5" ></text>
</g>
<g >
<title>handle_softirqs (16,554,758 samples, 0.02%)</title><rect x="505.3" y="1637" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="508.33" y="1647.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, char*&gt; (34,046,196 samples, 0.04%)</title><rect x="962.3" y="1701" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="965.28" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (23,777,209 samples, 0.03%)</title><rect x="1050.2" y="1765" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1053.17" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (8,961,558 samples, 0.01%)</title><rect x="1140.9" y="1605" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1143.88" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (33,759,843 samples, 0.04%)</title><rect x="446.0" y="1845" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="449.00" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (10,717,004 samples, 0.01%)</title><rect x="993.2" y="1669" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="996.21" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (13,512,541 samples, 0.02%)</title><rect x="295.2" y="1877" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="298.15" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="357" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (16,286,496 samples, 0.02%)</title><rect x="961.3" y="1797" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="964.29" y="1807.5" ></text>
</g>
<g >
<title>getname_flags (220,135,678 samples, 0.26%)</title><rect x="211.5" y="1653" width="3.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="214.53" y="1663.5" ></text>
</g>
<g >
<title>do_syscall_64 (572,580,288 samples, 0.69%)</title><rect x="799.9" y="1733" width="8.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="802.88" y="1743.5" ></text>
</g>
<g >
<title>sock_def_readable (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1397" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="295.80" y="1407.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (187,918,341 samples, 0.23%)</title><rect x="781.9" y="1717" width="2.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="784.88" y="1727.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (18,671,922 samples, 0.02%)</title><rect x="505.3" y="1701" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="508.30" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::erase (29,538,909 samples, 0.04%)</title><rect x="195.2" y="1765" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="198.19" y="1775.5" ></text>
</g>
<g >
<title>__memchr_avx2 (44,532,858 samples, 0.05%)</title><rect x="450.2" y="2037" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="453.24" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (67,342,378 samples, 0.08%)</title><rect x="513.1" y="1749" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="516.14" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (28,359,899 samples, 0.03%)</title><rect x="607.4" y="1669" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="610.45" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (80,285,801 samples, 0.10%)</title><rect x="1178.2" y="1877" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1181.20" y="1887.5" ></text>
</g>
<g >
<title>tcp_push (1,072,425,923 samples, 1.29%)</title><rect x="1149.0" y="1605" width="15.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1152.04" y="1615.5" ></text>
</g>
<g >
<title>__skb_flow_dissect (10,097,693 samples, 0.01%)</title><rect x="126.0" y="1381" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="129.03" y="1391.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,279,046 samples, 0.01%)</title><rect x="84.9" y="1605" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="87.92" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="853" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="863.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (16,694,036 samples, 0.02%)</title><rect x="1108.9" y="1781" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1111.90" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (14,350,849 samples, 0.02%)</title><rect x="970.8" y="1621" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="973.84" y="1631.5" ></text>
</g>
<g >
<title>sock_poll (20,379,760 samples, 0.02%)</title><rect x="100.7" y="1573" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="103.73" y="1583.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,507,946 samples, 0.01%)</title><rect x="193.9" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="196.87" y="1679.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (10,573,342 samples, 0.01%)</title><rect x="959.6" y="1781" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="962.58" y="1791.5" ></text>
</g>
<g >
<title>tcp_tso_segs (8,038,305 samples, 0.01%)</title><rect x="281.0" y="1557" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="284.00" y="1567.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (9,859,649,005 samples, 11.83%)</title><rect x="309.0" y="2037" width="139.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="312.03" y="2047.5" >std::thread::_Sta..</text>
</g>
<g >
<title>__irq_exit_rcu (31,306,018 samples, 0.04%)</title><rect x="503.2" y="1701" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="506.24" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1893" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (719,830,707 samples, 0.86%)</title><rect x="358.6" y="1749" width="10.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="361.60" y="1759.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (74,480,515 samples, 0.09%)</title><rect x="681.0" y="1605" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="684.03" y="1615.5" ></text>
</g>
<g >
<title>HttpRouter::Route (7,825,629 samples, 0.01%)</title><rect x="668.2" y="1797" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="671.17" y="1807.5" ></text>
</g>
<g >
<title>nft_counter_eval (21,972,498 samples, 0.03%)</title><rect x="859.2" y="1429" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="862.18" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="949" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="959.5" ></text>
</g>
<g >
<title>__fget_light (10,525,694 samples, 0.01%)</title><rect x="836.0" y="1573" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="839.01" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (9,057,447 samples, 0.01%)</title><rect x="603.7" y="1637" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="606.71" y="1647.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,904,066,853 samples, 11.88%)</title><rect x="10.2" y="2021" width="140.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.25" y="2031.5" >std::thread::_Inv..</text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1717" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1727.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (9,132,117 samples, 0.01%)</title><rect x="1024.2" y="1333" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1027.24" y="1343.5" ></text>
</g>
<g >
<title>vfs_read (474,341,390 samples, 0.57%)</title><rect x="528.4" y="1717" width="6.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="531.35" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (8,321,816 samples, 0.01%)</title><rect x="1178.1" y="1845" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1181.08" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7,562,544 samples, 0.01%)</title><rect x="141.6" y="1477" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="144.63" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (15,120,622 samples, 0.02%)</title><rect x="521.0" y="1749" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="523.96" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (584,681,469 samples, 0.70%)</title><rect x="944.1" y="1733" width="8.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="947.10" y="1743.5" ></text>
</g>
<g >
<title>__fdget_pos (22,825,002 samples, 0.03%)</title><rect x="412.7" y="1717" width="0.3" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="415.71" y="1727.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (16,641,682 samples, 0.02%)</title><rect x="357.7" y="1557" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="360.73" y="1567.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (11,628,825 samples, 0.01%)</title><rect x="905.0" y="1653" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="908.01" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1125" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1135.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (17,827,357 samples, 0.02%)</title><rect x="689.1" y="1621" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="692.13" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="485" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (193,404,706 samples, 0.23%)</title><rect x="98.7" y="1653" width="2.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="101.66" y="1663.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (841,125,557 samples, 1.01%)</title><rect x="942.6" y="1765" width="11.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="945.56" y="1775.5" ></text>
</g>
<g >
<title>walk_component (51,392,691 samples, 0.06%)</title><rect x="511.8" y="1589" width="0.7" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="514.76" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (9,104,406 samples, 0.01%)</title><rect x="610.1" y="1765" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="613.11" y="1775.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (308,131,779 samples, 0.37%)</title><rect x="907.5" y="1749" width="4.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="910.47" y="1759.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (9,859,649,005 samples, 11.83%)</title><rect x="309.0" y="1957" width="139.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="312.03" y="1967.5" >EventLoopThread::..</text>
</g>
<g >
<title>irq_exit_rcu (19,277,707 samples, 0.02%)</title><rect x="311.7" y="1637" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="314.74" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="837" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="847.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1941" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1951.5" ></text>
</g>
<g >
<title>__fdget (31,139,562 samples, 0.04%)</title><rect x="690.5" y="1589" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="693.48" y="1599.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13,970,624 samples, 0.02%)</title><rect x="1138.2" y="1765" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1141.19" y="1775.5" ></text>
</g>
<g >
<title>[web-server] (21,413,491 samples, 0.03%)</title><rect x="767.1" y="1765" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="770.09" y="1775.5" ></text>
</g>
<g >
<title>std::function&lt;void  (49,885,008 samples, 0.06%)</title><rect x="102.7" y="1781" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="105.66" y="1791.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (18,184,629 samples, 0.02%)</title><rect x="227.7" y="1637" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="230.71" y="1647.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (43,943,251 samples, 0.05%)</title><rect x="1004.9" y="1429" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1007.86" y="1439.5" ></text>
</g>
<g >
<title>handle_softirqs (12,328,208 samples, 0.01%)</title><rect x="586.1" y="1781" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="589.08" y="1791.5" ></text>
</g>
<g >
<title>operator new (7,667,777 samples, 0.01%)</title><rect x="455.6" y="2053" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="458.63" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="661" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="671.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,623,595 samples, 0.02%)</title><rect x="84.9" y="1733" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="87.87" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (9,836,229 samples, 0.01%)</title><rect x="84.9" y="1669" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="87.92" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (24,542,082 samples, 0.03%)</title><rect x="1113.1" y="1797" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1116.13" y="1807.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (15,957,002 samples, 0.02%)</title><rect x="629.7" y="1733" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="632.68" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (7,342,805 samples, 0.01%)</title><rect x="318.4" y="1669" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="321.38" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (9,860,719 samples, 0.01%)</title><rect x="1113.2" y="1573" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1116.24" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (16,916,044 samples, 0.02%)</title><rect x="1024.1" y="1653" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1027.13" y="1663.5" ></text>
</g>
<g >
<title>netvsc_poll (14,232,421 samples, 0.02%)</title><rect x="311.8" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="314.78" y="1567.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (72,440,538 samples, 0.09%)</title><rect x="333.0" y="1685" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="336.02" y="1695.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (19,669,995 samples, 0.02%)</title><rect x="941.3" y="1653" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="944.27" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="869" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="879.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="469" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (5,754,242,749 samples, 6.90%)</title><rect x="896.8" y="1845" width="81.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="899.83" y="1855.5" >std::__in..</text>
</g>
<g >
<title>net_rx_action (17,676,026 samples, 0.02%)</title><rect x="360.2" y="1621" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="363.21" y="1631.5" ></text>
</g>
<g >
<title>clear_bhb_loop (9,629,389 samples, 0.01%)</title><rect x="703.4" y="1781" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="706.42" y="1791.5" ></text>
</g>
<g >
<title>nft_immediate_eval (8,837,718 samples, 0.01%)</title><rect x="563.6" y="1445" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="566.60" y="1455.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (18,003,671 samples, 0.02%)</title><rect x="465.9" y="1765" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="468.88" y="1775.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,765,702,225 samples, 11.72%)</title><rect x="895.5" y="2005" width="138.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="898.52" y="2015.5" >std::thread::_Inv..</text>
</g>
<g >
<title>napi_gro_receive (14,936,381 samples, 0.02%)</title><rect x="125.2" y="1269" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="128.18" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (9,873,169 samples, 0.01%)</title><rect x="638.8" y="1749" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="641.84" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7,437,251 samples, 0.01%)</title><rect x="69.2" y="1301" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="72.22" y="1311.5" ></text>
</g>
<g >
<title>handle_softirqs (21,030,750 samples, 0.03%)</title><rect x="674.3" y="1685" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="677.27" y="1695.5" ></text>
</g>
<g >
<title>__x64_sys_close (7,843,600 samples, 0.01%)</title><rect x="610.1" y="1509" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="613.13" y="1519.5" ></text>
</g>
<g >
<title>selinux_ip_postroute (29,146,006 samples, 0.03%)</title><rect x="1160.9" y="1461" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1163.88" y="1471.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (11,550,941 samples, 0.01%)</title><rect x="409.4" y="1717" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="412.38" y="1727.5" ></text>
</g>
<g >
<title>netvsc_select_queue (44,761,307 samples, 0.05%)</title><rect x="423.5" y="1397" width="0.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="426.51" y="1407.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (13,806,761 samples, 0.02%)</title><rect x="565.0" y="1237" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="568.01" y="1247.5" ></text>
</g>
<g >
<title>do_epoll_ctl (164,057,166 samples, 0.20%)</title><rect x="604.6" y="1605" width="2.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="607.59" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (29,305,787 samples, 0.04%)</title><rect x="133.4" y="1557" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="136.42" y="1567.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (13,686,619 samples, 0.02%)</title><rect x="447.8" y="1925" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="450.75" y="1935.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (8,431,726 samples, 0.01%)</title><rect x="229.7" y="1589" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="232.65" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (18,003,671 samples, 0.02%)</title><rect x="465.9" y="1749" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="468.88" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (31,201,145 samples, 0.04%)</title><rect x="167.8" y="1765" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="170.80" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (83,712,714 samples, 0.10%)</title><rect x="109.8" y="1733" width="1.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="112.85" y="1743.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (206,338,677 samples, 0.25%)</title><rect x="353.8" y="1765" width="2.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="356.78" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (10,816,888 samples, 0.01%)</title><rect x="954.9" y="1765" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="957.87" y="1775.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (7,802,275 samples, 0.01%)</title><rect x="209.9" y="1717" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="212.87" y="1727.5" ></text>
</g>
<g >
<title>__strlen_avx2 (15,847,652 samples, 0.02%)</title><rect x="516.2" y="1749" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="519.23" y="1759.5" ></text>
</g>
<g >
<title>selinux_inode_permission (8,639,198 samples, 0.01%)</title><rect x="511.6" y="1573" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="514.58" y="1583.5" ></text>
</g>
<g >
<title>napi_complete_done (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1493" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="928.84" y="1503.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (113,149,076 samples, 0.14%)</title><rect x="1026.7" y="1797" width="1.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1029.72" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1189" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1199.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (358,787,707 samples, 0.43%)</title><rect x="253.6" y="1797" width="5.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="256.62" y="1807.5" ></text>
</g>
<g >
<title>path_lookupat (203,496,589 samples, 0.24%)</title><rect x="949.3" y="1621" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="952.34" y="1631.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,876,432 samples, 0.01%)</title><rect x="899.3" y="1605" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="902.33" y="1615.5" ></text>
</g>
<g >
<title>kmalloc_reserve (49,909,658 samples, 0.06%)</title><rect x="723.7" y="1573" width="0.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="726.72" y="1583.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7,151,242 samples, 0.01%)</title><rect x="584.5" y="1477" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="587.48" y="1487.5" ></text>
</g>
<g >
<title>nft_do_chain (40,380,505 samples, 0.05%)</title><rect x="563.0" y="1445" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="566.02" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1077" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1087.5" ></text>
</g>
<g >
<title>__check_object_size (8,200,998 samples, 0.01%)</title><rect x="557.1" y="1605" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="560.09" y="1615.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (435,904,361 samples, 0.52%)</title><rect x="602.7" y="1733" width="6.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="605.69" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,760,778 samples, 0.01%)</title><rect x="598.2" y="2005" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="601.19" y="2015.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (10,503,795 samples, 0.01%)</title><rect x="440.3" y="1573" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="443.28" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (21,770,579 samples, 0.03%)</title><rect x="272.6" y="1269" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="275.60" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="133" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (15,162,098 samples, 0.02%)</title><rect x="787.4" y="1765" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="790.38" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="805" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="815.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,407,017 samples, 0.01%)</title><rect x="1079.0" y="1717" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1082.03" y="1727.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (470,933,626 samples, 0.57%)</title><rect x="801.2" y="1685" width="6.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="804.24" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (8,839,253 samples, 0.01%)</title><rect x="842.7" y="1781" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="845.69" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (9,036,569 samples, 0.01%)</title><rect x="586.4" y="1877" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="589.37" y="1887.5" ></text>
</g>
<g >
<title>ip_local_out (700,897,719 samples, 0.84%)</title><rect x="560.1" y="1509" width="9.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="563.11" y="1519.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (8,852,089 samples, 0.01%)</title><rect x="693.5" y="1717" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="696.54" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (16,019,718 samples, 0.02%)</title><rect x="669.1" y="1781" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="672.05" y="1791.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (24,951,788 samples, 0.03%)</title><rect x="165.2" y="1589" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="168.25" y="1599.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (8,897,934 samples, 0.01%)</title><rect x="985.7" y="1765" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="988.65" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (20,871,830 samples, 0.03%)</title><rect x="1024.5" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1027.45" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="981" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="991.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (36,723,507 samples, 0.04%)</title><rect x="564.9" y="1413" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="567.86" y="1423.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (18,482,705 samples, 0.02%)</title><rect x="937.1" y="1621" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="940.05" y="1631.5" ></text>
</g>
<g >
<title>netvsc_send_pkt (86,235,837 samples, 0.10%)</title><rect x="717.3" y="1333" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="720.28" y="1343.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (22,333,503 samples, 0.03%)</title><rect x="935.2" y="1717" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="938.22" y="1727.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,266,023 samples, 0.01%)</title><rect x="768.6" y="1749" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="771.60" y="1759.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,092,194,945 samples, 1.31%)</title><rect x="1127.3" y="1813" width="15.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1130.32" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1797" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1807.5" ></text>
</g>
<g >
<title>__ip_finish_output (374,323,637 samples, 0.45%)</title><rect x="1006.7" y="1461" width="5.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1009.65" y="1471.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,671,451 samples, 0.01%)</title><rect x="707.9" y="1573" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="710.86" y="1583.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (343,973,370 samples, 0.41%)</title><rect x="979.8" y="1717" width="4.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="982.82" y="1727.5" ></text>
</g>
<g >
<title>sock_poll (14,363,512 samples, 0.02%)</title><rect x="541.4" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="544.42" y="1583.5" ></text>
</g>
<g >
<title>__napi_poll (18,391,018 samples, 0.02%)</title><rect x="964.3" y="1701" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="967.30" y="1711.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (203,868,829 samples, 0.24%)</title><rect x="945.6" y="1637" width="2.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="948.63" y="1647.5" ></text>
</g>
<g >
<title>tcp_skb_entail (13,208,872 samples, 0.02%)</title><rect x="573.3" y="1605" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="576.33" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (14,445,305 samples, 0.02%)</title><rect x="225.2" y="1781" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="228.22" y="1791.5" ></text>
</g>
<g >
<title>netvsc_send_pkt (10,477,897 samples, 0.01%)</title><rect x="1008.2" y="1317" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1011.20" y="1327.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (16,655,467 samples, 0.02%)</title><rect x="652.0" y="1701" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="654.98" y="1711.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,401,788 samples, 0.01%)</title><rect x="312.7" y="1573" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="315.66" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (68,661,759 samples, 0.08%)</title><rect x="108.7" y="1749" width="1.0" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="111.73" y="1759.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (41,404,687 samples, 0.05%)</title><rect x="201.9" y="1717" width="0.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="204.89" y="1727.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (14,803,597 samples, 0.02%)</title><rect x="1163.0" y="1477" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1166.02" y="1487.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2,927,533,044 samples, 3.51%)</title><rect x="832.2" y="1893" width="41.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="835.19" y="1903.5" >std..</text>
</g>
<g >
<title>nf_hook_slow (44,508,193 samples, 0.05%)</title><rect x="129.3" y="1477" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="132.31" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (661,276,779 samples, 0.79%)</title><rect x="1115.0" y="1781" width="9.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1117.99" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (13,012,395 samples, 0.02%)</title><rect x="340.3" y="1717" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="343.32" y="1727.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (11,172,978 samples, 0.01%)</title><rect x="99.0" y="1621" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="102.02" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (12,257,230 samples, 0.01%)</title><rect x="889.5" y="2037" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="892.51" y="2047.5" ></text>
</g>
<g >
<title>sock_write_iter (1,436,738,473 samples, 1.72%)</title><rect x="850.9" y="1669" width="20.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="853.91" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (28,153,941 samples, 0.03%)</title><rect x="442.9" y="1653" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="445.95" y="1663.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (16,153,650 samples, 0.02%)</title><rect x="648.5" y="1637" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="651.47" y="1647.5" ></text>
</g>
<g >
<title>napi_complete_done (34,032,949 samples, 0.04%)</title><rect x="1155.6" y="1301" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1158.59" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (473,662,533 samples, 0.57%)</title><rect x="328.2" y="1765" width="6.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="331.16" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (26,813,961 samples, 0.03%)</title><rect x="124.8" y="1189" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="127.78" y="1199.5" ></text>
</g>
<g >
<title>napi_complete_done (11,066,616 samples, 0.01%)</title><rect x="442.9" y="1605" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="445.95" y="1615.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (22,406,937 samples, 0.03%)</title><rect x="674.3" y="1749" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="677.25" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1093" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (9,455,757 samples, 0.01%)</title><rect x="811.5" y="1749" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="814.50" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1909" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1381" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1391.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (8,277,680 samples, 0.01%)</title><rect x="602.3" y="1749" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="605.31" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1813" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (16,834,554 samples, 0.02%)</title><rect x="381.1" y="1797" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="384.12" y="1807.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (20,321,290 samples, 0.02%)</title><rect x="277.0" y="1397" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="280.03" y="1407.5" ></text>
</g>
<g >
<title>__seccomp_filter (9,341,545 samples, 0.01%)</title><rect x="981.3" y="1589" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="984.31" y="1599.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,547,446 samples, 0.01%)</title><rect x="1024.0" y="1749" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1027.00" y="1759.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (4,090,100,601 samples, 4.91%)</title><rect x="610.2" y="1797" width="58.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="613.24" y="1807.5" >HttpCo..</text>
</g>
<g >
<title>netif_receive_skb_list_internal (15,290,330 samples, 0.02%)</title><rect x="650.2" y="1605" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="653.16" y="1615.5" ></text>
</g>
<g >
<title>handle_softirqs (8,465,226 samples, 0.01%)</title><rect x="712.0" y="1349" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="715.04" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (40,100,949 samples, 0.05%)</title><rect x="330.4" y="1685" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="333.40" y="1695.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (10,627,597 samples, 0.01%)</title><rect x="1175.6" y="1717" width="0.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1178.57" y="1727.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,057,869 samples, 0.01%)</title><rect x="485.0" y="1685" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="487.97" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (8,175,998 samples, 0.01%)</title><rect x="1050.7" y="1653" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1053.69" y="1663.5" ></text>
</g>
<g >
<title>irq_exit_rcu (24,555,883 samples, 0.03%)</title><rect x="650.1" y="1717" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="653.14" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1605" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="469.26" y="1615.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,200,344 samples, 0.01%)</title><rect x="623.6" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="626.59" y="1647.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (12,288,760 samples, 0.01%)</title><rect x="1035.7" y="2021" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1038.68" y="2031.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (14,467,922 samples, 0.02%)</title><rect x="622.2" y="1685" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="625.19" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (17,676,026 samples, 0.02%)</title><rect x="360.2" y="1589" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="363.21" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="549" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="559.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, false&gt;::_Head_base (11,559,110 samples, 0.01%)</title><rect x="325.4" y="1701" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="328.44" y="1711.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1205" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="925.16" y="1215.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (489,049,769 samples, 0.59%)</title><rect x="138.5" y="1893" width="6.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="141.50" y="1903.5" ></text>
</g>
<g >
<title>__seccomp_filter (7,681,166 samples, 0.01%)</title><rect x="1144.5" y="1717" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1147.47" y="1727.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1541" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="295.80" y="1551.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (230,278,696 samples, 0.28%)</title><rect x="340.1" y="1733" width="3.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="343.08" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="85" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="95.5" ></text>
</g>
<g >
<title>handle_softirqs (9,640,164 samples, 0.01%)</title><rect x="1129.4" y="1557" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1132.35" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (8,343,038 samples, 0.01%)</title><rect x="992.2" y="1717" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="995.20" y="1727.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (17,849,679 samples, 0.02%)</title><rect x="911.3" y="1701" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="914.26" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (101,885,748 samples, 0.12%)</title><rect x="934.3" y="1765" width="1.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="937.30" y="1775.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,857,769,951 samples, 11.83%)</title><rect x="1042.3" y="2005" width="139.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1045.33" y="2015.5" >std::thread::_Inv..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (12,372,639 samples, 0.01%)</title><rect x="703.6" y="1765" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="706.63" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1781" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_last_not_of (10,552,507 samples, 0.01%)</title><rect x="1068.7" y="1765" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1071.71" y="1775.5" ></text>
</g>
<g >
<title>__sk_dst_check (10,341,569 samples, 0.01%)</title><rect x="855.6" y="1509" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="858.57" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="69" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="79.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1397" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1407.5" ></text>
</g>
<g >
<title>netvsc_poll (19,006,455 samples, 0.02%)</title><rect x="942.8" y="1637" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="945.82" y="1647.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char const&gt; (14,717,476 samples, 0.02%)</title><rect x="1070.9" y="1733" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1073.86" y="1743.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (9,241,773 samples, 0.01%)</title><rect x="672.4" y="1589" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="675.41" y="1599.5" ></text>
</g>
<g >
<title>handle_softirqs (27,740,667 samples, 0.03%)</title><rect x="290.2" y="1733" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="293.20" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (78,964,759 samples, 0.09%)</title><rect x="883.3" y="1877" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="886.26" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (9,261,046 samples, 0.01%)</title><rect x="59.8" y="1749" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="62.79" y="1759.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (114,415,394 samples, 0.14%)</title><rect x="257.1" y="1781" width="1.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="260.08" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1045" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1055.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (13,817,426 samples, 0.02%)</title><rect x="495.7" y="1653" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="498.74" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (406,645,140 samples, 0.49%)</title><rect x="311.4" y="1733" width="5.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="314.38" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,340,124 samples, 0.01%)</title><rect x="577.5" y="1893" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="580.48" y="1903.5" ></text>
</g>
<g >
<title>__strlen_avx2 (20,633,170 samples, 0.02%)</title><rect x="1182.8" y="2021" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1185.82" y="2031.5" ></text>
</g>
<g >
<title>__sk_dst_check (7,920,169 samples, 0.01%)</title><rect x="709.9" y="1509" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="712.91" y="1519.5" ></text>
</g>
<g >
<title>x64_sys_call (651,662,774 samples, 0.78%)</title><rect x="675.0" y="1765" width="9.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="677.95" y="1775.5" ></text>
</g>
<g >
<title>__secure_computing (7,681,166 samples, 0.01%)</title><rect x="1144.5" y="1733" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1147.47" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,710,334 samples, 0.01%)</title><rect x="327.2" y="1749" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="330.18" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (16,441,042 samples, 0.02%)</title><rect x="1093.0" y="1701" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1096.05" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (69,213,942 samples, 0.08%)</title><rect x="256.0" y="1749" width="1.0" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="258.97" y="1759.5" ></text>
</g>
<g >
<title>do_epoll_wait (448,930,489 samples, 0.54%)</title><rect x="875.1" y="1829" width="6.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="878.12" y="1839.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1,325,171,111 samples, 1.59%)</title><rect x="555.8" y="1637" width="18.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="558.84" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (12,235,863 samples, 0.01%)</title><rect x="213.2" y="1365" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="216.21" y="1375.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,943,763 samples, 0.01%)</title><rect x="421.2" y="1397" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="424.24" y="1407.5" ></text>
</g>
<g >
<title>std::operator!=&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (13,051,003 samples, 0.02%)</title><rect x="766.8" y="1749" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="769.84" y="1759.5" ></text>
</g>
<g >
<title>operator delete (13,658,386 samples, 0.02%)</title><rect x="252.0" y="1669" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="254.97" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="773" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="783.5" ></text>
</g>
<g >
<title>___slab_alloc (13,124,751 samples, 0.02%)</title><rect x="573.7" y="1525" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="576.75" y="1535.5" ></text>
</g>
<g >
<title>netvsc_poll (24,940,592 samples, 0.03%)</title><rect x="293.2" y="1621" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="296.17" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (10,351,719 samples, 0.01%)</title><rect x="893.7" y="1893" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="896.68" y="1903.5" ></text>
</g>
<g >
<title>rndis_filter_receive (9,163,895 samples, 0.01%)</title><rect x="861.3" y="1301" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="864.29" y="1311.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (62,437,841 samples, 0.07%)</title><rect x="1027.1" y="1749" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1030.14" y="1759.5" ></text>
</g>
<g >
<title>file_has_perm (30,953,877 samples, 0.04%)</title><rect x="677.2" y="1653" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="680.18" y="1663.5" ></text>
</g>
<g >
<title>ip_list_rcv (11,841,314 samples, 0.01%)</title><rect x="273.0" y="1221" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="276.04" y="1231.5" ></text>
</g>
<g >
<title>netvsc_poll (11,094,995 samples, 0.01%)</title><rect x="971.1" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="974.08" y="1519.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (10,107,971 samples, 0.01%)</title><rect x="69.2" y="1541" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="72.22" y="1551.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (9,869,951 samples, 0.01%)</title><rect x="929.2" y="1701" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="932.19" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="309" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (69,989,239 samples, 0.08%)</title><rect x="323.0" y="1669" width="1.0" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="326.01" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (16,286,496 samples, 0.02%)</title><rect x="961.3" y="1781" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="964.29" y="1791.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (37,288,782 samples, 0.04%)</title><rect x="59.0" y="1749" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="62.00" y="1759.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (8,310,689 samples, 0.01%)</title><rect x="112.6" y="1605" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="115.55" y="1615.5" ></text>
</g>
<g >
<title>Channel::OnRead (5,897,653,395 samples, 7.08%)</title><rect x="1043.2" y="1909" width="83.5" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1046.15" y="1919.5" >Channel::..</text>
</g>
<g >
<title>rw_verify_area (46,668,877 samples, 0.06%)</title><rect x="433.2" y="1685" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="436.15" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1093" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1103.5" ></text>
</g>
<g >
<title>irq_exit_rcu (15,586,895 samples, 0.02%)</title><rect x="552.7" y="1765" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="555.69" y="1775.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,857,769,951 samples, 11.83%)</title><rect x="1042.3" y="2021" width="139.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1045.33" y="2031.5" >std::thread::_Inv..</text>
</g>
<g >
<title>operator delete (13,697,103 samples, 0.02%)</title><rect x="403.4" y="1669" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="406.37" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,516,382 samples, 0.01%)</title><rect x="847.9" y="1557" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="850.90" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (485,075,086 samples, 0.58%)</title><rect x="437.1" y="1877" width="6.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="440.06" y="1887.5" ></text>
</g>
<g >
<title>generic_permission (13,679,506 samples, 0.02%)</title><rect x="68.4" y="1573" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="71.40" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,841,314 samples, 0.01%)</title><rect x="273.0" y="1253" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="276.04" y="1263.5" ></text>
</g>
<g >
<title>[web-server] (15,535,156 samples, 0.02%)</title><rect x="517.9" y="1781" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="520.95" y="1791.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,667,151 samples, 0.01%)</title><rect x="162.1" y="1493" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="165.07" y="1503.5" ></text>
</g>
<g >
<title>file_has_perm (14,499,863 samples, 0.02%)</title><rect x="726.2" y="1637" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="729.16" y="1647.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1173" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="928.84" y="1183.5" ></text>
</g>
<g >
<title>x64_sys_call (1,586,842,679 samples, 1.90%)</title><rect x="996.4" y="1765" width="22.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="999.39" y="1775.5" >x..</text>
</g>
<g >
<title>netvsc_send (89,376,747 samples, 0.11%)</title><rect x="275.6" y="1349" width="1.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="278.64" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1973" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1983.5" ></text>
</g>
<g >
<title>__do_softirq (10,672,868 samples, 0.01%)</title><rect x="1153.0" y="1365" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1156.05" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7,818,532 samples, 0.01%)</title><rect x="1010.7" y="1285" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1013.73" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (20,554,537 samples, 0.02%)</title><rect x="1034.0" y="101" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1037.02" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9,313,120 samples, 0.01%)</title><rect x="448.9" y="37" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="451.93" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (38,505,302 samples, 0.05%)</title><rect x="1080.4" y="1765" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1083.36" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (28,015,217 samples, 0.03%)</title><rect x="448.1" y="1797" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="451.14" y="1807.5" ></text>
</g>
<g >
<title>__seccomp_filter (14,715,768 samples, 0.02%)</title><rect x="360.5" y="1669" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="363.53" y="1679.5" ></text>
</g>
<g >
<title>do_syscall_64 (572,834,083 samples, 0.69%)</title><rect x="651.5" y="1733" width="8.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="654.46" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (7,485,922 samples, 0.01%)</title><rect x="813.8" y="1781" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="816.81" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_v (8,751,554 samples, 0.01%)</title><rect x="796.5" y="1653" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="799.52" y="1663.5" ></text>
</g>
<g >
<title>epoll_ctl (7,614,538 samples, 0.01%)</title><rect x="79.1" y="1733" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="82.08" y="1743.5" ></text>
</g>
<g >
<title>__wake_up_common (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1013" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="430.41" y="1023.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (33,709,442 samples, 0.04%)</title><rect x="1049.6" y="1765" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1052.65" y="1775.5" ></text>
</g>
<g >
<title>selinux_file_permission (44,198,482 samples, 0.05%)</title><rect x="283.8" y="1653" width="0.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="286.76" y="1663.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (8,755,802 samples, 0.01%)</title><rect x="966.9" y="1765" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="969.88" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1685" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1695.5" ></text>
</g>
<g >
<title>ip_local_out (714,006,246 samples, 0.86%)</title><rect x="710.1" y="1509" width="10.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="713.06" y="1519.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (19,203,027 samples, 0.02%)</title><rect x="383.2" y="1765" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="386.22" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (25,587,303 samples, 0.03%)</title><rect x="860.9" y="1269" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="863.91" y="1279.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (15,104,562 samples, 0.02%)</title><rect x="738.3" y="1893" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="741.34" y="1903.5" ></text>
</g>
<g >
<title>__alloc_skb (73,435,778 samples, 0.09%)</title><rect x="573.5" y="1589" width="1.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="576.52" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (131,628,166 samples, 0.16%)</title><rect x="1134.2" y="1749" width="1.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1137.17" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_comp_iter&lt;char const*&gt; (7,534,806 samples, 0.01%)</title><rect x="631.9" y="1733" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="634.85" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (12,066,176 samples, 0.01%)</title><rect x="739.7" y="1893" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="742.66" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (182,370,785 samples, 0.22%)</title><rect x="776.7" y="1765" width="2.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="779.72" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (16,505,920 samples, 0.02%)</title><rect x="589.6" y="1925" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="592.56" y="1935.5" ></text>
</g>
<g >
<title>__wake_up_common (9,132,117 samples, 0.01%)</title><rect x="1024.2" y="1413" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1027.24" y="1423.5" ></text>
</g>
<g >
<title>__seccomp_filter (9,115,452 samples, 0.01%)</title><rect x="505.6" y="1669" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="508.64" y="1679.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,627,962 samples, 0.01%)</title><rect x="917.9" y="1637" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="920.93" y="1647.5" ></text>
</g>
<g >
<title>inet_recvmsg (245,673,935 samples, 0.29%)</title><rect x="530.9" y="1669" width="3.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="533.86" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1637" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (364,172,190 samples, 0.44%)</title><rect x="171.6" y="1733" width="5.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="174.63" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (8,033,129 samples, 0.01%)</title><rect x="1173.7" y="1717" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1176.72" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (16,518,285 samples, 0.02%)</title><rect x="89.8" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="92.76" y="1567.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (14,873,190 samples, 0.02%)</title><rect x="586.1" y="1829" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="589.08" y="1839.5" ></text>
</g>
<g >
<title>lookup_fast (12,545,076 samples, 0.02%)</title><rect x="70.2" y="1573" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="73.21" y="1583.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (8,501,515 samples, 0.01%)</title><rect x="764.8" y="1605" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="767.80" y="1615.5" ></text>
</g>
<g >
<title>ip_list_rcv (12,269,948 samples, 0.01%)</title><rect x="293.2" y="1557" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="296.20" y="1567.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,388,478 samples, 0.01%)</title><rect x="880.5" y="1557" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="883.53" y="1567.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (7,195,355 samples, 0.01%)</title><rect x="846.6" y="1717" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="849.64" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9,995,806 samples, 0.01%)</title><rect x="125.2" y="1125" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="128.25" y="1135.5" ></text>
</g>
<g >
<title>inode_permission (94,052,789 samples, 0.11%)</title><rect x="68.3" y="1589" width="1.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="71.32" y="1599.5" ></text>
</g>
<g >
<title>__do_softirq (9,420,373 samples, 0.01%)</title><rect x="1154.0" y="1381" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1157.03" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1221" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1231.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (15,224,023 samples, 0.02%)</title><rect x="280.8" y="1557" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="283.78" y="1567.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (34,317,541 samples, 0.04%)</title><rect x="299.2" y="1861" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="302.23" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (8,585,327 samples, 0.01%)</title><rect x="405.8" y="1781" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="408.79" y="1791.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,236,466 samples, 0.01%)</title><rect x="158.3" y="1989" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="161.26" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9,202,254 samples, 0.01%)</title><rect x="409.7" y="1717" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="412.73" y="1727.5" ></text>
</g>
<g >
<title>std::function&lt;void  (72,657,729 samples, 0.09%)</title><rect x="401.2" y="1781" width="1.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="404.22" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::cbegin (7,537,582 samples, 0.01%)</title><rect x="56.2" y="1749" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="59.19" y="1759.5" ></text>
</g>
<g >
<title>nf_ct_get_tuple (7,547,283 samples, 0.01%)</title><rect x="270.0" y="1429" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="272.99" y="1439.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (206,487,593 samples, 0.25%)</title><rect x="694.1" y="1797" width="3.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="697.14" y="1807.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,844,246 samples, 0.01%)</title><rect x="523.0" y="1621" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="526.05" y="1631.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,876,432 samples, 0.01%)</title><rect x="899.3" y="1621" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="902.33" y="1631.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,477,309,581 samples, 1.77%)</title><rect x="262.8" y="1685" width="21.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="265.84" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1749" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="917" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="927.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (12,522,215 samples, 0.02%)</title><rect x="880.7" y="1541" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="883.68" y="1551.5" ></text>
</g>
<g >
<title>net_rx_action (8,635,533 samples, 0.01%)</title><rect x="181.6" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="184.59" y="1599.5" ></text>
</g>
<g >
<title>Epoller::WaitEvents (7,131,116 samples, 0.01%)</title><rect x="1169.6" y="1909" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1172.58" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (8,010,118 samples, 0.01%)</title><rect x="759.5" y="1701" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="762.52" y="1711.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (28,451,723 samples, 0.03%)</title><rect x="324.6" y="1701" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="327.59" y="1711.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (9,814,283 samples, 0.01%)</title><rect x="184.3" y="1701" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="187.29" y="1711.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (26,813,961 samples, 0.03%)</title><rect x="124.8" y="1221" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="127.78" y="1231.5" ></text>
</g>
<g >
<title>ip_list_rcv (16,609,603 samples, 0.02%)</title><rect x="878.2" y="1589" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="881.22" y="1599.5" ></text>
</g>
<g >
<title>handle_softirqs (11,914,981 samples, 0.01%)</title><rect x="562.2" y="1349" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="565.25" y="1359.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (31,657,940 samples, 0.04%)</title><rect x="759.7" y="1781" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="762.68" y="1791.5" ></text>
</g>
<g >
<title>_raw_write_unlock_irq (8,400,255 samples, 0.01%)</title><rect x="901.6" y="1589" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="904.56" y="1599.5" ></text>
</g>
<g >
<title>handle_softirqs (12,901,362 samples, 0.02%)</title><rect x="1119.4" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1122.42" y="1567.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,121,246 samples, 0.01%)</title><rect x="398.9" y="1557" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="401.95" y="1567.5" ></text>
</g>
<g >
<title>netvsc_poll (11,934,288 samples, 0.01%)</title><rect x="307.1" y="1925" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="310.08" y="1935.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (102,632,478 samples, 0.12%)</title><rect x="192.7" y="1701" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="195.67" y="1711.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (447,815,250 samples, 0.54%)</title><rect x="1044.3" y="1797" width="6.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1047.27" y="1807.5" ></text>
</g>
<g >
<title>tcp_recvmsg (299,920,763 samples, 0.36%)</title><rect x="678.6" y="1653" width="4.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="681.55" y="1663.5" ></text>
</g>
<g >
<title>kmem_cache_free (10,268,988 samples, 0.01%)</title><rect x="214.7" y="1637" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="217.75" y="1647.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (7,283,034 samples, 0.01%)</title><rect x="756.1" y="1573" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="759.11" y="1583.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (17,676,026 samples, 0.02%)</title><rect x="360.2" y="1685" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="363.21" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (10,200,344 samples, 0.01%)</title><rect x="623.6" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="626.59" y="1679.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,270,831 samples, 0.01%)</title><rect x="214.2" y="1573" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="217.18" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (114,415,394 samples, 0.14%)</title><rect x="257.1" y="1765" width="1.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="260.08" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (286,338,357 samples, 0.34%)</title><rect x="770.4" y="1701" width="4.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="773.43" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="485" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="495.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (14,353,900 samples, 0.02%)</title><rect x="348.8" y="1669" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="351.80" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1445" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1002.78" y="1455.5" ></text>
</g>
<g >
<title>napi_gro_receive (8,810,535 samples, 0.01%)</title><rect x="582.0" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="584.99" y="1647.5" ></text>
</g>
<g >
<title>__ip_finish_output (361,690,928 samples, 0.43%)</title><rect x="713.9" y="1461" width="5.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="716.89" y="1471.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (9,462,643,912 samples, 11.35%)</title><rect x="456.8" y="2037" width="134.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="459.84" y="2047.5" >std::thread::_St..</text>
</g>
<g >
<title>x64_sys_call (489,868,635 samples, 0.59%)</title><rect x="506.1" y="1717" width="6.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="509.09" y="1727.5" ></text>
</g>
<g >
<title>ip_list_rcv (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1397" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1002.78" y="1407.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (15,719,374 samples, 0.02%)</title><rect x="117.8" y="1605" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="120.82" y="1615.5" ></text>
</g>
<g >
<title>_raw_write_unlock_irq (54,547,840 samples, 0.07%)</title><rect x="1024.0" y="1813" width="0.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1027.00" y="1823.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (73,880,720 samples, 0.09%)</title><rect x="58.0" y="1749" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="60.95" y="1759.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (12,392,581 samples, 0.01%)</title><rect x="387.4" y="1477" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="390.42" y="1487.5" ></text>
</g>
<g >
<title>tcp_poll (11,428,441 samples, 0.01%)</title><rect x="399.2" y="1557" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="402.18" y="1567.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (10,273,263 samples, 0.01%)</title><rect x="79.9" y="1781" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="82.88" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;Channel&gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (11,971,758 samples, 0.01%)</title><rect x="1179.6" y="1877" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1182.62" y="1887.5" ></text>
</g>
<g >
<title>sk_reset_timer (57,879,886 samples, 0.07%)</title><rect x="279.8" y="1525" width="0.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="282.76" y="1535.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1221" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1002.78" y="1231.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (35,867,416 samples, 0.04%)</title><rect x="1172.9" y="1749" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1175.87" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (17,254,172 samples, 0.02%)</title><rect x="445.0" y="1909" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="447.97" y="1919.5" ></text>
</g>
<g >
<title>operator delete (9,614,267 samples, 0.01%)</title><rect x="223.3" y="1781" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="226.35" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (12,994,125 samples, 0.02%)</title><rect x="606.3" y="1509" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="609.26" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1413" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1423.5" ></text>
</g>
<g >
<title>fill_pg_buf (9,423,018 samples, 0.01%)</title><rect x="275.0" y="1349" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="278.04" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (213,616,349 samples, 0.26%)</title><rect x="496.7" y="1765" width="3.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="499.67" y="1775.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,236,466 samples, 0.01%)</title><rect x="158.3" y="2005" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="161.26" y="2015.5" ></text>
</g>
<g >
<title>avc_has_perm (12,193,180 samples, 0.01%)</title><rect x="1118.3" y="1621" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1121.32" y="1631.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (14,448,922 samples, 0.02%)</title><rect x="999.7" y="1557" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1002.74" y="1567.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (73,376,582 samples, 0.09%)</title><rect x="1056.2" y="1653" width="1.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1059.23" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="901" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;char*&gt; (105,803,723 samples, 0.13%)</title><rect x="227.2" y="1781" width="1.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="230.24" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (37,563,818 samples, 0.05%)</title><rect x="1088.3" y="1685" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1091.33" y="1695.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (29,127,084 samples, 0.03%)</title><rect x="581.8" y="1749" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="584.80" y="1759.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (2,904,791,125 samples, 3.49%)</title><rect x="686.8" y="1861" width="41.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="689.79" y="1871.5" >std..</text>
</g>
<g >
<title>__napi_poll (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1637" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="782.08" y="1647.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*, std::shared_ptr&lt;Channel&gt; &gt; (47,765,978 samples, 0.06%)</title><rect x="885.9" y="1893" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="888.88" y="1903.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,754,268 samples, 0.01%)</title><rect x="34.7" y="1685" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="37.72" y="1695.5" ></text>
</g>
<g >
<title>validate_xmit_skb (13,715,644 samples, 0.02%)</title><rect x="128.8" y="1381" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="131.78" y="1391.5" ></text>
</g>
<g >
<title>handle_softirqs (31,306,018 samples, 0.04%)</title><rect x="503.2" y="1685" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="506.24" y="1695.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (35,098,319 samples, 0.04%)</title><rect x="145.8" y="1909" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="148.78" y="1919.5" ></text>
</g>
<g >
<title>avc_has_perm (12,118,373 samples, 0.01%)</title><rect x="677.4" y="1621" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="680.37" y="1631.5" ></text>
</g>
<g >
<title>__fput_sync (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1493" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="469.26" y="1503.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (12,813,382 samples, 0.02%)</title><rect x="1188.5" y="2021" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1191.48" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="997" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1007.5" ></text>
</g>
<g >
<title>netvsc_poll (16,668,329 samples, 0.02%)</title><rect x="901.7" y="1477" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="904.68" y="1487.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (66,165,053 samples, 0.08%)</title><rect x="1139.3" y="1781" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1142.25" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1525" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1535.5" ></text>
</g>
<g >
<title>sock_def_readable (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1701" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="747.77" y="1711.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (22,528,209 samples, 0.03%)</title><rect x="691.0" y="1589" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="694.02" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (7,118,135 samples, 0.01%)</title><rect x="414.5" y="1525" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="417.52" y="1535.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (168,023,547 samples, 0.20%)</title><rect x="274.6" y="1381" width="2.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="277.58" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (222,080,433 samples, 0.27%)</title><rect x="98.3" y="1669" width="3.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="101.30" y="1679.5" ></text>
</g>
<g >
<title>netvsc_poll (7,342,622 samples, 0.01%)</title><rect x="855.1" y="1429" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="858.11" y="1439.5" ></text>
</g>
<g >
<title>ep_poll_callback (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1173" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1002.78" y="1183.5" ></text>
</g>
<g >
<title>irq_exit_rcu (31,384,078 samples, 0.04%)</title><rect x="442.9" y="1701" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="445.95" y="1711.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (14,879,177 samples, 0.02%)</title><rect x="877.9" y="1573" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="880.87" y="1583.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,313,292 samples, 0.01%)</title><rect x="853.6" y="1557" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="856.58" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (118,921,952 samples, 0.14%)</title><rect x="99.6" y="1621" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="102.64" y="1631.5" ></text>
</g>
<g >
<title>__napi_poll (20,843,576 samples, 0.03%)</title><rect x="380.8" y="1701" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="383.75" y="1711.5" ></text>
</g>
<g >
<title>__siphash_unaligned (13,891,194 samples, 0.02%)</title><rect x="711.3" y="1429" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="714.27" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1109" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1119.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,758,984 samples, 0.01%)</title><rect x="1095.0" y="1573" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1097.97" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (13,301,511 samples, 0.02%)</title><rect x="612.6" y="1701" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="615.62" y="1711.5" ></text>
</g>
<g >
<title>do_iter_write (1,545,183,763 samples, 1.85%)</title><rect x="850.1" y="1701" width="21.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="853.10" y="1711.5" >d..</text>
</g>
<g >
<title>x64_sys_call (527,477,464 samples, 0.63%)</title><rect x="63.6" y="1717" width="7.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="66.65" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (8,793,819 samples, 0.01%)</title><rect x="360.3" y="1429" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="363.26" y="1439.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (44,254,657 samples, 0.05%)</title><rect x="497.5" y="1717" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="500.49" y="1727.5" ></text>
</g>
<g >
<title>__fget_light (46,177,594 samples, 0.06%)</title><rect x="967.4" y="1701" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="970.38" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (7,617,023 samples, 0.01%)</title><rect x="1034.2" y="37" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1037.20" y="47.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,757,952 samples, 0.01%)</title><rect x="944.6" y="1493" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="947.60" y="1503.5" ></text>
</g>
<g >
<title>do_epoll_ctl (123,262,988 samples, 0.15%)</title><rect x="397.7" y="1605" width="1.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="400.71" y="1615.5" ></text>
</g>
<g >
<title>do_iter_write (1,435,349,724 samples, 1.72%)</title><rect x="413.6" y="1701" width="20.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="416.56" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1493" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1503.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (28,567,904 samples, 0.03%)</title><rect x="201.9" y="1701" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="204.89" y="1711.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (15,531,190 samples, 0.02%)</title><rect x="533.8" y="1621" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="536.77" y="1631.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (9,853,658 samples, 0.01%)</title><rect x="372.1" y="1733" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="375.14" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,421,283 samples, 0.02%)</title><rect x="1128.3" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1131.25" y="1663.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (19,094,923 samples, 0.02%)</title><rect x="300.1" y="53" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="303.09" y="63.5" ></text>
</g>
<g >
<title>handle_softirqs (7,270,831 samples, 0.01%)</title><rect x="214.2" y="1525" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="217.18" y="1535.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (16,327,687 samples, 0.02%)</title><rect x="1122.7" y="1621" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1125.66" y="1631.5" ></text>
</g>
<g >
<title>handle_softirqs (7,400,562 samples, 0.01%)</title><rect x="280.0" y="1397" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="282.98" y="1407.5" ></text>
</g>
<g >
<title>__secure_computing (11,420,376 samples, 0.01%)</title><rect x="966.3" y="1749" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="969.28" y="1759.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (20,560,119 samples, 0.02%)</title><rect x="93.0" y="1621" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="96.03" y="1631.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (13,201,198 samples, 0.02%)</title><rect x="817.9" y="1733" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="820.87" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (12,269,948 samples, 0.01%)</title><rect x="293.2" y="1589" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="296.20" y="1599.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (14,129,925 samples, 0.02%)</title><rect x="232.2" y="1749" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="235.17" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (8,852,952 samples, 0.01%)</title><rect x="932.5" y="1765" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="935.50" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1461" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1471.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (431,167,899 samples, 0.52%)</title><rect x="602.7" y="1701" width="6.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="605.73" y="1711.5" ></text>
</g>
<g >
<title>epoll_ctl (7,831,649 samples, 0.01%)</title><rect x="668.3" y="1733" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="671.28" y="1743.5" ></text>
</g>
<g >
<title>operator new (9,653,621 samples, 0.01%)</title><rect x="307.3" y="2053" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="310.25" y="2063.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,977,140,977 samples, 11.97%)</title><rect x="158.7" y="2053" width="141.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="161.70" y="2063.5" >[libstdc++.so.6.0..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (10,621,871 samples, 0.01%)</title><rect x="543.6" y="1717" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="546.60" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (13,681,351 samples, 0.02%)</title><rect x="1107.4" y="1781" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1110.37" y="1791.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (11,633,375 samples, 0.01%)</title><rect x="62.9" y="1445" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="65.86" y="1455.5" ></text>
</g>
<g >
<title>copy_iovec_from_user (18,657,274 samples, 0.02%)</title><rect x="284.5" y="1685" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="287.53" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1669" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1679.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (11,319,074 samples, 0.01%)</title><rect x="292.4" y="1781" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="295.36" y="1791.5" ></text>
</g>
<g >
<title>getname_flags (175,999,111 samples, 0.21%)</title><rect x="801.6" y="1653" width="2.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="804.60" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (9,535,776 samples, 0.01%)</title><rect x="269.8" y="1413" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="272.78" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (31,568,687 samples, 0.04%)</title><rect x="786.9" y="1765" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="789.93" y="1775.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (4,845,755,878 samples, 5.81%)</title><rect x="1043.9" y="1813" width="68.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1046.91" y="1823.5" >HttpCon..</text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (14,512,946 samples, 0.02%)</title><rect x="789.8" y="1717" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="792.77" y="1727.5" ></text>
</g>
<g >
<title>irqentry_exit (9,060,119 samples, 0.01%)</title><rect x="925.8" y="1669" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="928.84" y="1679.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (242,914,765 samples, 0.29%)</title><rect x="1073.8" y="1733" width="3.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1076.81" y="1743.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7,911,046 samples, 0.01%)</title><rect x="1024.6" y="1317" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1027.57" y="1327.5" ></text>
</g>
<g >
<title>__fdget_pos (28,005,228 samples, 0.03%)</title><rect x="1144.9" y="1717" width="0.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1147.89" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (16,609,603 samples, 0.02%)</title><rect x="878.2" y="1637" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="881.22" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_S_equals (13,747,364 samples, 0.02%)</title><rect x="992.8" y="1685" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="995.82" y="1695.5" ></text>
</g>
<g >
<title>__virt_addr_valid (19,886,079 samples, 0.02%)</title><rect x="803.6" y="1589" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="806.60" y="1599.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (141,819,202 samples, 0.17%)</title><rect x="1134.0" y="1765" width="2.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1137.05" y="1775.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (43,958,952 samples, 0.05%)</title><rect x="505.2" y="1717" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="508.22" y="1727.5" ></text>
</g>
<g >
<title>inode_security (14,986,190 samples, 0.02%)</title><rect x="386.3" y="1653" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="389.32" y="1663.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1701" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="782.08" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1429" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1439.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (17,413,503 samples, 0.02%)</title><rect x="360.8" y="1717" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="363.78" y="1727.5" ></text>
</g>
<g >
<title>ip_output (439,588,500 samples, 0.53%)</title><rect x="713.7" y="1493" width="6.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="716.75" y="1503.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,649,911 samples, 0.01%)</title><rect x="1143.2" y="1765" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1146.23" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (8,814,896 samples, 0.01%)</title><rect x="1130.6" y="1525" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1133.63" y="1535.5" ></text>
</g>
<g >
<title>vfs_statx (247,803,084 samples, 0.30%)</title><rect x="804.4" y="1653" width="3.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="807.40" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,277,371 samples, 0.01%)</title><rect x="1172.9" y="1573" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1175.90" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1429" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1178.57" y="1439.5" ></text>
</g>
<g >
<title>netvsc_poll (26,300,796 samples, 0.03%)</title><rect x="798.1" y="1637" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="801.07" y="1647.5" ></text>
</g>
<g >
<title>__seccomp_filter (14,957,525 samples, 0.02%)</title><rect x="800.7" y="1669" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="803.71" y="1679.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (38,664,930 samples, 0.05%)</title><rect x="347.5" y="1765" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="350.48" y="1775.5" ></text>
</g>
<g >
<title>irq_exit_rcu (12,730,377 samples, 0.02%)</title><rect x="752.9" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="755.91" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="437" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (222,972,405 samples, 0.27%)</title><rect x="163.0" y="1653" width="3.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="166.00" y="1663.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7,400,805 samples, 0.01%)</title><rect x="256.8" y="1701" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="259.82" y="1711.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (13,047,709 samples, 0.02%)</title><rect x="1113.2" y="1605" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1116.24" y="1615.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (54,976,369 samples, 0.07%)</title><rect x="120.3" y="1429" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="123.35" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_first_not_of (24,646,694 samples, 0.03%)</title><rect x="1068.4" y="1765" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1071.36" y="1775.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,384,020,049 samples, 1.66%)</title><rect x="555.4" y="1685" width="19.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="558.42" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.constprop.0 (8,283,568 samples, 0.01%)</title><rect x="124.7" y="1221" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="127.66" y="1231.5" ></text>
</g>
<g >
<title>Channel::OnWrite (2,937,874,553 samples, 3.53%)</title><rect x="832.0" y="1909" width="41.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="835.04" y="1919.5" >Cha..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (17,413,503 samples, 0.02%)</title><rect x="360.8" y="1701" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="363.78" y="1711.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (16,293,933 samples, 0.02%)</title><rect x="545.9" y="1701" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="548.85" y="1711.5" ></text>
</g>
<g >
<title>ip_list_rcv (10,378,860 samples, 0.01%)</title><rect x="141.2" y="1589" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="144.23" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (37,590,839 samples, 0.05%)</title><rect x="697.6" y="1781" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="700.65" y="1791.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (412,915,379 samples, 0.50%)</title><rect x="687.4" y="1781" width="5.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="690.41" y="1791.5" ></text>
</g>
<g >
<title>tcp_poll (12,150,479 samples, 0.01%)</title><rect x="836.4" y="1557" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="839.43" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (23,567,410 samples, 0.03%)</title><rect x="933.0" y="1765" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="935.95" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (15,849,336 samples, 0.02%)</title><rect x="543.5" y="1749" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="546.53" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (10,160,732 samples, 0.01%)</title><rect x="1110.0" y="1765" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1113.03" y="1775.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (8,941,444 samples, 0.01%)</title><rect x="468.8" y="1685" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="471.85" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (44,008,319 samples, 0.05%)</title><rect x="1101.9" y="1749" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1104.86" y="1759.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,968,086 samples, 0.01%)</title><rect x="1167.1" y="1589" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1170.05" y="1599.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1525" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="925.16" y="1535.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (29,454,783 samples, 0.04%)</title><rect x="1181.3" y="1877" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1184.34" y="1887.5" ></text>
</g>
<g >
<title>__napi_poll (18,393,694 samples, 0.02%)</title><rect x="1113.2" y="1701" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1116.22" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::empty (16,139,333 samples, 0.02%)</title><rect x="343.7" y="1765" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="346.69" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash (7,153,707 samples, 0.01%)</title><rect x="551.1" y="1733" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="554.07" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (19,277,707 samples, 0.02%)</title><rect x="311.7" y="1653" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="314.74" y="1663.5" ></text>
</g>
<g >
<title>handle_softirqs (16,655,467 samples, 0.02%)</title><rect x="652.0" y="1637" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="654.98" y="1647.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (14,180,638 samples, 0.02%)</title><rect x="260.9" y="1733" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="263.94" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1317" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1327.5" ></text>
</g>
<g >
<title>Channel::OnWrite (2,996,649,797 samples, 3.60%)</title><rect x="1126.7" y="1909" width="42.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1129.66" y="1919.5" >Cha..</text>
</g>
<g >
<title>ip_list_rcv (14,005,105 samples, 0.02%)</title><rect x="360.2" y="1525" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="363.21" y="1535.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (177,349,359 samples, 0.21%)</title><rect x="487.8" y="1717" width="2.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="490.81" y="1727.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (11,628,825 samples, 0.01%)</title><rect x="905.0" y="1749" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="908.01" y="1759.5" ></text>
</g>
<g >
<title>sock_write_iter (1,398,241,667 samples, 1.68%)</title><rect x="705.8" y="1669" width="19.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="708.76" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,519,736 samples, 0.01%)</title><rect x="157.4" y="2037" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="160.42" y="2047.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (33,196,437 samples, 0.04%)</title><rect x="351.5" y="1653" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="354.46" y="1663.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (506,198,931 samples, 0.61%)</title><rect x="459.1" y="1797" width="7.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="462.07" y="1807.5" ></text>
</g>
<g >
<title>__wake_up_sync (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1157" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1002.78" y="1167.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (10,492,311 samples, 0.01%)</title><rect x="89.6" y="1621" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="92.58" y="1631.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (9,857,769,951 samples, 11.83%)</title><rect x="1042.3" y="1957" width="139.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1045.33" y="1967.5" >EventLoopThread::..</text>
</g>
<g >
<title>vmbus_sendpacket (52,523,839 samples, 0.06%)</title><rect x="1159.2" y="1317" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1162.19" y="1327.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (7,529,677 samples, 0.01%)</title><rect x="499.7" y="1781" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="502.70" y="1791.5" ></text>
</g>
<g >
<title>__napi_poll (20,735,596 samples, 0.02%)</title><rect x="210.2" y="1605" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="213.17" y="1615.5" ></text>
</g>
<g >
<title>ip_finish_output (436,615,047 samples, 0.52%)</title><rect x="1154.6" y="1477" width="6.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1157.58" y="1487.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (8,388,478 samples, 0.01%)</title><rect x="880.5" y="1541" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="883.53" y="1551.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1525" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1178.57" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (156,569,401 samples, 0.19%)</title><rect x="1045.8" y="1621" width="2.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1048.77" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1877" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1887.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (2,826,748,944 samples, 3.39%)</title><rect x="537.5" y="1861" width="40.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="540.45" y="1871.5" >std..</text>
</g>
<g >
<title>handle_softirqs (8,898,796 samples, 0.01%)</title><rect x="303.9" y="1973" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="306.92" y="1983.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (17,158,153 samples, 0.02%)</title><rect x="867.6" y="1461" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="870.63" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (16,387,655 samples, 0.02%)</title><rect x="959.3" y="1781" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="962.31" y="1791.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,507,946 samples, 0.01%)</title><rect x="193.9" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="196.87" y="1631.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (8,584,943 samples, 0.01%)</title><rect x="264.0" y="1621" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="266.99" y="1631.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (16,188,534 samples, 0.02%)</title><rect x="199.8" y="1701" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="202.75" y="1711.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (13,390,563 samples, 0.02%)</title><rect x="270.2" y="1461" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="273.20" y="1471.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,484,539 samples, 0.02%)</title><rect x="746.0" y="2021" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="749.00" y="2031.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (73,722,195 samples, 0.09%)</title><rect x="532.7" y="1605" width="1.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="535.67" y="1615.5" ></text>
</g>
<g >
<title>__close (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1573" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="469.26" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (41,366,420 samples, 0.05%)</title><rect x="136.3" y="1797" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="139.33" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (7,285,999 samples, 0.01%)</title><rect x="19.9" y="1669" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="22.85" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,388,478 samples, 0.01%)</title><rect x="880.5" y="1573" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="883.53" y="1583.5" ></text>
</g>
<g >
<title>Channel::OnWrite (2,941,311,170 samples, 3.53%)</title><rect x="978.4" y="1909" width="41.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="981.41" y="1919.5" >Cha..</text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (18,164,638 samples, 0.02%)</title><rect x="523.3" y="1685" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="526.31" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (7,143,655 samples, 0.01%)</title><rect x="1120.0" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1122.96" y="1519.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (8,620,488 samples, 0.01%)</title><rect x="1173.1" y="1557" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1176.10" y="1567.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,876,565,658 samples, 11.85%)</title><rect x="308.8" y="2053" width="139.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="311.79" y="2063.5" >[libstdc++.so.6.0..</text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (9,989,769 samples, 0.01%)</title><rect x="701.6" y="1797" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="704.65" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1461" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="928.84" y="1471.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (31,700,288 samples, 0.04%)</title><rect x="735.8" y="1893" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="738.80" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1701" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="469.26" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (131,876,522 samples, 0.16%)</title><rect x="839.5" y="1733" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="842.46" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (7,701,452 samples, 0.01%)</title><rect x="36.2" y="1653" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="39.19" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (11,704,207 samples, 0.01%)</title><rect x="376.5" y="1797" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="379.50" y="1807.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (325,838,205 samples, 0.39%)</title><rect x="714.4" y="1429" width="4.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="717.35" y="1439.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (84,810,151 samples, 0.10%)</title><rect x="389.5" y="1605" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="392.54" y="1615.5" ></text>
</g>
<g >
<title>std::make_move_iterator&lt;char*&gt; (7,112,310 samples, 0.01%)</title><rect x="671.0" y="1733" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="673.98" y="1743.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (401,778,361 samples, 0.48%)</title><rect x="752.8" y="1701" width="5.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="755.76" y="1711.5" ></text>
</g>
<g >
<title>rw_verify_area (47,366,039 samples, 0.06%)</title><rect x="135.3" y="1685" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="138.25" y="1695.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (58,129,917 samples, 0.07%)</title><rect x="975.2" y="1669" width="0.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="978.23" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,412,072 samples, 0.01%)</title><rect x="1077.1" y="1701" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1080.13" y="1711.5" ></text>
</g>
<g >
<title>selinux_file_permission (38,359,415 samples, 0.05%)</title><rect x="1017.8" y="1653" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1020.79" y="1663.5" ></text>
</g>
<g >
<title>clear_bhb_loop (34,463,023 samples, 0.04%)</title><rect x="359.2" y="1733" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="362.23" y="1743.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (8,114,888 samples, 0.01%)</title><rect x="259.7" y="1605" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="262.75" y="1615.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1301" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="925.16" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (10,868,566 samples, 0.01%)</title><rect x="1053.3" y="1701" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1056.31" y="1711.5" ></text>
</g>
<g >
<title>do_writev (1,558,340,130 samples, 1.87%)</title><rect x="114.2" y="1733" width="22.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="117.16" y="1743.5" >d..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (81,805,913 samples, 0.10%)</title><rect x="1082.1" y="1765" width="1.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1085.07" y="1775.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char*, char*&gt; (44,639,300 samples, 0.05%)</title><rect x="80.6" y="1733" width="0.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="83.56" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (192,347,175 samples, 0.23%)</title><rect x="200.7" y="1749" width="2.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="203.71" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="885" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="895.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (11,900,353 samples, 0.01%)</title><rect x="824.8" y="1621" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="827.78" y="1631.5" ></text>
</g>
<g >
<title>__napi_poll (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1637" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1178.57" y="1647.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (10,223,767 samples, 0.01%)</title><rect x="523.7" y="1733" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="526.70" y="1743.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (43,800,185 samples, 0.05%)</title><rect x="885.9" y="1861" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="888.88" y="1871.5" ></text>
</g>
<g >
<title>import_iovec (24,023,183 samples, 0.03%)</title><rect x="284.5" y="1701" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="287.48" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (13,538,265 samples, 0.02%)</title><rect x="1077.6" y="1765" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1080.60" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (25,029,465 samples, 0.03%)</title><rect x="194.8" y="1765" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="197.83" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (7,669,362 samples, 0.01%)</title><rect x="664.4" y="1765" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="667.37" y="1775.5" ></text>
</g>
<g >
<title>std::function&lt;void  (5,592,685,536 samples, 6.71%)</title><rect x="458.0" y="1893" width="79.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="461.01" y="1903.5" >std::func..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (7,309,947 samples, 0.01%)</title><rect x="1062.5" y="1701" width="0.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1065.53" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (77,539,445 samples, 0.09%)</title><rect x="251.4" y="1717" width="1.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="254.40" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (9,846,957 samples, 0.01%)</title><rect x="964.3" y="1637" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="967.30" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (26,684,228 samples, 0.03%)</title><rect x="82.6" y="1717" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="85.60" y="1727.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (17,790,433 samples, 0.02%)</title><rect x="472.9" y="1685" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="475.89" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (8,701,897 samples, 0.01%)</title><rect x="627.8" y="1765" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="630.76" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (32,864,906 samples, 0.04%)</title><rect x="468.5" y="1733" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="471.53" y="1743.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (9,012,110 samples, 0.01%)</title><rect x="1148.8" y="1589" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1151.80" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (63,438,472 samples, 0.08%)</title><rect x="124.5" y="1349" width="0.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="127.54" y="1359.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (107,870,662 samples, 0.13%)</title><rect x="1171.1" y="1797" width="1.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1174.11" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_established (8,970,423 samples, 0.01%)</title><rect x="980.2" y="1365" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="983.21" y="1375.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (1,890,707,747 samples, 2.27%)</title><rect x="20.7" y="1781" width="26.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="23.71" y="1791.5" >H..</text>
</g>
<g >
<title>netvsc_recv_callback (23,724,445 samples, 0.03%)</title><rect x="731.9" y="1653" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="734.88" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="581" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="591.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7,854,051 samples, 0.01%)</title><rect x="201.6" y="1605" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="204.59" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (7,978,535 samples, 0.01%)</title><rect x="105.4" y="1669" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="108.43" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,789,029 samples, 0.01%)</title><rect x="1002.6" y="1541" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1005.63" y="1551.5" ></text>
</g>
<g >
<title>napi_complete_done (7,156,049 samples, 0.01%)</title><rect x="99.0" y="1493" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="102.02" y="1503.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (20,771,156 samples, 0.02%)</title><rect x="672.3" y="1781" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="675.29" y="1791.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (11,235,899 samples, 0.01%)</title><rect x="789.6" y="1685" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="792.61" y="1695.5" ></text>
</g>
<g >
<title>__napi_poll (7,370,161 samples, 0.01%)</title><rect x="1144.3" y="1653" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1147.28" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (10,580,691 samples, 0.01%)</title><rect x="111.4" y="1797" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="114.41" y="1807.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (16,641,577 samples, 0.02%)</title><rect x="958.0" y="1781" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="960.99" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (18,835,493 samples, 0.02%)</title><rect x="468.2" y="1749" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="471.17" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (56,699,428 samples, 0.07%)</title><rect x="647.3" y="1717" width="0.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="650.28" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (17,043,633 samples, 0.02%)</title><rect x="188.8" y="1749" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="191.76" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,751,435 samples, 0.01%)</title><rect x="754.0" y="1461" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="757.04" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (12,702,723 samples, 0.02%)</title><rect x="1078.7" y="1765" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1081.72" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (36,424,256 samples, 0.04%)</title><rect x="782.6" y="1701" width="0.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="785.63" y="1711.5" ></text>
</g>
<g >
<title>nft_counter_eval (13,923,192 samples, 0.02%)</title><rect x="123.1" y="1429" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="126.14" y="1439.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (333,887,001 samples, 0.40%)</title><rect x="860.4" y="1429" width="4.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="863.41" y="1439.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (7,578,886 samples, 0.01%)</title><rect x="601.2" y="1829" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="604.20" y="1839.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (356,763,483 samples, 0.43%)</title><rect x="396.0" y="1717" width="5.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="399.05" y="1727.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (12,567,198 samples, 0.02%)</title><rect x="498.2" y="1685" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="501.16" y="1695.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (22,984,400 samples, 0.03%)</title><rect x="723.7" y="1557" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="726.75" y="1567.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,243,813 samples, 0.02%)</title><rect x="581.6" y="1749" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="584.62" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (90,807,127 samples, 0.11%)</title><rect x="33.4" y="1685" width="1.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="36.44" y="1695.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (32,573,538 samples, 0.04%)</title><rect x="299.3" y="1829" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="302.26" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1349" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1359.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (13,993,104 samples, 0.02%)</title><rect x="812.8" y="1781" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="815.78" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,943,763 samples, 0.01%)</title><rect x="421.2" y="1269" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="424.24" y="1279.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,979,595 samples, 0.01%)</title><rect x="901.7" y="1445" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="904.68" y="1455.5" ></text>
</g>
<g >
<title>do_epoll_ctl (121,991,927 samples, 0.15%)</title><rect x="1046.0" y="1605" width="1.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1049.04" y="1615.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (24,905,210 samples, 0.03%)</title><rect x="735.9" y="1861" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="738.90" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (101,239,103 samples, 0.12%)</title><rect x="104.1" y="1717" width="1.5" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="107.13" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="469" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="479.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,656,570 samples, 0.01%)</title><rect x="421.3" y="1237" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="424.27" y="1247.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (37,020,710 samples, 0.04%)</title><rect x="962.2" y="1717" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="965.23" y="1727.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (8,357,894 samples, 0.01%)</title><rect x="1086.6" y="1717" width="0.1" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="1089.60" y="1727.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (13,121,803 samples, 0.02%)</title><rect x="731.9" y="1557" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="734.94" y="1567.5" ></text>
</g>
<g >
<title>netvsc_poll (19,044,949 samples, 0.02%)</title><rect x="231.7" y="1637" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="234.69" y="1647.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (36,467,813 samples, 0.04%)</title><rect x="612.6" y="1749" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="615.55" y="1759.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,844,246 samples, 0.01%)</title><rect x="523.0" y="1573" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="526.05" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (14,614,824 samples, 0.02%)</title><rect x="62.9" y="1541" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="65.86" y="1551.5" ></text>
</g>
<g >
<title>ip_list_rcv (11,553,028 samples, 0.01%)</title><rect x="1175.8" y="1557" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1178.77" y="1567.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,431,726 samples, 0.01%)</title><rect x="229.7" y="1621" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="232.65" y="1631.5" ></text>
</g>
<g >
<title>__sk_dst_check (7,673,060 samples, 0.01%)</title><rect x="418.1" y="1509" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="421.10" y="1519.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (25,075,136 samples, 0.03%)</title><rect x="22.1" y="1749" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="25.07" y="1759.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (13,205,300 samples, 0.02%)</title><rect x="651.5" y="1717" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="654.51" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,155,189 samples, 0.01%)</title><rect x="311.8" y="1445" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="314.78" y="1455.5" ></text>
</g>
<g >
<title>__secure_computing (10,237,841 samples, 0.01%)</title><rect x="834.9" y="1605" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="837.94" y="1615.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (10,197,229 samples, 0.01%)</title><rect x="1001.7" y="1589" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1004.70" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (8,262,324 samples, 0.01%)</title><rect x="323.2" y="1637" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="326.24" y="1647.5" ></text>
</g>
<g >
<title>__napi_poll (8,496,094 samples, 0.01%)</title><rect x="1014.3" y="1365" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1017.28" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1317" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1327.5" ></text>
</g>
<g >
<title>net_rx_action (14,012,890 samples, 0.02%)</title><rect x="524.7" y="1717" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="527.70" y="1727.5" ></text>
</g>
<g >
<title>load_balance (8,167,757 samples, 0.01%)</title><rect x="443.5" y="1717" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="446.45" y="1727.5" ></text>
</g>
<g >
<title>do_syscall_64 (566,955,381 samples, 0.68%)</title><rect x="505.0" y="1733" width="8.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="508.00" y="1743.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9,161,951 samples, 0.01%)</title><rect x="466.7" y="1749" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="469.70" y="1759.5" ></text>
</g>
<g >
<title>clear_bhb_loop (14,146,710 samples, 0.02%)</title><rect x="260.5" y="1781" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="263.50" y="1791.5" ></text>
</g>
<g >
<title>lock_sock_nested (14,681,420 samples, 0.02%)</title><rect x="263.4" y="1621" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="266.39" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::push_back (16,989,333 samples, 0.02%)</title><rect x="588.2" y="1909" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="591.23" y="1919.5" ></text>
</g>
<g >
<title>irq_exit_rcu (26,511,501 samples, 0.03%)</title><rect x="1175.8" y="1701" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1178.77" y="1711.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, 0ul&gt; (18,613,364 samples, 0.02%)</title><rect x="471.6" y="1637" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="474.61" y="1647.5" ></text>
</g>
<g >
<title>memset_orig (79,220,510 samples, 0.10%)</title><rect x="362.3" y="1621" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="365.31" y="1631.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (15,905,162 samples, 0.02%)</title><rect x="847.9" y="1781" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="850.87" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (7,348,120 samples, 0.01%)</title><rect x="477.5" y="1685" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="480.52" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (56,887,143 samples, 0.07%)</title><rect x="1139.3" y="1749" width="0.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1142.25" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (8,848,493 samples, 0.01%)</title><rect x="207.2" y="1701" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="210.21" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (36,467,813 samples, 0.04%)</title><rect x="612.6" y="1733" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="615.55" y="1743.5" ></text>
</g>
<g >
<title>__napi_poll (13,169,734 samples, 0.02%)</title><rect x="526.7" y="1653" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="529.73" y="1663.5" ></text>
</g>
<g >
<title>__GI___pthread_enable_asynccancel (7,621,866 samples, 0.01%)</title><rect x="552.4" y="1813" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="555.37" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,043,101 samples, 0.01%)</title><rect x="612.7" y="1685" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="615.67" y="1695.5" ></text>
</g>
<g >
<title>selinux_socket_recvmsg (41,389,692 samples, 0.05%)</title><rect x="94.1" y="1653" width="0.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="97.08" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1333" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, true&gt;::operator (7,250,034 samples, 0.01%)</title><rect x="257.0" y="1749" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="259.98" y="1759.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (141,157,674 samples, 0.17%)</title><rect x="1140.2" y="1781" width="2.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1143.19" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1429" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1439.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (32,481,181 samples, 0.04%)</title><rect x="378.5" y="1637" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="381.48" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1861" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (16,677,592 samples, 0.02%)</title><rect x="638.4" y="1765" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="641.39" y="1775.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (12,892,864 samples, 0.02%)</title><rect x="422.8" y="1237" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="425.82" y="1247.5" ></text>
</g>
<g >
<title>std::function&lt;void  (70,165,626 samples, 0.08%)</title><rect x="317.3" y="1781" width="0.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="320.25" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (7,167,057 samples, 0.01%)</title><rect x="816.0" y="1781" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="819.03" y="1791.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (12,715,731 samples, 0.02%)</title><rect x="246.1" y="1621" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="249.11" y="1631.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7,563,236 samples, 0.01%)</title><rect x="1189.1" y="2021" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1192.07" y="2031.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (13,019,765 samples, 0.02%)</title><rect x="798.1" y="1557" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="801.09" y="1567.5" ></text>
</g>
<g >
<title>handle_softirqs (17,676,026 samples, 0.02%)</title><rect x="360.2" y="1637" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="363.21" y="1647.5" ></text>
</g>
<g >
<title>netvsc_poll (24,207,435 samples, 0.03%)</title><rect x="1175.8" y="1621" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1178.77" y="1631.5" ></text>
</g>
<g >
<title>__strlen_avx2 (23,560,550 samples, 0.03%)</title><rect x="743.0" y="2037" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="746.01" y="2047.5" ></text>
</g>
<g >
<title>ip_list_rcv (17,534,189 samples, 0.02%)</title><rect x="82.6" y="1621" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="85.63" y="1631.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,671,451 samples, 0.01%)</title><rect x="707.9" y="1557" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="710.86" y="1567.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (44,740,217 samples, 0.05%)</title><rect x="25.1" y="1653" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="28.08" y="1663.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (24,701,019 samples, 0.03%)</title><rect x="495.7" y="1685" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="498.69" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,468,023 samples, 0.01%)</title><rect x="622.8" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="625.78" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (57,323,919 samples, 0.07%)</title><rect x="550.3" y="1717" width="0.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="553.25" y="1727.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (11,259,704 samples, 0.01%)</title><rect x="985.3" y="1685" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="988.35" y="1695.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (8,852,089 samples, 0.01%)</title><rect x="693.5" y="1733" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="696.54" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (14,751,439 samples, 0.02%)</title><rect x="89.8" y="1541" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="92.76" y="1551.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (11,628,825 samples, 0.01%)</title><rect x="905.0" y="1637" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="908.01" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1733" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1743.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (11,365,698 samples, 0.01%)</title><rect x="443.2" y="1493" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="446.18" y="1503.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (62,236,561 samples, 0.07%)</title><rect x="550.2" y="1733" width="0.9" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="553.18" y="1743.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (18,467,750 samples, 0.02%)</title><rect x="1045.4" y="1637" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1048.41" y="1647.5" ></text>
</g>
<g >
<title>ep_poll_callback (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1333" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="295.80" y="1343.5" ></text>
</g>
<g >
<title>tcp_poll (13,240,154 samples, 0.02%)</title><rect x="100.8" y="1557" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="103.83" y="1567.5" ></text>
</g>
<g >
<title>std::make_move_iterator&lt;char*&gt; (7,105,458 samples, 0.01%)</title><rect x="817.7" y="1733" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="820.71" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (22,914,576 samples, 0.03%)</title><rect x="1088.9" y="1701" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1091.86" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (9,109,617 samples, 0.01%)</title><rect x="908.7" y="1669" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="911.67" y="1679.5" ></text>
</g>
<g >
<title>memset_orig (75,974,717 samples, 0.09%)</title><rect x="212.4" y="1621" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="215.36" y="1631.5" ></text>
</g>
<g >
<title>__napi_poll (7,661,320 samples, 0.01%)</title><rect x="178.2" y="1669" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="181.23" y="1679.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (93,945,018 samples, 0.11%)</title><rect x="844.0" y="1781" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="846.98" y="1791.5" ></text>
</g>
<g >
<title>detach_if_pending (12,692,527 samples, 0.02%)</title><rect x="571.7" y="1477" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="574.71" y="1487.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (17,418,847 samples, 0.02%)</title><rect x="861.0" y="1157" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="863.96" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (18,309,239 samples, 0.02%)</title><rect x="785.0" y="1765" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="787.97" y="1775.5" ></text>
</g>
<g >
<title>hv_ringbuffer_write (59,728,774 samples, 0.07%)</title><rect x="127.8" y="1301" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="130.76" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (7,101,683 samples, 0.01%)</title><rect x="1087.7" y="1733" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1090.67" y="1743.5" ></text>
</g>
<g >
<title>newidle_balance (13,251,855 samples, 0.02%)</title><rect x="443.4" y="1733" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="446.42" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (19,526,223 samples, 0.02%)</title><rect x="748.4" y="2053" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="751.37" y="2063.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (10,422,308 samples, 0.01%)</title><rect x="791.4" y="1621" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="794.41" y="1631.5" ></text>
</g>
<g >
<title>__do_softirq (8,192,733 samples, 0.01%)</title><rect x="851.6" y="1557" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="854.58" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (629,126,113 samples, 0.75%)</title><rect x="526.2" y="1781" width="8.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="529.21" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (68,185,218 samples, 0.08%)</title><rect x="916.0" y="1685" width="1.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="919.00" y="1695.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (32,213,084 samples, 0.04%)</title><rect x="503.2" y="1733" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="506.24" y="1743.5" ></text>
</g>
<g >
<title>__napi_poll (9,526,627 samples, 0.01%)</title><rect x="848.9" y="1653" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="851.89" y="1663.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,484,539 samples, 0.02%)</title><rect x="746.0" y="2005" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="749.00" y="2015.5" ></text>
</g>
<g >
<title>__do_softirq (30,512,604 samples, 0.04%)</title><rect x="564.9" y="1381" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="567.92" y="1391.5" ></text>
</g>
<g >
<title>napi_complete_done (15,579,535 samples, 0.02%)</title><rect x="213.2" y="1477" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="216.16" y="1487.5" ></text>
</g>
<g >
<title>___slab_alloc (22,545,972 samples, 0.03%)</title><rect x="1016.3" y="1525" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1019.29" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (16,191,102 samples, 0.02%)</title><rect x="184.9" y="1717" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="187.86" y="1727.5" ></text>
</g>
<g >
<title>napi_complete_done (14,426,582 samples, 0.02%)</title><rect x="1113.2" y="1669" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1116.22" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1973" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;TimerManager::TimerNode&gt;::shared_ptr (9,088,158 samples, 0.01%)</title><rect x="298.0" y="1909" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="301.01" y="1919.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (26,316,637 samples, 0.03%)</title><rect x="584.4" y="1733" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="587.37" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (7,769,596 samples, 0.01%)</title><rect x="495.1" y="1765" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="498.11" y="1775.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1413" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="430.41" y="1423.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,725,984 samples, 0.01%)</title><rect x="1096.4" y="1557" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1099.44" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (105,354,898 samples, 0.13%)</title><rect x="640.5" y="1765" width="1.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="643.53" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (10,042,044 samples, 0.01%)</title><rect x="918.0" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="921.03" y="1615.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1781" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="747.77" y="1791.5" ></text>
</g>
<g >
<title>selinux_ip_postroute (7,481,691 samples, 0.01%)</title><rect x="569.8" y="1477" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="572.84" y="1487.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (336,858,171 samples, 0.40%)</title><rect x="924.7" y="1765" width="4.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="927.65" y="1775.5" ></text>
</g>
<g >
<title>inet_sendmsg (1,354,218,474 samples, 1.63%)</title><rect x="115.6" y="1653" width="19.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="118.56" y="1663.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,284,877 samples, 0.02%)</title><rect x="1113.2" y="1749" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1116.19" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (173,006,467 samples, 0.21%)</title><rect x="614.2" y="1717" width="2.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="617.21" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (8,752,743 samples, 0.01%)</title><rect x="1071.4" y="1749" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1074.42" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (14,435,564 samples, 0.02%)</title><rect x="14.0" y="1541" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="17.03" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="597" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="607.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,047,977,324 samples, 1.26%)</title><rect x="832.8" y="1813" width="14.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="835.79" y="1823.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,871,799 samples, 0.01%)</title><rect x="45.2" y="1653" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="48.22" y="1663.5" ></text>
</g>
<g >
<title>napi_complete_done (9,285,782 samples, 0.01%)</title><rect x="1035.7" y="1893" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1038.68" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (321,720,667 samples, 0.39%)</title><rect x="22.5" y="1733" width="4.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="25.50" y="1743.5" ></text>
</g>
<g >
<title>handle_softirqs (22,428,117 samples, 0.03%)</title><rect x="734.6" y="1669" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="737.58" y="1679.5" ></text>
</g>
<g >
<title>netvsc_poll (11,190,386 samples, 0.01%)</title><rect x="439.9" y="1685" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="442.94" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (13,247,196 samples, 0.02%)</title><rect x="397.0" y="1509" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="400.03" y="1519.5" ></text>
</g>
<g >
<title>__napi_poll (7,628,560 samples, 0.01%)</title><rect x="1095.0" y="1509" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1098.00" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (35,558,672 samples, 0.04%)</title><rect x="320.6" y="1717" width="0.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="323.56" y="1727.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,714,840 samples, 0.02%)</title><rect x="803.0" y="1589" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="806.05" y="1599.5" ></text>
</g>
<g >
<title>__napi_poll (8,144,801 samples, 0.01%)</title><rect x="679.0" y="1525" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="682.00" y="1535.5" ></text>
</g>
<g >
<title>__virt_addr_valid (8,536,641 samples, 0.01%)</title><rect x="117.3" y="1589" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="120.27" y="1599.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (32,514,266 samples, 0.04%)</title><rect x="1111.4" y="1669" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1114.40" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (10,240,256 samples, 0.01%)</title><rect x="1029.8" y="1909" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1032.80" y="1919.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (8,090,691 samples, 0.01%)</title><rect x="488.4" y="1701" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="491.40" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1349" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (10,067,378 samples, 0.01%)</title><rect x="1060.7" y="1765" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1063.72" y="1775.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (102,406,093 samples, 0.12%)</title><rect x="550.0" y="1781" width="1.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="553.04" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9,182,790 samples, 0.01%)</title><rect x="440.3" y="1493" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="443.28" y="1503.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (31,593,158 samples, 0.04%)</title><rect x="502.5" y="1765" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="505.47" y="1775.5" ></text>
</g>
<g >
<title>memcpy_orig (21,882,447 samples, 0.03%)</title><rect x="716.7" y="1349" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="719.72" y="1359.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (12,665,861 samples, 0.02%)</title><rect x="848.8" y="1733" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="851.84" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9,656,570 samples, 0.01%)</title><rect x="421.3" y="1189" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="424.27" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1573" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1583.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (75,405,424 samples, 0.09%)</title><rect x="355.0" y="1749" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="358.01" y="1759.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,457,169 samples, 0.01%)</title><rect x="784.4" y="1653" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="787.42" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="917" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="927.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (20,871,830 samples, 0.03%)</title><rect x="1024.5" y="1573" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1027.45" y="1583.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (47,668,713 samples, 0.06%)</title><rect x="680.4" y="1621" width="0.6" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="683.35" y="1631.5" ></text>
</g>
<g >
<title>napi_complete_done (8,279,046 samples, 0.01%)</title><rect x="84.9" y="1621" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="87.92" y="1631.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,876,432 samples, 0.01%)</title><rect x="899.3" y="1573" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="902.33" y="1583.5" ></text>
</g>
<g >
<title>epoll_ctl (12,652,713 samples, 0.02%)</title><rect x="815.8" y="1733" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="818.79" y="1743.5" ></text>
</g>
<g >
<title>vmbus_sendpacket (53,759,930 samples, 0.06%)</title><rect x="1010.6" y="1317" width="0.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1013.60" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (9,645,878 samples, 0.01%)</title><rect x="810.5" y="1765" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="813.49" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (7,543,609 samples, 0.01%)</title><rect x="300.3" y="37" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="303.25" y="47.5" ></text>
</g>
<g >
<title>rndis_filter_receive (18,719,287 samples, 0.02%)</title><rect x="877.8" y="1669" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="880.81" y="1679.5" ></text>
</g>
<g >
<title>napi_complete_done (16,641,682 samples, 0.02%)</title><rect x="357.7" y="1621" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="360.73" y="1631.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Epoller*, std::default_delete&lt;Epoller&gt; &gt; (8,595,136 samples, 0.01%)</title><rect x="693.1" y="1637" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="696.14" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (414,805,689 samples, 0.50%)</title><rect x="311.3" y="1749" width="5.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="314.26" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1749" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1759.5" ></text>
</g>
<g >
<title>filename_lookup (194,642,168 samples, 0.23%)</title><rect x="510.2" y="1637" width="2.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="513.21" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="501" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="511.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (18,380,858 samples, 0.02%)</title><rect x="944.5" y="1685" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="947.52" y="1695.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (7,866,797 samples, 0.01%)</title><rect x="148.2" y="1893" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="151.23" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1637" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1647.5" ></text>
</g>
<g >
<title>handle_softirqs (9,401,788 samples, 0.01%)</title><rect x="312.7" y="1557" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="315.66" y="1567.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (12,271,541 samples, 0.01%)</title><rect x="287.4" y="1861" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="290.38" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (9,797,356 samples, 0.01%)</title><rect x="435.8" y="1829" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="438.79" y="1839.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,100,812 samples, 0.01%)</title><rect x="528.2" y="1669" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="531.18" y="1679.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (8,374,145 samples, 0.01%)</title><rect x="935.1" y="1717" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="938.07" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (50,163,156 samples, 0.06%)</title><rect x="613.5" y="1717" width="0.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="616.50" y="1727.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (131,820,881 samples, 0.16%)</title><rect x="694.2" y="1765" width="1.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="697.22" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (65,130,141 samples, 0.08%)</title><rect x="32.5" y="1685" width="0.9" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="35.52" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (26,427,305 samples, 0.03%)</title><rect x="59.0" y="1701" width="0.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="62.02" y="1711.5" ></text>
</g>
<g >
<title>__napi_poll (26,842,169 samples, 0.03%)</title><rect x="1090.7" y="1653" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1093.74" y="1663.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (9,029,011 samples, 0.01%)</title><rect x="125.5" y="1381" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="128.50" y="1391.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (19,230,712 samples, 0.02%)</title><rect x="1121.1" y="1621" width="0.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1124.12" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,281,630 samples, 0.01%)</title><rect x="624.7" y="1525" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="627.71" y="1535.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (27,740,667 samples, 0.03%)</title><rect x="290.2" y="1781" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="293.20" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (9,503,838 samples, 0.01%)</title><rect x="517.4" y="1765" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="520.36" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (10,112,787 samples, 0.01%)</title><rect x="123.0" y="1333" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="125.99" y="1343.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (5,552,936,709 samples, 6.66%)</title><rect x="458.5" y="1845" width="78.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="461.48" y="1855.5" >std::__in..</text>
</g>
<g >
<title>ip_sublist_rcv (12,115,888 samples, 0.01%)</title><rect x="360.2" y="1509" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="363.24" y="1519.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (18,401,773 samples, 0.02%)</title><rect x="1090.8" y="1557" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1093.79" y="1567.5" ></text>
</g>
<g >
<title>_int_free (8,227,419 samples, 0.01%)</title><rect x="151.8" y="2021" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="154.83" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="901" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="911.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1029" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1039.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (12,433,339 samples, 0.01%)</title><rect x="538.8" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="541.77" y="1679.5" ></text>
</g>
<g >
<title>tcp_current_mss (25,329,395 samples, 0.03%)</title><rect x="132.8" y="1589" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="135.85" y="1599.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,717,260 samples, 0.01%)</title><rect x="487.3" y="1717" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="490.29" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (7,252,038 samples, 0.01%)</title><rect x="707.9" y="1509" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="710.88" y="1519.5" ></text>
</g>
<g >
<title>__put_user_nocheck_8 (7,925,797 samples, 0.01%)</title><rect x="437.4" y="1829" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="440.43" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (13,321,500 samples, 0.02%)</title><rect x="387.1" y="1621" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="390.08" y="1631.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (10,490,926 samples, 0.01%)</title><rect x="734.6" y="1541" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="737.60" y="1551.5" ></text>
</g>
<g >
<title>nft_counter_eval (12,783,310 samples, 0.02%)</title><rect x="271.0" y="1429" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="274.00" y="1439.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (11,365,698 samples, 0.01%)</title><rect x="443.2" y="1429" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="446.18" y="1439.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (29,408,353 samples, 0.04%)</title><rect x="299.3" y="1781" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="302.30" y="1791.5" ></text>
</g>
<g >
<title>kfree_skbmem (8,946,654 samples, 0.01%)</title><rect x="532.5" y="1605" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="535.52" y="1615.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (9,104,406 samples, 0.01%)</title><rect x="610.1" y="1653" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="613.11" y="1663.5" ></text>
</g>
<g >
<title>netvsc_poll (7,603,822 samples, 0.01%)</title><rect x="455.5" y="1925" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="458.45" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1237" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1605" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (215,289,241 samples, 0.26%)</title><rect x="790.5" y="1749" width="3.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="793.47" y="1759.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,261,021 samples, 0.01%)</title><rect x="927.6" y="1637" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="930.63" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,869,789 samples, 0.01%)</title><rect x="749.4" y="2053" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="752.36" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,516,382 samples, 0.01%)</title><rect x="847.9" y="1573" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="850.90" y="1583.5" ></text>
</g>
<g >
<title>___slab_alloc (9,227,183 samples, 0.01%)</title><rect x="1165.1" y="1525" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1168.06" y="1535.5" ></text>
</g>
<g >
<title>tcp_data_queue (9,704,484 samples, 0.01%)</title><rect x="1024.5" y="1445" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1027.55" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (11,329,297 samples, 0.01%)</title><rect x="993.6" y="1749" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="996.64" y="1759.5" ></text>
</g>
<g >
<title>hv_ringbuffer_write (46,215,882 samples, 0.06%)</title><rect x="425.9" y="1301" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="428.86" y="1311.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (189,820,456 samples, 0.23%)</title><rect x="56.8" y="1765" width="2.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="59.84" y="1775.5" ></text>
</g>
<g >
<title>netvsc_poll (15,989,192 samples, 0.02%)</title><rect x="688.0" y="1557" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="691.05" y="1567.5" ></text>
</g>
<g >
<title>__napi_poll (8,844,246 samples, 0.01%)</title><rect x="523.0" y="1525" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="526.05" y="1535.5" ></text>
</g>
<g >
<title>netvsc_poll (10,619,096 samples, 0.01%)</title><rect x="247.5" y="1477" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="250.52" y="1487.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1733" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="469.26" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (11,089,214 samples, 0.01%)</title><rect x="272.7" y="1141" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="275.68" y="1151.5" ></text>
</g>
<g >
<title>enqueue_timer (10,215,387 samples, 0.01%)</title><rect x="131.5" y="1477" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="134.48" y="1487.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,378,040 samples, 0.01%)</title><rect x="845.9" y="1653" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="848.93" y="1663.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (13,702,082 samples, 0.02%)</title><rect x="83.1" y="1797" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="86.14" y="1807.5" ></text>
</g>
<g >
<title>handle_softirqs (7,968,086 samples, 0.01%)</title><rect x="1167.1" y="1573" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1170.05" y="1583.5" ></text>
</g>
<g >
<title>netvsc_poll (7,118,135 samples, 0.01%)</title><rect x="414.5" y="1493" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="417.52" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (22,924,585 samples, 0.03%)</title><rect x="636.0" y="1765" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="638.96" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (8,173,166 samples, 0.01%)</title><rect x="62.9" y="1413" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="65.91" y="1423.5" ></text>
</g>
<g >
<title>__napi_poll (9,582,050 samples, 0.01%)</title><rect x="561.3" y="1317" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="564.33" y="1327.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (8,731,394 samples, 0.01%)</title><rect x="645.2" y="1685" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="648.23" y="1695.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (338,740,488 samples, 0.41%)</title><rect x="979.9" y="1701" width="4.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="982.87" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (41,354,588 samples, 0.05%)</title><rect x="444.2" y="1893" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="447.20" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (8,844,246 samples, 0.01%)</title><rect x="523.0" y="1541" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="526.05" y="1551.5" ></text>
</g>
<g >
<title>netvsc_poll (14,435,564 samples, 0.02%)</title><rect x="14.0" y="1509" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="17.03" y="1519.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (13,668,447 samples, 0.02%)</title><rect x="715.0" y="1221" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="717.97" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="453" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="463.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (67,738,449 samples, 0.08%)</title><rect x="124.5" y="1413" width="1.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="127.52" y="1423.5" ></text>
</g>
<g >
<title>napi_complete_done (10,923,983 samples, 0.01%)</title><rect x="244.8" y="1541" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="247.84" y="1551.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (8,739,577 samples, 0.01%)</title><rect x="1138.9" y="1765" width="0.1" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1141.87" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (7,831,649 samples, 0.01%)</title><rect x="668.3" y="1781" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="671.28" y="1791.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (8,878,826 samples, 0.01%)</title><rect x="978.6" y="1829" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="981.62" y="1839.5" ></text>
</g>
<g >
<title>__napi_poll (11,735,606 samples, 0.01%)</title><rect x="296.3" y="1749" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="299.31" y="1759.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (27,186,012 samples, 0.03%)</title><rect x="1048.7" y="1669" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1051.68" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (9,995,806 samples, 0.01%)</title><rect x="125.2" y="1109" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="128.25" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (12,972,621 samples, 0.02%)</title><rect x="490.6" y="1749" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="493.57" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_erase (23,181,617 samples, 0.03%)</title><rect x="491.3" y="1749" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="494.34" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (10,583,414 samples, 0.01%)</title><rect x="944.2" y="1717" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="947.20" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1605" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1615.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (7,988,307 samples, 0.01%)</title><rect x="1001.6" y="1605" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1004.59" y="1615.5" ></text>
</g>
<g >
<title>__fdget_pos (34,610,516 samples, 0.04%)</title><rect x="675.3" y="1717" width="0.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="678.28" y="1727.5" ></text>
</g>
<g >
<title>napi_complete_done (20,317,784 samples, 0.02%)</title><rect x="1090.8" y="1621" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1093.77" y="1631.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (11,330,791 samples, 0.01%)</title><rect x="478.3" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="481.26" y="1679.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,516,130 samples, 0.01%)</title><rect x="65.7" y="1429" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="68.74" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (369,533,932 samples, 0.44%)</title><rect x="476.2" y="1717" width="5.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="479.24" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (73,693,536 samples, 0.09%)</title><rect x="445.5" y="1861" width="1.0" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="448.48" y="1871.5" ></text>
</g>
<g >
<title>___slab_alloc (20,731,229 samples, 0.02%)</title><rect x="431.6" y="1525" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="434.61" y="1535.5" ></text>
</g>
<g >
<title>__fdget (11,381,028 samples, 0.01%)</title><rect x="982.4" y="1589" width="0.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="985.40" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1669" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1679.5" ></text>
</g>
<g >
<title>rndis_filter_receive (19,608,575 samples, 0.02%)</title><rect x="1173.1" y="1669" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1176.07" y="1679.5" ></text>
</g>
<g >
<title>tcp_data_ready (7,513,023 samples, 0.01%)</title><rect x="1175.6" y="1381" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1178.59" y="1391.5" ></text>
</g>
<g >
<title>netvsc_poll (13,590,027 samples, 0.02%)</title><rect x="873.6" y="1797" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="876.64" y="1807.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,457,169 samples, 0.01%)</title><rect x="784.4" y="1701" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="787.42" y="1711.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (26,042,766 samples, 0.03%)</title><rect x="201.9" y="1685" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="204.92" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (16,694,806 samples, 0.02%)</title><rect x="1007.5" y="1189" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1010.47" y="1199.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (8,552,409 samples, 0.01%)</title><rect x="320.7" y="1701" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="323.71" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (9,340,124 samples, 0.01%)</title><rect x="577.5" y="1749" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="580.48" y="1759.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (38,993,258 samples, 0.05%)</title><rect x="1168.4" y="1797" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1171.41" y="1807.5" ></text>
</g>
<g >
<title>handle_softirqs (7,115,937 samples, 0.01%)</title><rect x="859.1" y="1365" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="862.06" y="1375.5" ></text>
</g>
<g >
<title>EventLoop::IsInLoopThread (14,616,634 samples, 0.02%)</title><rect x="459.2" y="1765" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="462.21" y="1775.5" ></text>
</g>
<g >
<title>HttpConn::Close (14,175,280 samples, 0.02%)</title><rect x="610.0" y="1797" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="613.04" y="1807.5" ></text>
</g>
<g >
<title>netvsc_poll (7,400,562 samples, 0.01%)</title><rect x="280.0" y="1349" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="282.98" y="1359.5" ></text>
</g>
<g >
<title>read (936,043,285 samples, 1.12%)</title><rect x="818.5" y="1813" width="13.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="821.52" y="1823.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (26,195,759 samples, 0.03%)</title><rect x="539.6" y="1637" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="542.65" y="1647.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (8,311,455 samples, 0.01%)</title><rect x="1060.0" y="1765" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1063.01" y="1775.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (14,415,067 samples, 0.02%)</title><rect x="272.7" y="1221" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="275.66" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (31,525,396 samples, 0.04%)</title><rect x="794.5" y="1749" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="797.53" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1461" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1471.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (15,553,323 samples, 0.02%)</title><rect x="13.2" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="16.22" y="1663.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (8,899,918 samples, 0.01%)</title><rect x="143.4" y="1781" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="146.45" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (24,266,895 samples, 0.03%)</title><rect x="21.6" y="1749" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="24.63" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1461" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="782.08" y="1471.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (338,985,833 samples, 0.41%)</title><rect x="1044.6" y="1733" width="4.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1047.65" y="1743.5" ></text>
</g>
<g >
<title>netvsc_poll (10,449,493 samples, 0.01%)</title><rect x="865.1" y="1317" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="868.14" y="1327.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, char*&gt; (38,501,448 samples, 0.05%)</title><rect x="1111.4" y="1685" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1114.36" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (93,202,991 samples, 0.11%)</title><rect x="1033.9" y="2037" width="1.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.92" y="2047.5" ></text>
</g>
<g >
<title>inode_has_perm (12,193,180 samples, 0.01%)</title><rect x="1118.3" y="1637" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1121.32" y="1647.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (8,682,783 samples, 0.01%)</title><rect x="16.3" y="1589" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="19.34" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1285" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1295.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (16,327,687 samples, 0.02%)</title><rect x="1122.7" y="1605" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1125.66" y="1615.5" ></text>
</g>
<g >
<title>tcp_data_ready (7,208,810 samples, 0.01%)</title><rect x="674.4" y="1429" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="677.37" y="1439.5" ></text>
</g>
<g >
<title>__errno_location (7,172,876 samples, 0.01%)</title><rect x="82.1" y="1813" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="85.06" y="1823.5" ></text>
</g>
<g >
<title>[web-server] (14,921,391 samples, 0.02%)</title><rect x="326.1" y="1765" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="329.12" y="1775.5" ></text>
</g>
<g >
<title>ipv4_dst_check (10,144,272 samples, 0.01%)</title><rect x="559.9" y="1493" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="562.92" y="1503.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (380,441,592 samples, 0.46%)</title><rect x="687.9" y="1701" width="5.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="690.87" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (10,884,951 samples, 0.01%)</title><rect x="904.6" y="1717" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="907.64" y="1727.5" ></text>
</g>
<g >
<title>ip_output (444,898,700 samples, 0.53%)</title><rect x="123.7" y="1493" width="6.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="126.74" y="1503.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (753,647,531 samples, 0.90%)</title><rect x="119.5" y="1525" width="10.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="122.48" y="1535.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (26,111,457 samples, 0.03%)</title><rect x="773.3" y="1669" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="776.25" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+ (12,976,791 samples, 0.02%)</title><rect x="177.7" y="1765" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="180.66" y="1775.5" ></text>
</g>
<g >
<title>__ip_local_out (255,930,088 samples, 0.31%)</title><rect x="120.0" y="1493" width="3.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="122.98" y="1503.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (10,636,759 samples, 0.01%)</title><rect x="800.4" y="1557" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="803.44" y="1567.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,671,991,150 samples, 11.61%)</title><rect x="749.8" y="2053" width="136.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="752.77" y="2063.5" >[libstdc++.so.6.0..</text>
</g>
<g >
<title>epoll_ctl (9,889,416 samples, 0.01%)</title><rect x="1142.2" y="1733" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1145.22" y="1743.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,950,504 samples, 0.01%)</title><rect x="656.7" y="1605" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="659.75" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (26,733,181 samples, 0.03%)</title><rect x="653.5" y="1621" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="656.49" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_established (8,788,808 samples, 0.01%)</title><rect x="141.3" y="1461" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="144.25" y="1471.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (7,820,304 samples, 0.01%)</title><rect x="447.3" y="1861" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="450.32" y="1871.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (12,194,458 samples, 0.01%)</title><rect x="927.0" y="1701" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="929.97" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7,238,679 samples, 0.01%)</title><rect x="1152.1" y="1173" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1155.05" y="1183.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (14,074,754 samples, 0.02%)</title><rect x="1050.3" y="1717" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1053.31" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (22,517,894 samples, 0.03%)</title><rect x="1050.2" y="1749" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1053.19" y="1759.5" ></text>
</g>
<g >
<title>netvsc_poll (9,879,824 samples, 0.01%)</title><rect x="39.0" y="1621" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="41.95" y="1631.5" ></text>
</g>
<g >
<title>netvsc_poll (7,386,516 samples, 0.01%)</title><rect x="972.7" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="975.66" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="229" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="239.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2,992,574,029 samples, 3.59%)</title><rect x="1126.7" y="1893" width="42.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1129.72" y="1903.5" >std..</text>
</g>
<g >
<title>sock_recvmsg (336,790,501 samples, 0.40%)</title><rect x="236.0" y="1685" width="4.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="238.99" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (88,717,922 samples, 0.11%)</title><rect x="810.6" y="1765" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="813.62" y="1775.5" ></text>
</g>
<g >
<title>netvsc_poll (11,224,105 samples, 0.01%)</title><rect x="233.3" y="1573" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="236.30" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (8,016,728 samples, 0.01%)</title><rect x="606.3" y="1349" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="609.26" y="1359.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (8,234,970 samples, 0.01%)</title><rect x="731.6" y="1573" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="734.56" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (11,215,748 samples, 0.01%)</title><rect x="815.8" y="1717" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="818.79" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="565" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (62,802,723 samples, 0.08%)</title><rect x="698.9" y="1749" width="0.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="701.86" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="773" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="783.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (9,588,116 samples, 0.01%)</title><rect x="652.0" y="1413" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="655.03" y="1423.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (9,104,406 samples, 0.01%)</title><rect x="610.1" y="1749" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="613.11" y="1759.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (859,598,544 samples, 1.03%)</title><rect x="649.9" y="1765" width="12.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="652.93" y="1775.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (9,462,643,912 samples, 11.35%)</title><rect x="456.8" y="1989" width="134.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="459.84" y="1999.5" >std::__invoke&lt;vo..</text>
</g>
<g >
<title>ksys_read (598,300,297 samples, 0.72%)</title><rect x="383.9" y="1733" width="8.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="386.87" y="1743.5" ></text>
</g>
<g >
<title>selinux_inode_permission (37,838,451 samples, 0.05%)</title><rect x="511.0" y="1557" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="514.04" y="1567.5" ></text>
</g>
<g >
<title>rndis_filter_receive (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1477" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1002.78" y="1487.5" ></text>
</g>
<g >
<title>netvsc_poll (9,355,454 samples, 0.01%)</title><rect x="399.0" y="1477" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="401.97" y="1487.5" ></text>
</g>
<g >
<title>net_rx_action (21,965,065 samples, 0.03%)</title><rect x="734.6" y="1653" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="737.58" y="1663.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (62,976,609 samples, 0.08%)</title><rect x="1014.0" y="1557" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1016.96" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (8,672,621 samples, 0.01%)</title><rect x="649.3" y="1749" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="652.25" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (24,801,802 samples, 0.03%)</title><rect x="317.5" y="1749" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="320.47" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (105,779,308 samples, 0.13%)</title><rect x="1178.0" y="1893" width="1.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1181.04" y="1903.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (10,954,823 samples, 0.01%)</title><rect x="722.8" y="1557" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="725.79" y="1567.5" ></text>
</g>
<g >
<title>netvsc_select_queue (36,677,412 samples, 0.04%)</title><rect x="715.6" y="1397" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="718.58" y="1407.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (14,180,220 samples, 0.02%)</title><rect x="427.3" y="1461" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="430.33" y="1471.5" ></text>
</g>
<g >
<title>operator delete (10,587,353 samples, 0.01%)</title><rect x="1107.2" y="1781" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1110.22" y="1791.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (40,775,746 samples, 0.05%)</title><rect x="791.2" y="1701" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="794.23" y="1711.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (8,572,829 samples, 0.01%)</title><rect x="646.8" y="1717" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="649.78" y="1727.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (73,463,906 samples, 0.09%)</title><rect x="973.3" y="1605" width="1.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="976.26" y="1615.5" ></text>
</g>
<g >
<title>rep_movs_alternative (15,100,641 samples, 0.02%)</title><rect x="117.5" y="1589" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="120.53" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (11,629,838 samples, 0.01%)</title><rect x="732.0" y="1477" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="734.96" y="1487.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1589" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1178.57" y="1599.5" ></text>
</g>
<g >
<title>ep_poll_callback (7,513,023 samples, 0.01%)</title><rect x="1175.6" y="1301" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1178.59" y="1311.5" ></text>
</g>
<g >
<title>napi_gro_receive (11,190,386 samples, 0.01%)</title><rect x="439.9" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="442.94" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (8,496,094 samples, 0.01%)</title><rect x="1014.3" y="1381" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1017.28" y="1391.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,401,675 samples, 0.01%)</title><rect x="146.3" y="1877" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="149.28" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (8,719,819 samples, 0.01%)</title><rect x="501.5" y="1701" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="504.51" y="1711.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,234,970 samples, 0.01%)</title><rect x="731.6" y="1589" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="734.56" y="1599.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (5,547,063,852 samples, 6.66%)</title><rect x="458.6" y="1829" width="78.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="461.56" y="1839.5" >HttpConn:..</text>
</g>
<g >
<title>tcp_v4_do_rcv (8,199,381 samples, 0.01%)</title><rect x="1027.6" y="1445" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1030.59" y="1455.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,468,023 samples, 0.01%)</title><rect x="622.8" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="625.78" y="1663.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (16,712,709 samples, 0.02%)</title><rect x="610.4" y="1749" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="613.45" y="1759.5" ></text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (7,341,991 samples, 0.01%)</title><rect x="1169.3" y="1925" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1172.25" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1205" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1215.5" ></text>
</g>
<g >
<title>net_rx_action (10,536,701 samples, 0.01%)</title><rect x="412.0" y="1669" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="415.00" y="1679.5" ></text>
</g>
<g >
<title>sk_reset_timer (71,154,061 samples, 0.09%)</title><rect x="721.5" y="1525" width="1.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="724.53" y="1535.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (60,434,959 samples, 0.07%)</title><rect x="651.7" y="1717" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="654.74" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (12,088,213 samples, 0.01%)</title><rect x="1007.5" y="1141" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1010.54" y="1151.5" ></text>
</g>
<g >
<title>napi_complete_done (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1605" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="925.16" y="1615.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (13,856,410 samples, 0.02%)</title><rect x="1024.5" y="1509" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1027.49" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_lock (10,004,499 samples, 0.01%)</title><rect x="279.8" y="1477" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="282.76" y="1487.5" ></text>
</g>
<g >
<title>nf_conntrack_in (157,135,570 samples, 0.19%)</title><rect x="1151.1" y="1445" width="2.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1154.10" y="1455.5" ></text>
</g>
<g >
<title>handle_softirqs (46,800,141 samples, 0.06%)</title><rect x="714.8" y="1365" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="717.76" y="1375.5" ></text>
</g>
<g >
<title>net_rx_action (21,375,833 samples, 0.03%)</title><rect x="213.1" y="1525" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="216.13" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (129,506,901 samples, 0.16%)</title><rect x="103.8" y="1733" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="106.77" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="389" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="399.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (8,002,776 samples, 0.01%)</title><rect x="964.3" y="1557" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="967.30" y="1567.5" ></text>
</g>
<g >
<title>__skb_flow_dissect (20,896,956 samples, 0.03%)</title><rect x="1008.7" y="1381" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1011.66" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node_ptr (63,128,013 samples, 0.08%)</title><rect x="104.3" y="1701" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="107.33" y="1711.5" ></text>
</g>
<g >
<title>handle_softirqs (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1973" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="747.77" y="1983.5" ></text>
</g>
<g >
<title>sk_reset_timer (61,826,306 samples, 0.07%)</title><rect x="1162.9" y="1525" width="0.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1165.95" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (576,670,259 samples, 0.69%)</title><rect x="209.8" y="1733" width="8.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="212.79" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (7,810,479 samples, 0.01%)</title><rect x="246.0" y="1541" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="249.00" y="1551.5" ></text>
</g>
<g >
<title>netvsc_poll (28,153,941 samples, 0.03%)</title><rect x="442.9" y="1621" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="445.95" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (25,061,613 samples, 0.03%)</title><rect x="838.6" y="1765" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="841.60" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (57,258,909 samples, 0.07%)</title><rect x="1054.3" y="1717" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1057.32" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (9,621,800 samples, 0.01%)</title><rect x="877.9" y="1541" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="880.91" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1797" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (8,844,180 samples, 0.01%)</title><rect x="1126.7" y="1877" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1129.75" y="1887.5" ></text>
</g>
<g >
<title>mutex_unlock (12,512,779 samples, 0.02%)</title><rect x="607.0" y="1605" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="609.96" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,689,887 samples, 0.01%)</title><rect x="733.5" y="1605" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="736.47" y="1615.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (9,704,484 samples, 0.01%)</title><rect x="1024.5" y="1397" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1027.55" y="1407.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (11,365,698 samples, 0.01%)</title><rect x="443.2" y="1509" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="446.18" y="1519.5" ></text>
</g>
<g >
<title>napi_complete_done (7,173,028 samples, 0.01%)</title><rect x="1140.9" y="1573" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1143.88" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (7,189,586 samples, 0.01%)</title><rect x="286.4" y="1909" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="289.35" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (25,768,873 samples, 0.03%)</title><rect x="1119.4" y="1621" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1122.40" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (88,613,448 samples, 0.11%)</title><rect x="640.7" y="1749" width="1.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="643.71" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (23,435,128 samples, 0.03%)</title><rect x="194.4" y="1765" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="197.37" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (19,936,469 samples, 0.02%)</title><rect x="1085.7" y="1669" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1088.71" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (9,272,503 samples, 0.01%)</title><rect x="1105.2" y="1749" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1108.15" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,147,124 samples, 0.01%)</title><rect x="429.5" y="1461" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="432.49" y="1471.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (18,477,898 samples, 0.02%)</title><rect x="904.3" y="1749" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="907.27" y="1759.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::tuple&lt;true, true&gt; (7,455,257 samples, 0.01%)</title><rect x="617.7" y="1717" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="620.74" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (16,256,205 samples, 0.02%)</title><rect x="630.4" y="1749" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="633.41" y="1759.5" ></text>
</g>
<g >
<title>path_lookupat (181,721,807 samples, 0.22%)</title><rect x="510.3" y="1621" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="513.31" y="1631.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,447,921,703 samples, 1.74%)</title><rect x="1146.2" y="1685" width="20.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1149.19" y="1695.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (9,086,089 samples, 0.01%)</title><rect x="264.7" y="1605" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="267.66" y="1615.5" ></text>
</g>
<g >
<title>EventLoop::IsInLoopThread (7,845,894 samples, 0.01%)</title><rect x="687.4" y="1765" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="690.44" y="1775.5" ></text>
</g>
<g >
<title>ip_list_rcv (14,614,824 samples, 0.02%)</title><rect x="62.9" y="1525" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="65.86" y="1535.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (15,193,428 samples, 0.02%)</title><rect x="652.6" y="1717" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="655.59" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1205" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1215.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (53,266,852 samples, 0.06%)</title><rect x="560.7" y="1429" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="563.71" y="1439.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (42,765,284 samples, 0.05%)</title><rect x="590.0" y="1829" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="593.03" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1909" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1919.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (49,194,905 samples, 0.06%)</title><rect x="283.0" y="1653" width="0.7" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="286.04" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="133" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (37,740,694 samples, 0.05%)</title><rect x="840.8" y="1701" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="843.78" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (64,110,002 samples, 0.08%)</title><rect x="348.5" y="1733" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="351.48" y="1743.5" ></text>
</g>
<g >
<title>x64_sys_call (528,139,289 samples, 0.63%)</title><rect x="1021.2" y="1861" width="7.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1024.23" y="1871.5" ></text>
</g>
<g >
<title>HttpConn::Close (16,086,052 samples, 0.02%)</title><rect x="168.3" y="1797" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="171.31" y="1807.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;true, char*, char*&gt; (7,264,294 samples, 0.01%)</title><rect x="55.0" y="1621" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="58.00" y="1631.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (11,841,314 samples, 0.01%)</title><rect x="273.0" y="1205" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="276.04" y="1215.5" ></text>
</g>
<g >
<title>netvsc_poll (26,373,766 samples, 0.03%)</title><rect x="565.0" y="1317" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="567.95" y="1327.5" ></text>
</g>
<g >
<title>napi_complete_done (25,587,303 samples, 0.03%)</title><rect x="860.9" y="1301" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="863.91" y="1311.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (9,755,743 samples, 0.01%)</title><rect x="210.2" y="1445" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="213.19" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (8,702,068 samples, 0.01%)</title><rect x="184.6" y="1669" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="187.59" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (9,842,591 samples, 0.01%)</title><rect x="941.6" y="1701" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="944.60" y="1711.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (372,359,679 samples, 0.45%)</title><rect x="41.1" y="1765" width="5.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="44.10" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7,151,242 samples, 0.01%)</title><rect x="584.5" y="1493" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="587.48" y="1503.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (26,405,411 samples, 0.03%)</title><rect x="472.9" y="1701" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="475.87" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1109" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1119.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (34,943,530 samples, 0.04%)</title><rect x="350.7" y="1669" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="353.70" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (13,243,813 samples, 0.02%)</title><rect x="581.6" y="1797" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="584.62" y="1807.5" ></text>
</g>
<g >
<title>__fdget (20,521,767 samples, 0.02%)</title><rect x="540.9" y="1589" width="0.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="543.86" y="1599.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (45,952,981 samples, 0.06%)</title><rect x="53.8" y="1669" width="0.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="56.85" y="1679.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (24,969,821 samples, 0.03%)</title><rect x="587.7" y="1829" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="590.71" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1253" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="997" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1007.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (39,897,084 samples, 0.05%)</title><rect x="1139.3" y="1717" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1142.34" y="1727.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (44,589,170 samples, 0.05%)</title><rect x="273.6" y="1413" width="0.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="276.62" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (21,661,632 samples, 0.03%)</title><rect x="343.4" y="1765" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="346.36" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (106,331,190 samples, 0.13%)</title><rect x="986.1" y="1749" width="1.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="989.06" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1525" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1535.5" ></text>
</g>
<g >
<title>memcpy_orig (32,477,047 samples, 0.04%)</title><rect x="566.9" y="1349" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="569.87" y="1359.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (120,838,468 samples, 0.15%)</title><rect x="985.9" y="1781" width="1.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="988.85" y="1791.5" ></text>
</g>
<g >
<title>operator new (7,694,192 samples, 0.01%)</title><rect x="179.3" y="1717" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="182.30" y="1727.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (67,695,676 samples, 0.08%)</title><rect x="734.2" y="1797" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="737.17" y="1807.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,340,280 samples, 0.02%)</title><rect x="541.2" y="1541" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="544.15" y="1551.5" ></text>
</g>
<g >
<title>net_rx_action (7,354,031 samples, 0.01%)</title><rect x="748.0" y="1957" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="751.02" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (14,891,307 samples, 0.02%)</title><rect x="1136.5" y="1781" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1139.54" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (14,878,351 samples, 0.02%)</title><rect x="652.0" y="1557" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="654.98" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1781" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1791.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (78,652,531 samples, 0.09%)</title><rect x="826.8" y="1589" width="1.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="829.77" y="1599.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (84,215,633 samples, 0.10%)</title><rect x="878.6" y="1813" width="1.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="881.59" y="1823.5" ></text>
</g>
<g >
<title>handle_softirqs (7,140,667 samples, 0.01%)</title><rect x="1071.8" y="1669" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1074.79" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (14,031,901 samples, 0.02%)</title><rect x="406.5" y="1765" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="409.46" y="1775.5" ></text>
</g>
<g >
<title>nft_counter_eval (13,250,710 samples, 0.02%)</title><rect x="421.4" y="1429" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="424.41" y="1439.5" ></text>
</g>
<g >
<title>handle_softirqs (11,695,179 samples, 0.01%)</title><rect x="261.0" y="1685" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="263.97" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (27,783,616 samples, 0.03%)</title><rect x="171.1" y="1717" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="174.12" y="1727.5" ></text>
</g>
<g >
<title>lock_sock_nested (36,171,298 samples, 0.04%)</title><rect x="236.2" y="1637" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="239.22" y="1647.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (13,741,186 samples, 0.02%)</title><rect x="1027.5" y="1477" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1030.51" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (472,205,426 samples, 0.57%)</title><rect x="728.7" y="1893" width="6.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="731.74" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (9,965,320,676 samples, 11.96%)</title><rect x="158.9" y="1989" width="141.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="161.87" y="1999.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>__local_bh_enable_ip (13,306,714 samples, 0.02%)</title><rect x="531.2" y="1605" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="534.24" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (8,736,495 samples, 0.01%)</title><rect x="1091.3" y="1749" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1094.30" y="1759.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10,669,139 samples, 0.01%)</title><rect x="1051.1" y="1749" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1054.07" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (10,542,059 samples, 0.01%)</title><rect x="520.4" y="1781" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="523.38" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (12,242,771 samples, 0.01%)</title><rect x="1074.0" y="1717" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1077.03" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,362,952 samples, 0.01%)</title><rect x="966.5" y="1525" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="969.46" y="1535.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,207,254 samples, 0.01%)</title><rect x="668.4" y="1797" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="671.42" y="1807.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (7,460,182 samples, 0.01%)</title><rect x="1071.1" y="1733" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1074.09" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1541" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1551.5" ></text>
</g>
<g >
<title>[web-server] (22,043,552 samples, 0.03%)</title><rect x="957.6" y="1781" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="960.57" y="1791.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (7,384,983 samples, 0.01%)</title><rect x="1032.6" y="1925" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1035.57" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (30,512,604 samples, 0.04%)</title><rect x="564.9" y="1349" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="567.92" y="1359.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (17,651,292 samples, 0.02%)</title><rect x="552.7" y="1781" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="555.66" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (7,827,049 samples, 0.01%)</title><rect x="699.3" y="1669" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="702.33" y="1679.5" ></text>
</g>
<g >
<title>ip_list_rcv (13,527,822 samples, 0.02%)</title><rect x="1172.9" y="1621" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1175.87" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (8,457,169 samples, 0.01%)</title><rect x="784.4" y="1621" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="787.42" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (15,723,506 samples, 0.02%)</title><rect x="448.9" y="133" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.89" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (23,221,641 samples, 0.03%)</title><rect x="778.9" y="1749" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="781.85" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,760,778 samples, 0.01%)</title><rect x="598.2" y="2037" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="601.19" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_established (12,088,213 samples, 0.01%)</title><rect x="1007.5" y="1125" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1010.54" y="1135.5" ></text>
</g>
<g >
<title>__x64_sys_read (608,174,859 samples, 0.73%)</title><rect x="383.7" y="1749" width="8.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="386.73" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="533" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="543.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (11,498,315 samples, 0.01%)</title><rect x="738.4" y="1861" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="741.39" y="1871.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (15,714,971 samples, 0.02%)</title><rect x="980.2" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="983.16" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,516,130 samples, 0.01%)</title><rect x="65.7" y="1445" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="68.74" y="1455.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (10,806,564 samples, 0.01%)</title><rect x="590.9" y="2021" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="593.93" y="2031.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,247,235 samples, 0.01%)</title><rect x="284.2" y="1621" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="287.18" y="1631.5" ></text>
</g>
<g >
<title>do_syscall_64 (176,123,391 samples, 0.21%)</title><rect x="539.6" y="1653" width="2.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="542.60" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (15,114,032 samples, 0.02%)</title><rect x="843.7" y="1781" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="846.75" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (323,727,429 samples, 0.39%)</title><rect x="833.5" y="1733" width="4.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="836.52" y="1743.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (197,519,773 samples, 0.24%)</title><rect x="899.7" y="1621" width="2.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="902.72" y="1631.5" ></text>
</g>
<g >
<title>handle_softirqs (7,246,094 samples, 0.01%)</title><rect x="519.4" y="1701" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="522.40" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (7,514,961 samples, 0.01%)</title><rect x="941.3" y="1637" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="944.34" y="1647.5" ></text>
</g>
<g >
<title>tcp_rcv_established (10,376,594 samples, 0.01%)</title><rect x="674.3" y="1445" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="677.33" y="1455.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (18,941,124 samples, 0.02%)</title><rect x="1155.8" y="1157" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1158.78" y="1167.5" ></text>
</g>
<g >
<title>netvsc_poll (8,405,413 samples, 0.01%)</title><rect x="559.4" y="1429" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="562.43" y="1439.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (29,116,699 samples, 0.03%)</title><rect x="1029.3" y="1861" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1032.28" y="1871.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,968,086 samples, 0.01%)</title><rect x="1167.1" y="1621" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1170.05" y="1631.5" ></text>
</g>
<g >
<title>__check_object_size (51,249,709 samples, 0.06%)</title><rect x="1096.7" y="1605" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1099.73" y="1615.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (8,010,118 samples, 0.01%)</title><rect x="759.5" y="1589" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="762.52" y="1599.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (14,978,728 samples, 0.02%)</title><rect x="1090.8" y="1541" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1093.79" y="1551.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,412,072 samples, 0.01%)</title><rect x="1077.1" y="1685" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1080.13" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (8,814,896 samples, 0.01%)</title><rect x="1130.6" y="1477" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1133.63" y="1487.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (130,105,707 samples, 0.16%)</title><rect x="1024.8" y="1813" width="1.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1027.82" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1189" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1199.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (14,034,587 samples, 0.02%)</title><rect x="1028.8" y="1893" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1031.79" y="1903.5" ></text>
</g>
<g >
<title>netvsc_xmit (10,162,208 samples, 0.01%)</title><rect x="273.4" y="1349" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="276.40" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1557" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1567.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (327,478,555 samples, 0.39%)</title><rect x="779.9" y="1765" width="4.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="782.92" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (292,136,402 samples, 0.35%)</title><rect x="1062.9" y="1701" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.93" y="1711.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1637" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="171.38" y="1647.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (7,071,224 samples, 0.01%)</title><rect x="16.4" y="1573" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="19.36" y="1583.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (11,612,639 samples, 0.01%)</title><rect x="938.6" y="1685" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="941.59" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (12,003,983 samples, 0.01%)</title><rect x="775.1" y="1717" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="778.15" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (16,141,447 samples, 0.02%)</title><rect x="903.5" y="1669" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="906.54" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1957" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1967.5" ></text>
</g>
<g >
<title>strncpy_from_user (51,656,849 samples, 0.06%)</title><rect x="803.3" y="1621" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="806.27" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;char*, void&gt; (105,489,663 samples, 0.13%)</title><rect x="816.6" y="1797" width="1.5" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="819.63" y="1807.5" ></text>
</g>
<g >
<title>selinux_socket_recvmsg (56,898,486 samples, 0.07%)</title><rect x="828.9" y="1653" width="0.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="831.93" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="373" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="383.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="789" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (8,446,158 samples, 0.01%)</title><rect x="663.0" y="1765" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="666.01" y="1775.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (14,523,682 samples, 0.02%)</title><rect x="113.8" y="1749" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="116.80" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_v (8,122,228 samples, 0.01%)</title><rect x="1088.4" y="1653" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1091.45" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (9,904,066,853 samples, 11.88%)</title><rect x="10.2" y="1989" width="140.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.25" y="1999.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (137,343,290 samples, 0.16%)</title><rect x="544.1" y="1749" width="2.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="547.14" y="1759.5" ></text>
</g>
<g >
<title>clear_bhb_loop (15,395,444 samples, 0.02%)</title><rect x="1128.9" y="1653" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1131.89" y="1663.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (8,002,776 samples, 0.01%)</title><rect x="964.3" y="1589" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="967.30" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="677" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="687.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (17,209,409 samples, 0.02%)</title><rect x="534.0" y="1621" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="536.99" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (8,044,988 samples, 0.01%)</title><rect x="912.9" y="1765" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="915.85" y="1775.5" ></text>
</g>
<g >
<title>ip_local_out (718,326,316 samples, 0.86%)</title><rect x="120.0" y="1509" width="10.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="122.96" y="1519.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (97,466,138 samples, 0.12%)</title><rect x="634.2" y="1701" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="637.23" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (3,003,542,087 samples, 3.60%)</title><rect x="243.6" y="1861" width="42.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="246.63" y="1871.5" >std:..</text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (23,309,126 samples, 0.03%)</title><rect x="524.6" y="1797" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="527.57" y="1807.5" ></text>
</g>
<g >
<title>strncpy_from_user (8,001,525 samples, 0.01%)</title><rect x="1097.7" y="1637" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1100.75" y="1647.5" ></text>
</g>
<g >
<title>__strlen_avx2 (8,369,504 samples, 0.01%)</title><rect x="73.4" y="1765" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="76.36" y="1775.5" ></text>
</g>
<g >
<title>do_epoll_ctl (125,280,158 samples, 0.15%)</title><rect x="689.7" y="1605" width="1.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="692.71" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (7,159,440 samples, 0.01%)</title><rect x="546.9" y="1781" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="549.92" y="1791.5" ></text>
</g>
<g >
<title>__napi_poll (26,505,495 samples, 0.03%)</title><rect x="60.5" y="1653" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="63.47" y="1663.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,177,283 samples, 0.01%)</title><rect x="413.9" y="1685" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="416.89" y="1695.5" ></text>
</g>
<g >
<title>hv_ringbuffer_write (40,905,115 samples, 0.05%)</title><rect x="276.3" y="1301" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="279.29" y="1311.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (20,871,830 samples, 0.03%)</title><rect x="1024.5" y="1621" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1027.45" y="1631.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (9,092,097 samples, 0.01%)</title><rect x="703.8" y="1749" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="706.81" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (10,768,423 samples, 0.01%)</title><rect x="294.0" y="1893" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="297.03" y="1903.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (11,471,970 samples, 0.01%)</title><rect x="606.3" y="1397" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="609.26" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (8,933,504 samples, 0.01%)</title><rect x="1054.8" y="1669" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1057.85" y="1679.5" ></text>
</g>
<g >
<title>rep_movs_alternative (10,539,984 samples, 0.01%)</title><rect x="541.9" y="1605" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="544.90" y="1615.5" ></text>
</g>
<g >
<title>std::function&lt;void  (7,590,252 samples, 0.01%)</title><rect x="668.8" y="1797" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="671.82" y="1807.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (13,124,751 samples, 0.02%)</title><rect x="573.7" y="1541" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="576.75" y="1551.5" ></text>
</g>
<g >
<title>ktime_get (10,005,860 samples, 0.01%)</title><rect x="265.9" y="1573" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="268.90" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="421" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="431.5" ></text>
</g>
<g >
<title>irq_exit_rcu (14,123,476 samples, 0.02%)</title><rect x="13.2" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="16.24" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (80,717,998 samples, 0.10%)</title><rect x="371.5" y="1765" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="374.51" y="1775.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (7,224,853 samples, 0.01%)</title><rect x="356.8" y="1749" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="359.79" y="1759.5" ></text>
</g>
<g >
<title>_copy_to_iter (28,810,717 samples, 0.03%)</title><rect x="1122.0" y="1573" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1125.04" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="709" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="719.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (14,406,205 samples, 0.02%)</title><rect x="539.8" y="1621" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="542.82" y="1631.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (50,357,061 samples, 0.06%)</title><rect x="1014.1" y="1541" width="0.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1017.14" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (8,100,899 samples, 0.01%)</title><rect x="40.1" y="1749" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="43.08" y="1759.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,407,017 samples, 0.01%)</title><rect x="1079.0" y="1749" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1082.03" y="1759.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (59,792,498 samples, 0.07%)</title><rect x="977.3" y="1797" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="980.32" y="1807.5" ></text>
</g>
<g >
<title>__fget_light (28,078,400 samples, 0.03%)</title><rect x="164.6" y="1573" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="167.55" y="1583.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (14,785,884 samples, 0.02%)</title><rect x="667.4" y="1781" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="670.38" y="1791.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1541" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="171.38" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (168,579,009 samples, 0.20%)</title><rect x="497.1" y="1733" width="2.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="500.05" y="1743.5" ></text>
</g>
<g >
<title>putname (7,940,299 samples, 0.01%)</title><rect x="653.1" y="1669" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="656.09" y="1679.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (12,433,339 samples, 0.01%)</title><rect x="538.8" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="541.77" y="1663.5" ></text>
</g>
<g >
<title>ip_list_rcv (11,190,386 samples, 0.01%)</title><rect x="439.9" y="1589" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="442.94" y="1599.5" ></text>
</g>
<g >
<title>vmbus_sendpacket (61,680,818 samples, 0.07%)</title><rect x="127.7" y="1317" width="0.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="130.73" y="1327.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,064,045 samples, 0.01%)</title><rect x="606.3" y="1381" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="609.26" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1173" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1183.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,734,143 samples, 0.01%)</title><rect x="848.9" y="1573" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="851.89" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="821" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (442,190,283 samples, 0.53%)</title><rect x="1170.3" y="1845" width="6.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1173.34" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (9,182,790 samples, 0.01%)</title><rect x="440.3" y="1477" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="443.28" y="1487.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (46,524,628 samples, 0.06%)</title><rect x="860.8" y="1413" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="863.79" y="1423.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (41,516,658 samples, 0.05%)</title><rect x="1019.3" y="1797" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1022.29" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (21,243,549 samples, 0.03%)</title><rect x="29.1" y="1765" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="32.15" y="1775.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (461,140,189 samples, 0.55%)</title><rect x="437.4" y="1845" width="6.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="440.40" y="1855.5" ></text>
</g>
<g >
<title>inet_sendmsg (1,347,693,858 samples, 1.62%)</title><rect x="705.9" y="1653" width="19.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="708.89" y="1663.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (9,104,406 samples, 0.01%)</title><rect x="610.1" y="1637" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="613.11" y="1647.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (12,665,861 samples, 0.02%)</title><rect x="848.8" y="1749" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="851.84" y="1759.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (7,887,916 samples, 0.01%)</title><rect x="626.4" y="1685" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="629.45" y="1695.5" ></text>
</g>
<g >
<title>__napi_poll (7,123,157 samples, 0.01%)</title><rect x="929.1" y="1589" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="932.06" y="1599.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (120,889,558 samples, 0.15%)</title><rect x="143.4" y="1813" width="1.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="146.37" y="1823.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (451,868,906 samples, 0.54%)</title><rect x="1127.5" y="1797" width="6.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1130.54" y="1807.5" ></text>
</g>
<g >
<title>__secure_computing (8,372,817 samples, 0.01%)</title><rect x="232.0" y="1733" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="235.02" y="1743.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (875,509,573 samples, 1.05%)</title><rect x="266.4" y="1557" width="12.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="269.37" y="1567.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1557" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="295.80" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (11,833,169 samples, 0.01%)</title><rect x="414.5" y="1605" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="417.50" y="1615.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char*, char*, char&gt; (49,550,141 samples, 0.06%)</title><rect x="80.5" y="1749" width="0.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="83.49" y="1759.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (35,481,125 samples, 0.04%)</title><rect x="791.3" y="1669" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="794.30" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (17,928,035 samples, 0.02%)</title><rect x="688.0" y="1669" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="691.05" y="1679.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (52,109,210 samples, 0.06%)</title><rect x="644.0" y="1701" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="646.99" y="1711.5" ></text>
</g>
<g >
<title>security_file_permission (126,184,191 samples, 0.15%)</title><rect x="233.8" y="1685" width="1.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="236.80" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (7,906,666 samples, 0.01%)</title><rect x="1052.5" y="1669" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1055.47" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (8,631,893 samples, 0.01%)</title><rect x="898.3" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="901.29" y="1599.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (86,604,985 samples, 0.10%)</title><rect x="389.5" y="1621" width="1.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="392.54" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (86,336,230 samples, 0.10%)</title><rect x="255.9" y="1765" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="258.86" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (7,805,407 samples, 0.01%)</title><rect x="701.5" y="1797" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="704.49" y="1807.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (144,524,920 samples, 0.17%)</title><rect x="1134.0" y="1781" width="2.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1137.01" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_M_next (27,070,204 samples, 0.03%)</title><rect x="1134.4" y="1717" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1137.44" y="1727.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (71,035,738 samples, 0.09%)</title><rect x="1102.5" y="1749" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1105.54" y="1759.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,335,646 samples, 0.01%)</title><rect x="311.8" y="1477" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="314.78" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="853" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="863.5" ></text>
</g>
<g >
<title>path_init (12,384,035 samples, 0.01%)</title><rect x="807.6" y="1605" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="810.59" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (12,322,232 samples, 0.01%)</title><rect x="231.7" y="1605" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="234.71" y="1615.5" ></text>
</g>
<g >
<title>__napi_poll (11,934,288 samples, 0.01%)</title><rect x="307.1" y="1941" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="310.08" y="1951.5" ></text>
</g>
<g >
<title>nf_hook_slow (55,394,168 samples, 0.07%)</title><rect x="719.1" y="1477" width="0.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="722.15" y="1487.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (14,917,832 samples, 0.02%)</title><rect x="401.6" y="1717" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="404.56" y="1727.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,160,263 samples, 0.01%)</title><rect x="1040.6" y="1861" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1043.61" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (10,160,732 samples, 0.01%)</title><rect x="1110.0" y="1781" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1113.03" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (5,877,480,870 samples, 7.05%)</title><rect x="160.2" y="1845" width="83.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="163.21" y="1855.5" >std::__in..</text>
</g>
<g >
<title>sysvec_hyperv_callback (7,072,047 samples, 0.01%)</title><rect x="28.8" y="1749" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="31.79" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (47,436,560 samples, 0.06%)</title><rect x="648.2" y="1717" width="0.7" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="651.18" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="581" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="591.5" ></text>
</g>
<g >
<title>walk_component (56,582,309 samples, 0.07%)</title><rect x="951.1" y="1589" width="0.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="954.10" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (14,485,841 samples, 0.02%)</title><rect x="980.2" y="1509" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="983.16" y="1519.5" ></text>
</g>
<g >
<title>__wake_up_sync (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1173" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="951.32" y="1183.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,484,539 samples, 0.02%)</title><rect x="746.0" y="2037" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="749.00" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;TimerManager::TimerNode,  (12,667,410 samples, 0.02%)</title><rect x="885.0" y="1893" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="887.97" y="1903.5" ></text>
</g>
<g >
<title>mod_timer (68,744,467 samples, 0.08%)</title><rect x="721.6" y="1509" width="0.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="724.56" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="533" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (28,500,438 samples, 0.03%)</title><rect x="762.8" y="1701" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="765.84" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1125" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1135.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (17,257,301 samples, 0.02%)</title><rect x="380.8" y="1653" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="383.75" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="885" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (12,457,071 samples, 0.01%)</title><rect x="744.0" y="2037" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="746.98" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (18,950,892 samples, 0.02%)</title><rect x="592.0" y="2021" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="595.01" y="2031.5" ></text>
</g>
<g >
<title>ip_finish_output2 (329,286,750 samples, 0.40%)</title><rect x="564.4" y="1445" width="4.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="567.37" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (162,657,127 samples, 0.20%)</title><rect x="1055.3" y="1701" width="2.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1058.26" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_erase_at_end (9,275,471 samples, 0.01%)</title><rect x="344.3" y="1733" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="347.32" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (35,495,784 samples, 0.04%)</title><rect x="422.8" y="1349" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="425.77" y="1359.5" ></text>
</g>
<g >
<title>__skb_flow_dissect (24,379,860 samples, 0.03%)</title><rect x="565.6" y="1381" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="568.62" y="1391.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (12,301,392 samples, 0.01%)</title><rect x="853.6" y="1589" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="856.55" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (22,103,943 samples, 0.03%)</title><rect x="731.9" y="1605" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="734.90" y="1615.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,566,871 samples, 0.01%)</title><rect x="247.5" y="1413" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="250.52" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (20,554,537 samples, 0.02%)</title><rect x="1034.0" y="85" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1037.02" y="95.5" ></text>
</g>
<g >
<title>release_sock (16,300,764 samples, 0.02%)</title><rect x="851.7" y="1621" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="854.71" y="1631.5" ></text>
</g>
<g >
<title>tcp_current_mss (14,804,897 samples, 0.02%)</title><rect x="1015.6" y="1589" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1018.62" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (9,731,921 samples, 0.01%)</title><rect x="1139.9" y="1733" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1142.91" y="1743.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (12,204,132 samples, 0.01%)</title><rect x="225.8" y="1781" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="228.77" y="1791.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (11,066,616 samples, 0.01%)</title><rect x="442.9" y="1541" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="445.95" y="1551.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (9,010,126 samples, 0.01%)</title><rect x="326.9" y="1765" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="329.90" y="1775.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (105,476,227 samples, 0.13%)</title><rect x="845.3" y="1781" width="1.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="848.31" y="1791.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (7,227,551 samples, 0.01%)</title><rect x="1127.8" y="1717" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1130.83" y="1727.5" ></text>
</g>
<g >
<title>do_epoll_ctl (160,232,216 samples, 0.19%)</title><rect x="754.8" y="1605" width="2.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="757.79" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="655.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (31,945,663 samples, 0.04%)</title><rect x="465.4" y="1765" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="468.43" y="1775.5" ></text>
</g>
<g >
<title>ip_list_rcv (11,066,616 samples, 0.01%)</title><rect x="442.9" y="1557" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="445.95" y="1567.5" ></text>
</g>
<g >
<title>irq_exit_rcu (14,773,367 samples, 0.02%)</title><rect x="944.6" y="1669" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="947.57" y="1679.5" ></text>
</g>
<g >
<title>__do_softirq (16,168,766 samples, 0.02%)</title><rect x="971.1" y="1573" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="974.08" y="1583.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (37,629,842 samples, 0.05%)</title><rect x="670.1" y="1669" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="673.07" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (42,544,649 samples, 0.05%)</title><rect x="501.8" y="1701" width="0.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="504.76" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1989" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1999.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (26,939,315 samples, 0.03%)</title><rect x="878.1" y="1797" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="881.08" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (27,891,629 samples, 0.03%)</title><rect x="346.6" y="1765" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="349.63" y="1775.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, char*, char*&gt; (10,690,229 samples, 0.01%)</title><rect x="817.6" y="1669" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="820.56" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="229" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (9,690,385 samples, 0.01%)</title><rect x="841.1" y="1669" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="844.09" y="1679.5" ></text>
</g>
<g >
<title>do_syscall_64 (243,954,017 samples, 0.29%)</title><rect x="460.6" y="1653" width="3.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="463.57" y="1663.5" ></text>
</g>
<g >
<title>ip_list_rcv (10,570,407 samples, 0.01%)</title><rect x="942.8" y="1573" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="945.85" y="1583.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (20,285,252 samples, 0.02%)</title><rect x="523.3" y="1733" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="526.28" y="1743.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (158,958,998 samples, 0.19%)</title><rect x="543.9" y="1781" width="2.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="546.86" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (11,596,294 samples, 0.01%)</title><rect x="158.4" y="2053" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="161.38" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="965" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="975.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (8,173,166 samples, 0.01%)</title><rect x="62.9" y="1429" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="65.91" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (27,703,761 samples, 0.03%)</title><rect x="801.6" y="1621" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="804.63" y="1631.5" ></text>
</g>
<g >
<title>__napi_poll (10,509,260 samples, 0.01%)</title><rect x="559.4" y="1445" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="562.43" y="1455.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1,294,797,874 samples, 1.55%)</title><rect x="1147.6" y="1621" width="18.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1150.61" y="1631.5" ></text>
</g>
<g >
<title>read (1,010,627,836 samples, 1.21%)</title><rect x="963.9" y="1813" width="14.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="966.85" y="1823.5" ></text>
</g>
<g >
<title>__schedule (84,347,772 samples, 0.10%)</title><rect x="292.6" y="1765" width="1.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="295.57" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (15,284,131 samples, 0.02%)</title><rect x="295.2" y="1893" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="298.15" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1141" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="951.32" y="1151.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (7,456,252 samples, 0.01%)</title><rect x="543.4" y="1733" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="546.40" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (22,835,865 samples, 0.03%)</title><rect x="639.4" y="1765" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="642.42" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (28,109,597 samples, 0.03%)</title><rect x="941.2" y="1701" width="0.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="944.18" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (7,252,038 samples, 0.01%)</title><rect x="707.9" y="1493" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="710.88" y="1503.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (9,104,406 samples, 0.01%)</title><rect x="610.1" y="1685" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="613.11" y="1695.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (418,069,758 samples, 0.50%)</title><rect x="97.5" y="1797" width="5.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="100.50" y="1807.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (12,166,036 samples, 0.01%)</title><rect x="116.0" y="1605" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="119.02" y="1615.5" ></text>
</g>
<g >
<title>tcp_send_mss (33,222,615 samples, 0.04%)</title><rect x="430.8" y="1605" width="0.5" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="433.81" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1541" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1551.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (10,770,170 samples, 0.01%)</title><rect x="481.3" y="1685" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="484.32" y="1695.5" ></text>
</g>
<g >
<title>EventLoop::IsInLoopThread (13,218,912 samples, 0.02%)</title><rect x="161.3" y="1765" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="164.27" y="1775.5" ></text>
</g>
<g >
<title>__secure_computing (14,017,373 samples, 0.02%)</title><rect x="383.0" y="1733" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="386.02" y="1743.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (9,901,746 samples, 0.01%)</title><rect x="205.7" y="1637" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="208.74" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (44,438,865 samples, 0.05%)</title><rect x="1089.3" y="1717" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1092.28" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (8,175,998 samples, 0.01%)</title><rect x="1050.7" y="1765" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1053.69" y="1775.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,400,562 samples, 0.01%)</title><rect x="280.0" y="1413" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="282.98" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (7,788,123 samples, 0.01%)</title><rect x="74.8" y="1749" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="77.81" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="677" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="687.5" ></text>
</g>
<g >
<title>strncpy_from_user (96,131,383 samples, 0.12%)</title><rect x="508.3" y="1621" width="1.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="511.31" y="1631.5" ></text>
</g>
<g >
<title>operator new (7,178,901 samples, 0.01%)</title><rect x="1070.3" y="1749" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1073.34" y="1759.5" ></text>
</g>
<g >
<title>__memchr_avx2 (43,834,655 samples, 0.05%)</title><rect x="1035.2" y="2037" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1038.24" y="2047.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (22,192,366 samples, 0.03%)</title><rect x="184.4" y="1701" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="187.43" y="1711.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,660,277 samples, 0.01%)</title><rect x="784.2" y="1669" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="787.18" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (38,269,032 samples, 0.05%)</title><rect x="860.9" y="1349" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="863.88" y="1359.5" ></text>
</g>
<g >
<title>tcp_poll (10,272,723 samples, 0.01%)</title><rect x="982.8" y="1557" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="985.80" y="1567.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (44,236,125 samples, 0.05%)</title><rect x="966.2" y="1765" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="969.25" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (14,448,922 samples, 0.02%)</title><rect x="999.7" y="1509" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1002.74" y="1519.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,627,597 samples, 0.01%)</title><rect x="1175.6" y="1685" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1178.57" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="693" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="703.5" ></text>
</g>
<g >
<title>avc_has_perm (10,610,329 samples, 0.01%)</title><rect x="871.8" y="1605" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="874.76" y="1615.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,238,679 samples, 0.01%)</title><rect x="1152.1" y="1221" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1155.05" y="1231.5" ></text>
</g>
<g >
<title>__ip_finish_output (337,073,427 samples, 0.40%)</title><rect x="564.3" y="1461" width="4.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="567.26" y="1471.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (9,995,806 samples, 0.01%)</title><rect x="125.2" y="1189" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="128.25" y="1199.5" ></text>
</g>
<g >
<title>net_rx_action (10,052,214 samples, 0.01%)</title><rect x="927.6" y="1605" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="930.65" y="1615.5" ></text>
</g>
<g >
<title>avc_lookup (8,206,039 samples, 0.01%)</title><rect x="806.1" y="1525" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="809.11" y="1535.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (9,710,020 samples, 0.01%)</title><rect x="1071.2" y="1717" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1074.24" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (9,535,416 samples, 0.01%)</title><rect x="392.5" y="1797" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="395.45" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="789" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="799.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,173,028 samples, 0.01%)</title><rect x="1140.9" y="1557" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1143.88" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1557" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1567.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (352,106,997 samples, 0.42%)</title><rect x="1127.9" y="1717" width="5.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1130.94" y="1727.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,867,495 samples, 0.02%)</title><rect x="141.2" y="1765" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="144.21" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (8,226,950 samples, 0.01%)</title><rect x="708.0" y="1525" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="710.98" y="1535.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (430,696,463 samples, 0.52%)</title><rect x="311.1" y="1781" width="6.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="314.08" y="1791.5" ></text>
</g>
<g >
<title>__fdget_pos (50,457,542 samples, 0.06%)</title><rect x="232.7" y="1717" width="0.8" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="235.75" y="1727.5" ></text>
</g>
<g >
<title>inet_recvmsg (339,991,597 samples, 0.41%)</title><rect x="386.8" y="1669" width="4.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="389.83" y="1679.5" ></text>
</g>
<g >
<title>__napi_poll (9,360,456 samples, 0.01%)</title><rect x="363.3" y="1509" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="366.30" y="1519.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (11,579,675 samples, 0.01%)</title><rect x="46.7" y="1749" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="49.68" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (18,941,124 samples, 0.02%)</title><rect x="1155.8" y="1189" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1158.78" y="1199.5" ></text>
</g>
<g >
<title>irq_exit_rcu (16,554,758 samples, 0.02%)</title><rect x="505.3" y="1669" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="508.33" y="1679.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (8,690,401 samples, 0.01%)</title><rect x="416.9" y="1589" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="419.94" y="1599.5" ></text>
</g>
<g >
<title>ip_list_rcv (13,451,848 samples, 0.02%)</title><rect x="125.2" y="1221" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="128.20" y="1231.5" ></text>
</g>
<g >
<title>netvsc_poll (7,115,937 samples, 0.01%)</title><rect x="859.1" y="1317" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="862.06" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1157" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1167.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,238,679 samples, 0.01%)</title><rect x="1152.1" y="1237" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1155.05" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (121,511,262 samples, 0.15%)</title><rect x="909.0" y="1701" width="1.8" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="912.04" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (84,161,936 samples, 0.10%)</title><rect x="1137.9" y="1781" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1140.87" y="1791.5" ></text>
</g>
<g >
<title>kmem_cache_free (7,407,541 samples, 0.01%)</title><rect x="826.5" y="1589" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="829.53" y="1599.5" ></text>
</g>
<g >
<title>sock_read_iter (401,896,883 samples, 0.48%)</title><rect x="89.0" y="1701" width="5.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="92.05" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1813" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="747.77" y="1823.5" ></text>
</g>
<g >
<title>netvsc_poll (26,699,885 samples, 0.03%)</title><rect x="357.7" y="1637" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="360.73" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (7,157,161 samples, 0.01%)</title><rect x="841.9" y="1781" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="844.91" y="1791.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (52,962,158 samples, 0.06%)</title><rect x="882.0" y="1861" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="884.99" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (8,901,758 samples, 0.01%)</title><rect x="1067.8" y="1717" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1070.84" y="1727.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (11,785,072 samples, 0.01%)</title><rect x="1028.3" y="1813" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1031.32" y="1823.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,919,671,156 samples, 11.90%)</title><rect x="10.0" y="2053" width="140.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="13.03" y="2063.5" >[libstdc++.so.6.0..</text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="821" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="831.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,297,747 samples, 0.01%)</title><rect x="1068.6" y="1733" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1071.61" y="1743.5" ></text>
</g>
<g >
<title>sock_poll (56,861,383 samples, 0.07%)</title><rect x="879.0" y="1797" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="881.98" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (15,916,302 samples, 0.02%)</title><rect x="146.4" y="1909" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="149.41" y="1919.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (12,901,362 samples, 0.02%)</title><rect x="1119.4" y="1589" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1122.42" y="1599.5" ></text>
</g>
<g >
<title>handle_softirqs (16,594,723 samples, 0.02%)</title><rect x="462.9" y="1525" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="465.94" y="1535.5" ></text>
</g>
<g >
<title>irq_exit_rcu (16,439,327 samples, 0.02%)</title><rect x="702.5" y="1765" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="705.52" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1173" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1183.5" ></text>
</g>
<g >
<title>security_inode_permission (40,245,133 samples, 0.05%)</title><rect x="950.3" y="1573" width="0.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="953.27" y="1583.5" ></text>
</g>
<g >
<title>sock_poll (85,672,248 samples, 0.10%)</title><rect x="732.9" y="1797" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="735.88" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1269" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1279.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (66,438,231 samples, 0.08%)</title><rect x="571.2" y="1541" width="0.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="574.21" y="1551.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (12,578,582 samples, 0.02%)</title><rect x="962.8" y="1733" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="965.78" y="1743.5" ></text>
</g>
<g >
<title>napi_complete_done (14,005,105 samples, 0.02%)</title><rect x="360.2" y="1573" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="363.21" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (18,936,032 samples, 0.02%)</title><rect x="490.9" y="1765" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="493.95" y="1775.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (288,278,639 samples, 0.35%)</title><rect x="339.3" y="1749" width="4.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="342.26" y="1759.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (7,689,887 samples, 0.01%)</title><rect x="733.5" y="1637" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="736.47" y="1647.5" ></text>
</g>
<g >
<title>handle_softirqs (28,048,336 samples, 0.03%)</title><rect x="380.7" y="1733" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="383.68" y="1743.5" ></text>
</g>
<g >
<title>__memchr_avx2 (26,974,526 samples, 0.03%)</title><rect x="303.2" y="2053" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="306.23" y="2063.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (7,991,799 samples, 0.01%)</title><rect x="478.3" y="1477" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="481.28" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (9,654,262 samples, 0.01%)</title><rect x="887.7" y="2021" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="890.66" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (45,547,617 samples, 0.05%)</title><rect x="795.5" y="1669" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="798.47" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="709" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="719.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (9,247,483 samples, 0.01%)</title><rect x="962.8" y="1685" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="965.83" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="597" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="607.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (13,756,580 samples, 0.02%)</title><rect x="402.1" y="1717" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="405.06" y="1727.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (2,914,489,901 samples, 3.50%)</title><rect x="832.3" y="1861" width="41.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="835.33" y="1871.5" >std..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (25,805,846 samples, 0.03%)</title><rect x="469.6" y="1701" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="472.61" y="1711.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (29,130,664 samples, 0.03%)</title><rect x="233.9" y="1669" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="236.94" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (19,704,947 samples, 0.02%)</title><rect x="1007.5" y="1205" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1010.47" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (20,167,118 samples, 0.02%)</title><rect x="456.2" y="2053" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="459.19" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="965" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="975.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,661,320 samples, 0.01%)</title><rect x="178.2" y="1765" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="181.23" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (37,212,722 samples, 0.04%)</title><rect x="294.5" y="1893" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="297.46" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (16,082,878 samples, 0.02%)</title><rect x="636.4" y="1765" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="639.45" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (13,755,772 samples, 0.02%)</title><rect x="748.8" y="2053" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="751.83" y="2063.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (11,235,899 samples, 0.01%)</title><rect x="789.6" y="1701" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="792.61" y="1711.5" ></text>
</g>
<g >
<title>tcp_data_ready (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1269" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="951.32" y="1279.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,306,909 samples, 0.01%)</title><rect x="704.6" y="1653" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="707.61" y="1663.5" ></text>
</g>
<g >
<title>do_iter_write (1,482,600,949 samples, 1.78%)</title><rect x="115.0" y="1701" width="21.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="117.98" y="1711.5" ></text>
</g>
<g >
<title>ip_list_rcv (18,303,938 samples, 0.02%)</title><rect x="798.1" y="1573" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="801.07" y="1583.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (10,586,059 samples, 0.01%)</title><rect x="582.0" y="1653" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="584.97" y="1663.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (8,735,605 samples, 0.01%)</title><rect x="728.9" y="1861" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="731.88" y="1871.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (14,487,388 samples, 0.02%)</title><rect x="496.1" y="1685" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="499.08" y="1695.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (12,739,386 samples, 0.02%)</title><rect x="60.5" y="1557" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="63.52" y="1567.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (53,307,497 samples, 0.06%)</title><rect x="206.5" y="1701" width="0.7" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="209.46" y="1711.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (86,575,724 samples, 0.10%)</title><rect x="1164.7" y="1605" width="1.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1167.72" y="1615.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (9,335,250 samples, 0.01%)</title><rect x="904.6" y="1701" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="907.64" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (39,648,117 samples, 0.05%)</title><rect x="166.2" y="1669" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="169.18" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1141" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (213,378,665 samples, 0.26%)</title><rect x="921.3" y="1765" width="3.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="924.32" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::empty (8,396,245 samples, 0.01%)</title><rect x="252.7" y="1765" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="255.72" y="1775.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (24,393,294 samples, 0.03%)</title><rect x="974.3" y="1621" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="977.34" y="1631.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (7,352,048 samples, 0.01%)</title><rect x="132.7" y="1605" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="135.72" y="1615.5" ></text>
</g>
<g >
<title>epoll_ctl (375,003,347 samples, 0.45%)</title><rect x="13.0" y="1685" width="5.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="15.97" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (10,884,447 samples, 0.01%)</title><rect x="1115.2" y="1637" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1118.25" y="1647.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,925,385 samples, 0.01%)</title><rect x="1066.2" y="1653" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1069.17" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="245" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="255.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="2005" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="2015.5" ></text>
</g>
<g >
<title>operator new (7,212,071 samples, 0.01%)</title><rect x="913.8" y="1717" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="916.76" y="1727.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,178,480 samples, 0.01%)</title><rect x="906.4" y="1733" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="909.37" y="1743.5" ></text>
</g>
<g >
<title>security_inode_permission (56,536,704 samples, 0.07%)</title><rect x="216.1" y="1573" width="0.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="219.14" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (20,554,537 samples, 0.02%)</title><rect x="1034.0" y="133" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1037.02" y="143.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,612,601 samples, 0.01%)</title><rect x="84.9" y="1717" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="87.90" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (9,704,184 samples, 0.01%)</title><rect x="882.9" y="1877" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="885.86" y="1887.5" ></text>
</g>
<g >
<title>release_sock (17,821,170 samples, 0.02%)</title><rect x="236.7" y="1637" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="239.73" y="1647.5" ></text>
</g>
<g >
<title>lock_sock_nested (22,715,163 samples, 0.03%)</title><rect x="115.9" y="1621" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="118.90" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (11,842,066 samples, 0.01%)</title><rect x="581.6" y="1717" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="584.64" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_established (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1269" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1002.78" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="565" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="575.5" ></text>
</g>
<g >
<title>vmbus_next_request_id (18,603,145 samples, 0.02%)</title><rect x="1159.6" y="1285" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1162.58" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (14,693,771 samples, 0.02%)</title><rect x="548.2" y="1765" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="551.19" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (370,613,457 samples, 0.44%)</title><rect x="179.5" y="1717" width="5.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="182.50" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (15,579,535 samples, 0.02%)</title><rect x="213.2" y="1461" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="216.16" y="1471.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (22,933,215 samples, 0.03%)</title><rect x="210.1" y="1685" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="213.13" y="1695.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,076,822 samples, 0.01%)</title><rect x="1012.0" y="1445" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1015.00" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (460,734,324 samples, 0.55%)</title><rect x="769.1" y="1733" width="6.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="772.08" y="1743.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,919,619 samples, 0.01%)</title><rect x="565.0" y="1173" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="568.01" y="1183.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt; &gt; (43,800,185 samples, 0.05%)</title><rect x="885.9" y="1845" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="888.88" y="1855.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (9,859,649,005 samples, 11.83%)</title><rect x="309.0" y="1973" width="139.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="312.03" y="1983.5" >std::__invoke_imp..</text>
</g>
<g >
<title>ip_sublist_rcv_finish (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1189" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="430.41" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1029" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1039.5" ></text>
</g>
<g >
<title>avc_lookup (13,677,133 samples, 0.02%)</title><rect x="950.7" y="1525" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="953.65" y="1535.5" ></text>
</g>
<g >
<title>security_inode_permission (51,905,764 samples, 0.06%)</title><rect x="805.5" y="1573" width="0.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="808.52" y="1583.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (11,365,698 samples, 0.01%)</title><rect x="443.2" y="1445" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="446.18" y="1455.5" ></text>
</g>
<g >
<title>clear_bhb_loop (27,393,522 samples, 0.03%)</title><rect x="209.4" y="1733" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="212.40" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (10,058,606 samples, 0.01%)</title><rect x="770.0" y="1701" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="773.04" y="1711.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (797,404,616 samples, 0.96%)</title><rect x="559.1" y="1557" width="11.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="562.05" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7,339,219 samples, 0.01%)</title><rect x="581.7" y="1525" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="584.70" y="1535.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (13,660,789 samples, 0.02%)</title><rect x="36.1" y="1669" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="39.11" y="1679.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (44,303,590 samples, 0.05%)</title><rect x="356.1" y="1749" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="359.07" y="1759.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (42,976,367 samples, 0.05%)</title><rect x="861.7" y="1413" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="864.67" y="1423.5" ></text>
</g>
<g >
<title>netvsc_poll (10,112,787 samples, 0.01%)</title><rect x="123.0" y="1317" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="125.99" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="357" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (73,631,991 samples, 0.09%)</title><rect x="199.5" y="1765" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="202.46" y="1775.5" ></text>
</g>
<g >
<title>netvsc_poll (7,648,638 samples, 0.01%)</title><rect x="857.2" y="1317" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="860.21" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (7,486,159 samples, 0.01%)</title><rect x="906.9" y="1669" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="909.94" y="1679.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,351,562,728 samples, 1.62%)</title><rect x="414.0" y="1685" width="19.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="417.02" y="1695.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (405,080,158 samples, 0.49%)</title><rect x="311.4" y="1717" width="5.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="314.40" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="613" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="623.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,306,909 samples, 0.01%)</title><rect x="704.6" y="1637" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="707.61" y="1647.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (74,480,515 samples, 0.09%)</title><rect x="681.0" y="1621" width="1.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="684.03" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1829" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1839.5" ></text>
</g>
<g >
<title>EventLoop::Loop (9,749,248,778 samples, 11.70%)</title><rect x="895.6" y="1941" width="138.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="898.56" y="1951.5" >EventLoop::Loop</text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (27,050,336 samples, 0.03%)</title><rect x="522.8" y="1669" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="525.79" y="1679.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (22,201,526 samples, 0.03%)</title><rect x="648.4" y="1653" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="651.38" y="1663.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,882,009 samples, 0.01%)</title><rect x="562.2" y="1237" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="565.25" y="1247.5" ></text>
</g>
<g >
<title>irq_exit_rcu (35,867,416 samples, 0.04%)</title><rect x="1172.9" y="1765" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1175.87" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_erase (21,147,033 samples, 0.03%)</title><rect x="195.3" y="1749" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="198.31" y="1759.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (8,552,660 samples, 0.01%)</title><rect x="167.6" y="1733" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="170.63" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_first_not_of (18,054,396 samples, 0.02%)</title><rect x="185.7" y="1765" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="188.74" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (56,020,350 samples, 0.07%)</title><rect x="976.5" y="1797" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="979.50" y="1807.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (34,438,688 samples, 0.04%)</title><rect x="34.1" y="1669" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.05" y="1679.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (10,636,759 samples, 0.01%)</title><rect x="800.4" y="1509" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="803.44" y="1519.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,164,382 samples, 0.01%)</title><rect x="848.9" y="1701" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="851.86" y="1711.5" ></text>
</g>
<g >
<title>Channel::OnRead (5,598,164,788 samples, 6.72%)</title><rect x="457.9" y="1909" width="79.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="460.94" y="1919.5" >Channel::..</text>
</g>
<g >
<title>handle_softirqs (8,792,498 samples, 0.01%)</title><rect x="1002.6" y="1477" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1005.64" y="1487.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (9,995,806 samples, 0.01%)</title><rect x="125.2" y="1141" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="128.25" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="501" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (30,306,568 samples, 0.04%)</title><rect x="149.8" y="1813" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="152.75" y="1823.5" ></text>
</g>
<g >
<title>_raw_write_unlock_irq (42,370,897 samples, 0.05%)</title><rect x="581.6" y="1813" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="584.62" y="1823.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7,700,807 samples, 0.01%)</title><rect x="54.2" y="1605" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="57.17" y="1615.5" ></text>
</g>
<g >
<title>HttpRouter::Route (7,880,059 samples, 0.01%)</title><rect x="376.4" y="1797" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="379.38" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (261,025,896 samples, 0.31%)</title><rect x="52.6" y="1765" width="3.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="55.60" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (83,712,714 samples, 0.10%)</title><rect x="109.8" y="1717" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="112.85" y="1727.5" ></text>
</g>
<g >
<title>rndis_filter_receive (16,637,532 samples, 0.02%)</title><rect x="125.2" y="1301" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="128.18" y="1311.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (13,856,410 samples, 0.02%)</title><rect x="1024.5" y="1493" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1027.49" y="1503.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (762,538,525 samples, 0.92%)</title><rect x="436.1" y="1925" width="10.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="439.11" y="1935.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (24,041,336 samples, 0.03%)</title><rect x="523.3" y="1749" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="526.25" y="1759.5" ></text>
</g>
<g >
<title>__napi_poll (7,062,985 samples, 0.01%)</title><rect x="35.8" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="38.79" y="1583.5" ></text>
</g>
<g >
<title>handle_softirqs (7,162,330 samples, 0.01%)</title><rect x="711.1" y="1349" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="714.14" y="1359.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1109" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="430.41" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="933" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (7,946,357 samples, 0.01%)</title><rect x="346.4" y="1765" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="349.44" y="1775.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (23,525,312 samples, 0.03%)</title><rect x="792.7" y="1701" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="795.73" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1477" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="928.84" y="1487.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,152,732 samples, 0.01%)</title><rect x="865.1" y="1237" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="868.14" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="165" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="175.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1285" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (28,327,170 samples, 0.03%)</title><rect x="490.4" y="1765" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="493.41" y="1775.5" ></text>
</g>
<g >
<title>generic_permission (7,095,419 samples, 0.01%)</title><rect x="510.8" y="1573" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="513.82" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="453" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="463.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="613" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (12,857,351 samples, 0.02%)</title><rect x="912.7" y="1765" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="915.67" y="1775.5" ></text>
</g>
<g >
<title>sock_recvmsg (388,547,890 samples, 0.47%)</title><rect x="386.8" y="1685" width="5.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="389.81" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (13,886,500 samples, 0.02%)</title><rect x="46.9" y="1765" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="49.95" y="1775.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (391,675,411 samples, 0.47%)</title><rect x="459.6" y="1733" width="5.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="462.60" y="1743.5" ></text>
</g>
<g >
<title>[web-server] (25,532,137 samples, 0.03%)</title><rect x="27.9" y="1765" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="30.85" y="1775.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (738,985,454 samples, 0.89%)</title><rect x="417.8" y="1525" width="10.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="420.81" y="1535.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (138,449,672 samples, 0.17%)</title><rect x="139.2" y="1797" width="2.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="142.22" y="1807.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (8,745,319 samples, 0.01%)</title><rect x="427.4" y="965" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="430.41" y="975.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (76,065,659 samples, 0.09%)</title><rect x="429.0" y="1541" width="1.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="432.01" y="1551.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (21,329,691 samples, 0.03%)</title><rect x="727.5" y="1797" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="730.52" y="1807.5" ></text>
</g>
<g >
<title>lock_timer_base (18,775,289 samples, 0.02%)</title><rect x="1014.5" y="1477" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1017.52" y="1487.5" ></text>
</g>
<g >
<title>handle_softirqs (8,412,072 samples, 0.01%)</title><rect x="1077.1" y="1637" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1080.13" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (157,168,657 samples, 0.19%)</title><rect x="614.4" y="1701" width="2.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="617.40" y="1711.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (11,297,417 samples, 0.01%)</title><rect x="735.4" y="1893" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="738.45" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (165,475,573 samples, 0.20%)</title><rect x="834.6" y="1653" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="837.62" y="1663.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (441,507,169 samples, 0.53%)</title><rect x="244.3" y="1797" width="6.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="247.30" y="1807.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (7,711,503 samples, 0.01%)</title><rect x="315.2" y="1541" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="318.22" y="1551.5" ></text>
</g>
<g >
<title>avc_lookup (8,271,078 samples, 0.01%)</title><rect x="823.7" y="1589" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="826.72" y="1599.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1,373,804,385 samples, 1.65%)</title><rect x="851.3" y="1637" width="19.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="854.27" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (33,676,816 samples, 0.04%)</title><rect x="698.2" y="1781" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="701.18" y="1791.5" ></text>
</g>
<g >
<title>netvsc_poll (17,864,943 samples, 0.02%)</title><rect x="1040.6" y="1925" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1043.58" y="1935.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (7,733,344 samples, 0.01%)</title><rect x="131.6" y="1477" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="134.63" y="1487.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,558,942 samples, 0.01%)</title><rect x="1045.5" y="1605" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1048.49" y="1615.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,342,622 samples, 0.01%)</title><rect x="855.1" y="1493" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="858.11" y="1503.5" ></text>
</g>
<g >
<title>ip_local_deliver (12,235,863 samples, 0.01%)</title><rect x="213.2" y="1381" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="216.21" y="1391.5" ></text>
</g>
<g >
<title>handle_softirqs (11,164,382 samples, 0.01%)</title><rect x="848.9" y="1685" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="851.86" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1253" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1263.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (9,113,966 samples, 0.01%)</title><rect x="79.3" y="1797" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="82.31" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_erase_at_end (12,779,925 samples, 0.02%)</title><rect x="491.4" y="1733" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="494.44" y="1743.5" ></text>
</g>
<g >
<title>handle_softirqs (20,284,877 samples, 0.02%)</title><rect x="1113.2" y="1733" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1116.19" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (12,892,864 samples, 0.02%)</title><rect x="422.8" y="1269" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="425.82" y="1279.5" ></text>
</g>
<g >
<title>putname (18,696,721 samples, 0.02%)</title><rect x="67.3" y="1653" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="70.28" y="1663.5" ></text>
</g>
<g >
<title>ip_finish_output2 (410,736,735 samples, 0.49%)</title><rect x="1154.9" y="1445" width="5.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1157.90" y="1455.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (7,335,066 samples, 0.01%)</title><rect x="466.0" y="1669" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="468.98" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (16,692,624 samples, 0.02%)</title><rect x="48.8" y="1765" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="51.79" y="1775.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (7,170,416 samples, 0.01%)</title><rect x="442.1" y="1781" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="445.14" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (11,922,028 samples, 0.01%)</title><rect x="665.7" y="1781" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="668.69" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (8,282,120 samples, 0.01%)</title><rect x="207.6" y="1749" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="210.57" y="1759.5" ></text>
</g>
<g >
<title>selinux_socket_sendmsg (19,250,476 samples, 0.02%)</title><rect x="432.9" y="1637" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="435.86" y="1647.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,684,537 samples, 0.01%)</title><rect x="582.5" y="1781" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="585.51" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (28,174,555 samples, 0.03%)</title><rect x="693.7" y="1765" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="696.66" y="1775.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (11,046,031 samples, 0.01%)</title><rect x="589.4" y="1925" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="592.38" y="1935.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (14,542,642 samples, 0.02%)</title><rect x="350.9" y="1621" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="353.88" y="1631.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,462,643,912 samples, 11.35%)</title><rect x="456.8" y="2021" width="134.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="459.84" y="2031.5" >std::thread::_In..</text>
</g>
<g >
<title>__napi_poll (16,668,329 samples, 0.02%)</title><rect x="901.7" y="1493" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="904.68" y="1503.5" ></text>
</g>
<g >
<title>lock_timer_base (25,546,878 samples, 0.03%)</title><rect x="722.1" y="1477" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="725.08" y="1487.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,474,033,340 samples, 11.37%)</title><rect x="456.7" y="2053" width="134.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="459.68" y="2063.5" >[libstdc++.so.6...</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (11,571,091 samples, 0.01%)</title><rect x="335.9" y="1765" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="338.93" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (9,836,229 samples, 0.01%)</title><rect x="84.9" y="1653" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="87.92" y="1663.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (16,098,471 samples, 0.02%)</title><rect x="232.1" y="1765" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="235.14" y="1775.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (8,994,969 samples, 0.01%)</title><rect x="1119.9" y="1605" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1122.93" y="1615.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,667,151 samples, 0.01%)</title><rect x="162.1" y="1477" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="165.07" y="1487.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (14,213,367 samples, 0.02%)</title><rect x="881.2" y="1813" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="884.19" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock (7,259,924 samples, 0.01%)</title><rect x="867.4" y="1477" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="870.43" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1957" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1967.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10,118,736 samples, 0.01%)</title><rect x="320.9" y="1669" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="323.92" y="1679.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (508,523,121 samples, 0.61%)</title><rect x="63.9" y="1685" width="7.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="66.90" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (23,970,706 samples, 0.03%)</title><rect x="768.4" y="1765" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="771.39" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (265,936,676 samples, 0.32%)</title><rect x="642.0" y="1765" width="3.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="645.03" y="1775.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (54,820,889 samples, 0.07%)</title><rect x="174.1" y="1653" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="177.05" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1589" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1599.5" ></text>
</g>
<g >
<title>x64_sys_call (1,628,893,505 samples, 1.95%)</title><rect x="1144.7" y="1765" width="23.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1147.71" y="1775.5" >x..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (14,168,839 samples, 0.02%)</title><rect x="354.6" y="1733" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="357.65" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (333,583,657 samples, 0.40%)</title><rect x="538.5" y="1749" width="4.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="541.46" y="1759.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char*, char*, char&gt; (42,460,683 samples, 0.05%)</title><rect x="962.2" y="1749" width="0.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="965.16" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9,621,800 samples, 0.01%)</title><rect x="877.9" y="1525" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="880.91" y="1535.5" ></text>
</g>
<g >
<title>handle_softirqs (10,480,665 samples, 0.01%)</title><rect x="733.4" y="1717" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="736.43" y="1727.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (10,996,972 samples, 0.01%)</title><rect x="652.7" y="1701" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="655.65" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (9,846,957 samples, 0.01%)</title><rect x="964.3" y="1653" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="967.30" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7,064,650 samples, 0.01%)</title><rect x="901.7" y="1349" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="904.71" y="1359.5" ></text>
</g>
<g >
<title>tcp_data_ready (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1253" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1002.78" y="1263.5" ></text>
</g>
<g >
<title>__fget_light (15,487,659 samples, 0.02%)</title><rect x="314.3" y="1573" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="317.34" y="1583.5" ></text>
</g>
<g >
<title>EventLoop::IsInLoopThread (18,702,341 samples, 0.02%)</title><rect x="752.2" y="1765" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="755.23" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="757" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="767.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (370,450,711 samples, 0.44%)</title><rect x="395.9" y="1749" width="5.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="398.90" y="1759.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (21,770,579 samples, 0.03%)</title><rect x="272.6" y="1237" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="275.60" y="1247.5" ></text>
</g>
<g >
<title>irq_exit_rcu (18,146,008 samples, 0.02%)</title><rect x="893.7" y="2005" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="896.65" y="2015.5" ></text>
</g>
<g >
<title>_int_free (15,332,679 samples, 0.02%)</title><rect x="1186.2" y="2053" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1189.20" y="2063.5" ></text>
</g>
<g >
<title>__errno_location (9,871,717 samples, 0.01%)</title><rect x="818.4" y="1813" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="821.38" y="1823.5" ></text>
</g>
<g >
<title>napi_complete_done (10,103,204 samples, 0.01%)</title><rect x="290.2" y="1669" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="293.24" y="1679.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (25,705,796 samples, 0.03%)</title><rect x="689.0" y="1637" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="692.02" y="1647.5" ></text>
</g>
<g >
<title>__seccomp_filter (13,279,066 samples, 0.02%)</title><rect x="85.1" y="1717" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="88.11" y="1727.5" ></text>
</g>
<g >
<title>sock_def_readable (7,283,500 samples, 0.01%)</title><rect x="144.4" y="1397" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="147.42" y="1407.5" ></text>
</g>
<g >
<title>__strlen_avx2 (7,118,734 samples, 0.01%)</title><rect x="57.4" y="1733" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="60.44" y="1743.5" ></text>
</g>
<g >
<title>netvsc_poll (10,262,966 samples, 0.01%)</title><rect x="981.2" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="984.17" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (110,417,471 samples, 0.13%)</title><rect x="257.1" y="1749" width="1.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="260.13" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (33,844,394 samples, 0.04%)</title><rect x="635.0" y="1685" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="638.02" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,590,027 samples, 0.02%)</title><rect x="873.6" y="1909" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="876.64" y="1919.5" ></text>
</g>
<g >
<title>filename_lookup (245,055,783 samples, 0.29%)</title><rect x="67.6" y="1637" width="3.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="70.61" y="1647.5" ></text>
</g>
<g >
<title>handle_softirqs (17,864,943 samples, 0.02%)</title><rect x="1040.6" y="1973" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1043.58" y="1983.5" ></text>
</g>
<g >
<title>handle_softirqs (7,648,638 samples, 0.01%)</title><rect x="857.2" y="1365" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="860.21" y="1375.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (46,430,803 samples, 0.06%)</title><rect x="501.0" y="1717" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="503.97" y="1727.5" ></text>
</g>
<g >
<title>__napi_poll (38,269,032 samples, 0.05%)</title><rect x="860.9" y="1333" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="863.88" y="1343.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16,909,295 samples, 0.02%)</title><rect x="336.4" y="1749" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="339.43" y="1759.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,279,046 samples, 0.01%)</title><rect x="84.9" y="1573" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="87.92" y="1583.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (7,938,996 samples, 0.01%)</title><rect x="297.8" y="1909" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="300.79" y="1919.5" ></text>
</g>
<g >
<title>x64_sys_call (1,634,966,419 samples, 1.96%)</title><rect x="849.2" y="1765" width="23.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="852.18" y="1775.5" >x..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,859,649,005 samples, 11.83%)</title><rect x="309.0" y="2005" width="139.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="312.03" y="2015.5" >std::thread::_Inv..</text>
</g>
<g >
<title>handle_softirqs (8,364,083 samples, 0.01%)</title><rect x="1047.1" y="1525" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1050.12" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (18,444,073 samples, 0.02%)</title><rect x="449.8" y="2021" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="452.79" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1477" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1487.5" ></text>
</g>
<g >
<title>mod_timer (70,793,814 samples, 0.08%)</title><rect x="429.1" y="1509" width="1.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="432.09" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (26,699,885 samples, 0.03%)</title><rect x="357.7" y="1669" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="360.73" y="1679.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (33,996,062 samples, 0.04%)</title><rect x="149.7" y="1861" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="152.73" y="1871.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8,278,083 samples, 0.01%)</title><rect x="205.7" y="1621" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="208.74" y="1631.5" ></text>
</g>
<g >
<title>handle_softirqs (30,292,388 samples, 0.04%)</title><rect x="82.6" y="1733" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="85.55" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,246,094 samples, 0.01%)</title><rect x="519.4" y="1749" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="522.40" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1765" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1775.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,437,251 samples, 0.01%)</title><rect x="69.2" y="1333" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="72.22" y="1343.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (54,446,742 samples, 0.07%)</title><rect x="791.8" y="1717" width="0.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="794.82" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,882,009 samples, 0.01%)</title><rect x="562.2" y="1253" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="565.25" y="1263.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (35,784,829 samples, 0.04%)</title><rect x="1132.0" y="1669" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1134.99" y="1679.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::tuple (9,204,595 samples, 0.01%)</title><rect x="174.8" y="1653" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="177.83" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="741" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (16,999,478 samples, 0.02%)</title><rect x="1135.7" y="1669" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1138.67" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (9,656,570 samples, 0.01%)</title><rect x="421.3" y="1141" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="424.27" y="1151.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (13,638,518 samples, 0.02%)</title><rect x="739.6" y="1925" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="742.64" y="1935.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,437,251 samples, 0.01%)</title><rect x="69.2" y="1349" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="72.22" y="1359.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@@GLIBC_2.2.5 (7,396,902 samples, 0.01%)</title><rect x="1032.0" y="1877" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1034.97" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,059,963 samples, 0.01%)</title><rect x="672.4" y="1637" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="675.38" y="1647.5" ></text>
</g>
<g >
<title>handle_softirqs (11,934,288 samples, 0.01%)</title><rect x="307.1" y="1973" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="310.08" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (347,548,408 samples, 0.42%)</title><rect x="31.0" y="1701" width="4.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.97" y="1711.5" ></text>
</g>
<g >
<title>tcp_data_ready (9,704,484 samples, 0.01%)</title><rect x="1024.5" y="1429" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1027.55" y="1439.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (13,151,656 samples, 0.02%)</title><rect x="905.0" y="1765" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="907.99" y="1775.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (25,067,619 samples, 0.03%)</title><rect x="1139.5" y="1685" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1142.53" y="1695.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (8,642,177 samples, 0.01%)</title><rect x="679.4" y="1621" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="682.42" y="1631.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (7,342,805 samples, 0.01%)</title><rect x="318.4" y="1605" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="321.38" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,052,862 samples, 0.01%)</title><rect x="380.8" y="1573" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="383.79" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (14,365,676 samples, 0.02%)</title><rect x="674.3" y="1477" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="677.27" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="421" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (262,238,579 samples, 0.31%)</title><rect x="349.4" y="1765" width="3.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="352.44" y="1775.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,509,260 samples, 0.01%)</title><rect x="559.4" y="1509" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="562.43" y="1519.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (40,220,846 samples, 0.05%)</title><rect x="715.5" y="1413" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="718.53" y="1423.5" ></text>
</g>
<g >
<title>__secure_computing (10,458,868 samples, 0.01%)</title><rect x="1092.9" y="1701" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1095.90" y="1711.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (13,382,566 samples, 0.02%)</title><rect x="85.4" y="1765" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="88.35" y="1775.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,906,647 samples, 0.01%)</title><rect x="839.7" y="1653" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="842.66" y="1663.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (9,690,467 samples, 0.01%)</title><rect x="904.3" y="1717" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="907.34" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (11,073,398 samples, 0.01%)</title><rect x="777.9" y="1669" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="780.94" y="1679.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (9,182,790 samples, 0.01%)</title><rect x="440.3" y="1397" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="443.28" y="1407.5" ></text>
</g>
<g >
<title>ep_poll_callback (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1189" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="951.32" y="1199.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (12,812,425 samples, 0.02%)</title><rect x="443.2" y="1589" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="446.16" y="1599.5" ></text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (9,225,266 samples, 0.01%)</title><rect x="873.9" y="1925" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="876.91" y="1935.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (11,292,121 samples, 0.01%)</title><rect x="1180.8" y="1925" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1183.77" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (15,905,162 samples, 0.02%)</title><rect x="847.9" y="1717" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="850.87" y="1727.5" ></text>
</g>
<g >
<title>__x64_sys_writev (1,568,699,787 samples, 1.88%)</title><rect x="996.6" y="1749" width="22.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="999.57" y="1759.5" >_..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (28,665,118 samples, 0.03%)</title><rect x="256.3" y="1717" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="259.30" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (9,241,773 samples, 0.01%)</title><rect x="672.4" y="1573" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="675.41" y="1583.5" ></text>
</g>
<g >
<title>irq_exit_rcu (15,905,162 samples, 0.02%)</title><rect x="847.9" y="1765" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="850.87" y="1775.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (33,294,616 samples, 0.04%)</title><rect x="791.8" y="1685" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="794.85" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (649,177,736 samples, 0.78%)</title><rect x="943.4" y="1749" width="9.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="946.36" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;char*, void&gt; (149,151,403 samples, 0.18%)</title><rect x="669.3" y="1797" width="2.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="672.28" y="1807.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,297,747 samples, 0.01%)</title><rect x="1068.6" y="1701" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1071.61" y="1711.5" ></text>
</g>
<g >
<title>handle_softirqs (19,690,420 samples, 0.02%)</title><rect x="259.7" y="1733" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="262.66" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="357" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="367.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (403,262,878 samples, 0.48%)</title><rect x="12.8" y="1701" width="5.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="15.82" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1445" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="925.16" y="1455.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (11,914,981 samples, 0.01%)</title><rect x="562.2" y="1397" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="565.25" y="1407.5" ></text>
</g>
<g >
<title>strncpy_from_user (62,510,292 samples, 0.08%)</title><rect x="363.5" y="1621" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="366.46" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (5,763,870,484 samples, 6.92%)</title><rect x="896.7" y="1877" width="81.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="899.73" y="1887.5" >std::_Fun..</text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1765" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (62,369,510 samples, 0.07%)</title><rect x="940.2" y="1733" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="943.24" y="1743.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (30,778,373 samples, 0.04%)</title><rect x="1160.2" y="1397" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1163.19" y="1407.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,751,435 samples, 0.01%)</title><rect x="754.0" y="1429" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="757.04" y="1439.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (7,486,159 samples, 0.01%)</title><rect x="906.9" y="1701" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="909.94" y="1711.5" ></text>
</g>
<g >
<title>__GI___pthread_enable_asynccancel (8,482,210 samples, 0.01%)</title><rect x="380.1" y="1813" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="383.10" y="1823.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (19,290,714 samples, 0.02%)</title><rect x="39.8" y="1733" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="42.81" y="1743.5" ></text>
</g>
<g >
<title>_copy_to_iter (29,817,379 samples, 0.04%)</title><rect x="238.6" y="1573" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="241.57" y="1583.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (58,962,262 samples, 0.07%)</title><rect x="1003.8" y="1429" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1006.77" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1621" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="639.5" ></text>
</g>
<g >
<title>tcp_recvmsg (295,832,715 samples, 0.35%)</title><rect x="824.6" y="1653" width="4.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="827.64" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (13,332,780 samples, 0.02%)</title><rect x="632.4" y="1717" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="635.40" y="1727.5" ></text>
</g>
<g >
<title>HttpResponse::Clear (8,244,508 samples, 0.01%)</title><rect x="1136.4" y="1781" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1139.37" y="1791.5" ></text>
</g>
<g >
<title>ip_local_out (699,594,484 samples, 0.84%)</title><rect x="418.3" y="1509" width="9.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="421.26" y="1519.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,383,260 samples, 0.01%)</title><rect x="422.8" y="1205" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="425.82" y="1215.5" ></text>
</g>
<g >
<title>__do_softirq (7,136,147 samples, 0.01%)</title><rect x="556.4" y="1557" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="559.38" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver (11,365,698 samples, 0.01%)</title><rect x="443.2" y="1477" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="446.18" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (9,400,733 samples, 0.01%)</title><rect x="846.8" y="1765" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="849.83" y="1775.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (18,713,328 samples, 0.02%)</title><rect x="154.7" y="2053" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="157.67" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1237" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1247.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (15,223,231 samples, 0.02%)</title><rect x="868.8" y="1557" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="871.82" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (18,880,200 samples, 0.02%)</title><rect x="455.7" y="2053" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="458.74" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1509" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1519.5" ></text>
</g>
<g >
<title>irq_exit_rcu (24,472,219 samples, 0.03%)</title><rect x="231.6" y="1717" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="234.61" y="1727.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (13,756,580 samples, 0.02%)</title><rect x="402.1" y="1701" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="405.06" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="261" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="271.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,249,479 samples, 0.01%)</title><rect x="857.0" y="1397" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="859.98" y="1407.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,815,769 samples, 0.01%)</title><rect x="296.3" y="1701" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="299.31" y="1711.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,671,405 samples, 0.01%)</title><rect x="224.2" y="1573" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="227.20" y="1583.5" ></text>
</g>
<g >
<title>_copy_to_iter (33,065,881 samples, 0.04%)</title><rect x="92.5" y="1573" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="95.49" y="1583.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (7,086,065 samples, 0.01%)</title><rect x="206.1" y="1685" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="209.08" y="1695.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,360,456 samples, 0.01%)</title><rect x="363.3" y="1557" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="366.30" y="1567.5" ></text>
</g>
<g >
<title>handle_softirqs (10,200,344 samples, 0.01%)</title><rect x="623.6" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="626.59" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="517" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (19,996,850 samples, 0.02%)</title><rect x="22.1" y="1717" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="25.11" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (7,990,735 samples, 0.01%)</title><rect x="960.4" y="1781" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="963.37" y="1791.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (18,246,992 samples, 0.02%)</title><rect x="481.2" y="1701" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="484.21" y="1711.5" ></text>
</g>
<g >
<title>tcp_write_xmit (996,055,433 samples, 1.20%)</title><rect x="558.8" y="1573" width="14.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="561.80" y="1583.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (21,560,971 samples, 0.03%)</title><rect x="112.5" y="1749" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="115.50" y="1759.5" ></text>
</g>
<g >
<title>netvsc_poll (8,236,466 samples, 0.01%)</title><rect x="158.3" y="1925" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="161.26" y="1935.5" ></text>
</g>
<g >
<title>netvsc_poll (8,844,246 samples, 0.01%)</title><rect x="523.0" y="1509" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="526.05" y="1519.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,491,874 samples, 0.02%)</title><rect x="208.2" y="1733" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="211.17" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (24,667,998 samples, 0.03%)</title><rect x="158.0" y="2053" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="161.03" y="2063.5" ></text>
</g>
<g >
<title>validate_xmit_skb (13,160,027 samples, 0.02%)</title><rect x="1160.3" y="1381" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1163.32" y="1391.5" ></text>
</g>
<g >
<title>__napi_poll (7,751,435 samples, 0.01%)</title><rect x="754.0" y="1525" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="757.04" y="1535.5" ></text>
</g>
<g >
<title>handle_softirqs (42,705,081 samples, 0.05%)</title><rect x="144.1" y="1669" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="147.08" y="1679.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,052,005 samples, 0.01%)</title><rect x="622.8" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="625.78" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver (14,365,676 samples, 0.02%)</title><rect x="674.3" y="1525" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="677.27" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (722,004,563 samples, 0.87%)</title><rect x="84.6" y="1781" width="10.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="87.62" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;epoll_event, std::allocator&lt;epoll_event&gt; &gt;::size (7,527,911 samples, 0.01%)</title><rect x="1169.5" y="1893" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1172.45" y="1903.5" ></text>
</g>
<g >
<title>__alloc_skb (73,973,324 samples, 0.09%)</title><rect x="869.6" y="1589" width="1.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="872.61" y="1599.5" ></text>
</g>
<g >
<title>__do_softirq (8,276,302 samples, 0.01%)</title><rect x="706.3" y="1557" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="709.34" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (16,439,327 samples, 0.02%)</title><rect x="702.5" y="1717" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="705.52" y="1727.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (8,198,476 samples, 0.01%)</title><rect x="204.8" y="1733" width="0.1" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="207.76" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="69" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="79.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (106,841,010 samples, 0.13%)</title><rect x="700.0" y="1749" width="1.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="702.95" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (48,741,394 samples, 0.06%)</title><rect x="206.5" y="1685" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="209.52" y="1695.5" ></text>
</g>
<g >
<title>__seccomp_filter (11,699,887 samples, 0.01%)</title><rect x="312.8" y="1589" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="315.81" y="1599.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (8,465,363 samples, 0.01%)</title><rect x="1160.5" y="1381" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1163.51" y="1391.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (8,755,802 samples, 0.01%)</title><rect x="966.9" y="1749" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="969.88" y="1759.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (7,108,807 samples, 0.01%)</title><rect x="116.6" y="1621" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="119.58" y="1631.5" ></text>
</g>
<g >
<title>sock_def_readable (9,182,790 samples, 0.01%)</title><rect x="440.3" y="1429" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="443.28" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (82,032,866 samples, 0.10%)</title><rect x="783.1" y="1701" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="786.14" y="1711.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,068,201 samples, 0.01%)</title><rect x="298.5" y="1893" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="301.46" y="1903.5" ></text>
</g>
<g >
<title>napi_complete_done (7,160,263 samples, 0.01%)</title><rect x="1040.6" y="1909" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1043.61" y="1919.5" ></text>
</g>
<g >
<title>lookup_fast (23,446,179 samples, 0.03%)</title><rect x="512.0" y="1573" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="515.00" y="1583.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (12,721,777 samples, 0.02%)</title><rect x="652.0" y="1493" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="654.98" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;char*&gt; (94,627,397 samples, 0.11%)</title><rect x="816.8" y="1781" width="1.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="819.76" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (9,257,666 samples, 0.01%)</title><rect x="401.6" y="1701" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="404.64" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (100,460,941 samples, 0.12%)</title><rect x="550.0" y="1765" width="1.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="553.04" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (17,864,943 samples, 0.02%)</title><rect x="1040.6" y="1957" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1043.58" y="1967.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, char*&gt; (32,165,021 samples, 0.04%)</title><rect x="962.3" y="1685" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="965.30" y="1695.5" ></text>
</g>
<g >
<title>x64_sys_call (484,436,590 samples, 0.58%)</title><rect x="801.1" y="1717" width="6.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="804.13" y="1727.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (8,844,212 samples, 0.01%)</title><rect x="853.9" y="1605" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="856.95" y="1615.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (24,697,939 samples, 0.03%)</title><rect x="1085.6" y="1701" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1088.64" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (13,741,186 samples, 0.02%)</title><rect x="1027.5" y="1493" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1030.51" y="1503.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,471,970 samples, 0.01%)</title><rect x="606.3" y="1429" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="609.26" y="1439.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt; &gt; (32,573,538 samples, 0.04%)</title><rect x="299.3" y="1845" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="302.26" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (18,504,533 samples, 0.02%)</title><rect x="672.3" y="1717" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="675.32" y="1727.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (29,427,819 samples, 0.04%)</title><rect x="905.3" y="1781" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="908.30" y="1791.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (12,298,245 samples, 0.01%)</title><rect x="1129.5" y="1621" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1132.52" y="1631.5" ></text>
</g>
<g >
<title>selinux_socket_recvmsg (35,549,573 samples, 0.04%)</title><rect x="534.4" y="1653" width="0.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="537.42" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,751,435 samples, 0.01%)</title><rect x="754.0" y="1477" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="757.04" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (48,310,319 samples, 0.06%)</title><rect x="789.4" y="1733" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="792.45" y="1743.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (7,284,516 samples, 0.01%)</title><rect x="20.1" y="1717" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="23.11" y="1727.5" ></text>
</g>
<g >
<title>__wake_up_common (7,911,046 samples, 0.01%)</title><rect x="1024.6" y="1365" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1027.57" y="1375.5" ></text>
</g>
<g >
<title>generic_permission (16,670,010 samples, 0.02%)</title><rect x="805.3" y="1573" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="808.28" y="1583.5" ></text>
</g>
<g >
<title>inode_permission (69,613,897 samples, 0.08%)</title><rect x="1099.1" y="1589" width="1.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1102.13" y="1599.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (11,455,248 samples, 0.01%)</title><rect x="1156.1" y="1285" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1159.10" y="1295.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (57,849,787 samples, 0.07%)</title><rect x="92.2" y="1589" width="0.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="95.18" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (8,275,300 samples, 0.01%)</title><rect x="832.1" y="1893" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="835.07" y="1903.5" ></text>
</g>
<g >
<title>vfs_statx (226,574,107 samples, 0.27%)</title><rect x="949.1" y="1653" width="3.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="952.05" y="1663.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (92,435,740 samples, 0.11%)</title><rect x="879.9" y="1797" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="882.88" y="1807.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (472,453,397 samples, 0.57%)</title><rect x="506.3" y="1701" width="6.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="509.34" y="1711.5" ></text>
</g>
<g >
<title>x64_sys_call (444,011,230 samples, 0.53%)</title><rect x="729.1" y="1861" width="6.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="732.08" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (7,155,189 samples, 0.01%)</title><rect x="311.8" y="1397" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="314.78" y="1407.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (27,773,357 samples, 0.03%)</title><rect x="1112.0" y="1749" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1114.96" y="1759.5" ></text>
</g>
<g >
<title>lock_timer_base (15,765,227 samples, 0.02%)</title><rect x="868.3" y="1477" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="871.29" y="1487.5" ></text>
</g>
<g >
<title>std::function&lt;void  (62,704,597 samples, 0.08%)</title><rect x="1133.0" y="1781" width="0.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1136.05" y="1791.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (11,521,865 samples, 0.01%)</title><rect x="177.1" y="1765" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="180.09" y="1775.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (19,080,358 samples, 0.02%)</title><rect x="1007.8" y="1285" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1010.85" y="1295.5" ></text>
</g>
<g >
<title>netvsc_poll (20,735,596 samples, 0.02%)</title><rect x="210.2" y="1589" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="213.17" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (8,574,655 samples, 0.01%)</title><rect x="28.7" y="1765" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="31.67" y="1775.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (39,751,203 samples, 0.05%)</title><rect x="201.3" y="1701" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="204.31" y="1711.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,436,807 samples, 0.01%)</title><rect x="1175.8" y="1541" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1178.80" y="1551.5" ></text>
</g>
<g >
<title>memset_orig (23,590,554 samples, 0.03%)</title><rect x="724.1" y="1557" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="727.07" y="1567.5" ></text>
</g>
<g >
<title>mod_timer (61,910,080 samples, 0.07%)</title><rect x="571.3" y="1509" width="0.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="574.27" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (12,647,025 samples, 0.02%)</title><rect x="674.3" y="1461" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="677.30" y="1471.5" ></text>
</g>
<g >
<title>tcp_rcv_established (16,916,044 samples, 0.02%)</title><rect x="1024.1" y="1493" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1027.13" y="1503.5" ></text>
</g>
<g >
<title>irq_exit_rcu (16,668,329 samples, 0.02%)</title><rect x="901.7" y="1557" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="904.68" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (12,967,219 samples, 0.02%)</title><rect x="196.7" y="1765" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="199.75" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (88,222,339 samples, 0.11%)</title><rect x="51.3" y="1749" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="54.28" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1957" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="747.77" y="1967.5" ></text>
</g>
<g >
<title>ip_list_rcv (11,685,164 samples, 0.01%)</title><rect x="210.2" y="1525" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="213.19" y="1535.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (48,398,033 samples, 0.06%)</title><rect x="791.1" y="1717" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="794.12" y="1727.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,224,105 samples, 0.01%)</title><rect x="233.3" y="1637" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="236.30" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (342,189,500 samples, 0.41%)</title><rect x="97.8" y="1749" width="4.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="100.78" y="1759.5" ></text>
</g>
<g >
<title>path_lookupat (198,483,591 samples, 0.24%)</title><rect x="656.7" y="1621" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="659.69" y="1631.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (598,792,149 samples, 0.72%)</title><rect x="344.7" y="1781" width="8.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="347.67" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1573" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,008,551 samples, 0.01%)</title><rect x="1008.0" y="1173" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1010.95" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (9,699,422 samples, 0.01%)</title><rect x="648.7" y="1701" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="651.71" y="1711.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,349,812 samples, 0.02%)</title><rect x="384.3" y="1685" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="387.33" y="1695.5" ></text>
</g>
<g >
<title>handle_softirqs (14,474,449 samples, 0.02%)</title><rect x="624.7" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="627.66" y="1615.5" ></text>
</g>
<g >
<title>netvsc_poll (19,829,493 samples, 0.02%)</title><rect x="818.8" y="1685" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="821.82" y="1695.5" ></text>
</g>
<g >
<title>mod_timer (50,357,061 samples, 0.06%)</title><rect x="1014.1" y="1509" width="0.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1017.14" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (7,871,363 samples, 0.01%)</title><rect x="762.5" y="1701" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="765.52" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (460,346,897 samples, 0.55%)</title><rect x="913.6" y="1733" width="6.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="916.57" y="1743.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,856,527 samples, 0.01%)</title><rect x="541.2" y="1397" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="544.15" y="1407.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (17,084,101 samples, 0.02%)</title><rect x="643.5" y="1637" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="646.45" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,009,678 samples, 0.02%)</title><rect x="545.9" y="1669" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="548.85" y="1679.5" ></text>
</g>
<g >
<title>__GI___stat64 (12,003,571 samples, 0.01%)</title><rect x="1103.5" y="1765" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1106.54" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (10,689,982 samples, 0.01%)</title><rect x="203.5" y="1749" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="206.46" y="1759.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,964,144 samples, 0.01%)</title><rect x="16.6" y="1541" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="19.56" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_erase (16,864,031 samples, 0.02%)</title><rect x="1077.9" y="1749" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1080.89" y="1759.5" ></text>
</g>
<g >
<title>__do_softirq (58,036,108 samples, 0.07%)</title><rect x="1155.6" y="1381" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1158.56" y="1391.5" ></text>
</g>
<g >
<title>net_rx_action (7,760,778 samples, 0.01%)</title><rect x="598.2" y="1957" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="601.19" y="1967.5" ></text>
</g>
<g >
<title>__napi_poll (41,948,021 samples, 0.05%)</title><rect x="1027.4" y="1637" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1030.38" y="1647.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (12,710,587 samples, 0.02%)</title><rect x="272.7" y="1173" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="275.66" y="1183.5" ></text>
</g>
<g >
<title>inet_sendmsg (1,397,583,676 samples, 1.68%)</title><rect x="263.3" y="1653" width="19.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="266.25" y="1663.5" ></text>
</g>
<g >
<title>__do_softirq (21,127,548 samples, 0.03%)</title><rect x="387.3" y="1573" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="390.34" y="1583.5" ></text>
</g>
<g >
<title>__wake_up_common (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1285" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="925.16" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::erase (28,230,797 samples, 0.03%)</title><rect x="344.1" y="1765" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="347.10" y="1775.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (7,896,714 samples, 0.01%)</title><rect x="144.3" y="1365" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="147.31" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1365" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1375.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (47,384,351 samples, 0.06%)</title><rect x="18.8" y="1765" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="21.84" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (8,656,876 samples, 0.01%)</title><rect x="772.4" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="775.38" y="1615.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,100,812 samples, 0.01%)</title><rect x="528.2" y="1685" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="531.18" y="1695.5" ></text>
</g>
<g >
<title>__skb_flow_dissect (18,986,198 samples, 0.02%)</title><rect x="274.0" y="1381" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="276.97" y="1391.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (16,188,534 samples, 0.02%)</title><rect x="199.8" y="1717" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="202.75" y="1727.5" ></text>
</g>
<g >
<title>HttpRouter::Route (1,293,648,390 samples, 1.55%)</title><rect x="939.2" y="1781" width="18.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="942.22" y="1791.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (520,033,923 samples, 0.62%)</title><rect x="1021.3" y="1845" width="7.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1024.25" y="1855.5" ></text>
</g>
<g >
<title>memset_orig (7,610,625 samples, 0.01%)</title><rect x="1016.7" y="1557" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1019.66" y="1567.5" ></text>
</g>
<g >
<title>nf_hook_slow (228,405,553 samples, 0.27%)</title><rect x="1151.0" y="1477" width="3.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1153.99" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (8,437,790 samples, 0.01%)</title><rect x="500.5" y="1733" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="503.50" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1333" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1343.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9,755,743 samples, 0.01%)</title><rect x="210.2" y="1461" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="213.19" y="1471.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (14,462,491 samples, 0.02%)</title><rect x="617.2" y="1685" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="620.23" y="1695.5" ></text>
</g>
<g >
<title>tcp_recvmsg (263,558,104 samples, 0.32%)</title><rect x="236.1" y="1653" width="3.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="239.14" y="1663.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (37,878,061 samples, 0.05%)</title><rect x="293.1" y="1749" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="296.06" y="1759.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (16,729,358 samples, 0.02%)</title><rect x="228.1" y="1701" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="231.10" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="725" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="735.5" ></text>
</g>
<g >
<title>__skb_flow_dissect (23,855,528 samples, 0.03%)</title><rect x="423.8" y="1381" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="426.78" y="1391.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1253" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="430.41" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1861" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1871.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,978,286 samples, 0.02%)</title><rect x="303.8" y="2037" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="306.85" y="2047.5" ></text>
</g>
<g >
<title>import_iovec (17,215,421 samples, 0.02%)</title><rect x="872.0" y="1701" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="874.98" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (10,699,475 samples, 0.01%)</title><rect x="387.4" y="1461" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="390.42" y="1471.5" ></text>
</g>
<g >
<title>schedule (84,347,772 samples, 0.10%)</title><rect x="292.6" y="1781" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="295.57" y="1791.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (13,382,566 samples, 0.02%)</title><rect x="85.4" y="1749" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="88.35" y="1759.5" ></text>
</g>
<g >
<title>__secure_computing (18,211,884 samples, 0.02%)</title><rect x="360.5" y="1685" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="363.53" y="1695.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (7,143,655 samples, 0.01%)</title><rect x="1120.0" y="1589" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1122.96" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (9,184,941 samples, 0.01%)</title><rect x="930.1" y="1749" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="933.14" y="1759.5" ></text>
</g>
<g >
<title>__napi_poll (10,262,966 samples, 0.01%)</title><rect x="981.2" y="1525" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="984.17" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="101" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="111.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (26,651,422 samples, 0.03%)</title><rect x="1141.3" y="1685" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1144.34" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1061" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (65,523,838 samples, 0.08%)</title><rect x="403.0" y="1717" width="1.0" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="406.05" y="1727.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (11,213,135 samples, 0.01%)</title><rect x="1015.1" y="1557" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1018.11" y="1567.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (73,045,105 samples, 0.09%)</title><rect x="24.8" y="1685" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="27.75" y="1695.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (10,090,176 samples, 0.01%)</title><rect x="287.4" y="1845" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="290.41" y="1855.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,978,286 samples, 0.02%)</title><rect x="303.8" y="2021" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="306.85" y="2031.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,416,499,841 samples, 1.70%)</title><rect x="115.2" y="1685" width="20.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="118.20" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1301" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1311.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,447,309 samples, 0.01%)</title><rect x="224.2" y="1733" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="227.20" y="1743.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (16,173,055 samples, 0.02%)</title><rect x="55.7" y="1685" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="58.69" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1733" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1743.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (16,531,024 samples, 0.02%)</title><rect x="877.8" y="1653" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="880.84" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1605" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="295.80" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (7,143,655 samples, 0.01%)</title><rect x="1120.0" y="1541" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1122.96" y="1551.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (10,786,000 samples, 0.01%)</title><rect x="1073.2" y="1733" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1076.21" y="1743.5" ></text>
</g>
<g >
<title>__napi_poll (9,060,119 samples, 0.01%)</title><rect x="925.8" y="1525" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="928.84" y="1535.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (167,664,526 samples, 0.20%)</title><rect x="875.4" y="1813" width="2.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="878.42" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (13,222,661 samples, 0.02%)</title><rect x="913.0" y="1765" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="916.04" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (45,025,220 samples, 0.05%)</title><rect x="644.1" y="1669" width="0.6" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="647.09" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (8,418,319 samples, 0.01%)</title><rect x="932.7" y="1765" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="935.69" y="1775.5" ></text>
</g>
<g >
<title>x64_sys_call (182,391,414 samples, 0.22%)</title><rect x="163.6" y="1637" width="2.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="166.57" y="1647.5" ></text>
</g>
<g >
<title>mutex_lock (8,168,320 samples, 0.01%)</title><rect x="983.0" y="1589" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="986.03" y="1599.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (20,241,808 samples, 0.02%)</title><rect x="702.5" y="1781" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="705.47" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (8,053,051 samples, 0.01%)</title><rect x="222.1" y="1765" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="225.09" y="1775.5" ></text>
</g>
<g >
<title>netvsc_poll (14,017,789 samples, 0.02%)</title><rect x="847.9" y="1685" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="850.87" y="1695.5" ></text>
</g>
<g >
<title>__do_softirq (8,465,226 samples, 0.01%)</title><rect x="712.0" y="1365" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="715.04" y="1375.5" ></text>
</g>
<g >
<title>hv_ringbuffer_write (46,756,484 samples, 0.06%)</title><rect x="1159.2" y="1301" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1162.22" y="1311.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1,332,070,327 samples, 1.60%)</title><rect x="264.1" y="1621" width="18.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="267.11" y="1631.5" ></text>
</g>
<g >
<title>tcp_poll (20,618,053 samples, 0.02%)</title><rect x="315.0" y="1557" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="318.04" y="1567.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (11,542,826 samples, 0.01%)</title><rect x="254.4" y="1765" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="257.37" y="1775.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (13,019,765 samples, 0.02%)</title><rect x="798.1" y="1541" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="801.09" y="1551.5" ></text>
</g>
<g >
<title>handle_softirqs (9,313,760 samples, 0.01%)</title><rect x="972.6" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="975.63" y="1567.5" ></text>
</g>
<g >
<title>__strlen_avx2 (8,442,282 samples, 0.01%)</title><rect x="1105.0" y="1749" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1108.00" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (19,726,578 samples, 0.02%)</title><rect x="465.6" y="1749" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="468.60" y="1759.5" ></text>
</g>
<g >
<title>netvsc_poll (21,560,971 samples, 0.03%)</title><rect x="112.5" y="1685" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="115.50" y="1695.5" ></text>
</g>
<g >
<title>__secure_computing (16,917,491 samples, 0.02%)</title><rect x="800.1" y="1701" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="803.12" y="1711.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (14,255,933 samples, 0.02%)</title><rect x="244.8" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="247.84" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (38,656,468 samples, 0.05%)</title><rect x="101.4" y="1669" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="104.44" y="1679.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (21,475,280 samples, 0.03%)</title><rect x="1049.8" y="1733" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1052.77" y="1743.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*, std::shared_ptr&lt;Channel&gt; &gt; (29,925,659 samples, 0.04%)</title><rect x="448.1" y="1893" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="451.11" y="1903.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (19,277,707 samples, 0.02%)</title><rect x="311.7" y="1669" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="314.74" y="1679.5" ></text>
</g>
<g >
<title>_int_free (19,741,478 samples, 0.02%)</title><rect x="595.0" y="2053" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="598.02" y="2063.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (21,127,548 samples, 0.03%)</title><rect x="387.3" y="1589" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="390.34" y="1599.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (12,894,372 samples, 0.02%)</title><rect x="232.0" y="1749" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="234.96" y="1759.5" ></text>
</g>
<g >
<title>selinux_file_permission (35,688,487 samples, 0.04%)</title><rect x="575.1" y="1653" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="578.07" y="1663.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (14,712,819 samples, 0.02%)</title><rect x="744.9" y="2053" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="747.90" y="2063.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (43,432,494 samples, 0.05%)</title><rect x="205.3" y="1685" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="208.31" y="1695.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (28,007,531 samples, 0.03%)</title><rect x="676.2" y="1669" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="679.25" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (7,250,034 samples, 0.01%)</title><rect x="257.0" y="1733" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="259.98" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (33,608,829 samples, 0.04%)</title><rect x="145.8" y="1877" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="148.80" y="1887.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (309,042,977 samples, 0.37%)</title><rect x="339.0" y="1765" width="4.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="341.96" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (101,519,130 samples, 0.12%)</title><rect x="220.7" y="1765" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="223.65" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (17,418,847 samples, 0.02%)</title><rect x="861.0" y="1205" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="863.96" y="1215.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,033,129 samples, 0.01%)</title><rect x="1173.7" y="1797" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1176.72" y="1807.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,328,208 samples, 0.01%)</title><rect x="586.1" y="1797" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="589.08" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (9,104,406 samples, 0.01%)</title><rect x="610.1" y="1669" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="613.11" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (26,080,881 samples, 0.03%)</title><rect x="1049.8" y="1749" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1052.76" y="1759.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (67,798,935 samples, 0.08%)</title><rect x="1151.2" y="1429" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1154.23" y="1439.5" ></text>
</g>
<g >
<title>handle_softirqs (10,538,567 samples, 0.01%)</title><rect x="116.0" y="1541" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="119.02" y="1551.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,733,348 samples, 0.01%)</title><rect x="655.1" y="1557" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="658.08" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (11,410,063 samples, 0.01%)</title><rect x="1093.1" y="1621" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1096.12" y="1631.5" ></text>
</g>
<g >
<title>handle_softirqs (14,255,933 samples, 0.02%)</title><rect x="244.8" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="247.84" y="1615.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1365" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="928.84" y="1375.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (7,862,518 samples, 0.01%)</title><rect x="641.5" y="1653" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="644.49" y="1663.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (20,752,046 samples, 0.02%)</title><rect x="731.9" y="1573" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="734.92" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (9,758,984 samples, 0.01%)</title><rect x="1095.0" y="1525" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1097.97" y="1535.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (109,059,177 samples, 0.13%)</title><rect x="699.9" y="1765" width="1.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="702.92" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (10,537,926 samples, 0.01%)</title><rect x="848.1" y="1797" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="851.14" y="1807.5" ></text>
</g>
<g >
<title>__x64_sys_read (574,435,177 samples, 0.69%)</title><rect x="232.6" y="1749" width="8.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="235.63" y="1759.5" ></text>
</g>
<g >
<title>clear_bhb_loop (12,211,746 samples, 0.01%)</title><rect x="358.1" y="1749" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="361.14" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (11,785,662 samples, 0.01%)</title><rect x="865.1" y="1429" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="868.14" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9,766,310 samples, 0.01%)</title><rect x="376.5" y="1717" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="379.50" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::cbegin (7,553,884 samples, 0.01%)</title><rect x="199.2" y="1765" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="202.24" y="1775.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (19,010,178 samples, 0.02%)</title><rect x="558.1" y="1605" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="561.15" y="1615.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (45,720,168 samples, 0.05%)</title><rect x="885.9" y="1877" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="888.88" y="1887.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (23,425,282 samples, 0.03%)</title><rect x="112.5" y="1797" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="115.47" y="1807.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (15,493,907 samples, 0.02%)</title><rect x="738.7" y="1909" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="741.69" y="1919.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (18,164,638 samples, 0.02%)</title><rect x="523.3" y="1701" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="526.31" y="1711.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,797,356 samples, 0.01%)</title><rect x="435.8" y="1861" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="438.79" y="1871.5" ></text>
</g>
<g >
<title>irq_exit_rcu (16,419,506 samples, 0.02%)</title><rect x="162.0" y="1637" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="165.02" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (5,581,365,481 samples, 6.70%)</title><rect x="458.1" y="1877" width="79.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="461.13" y="1887.5" >std::_Fun..</text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,401,788 samples, 0.01%)</title><rect x="312.7" y="1621" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="315.66" y="1631.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (8,276,302 samples, 0.01%)</title><rect x="706.3" y="1573" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="709.34" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1445" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1455.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (8,010,118 samples, 0.01%)</title><rect x="759.5" y="1685" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="762.52" y="1695.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1717" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="782.08" y="1727.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (2,966,237,841 samples, 3.56%)</title><rect x="1127.1" y="1829" width="42.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1130.07" y="1839.5" >Htt..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (38,447,305 samples, 0.05%)</title><rect x="609.2" y="1749" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="612.19" y="1759.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (13,377,237 samples, 0.02%)</title><rect x="1173.1" y="1573" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1176.10" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (24,207,435 samples, 0.03%)</title><rect x="1175.8" y="1653" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1178.77" y="1663.5" ></text>
</g>
<g >
<title>irq_exit_rcu (26,505,495 samples, 0.03%)</title><rect x="60.5" y="1717" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="63.47" y="1727.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (57,794,321 samples, 0.07%)</title><rect x="143.9" y="1749" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="146.90" y="1759.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (18,504,533 samples, 0.02%)</title><rect x="672.3" y="1749" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="675.32" y="1759.5" ></text>
</g>
<g >
<title>__napi_poll (14,751,439 samples, 0.02%)</title><rect x="89.8" y="1525" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="92.76" y="1535.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (76,871,893 samples, 0.09%)</title><rect x="489.1" y="1701" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="492.07" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_M_next (21,711,845 samples, 0.03%)</title><rect x="839.5" y="1717" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="842.51" y="1727.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,112,787 samples, 0.01%)</title><rect x="123.0" y="1397" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="125.99" y="1407.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (15,989,192 samples, 0.02%)</title><rect x="688.0" y="1621" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="691.05" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_established (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1317" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="928.84" y="1327.5" ></text>
</g>
<g >
<title>napi_complete_done (15,286,066 samples, 0.02%)</title><rect x="565.0" y="1301" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="567.99" y="1311.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (7,226,832 samples, 0.01%)</title><rect x="839.0" y="1765" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="842.03" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (198,693,117 samples, 0.24%)</title><rect x="186.8" y="1765" width="2.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="189.85" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="149" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="159.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (24,064,612 samples, 0.03%)</title><rect x="870.2" y="1573" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="873.21" y="1583.5" ></text>
</g>
<g >
<title>vmbus_next_request_id (7,487,751 samples, 0.01%)</title><rect x="568.5" y="1301" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="571.49" y="1311.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (52,419,557 samples, 0.06%)</title><rect x="269.2" y="1429" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="272.25" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (25,133,004 samples, 0.03%)</title><rect x="507.0" y="1621" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="509.96" y="1631.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1701" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="171.38" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1925" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1935.5" ></text>
</g>
<g >
<title>__seccomp_filter (9,892,430 samples, 0.01%)</title><rect x="1115.5" y="1717" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1118.52" y="1727.5" ></text>
</g>
<g >
<title>HttpRouter::Route (1,332,379,124 samples, 1.60%)</title><rect x="203.8" y="1781" width="18.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="206.78" y="1791.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (12,230,668 samples, 0.01%)</title><rect x="986.9" y="1669" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="989.90" y="1679.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (8,175,998 samples, 0.01%)</title><rect x="1050.7" y="1733" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1053.69" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1957" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1967.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (12,678,028 samples, 0.02%)</title><rect x="625.9" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="628.95" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (11,329,297 samples, 0.01%)</title><rect x="993.6" y="1781" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="996.64" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (12,322,232 samples, 0.01%)</title><rect x="231.7" y="1509" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="234.71" y="1519.5" ></text>
</g>
<g >
<title>filename_lookup (217,059,419 samples, 0.26%)</title><rect x="656.5" y="1637" width="3.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="659.50" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (49,303,529 samples, 0.06%)</title><rect x="989.3" y="1781" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="992.27" y="1791.5" ></text>
</g>
<g >
<title>x64_sys_call (462,668,579 samples, 0.56%)</title><rect x="437.4" y="1861" width="6.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="440.38" y="1871.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,652,623 samples, 0.01%)</title><rect x="89.8" y="1397" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="92.83" y="1407.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (15,714,971 samples, 0.02%)</title><rect x="980.2" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="983.16" y="1663.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (39,295,961 samples, 0.05%)</title><rect x="378.4" y="1669" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="381.45" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (13,594,473 samples, 0.02%)</title><rect x="572.0" y="1461" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="574.95" y="1471.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (9,409,595 samples, 0.01%)</title><rect x="543.4" y="1749" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="546.37" y="1759.5" ></text>
</g>
<g >
<title>__napi_poll (23,924,803 samples, 0.03%)</title><rect x="503.3" y="1653" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="506.29" y="1663.5" ></text>
</g>
<g >
<title>selinux_ip_postroute_compat (19,900,199 samples, 0.02%)</title><rect x="1012.4" y="1445" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1015.36" y="1455.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (19,200,167 samples, 0.02%)</title><rect x="352.3" y="1701" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="355.29" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (24,502,712 samples, 0.03%)</title><rect x="1132.5" y="1653" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1135.50" y="1663.5" ></text>
</g>
<g >
<title>__fget_light (20,289,739 samples, 0.02%)</title><rect x="1046.7" y="1573" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1049.73" y="1583.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (28,453,619 samples, 0.03%)</title><rect x="1090.7" y="1701" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1093.74" y="1711.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (7,635,119 samples, 0.01%)</title><rect x="569.2" y="1461" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="572.19" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (7,938,196 samples, 0.01%)</title><rect x="303.1" y="2037" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="306.11" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (14,614,824 samples, 0.02%)</title><rect x="62.9" y="1557" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="65.86" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1669" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="295.80" y="1679.5" ></text>
</g>
<g >
<title>__schedule (73,182,495 samples, 0.09%)</title><rect x="1175.3" y="1765" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1178.31" y="1775.5" ></text>
</g>
<g >
<title>sch_direct_xmit (10,162,208 samples, 0.01%)</title><rect x="273.4" y="1397" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="276.40" y="1407.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (9,765,702,225 samples, 11.72%)</title><rect x="895.5" y="1973" width="138.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="898.52" y="1983.5" >std::__invoke_imp..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;Channel&gt;*, std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::operator++ (7,180,982 samples, 0.01%)</title><rect x="150.2" y="1941" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="153.25" y="1951.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (10,005,943 samples, 0.01%)</title><rect x="671.2" y="1733" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="674.18" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (733,470,516 samples, 0.88%)</title><rect x="819.6" y="1797" width="10.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="822.61" y="1807.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (60,453,801 samples, 0.07%)</title><rect x="514.1" y="1749" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="517.12" y="1759.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,310,689 samples, 0.01%)</title><rect x="112.6" y="1621" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="115.55" y="1631.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,656,876 samples, 0.01%)</title><rect x="772.4" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="775.38" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1077" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (7,152,899 samples, 0.01%)</title><rect x="185.3" y="1717" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="188.33" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (15,762,251 samples, 0.02%)</title><rect x="1133.3" y="1749" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1136.28" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1445" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="293" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="303.5" ></text>
</g>
<g >
<title>handle_softirqs (11,675,568 samples, 0.01%)</title><rect x="803.0" y="1541" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="806.05" y="1551.5" ></text>
</g>
<g >
<title>__napi_poll (10,536,701 samples, 0.01%)</title><rect x="412.0" y="1653" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="415.00" y="1663.5" ></text>
</g>
<g >
<title>avc_lookup (9,716,109 samples, 0.01%)</title><rect x="386.1" y="1589" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="389.09" y="1599.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (10,378,860 samples, 0.01%)</title><rect x="141.2" y="1573" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="144.23" y="1583.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (11,838,551 samples, 0.01%)</title><rect x="531.3" y="1589" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="534.26" y="1599.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,965,320,676 samples, 11.96%)</title><rect x="158.9" y="2021" width="141.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="161.87" y="2031.5" >std::thread::_Inv..</text>
</g>
<g >
<title>__do_softirq (7,118,135 samples, 0.01%)</title><rect x="414.5" y="1557" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="417.52" y="1567.5" ></text>
</g>
<g >
<title>__napi_poll (23,061,344 samples, 0.03%)</title><rect x="880.5" y="1637" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="883.53" y="1647.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (165,844,298 samples, 0.20%)</title><rect x="875.4" y="1797" width="2.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="878.44" y="1807.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (8,186,240 samples, 0.01%)</title><rect x="963.1" y="1733" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="966.13" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,925,385 samples, 0.01%)</title><rect x="1066.2" y="1669" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1069.17" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,856,379 samples, 0.01%)</title><rect x="820.8" y="1749" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="823.80" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (31,939,109 samples, 0.04%)</title><rect x="1175.7" y="1733" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1178.72" y="1743.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7,793,338 samples, 0.01%)</title><rect x="890.7" y="2053" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="893.74" y="2063.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::find (132,765,732 samples, 0.16%)</title><rect x="736.4" y="1909" width="1.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="739.43" y="1919.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (18,178,484 samples, 0.02%)</title><rect x="693.4" y="1765" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="696.40" y="1775.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1221" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="951.32" y="1231.5" ></text>
</g>
<g >
<title>handle_softirqs (8,347,263 samples, 0.01%)</title><rect x="605.9" y="1493" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="608.87" y="1503.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1573" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="925.16" y="1583.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (12,616,957 samples, 0.02%)</title><rect x="297.4" y="1861" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="300.40" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (10,516,382 samples, 0.01%)</title><rect x="847.9" y="1509" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="850.90" y="1519.5" ></text>
</g>
<g >
<title>netvsc_poll (7,249,479 samples, 0.01%)</title><rect x="857.0" y="1301" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="859.98" y="1311.5" ></text>
</g>
<g >
<title>operator new (7,226,967 samples, 0.01%)</title><rect x="476.1" y="1717" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="479.12" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (17,977,944 samples, 0.02%)</title><rect x="295.1" y="1909" width="0.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="298.12" y="1919.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (9,787,324 samples, 0.01%)</title><rect x="52.0" y="1669" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="54.98" y="1679.5" ></text>
</g>
<g >
<title>TimerManager::Tick (51,301,232 samples, 0.06%)</title><rect x="1179.8" y="1925" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1182.84" y="1935.5" ></text>
</g>
<g >
<title>memset_orig (67,503,965 samples, 0.08%)</title><rect x="507.3" y="1621" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="510.34" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1877" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1887.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (8,930,668 samples, 0.01%)</title><rect x="244.9" y="1477" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="247.87" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (16,019,718 samples, 0.02%)</title><rect x="669.1" y="1797" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="672.05" y="1807.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8,517,399 samples, 0.01%)</title><rect x="103.5" y="1749" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="106.47" y="1759.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc_cs (11,179,190 samples, 0.01%)</title><rect x="93.6" y="1589" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="96.57" y="1599.5" ></text>
</g>
<g >
<title>__strlen_avx2 (16,498,073 samples, 0.02%)</title><rect x="449.5" y="2021" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="452.53" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1301" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1311.5" ></text>
</g>
<g >
<title>handle_softirqs (10,688,113 samples, 0.01%)</title><rect x="1172.7" y="1733" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1175.70" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (43,574,719 samples, 0.05%)</title><rect x="1027.4" y="1653" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1030.38" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (8,970,423 samples, 0.01%)</title><rect x="980.2" y="1381" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="983.21" y="1391.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (29,587,786 samples, 0.04%)</title><rect x="495.6" y="1717" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="498.64" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (18,638,334 samples, 0.02%)</title><rect x="1069.2" y="1765" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1072.23" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (8,593,902 samples, 0.01%)</title><rect x="343.1" y="1701" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="346.12" y="1711.5" ></text>
</g>
<g >
<title>handle_softirqs (14,448,922 samples, 0.02%)</title><rect x="999.7" y="1541" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1002.74" y="1551.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,172,978 samples, 0.01%)</title><rect x="99.0" y="1605" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="102.02" y="1615.5" ></text>
</g>
<g >
<title>__fdget_pos (35,315,680 samples, 0.04%)</title><rect x="1116.1" y="1717" width="0.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1119.12" y="1727.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,413,018 samples, 0.01%)</title><rect x="293.2" y="1477" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="296.20" y="1487.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9,860,719 samples, 0.01%)</title><rect x="1113.2" y="1557" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1116.24" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (23,559,378 samples, 0.03%)</title><rect x="189.0" y="1749" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="192.00" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9,241,773 samples, 0.01%)</title><rect x="672.4" y="1525" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="675.41" y="1535.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (18,615,104 samples, 0.02%)</title><rect x="410.9" y="1797" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="413.88" y="1807.5" ></text>
</g>
<g >
<title>ip_queue_xmit (737,714,252 samples, 0.89%)</title><rect x="1002.8" y="1541" width="10.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1005.79" y="1551.5" ></text>
</g>
<g >
<title>handle_softirqs (7,160,300 samples, 0.01%)</title><rect x="33.3" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="36.32" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_S_equals (13,000,336 samples, 0.02%)</title><rect x="846.1" y="1685" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="849.09" y="1695.5" ></text>
</g>
<g >
<title>nft_do_chain (39,655,990 samples, 0.05%)</title><rect x="1153.6" y="1445" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1156.63" y="1455.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (7,177,986 samples, 0.01%)</title><rect x="261.2" y="1765" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="264.18" y="1775.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,909,884 samples, 0.01%)</title><rect x="1163.1" y="1413" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1166.06" y="1423.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,797,356 samples, 0.01%)</title><rect x="435.8" y="1893" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="438.79" y="1903.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (47,116,015 samples, 0.06%)</title><rect x="771.1" y="1685" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="774.12" y="1695.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,111,018 samples, 0.01%)</title><rect x="480.9" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="483.92" y="1647.5" ></text>
</g>
<g >
<title>rep_movs_alternative (7,340,903 samples, 0.01%)</title><rect x="315.7" y="1605" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="318.70" y="1615.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (24,637,996 samples, 0.03%)</title><rect x="857.7" y="1413" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="860.73" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (13,118,254 samples, 0.02%)</title><rect x="989.7" y="1765" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="992.65" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (7,068,201 samples, 0.01%)</title><rect x="298.5" y="1861" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="301.46" y="1871.5" ></text>
</g>
<g >
<title>file_has_perm (8,788,606 samples, 0.01%)</title><rect x="1018.2" y="1637" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1021.18" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (460,963,015 samples, 0.55%)</title><rect x="1061.6" y="1765" width="6.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1064.58" y="1775.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (13,514,233 samples, 0.02%)</title><rect x="252.6" y="1781" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="255.65" y="1791.5" ></text>
</g>
<g >
<title>handle_softirqs (56,230,280 samples, 0.07%)</title><rect x="272.6" y="1365" width="0.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="275.55" y="1375.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (29,408,353 samples, 0.04%)</title><rect x="299.3" y="1797" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="302.30" y="1807.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (22,034,405 samples, 0.03%)</title><rect x="964.3" y="1781" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="967.27" y="1791.5" ></text>
</g>
<g >
<title>tcp_recvmsg (296,408,593 samples, 0.36%)</title><rect x="1119.1" y="1653" width="4.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1122.14" y="1663.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (7,430,370 samples, 0.01%)</title><rect x="112.7" y="1653" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="115.67" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1477" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1487.5" ></text>
</g>
<g >
<title>netvsc_poll (22,744,712 samples, 0.03%)</title><rect x="650.1" y="1637" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="653.14" y="1647.5" ></text>
</g>
<g >
<title>__fdget (20,628,951 samples, 0.02%)</title><rect x="462.4" y="1589" width="0.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="465.36" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,539,401 samples, 0.01%)</title><rect x="1143.2" y="1653" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1146.23" y="1663.5" ></text>
</g>
<g >
<title>selinux_file_permission (97,454,378 samples, 0.12%)</title><rect x="676.6" y="1669" width="1.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="679.64" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="405" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="415.5" ></text>
</g>
<g >
<title>__napi_poll (8,676,397 samples, 0.01%)</title><rect x="183.2" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="186.20" y="1583.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (7,208,695 samples, 0.01%)</title><rect x="52.3" y="1717" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="55.26" y="1727.5" ></text>
</g>
<g >
<title>__virt_addr_valid (12,433,855 samples, 0.01%)</title><rect x="1000.5" y="1589" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1003.48" y="1599.5" ></text>
</g>
<g >
<title>tcp_data_ready (7,896,714 samples, 0.01%)</title><rect x="144.3" y="1397" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="147.31" y="1407.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (11,628,825 samples, 0.01%)</title><rect x="905.0" y="1701" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="908.01" y="1711.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (26,956,083 samples, 0.03%)</title><rect x="817.0" y="1653" width="0.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="820.01" y="1663.5" ></text>
</g>
<g >
<title>selinux_ip_postroute (15,308,892 samples, 0.02%)</title><rect x="865.5" y="1461" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="868.48" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (17,404,033 samples, 0.02%)</title><rect x="22.8" y="1685" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="25.75" y="1695.5" ></text>
</g>
<g >
<title>ip_list_rcv (11,922,218 samples, 0.01%)</title><rect x="966.4" y="1573" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="969.44" y="1583.5" ></text>
</g>
<g >
<title>netvsc_send (95,600,583 samples, 0.11%)</title><rect x="567.3" y="1349" width="1.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="570.33" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="757" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="767.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (11,159,352 samples, 0.01%)</title><rect x="579.1" y="1813" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="582.11" y="1823.5" ></text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (8,778,591 samples, 0.01%)</title><rect x="81.9" y="1813" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="84.89" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (31,684,954 samples, 0.04%)</title><rect x="691.9" y="1669" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="694.87" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="549" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="559.5" ></text>
</g>
<g >
<title>set_root (8,843,982 samples, 0.01%)</title><rect x="217.5" y="1573" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="220.55" y="1583.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (344,834,501 samples, 0.41%)</title><rect x="124.2" y="1429" width="4.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="127.24" y="1439.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (331,900,681 samples, 0.40%)</title><rect x="1072.6" y="1765" width="4.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1075.55" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1589" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1599.5" ></text>
</g>
<g >
<title>ipv4_conntrack_defrag (8,641,396 samples, 0.01%)</title><rect x="560.2" y="1477" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="563.18" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1493" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1503.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (42,705,081 samples, 0.05%)</title><rect x="144.1" y="1717" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="147.08" y="1727.5" ></text>
</g>
<g >
<title>__strlen_avx2 (8,803,797 samples, 0.01%)</title><rect x="612.2" y="1733" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="615.19" y="1743.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char*, char*&gt; (36,245,144 samples, 0.04%)</title><rect x="817.0" y="1733" width="0.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="819.96" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (11,400,820 samples, 0.01%)</title><rect x="551.5" y="1797" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="554.52" y="1807.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (32,704,036 samples, 0.04%)</title><rect x="818.6" y="1797" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="821.64" y="1807.5" ></text>
</g>
<g >
<title>netvsc_poll (10,672,868 samples, 0.01%)</title><rect x="1153.0" y="1301" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1156.05" y="1311.5" ></text>
</g>
<g >
<title>handle_softirqs (58,036,108 samples, 0.07%)</title><rect x="1155.6" y="1365" width="0.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1158.56" y="1375.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,922,218 samples, 0.01%)</title><rect x="966.4" y="1589" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="969.44" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,365,698 samples, 0.01%)</title><rect x="443.2" y="1557" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="446.18" y="1567.5" ></text>
</g>
<g >
<title>__napi_poll (7,160,300 samples, 0.01%)</title><rect x="33.3" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="36.32" y="1583.5" ></text>
</g>
<g >
<title>rndis_filter_receive (7,781,747 samples, 0.01%)</title><rect x="382.8" y="1621" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="385.84" y="1631.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (12,267,785 samples, 0.01%)</title><rect x="447.8" y="1893" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="450.77" y="1903.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (9,592,266 samples, 0.01%)</title><rect x="1147.0" y="1589" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1150.00" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="741" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (14,872,628 samples, 0.02%)</title><rect x="778.6" y="1749" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="781.64" y="1759.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (42,771,435 samples, 0.05%)</title><rect x="483.9" y="1749" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="486.86" y="1759.5" ></text>
</g>
<g >
<title>_raw_write_unlock_irq (7,111,091 samples, 0.01%)</title><rect x="14.7" y="1605" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="17.66" y="1615.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (51,568,458 samples, 0.06%)</title><rect x="1175.5" y="1749" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1178.49" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (39,581,846 samples, 0.05%)</title><rect x="144.1" y="1653" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="147.08" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (8,010,118 samples, 0.01%)</title><rect x="759.5" y="1749" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="762.52" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (721,092,311 samples, 0.87%)</title><rect x="61.0" y="1749" width="10.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="64.05" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (7,473,376 samples, 0.01%)</title><rect x="372.3" y="1749" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="375.31" y="1759.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,347,263 samples, 0.01%)</title><rect x="605.9" y="1541" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="608.87" y="1551.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (8,569,701 samples, 0.01%)</title><rect x="132.2" y="1557" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="135.19" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="981" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="991.5" ></text>
</g>
<g >
<title>nf_hook_slow (22,452,125 samples, 0.03%)</title><rect x="865.4" y="1477" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="868.38" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (9,592,266 samples, 0.01%)</title><rect x="1147.0" y="1605" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1150.00" y="1615.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (9,400,733 samples, 0.01%)</title><rect x="846.8" y="1781" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="849.83" y="1791.5" ></text>
</g>
<g >
<title>kmem_cache_free (18,766,434 samples, 0.02%)</title><rect x="509.9" y="1637" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="512.86" y="1647.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (14,448,922 samples, 0.02%)</title><rect x="999.7" y="1589" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1002.74" y="1599.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (8,867,974 samples, 0.01%)</title><rect x="897.1" y="1813" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="900.07" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (8,628,262 samples, 0.01%)</title><rect x="547.4" y="1781" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="550.36" y="1791.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,168,852 samples, 0.01%)</title><rect x="376.7" y="1797" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="379.66" y="1807.5" ></text>
</g>
<g >
<title>Channel::OnRead (6,038,737,340 samples, 7.25%)</title><rect x="11.3" y="1909" width="85.5" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="14.32" y="1919.5" >Channel::O..</text>
</g>
<g >
<title>sysvec_hyperv_callback (8,457,169 samples, 0.01%)</title><rect x="784.4" y="1685" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="787.42" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1685" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (10,112,787 samples, 0.01%)</title><rect x="123.0" y="1429" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="125.99" y="1439.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (62,143,743 samples, 0.07%)</title><rect x="800.1" y="1717" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="803.08" y="1727.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (37,213,596 samples, 0.04%)</title><rect x="1008.4" y="1413" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1011.43" y="1423.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1733" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="782.08" y="1743.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,770,691 samples, 0.02%)</title><rect x="603.9" y="1621" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="606.90" y="1631.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (15,185,325 samples, 0.02%)</title><rect x="273.0" y="1285" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="276.00" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (199,872,741 samples, 0.24%)</title><rect x="604.4" y="1621" width="2.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="607.40" y="1631.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,236,466 samples, 0.01%)</title><rect x="158.3" y="2021" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="161.26" y="2031.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (9,921,981 samples, 0.01%)</title><rect x="926.0" y="1717" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="929.05" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (22,613,853 samples, 0.03%)</title><rect x="317.9" y="1733" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="320.89" y="1743.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char*, char*, char&gt; (58,232,124 samples, 0.07%)</title><rect x="378.2" y="1749" width="0.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="381.23" y="1759.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (16,554,758 samples, 0.02%)</title><rect x="505.3" y="1653" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="508.33" y="1663.5" ></text>
</g>
<g >
<title>selinux_xfrm_postroute_last (7,740,819 samples, 0.01%)</title><rect x="569.5" y="1429" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="572.54" y="1439.5" ></text>
</g>
<g >
<title>vfs_fstatat (474,583,576 samples, 0.57%)</title><rect x="945.5" y="1669" width="6.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="948.54" y="1679.5" ></text>
</g>
<g >
<title>security_file_permission (42,545,157 samples, 0.05%)</title><rect x="135.3" y="1669" width="0.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="138.25" y="1679.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,733,348 samples, 0.01%)</title><rect x="655.1" y="1573" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="658.08" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (23,487,191 samples, 0.03%)</title><rect x="1133.6" y="1733" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1136.56" y="1743.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (14,487,388 samples, 0.02%)</title><rect x="496.1" y="1653" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="499.08" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1653" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1663.5" ></text>
</g>
<g >
<title>tcp_skb_entail (7,244,181 samples, 0.01%)</title><rect x="1164.6" y="1605" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1167.61" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1221" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1231.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1157" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="928.84" y="1167.5" ></text>
</g>
<g >
<title>tcp_poll (7,311,809 samples, 0.01%)</title><rect x="756.7" y="1557" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="759.72" y="1567.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1,339,631,552 samples, 1.61%)</title><rect x="706.0" y="1637" width="18.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="708.98" y="1647.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (32,724,132 samples, 0.04%)</title><rect x="1063.9" y="1685" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1066.94" y="1695.5" ></text>
</g>
<g >
<title>sch_direct_xmit (195,878,185 samples, 0.24%)</title><rect x="1009.0" y="1413" width="2.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1011.98" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (10,043,761 samples, 0.01%)</title><rect x="831.8" y="1813" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="834.85" y="1823.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1541" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="782.08" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (9,298,259 samples, 0.01%)</title><rect x="111.0" y="1733" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="114.03" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (8,005,485 samples, 0.01%)</title><rect x="159.7" y="1877" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="162.75" y="1887.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1413" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="951.32" y="1423.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,076,822 samples, 0.01%)</title><rect x="1012.0" y="1413" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1015.00" y="1423.5" ></text>
</g>
<g >
<title>irq_exit_rcu (26,939,315 samples, 0.03%)</title><rect x="878.1" y="1765" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="881.08" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (7,460,779 samples, 0.01%)</title><rect x="788.0" y="1749" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="791.01" y="1759.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (9,904,066,853 samples, 11.88%)</title><rect x="10.2" y="1973" width="140.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="13.25" y="1983.5" >std::__invoke_imp..</text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (24,358,776 samples, 0.03%)</title><rect x="1178.9" y="1829" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1181.93" y="1839.5" ></text>
</g>
<g >
<title>kfree_skbmem (11,304,714 samples, 0.01%)</title><rect x="680.7" y="1605" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="683.74" y="1615.5" ></text>
</g>
<g >
<title>inet_recvmsg (304,111,090 samples, 0.36%)</title><rect x="1119.0" y="1669" width="4.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1122.03" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::clear (10,681,403 samples, 0.01%)</title><rect x="226.3" y="1781" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="229.27" y="1791.5" ></text>
</g>
<g >
<title>ip_list_rcv (14,878,351 samples, 0.02%)</title><rect x="652.0" y="1525" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="654.98" y="1535.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (163,085,213 samples, 0.20%)</title><rect x="949.6" y="1605" width="2.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="952.59" y="1615.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (8,010,118 samples, 0.01%)</title><rect x="759.5" y="1717" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="762.52" y="1727.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7,513,023 samples, 0.01%)</title><rect x="1175.6" y="1253" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1178.59" y="1263.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::function&lt;void  (7,788,708 samples, 0.01%)</title><rect x="885.2" y="1877" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="888.24" y="1887.5" ></text>
</g>
<g >
<title>napi_complete_done (7,152,732 samples, 0.01%)</title><rect x="865.1" y="1301" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="868.14" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="277" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="287.5" ></text>
</g>
<g >
<title>handle_softirqs (11,943,763 samples, 0.01%)</title><rect x="421.2" y="1365" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="424.24" y="1375.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::allocate (27,042,700 samples, 0.03%)</title><rect x="470.8" y="1685" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="473.78" y="1695.5" ></text>
</g>
<g >
<title>sch_direct_xmit (12,517,850 samples, 0.02%)</title><rect x="1008.2" y="1397" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1011.20" y="1407.5" ></text>
</g>
<g >
<title>strncpy_from_user (73,605,316 samples, 0.09%)</title><rect x="213.5" y="1621" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="216.46" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1509" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1519.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (24,190,280 samples, 0.03%)</title><rect x="149.8" y="1781" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="152.84" y="1791.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,535,305 samples, 0.01%)</title><rect x="744.8" y="2005" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="747.77" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1413" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1423.5" ></text>
</g>
<g >
<title>__fdget (27,286,761 samples, 0.03%)</title><rect x="900.8" y="1589" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="903.81" y="1599.5" ></text>
</g>
<g >
<title>__wake_up_common (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1205" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="951.32" y="1215.5" ></text>
</g>
<g >
<title>handle_softirqs (12,813,382 samples, 0.02%)</title><rect x="1188.5" y="1973" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1191.48" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1621" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1631.5" ></text>
</g>
<g >
<title>rw_verify_area (44,198,482 samples, 0.05%)</title><rect x="283.8" y="1685" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="286.76" y="1695.5" ></text>
</g>
<g >
<title>x64_sys_call (488,718,879 samples, 0.59%)</title><rect x="211.0" y="1717" width="7.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="214.03" y="1727.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (21,375,833 samples, 0.03%)</title><rect x="213.1" y="1589" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="216.13" y="1599.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1717" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="295.80" y="1727.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,674,439 samples, 0.01%)</title><rect x="626.0" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="628.98" y="1631.5" ></text>
</g>
<g >
<title>EventLoop::IsInLoopThread (7,701,577 samples, 0.01%)</title><rect x="833.2" y="1765" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="836.25" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (7,118,135 samples, 0.01%)</title><rect x="414.5" y="1541" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="417.52" y="1551.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (8,010,118 samples, 0.01%)</title><rect x="759.5" y="1733" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="762.52" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1893" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="747.77" y="1903.5" ></text>
</g>
<g >
<title>__napi_poll (13,986,030 samples, 0.02%)</title><rect x="867.7" y="1365" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="870.67" y="1375.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (12,567,198 samples, 0.02%)</title><rect x="498.2" y="1669" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="501.16" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (88,808,890 samples, 0.11%)</title><rect x="795.1" y="1733" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="798.09" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (58,370,371 samples, 0.07%)</title><rect x="405.9" y="1781" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="408.91" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (86,861,663 samples, 0.10%)</title><rect x="917.0" y="1685" width="1.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="919.97" y="1695.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (19,010,178 samples, 0.02%)</title><rect x="558.1" y="1589" width="0.3" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="561.15" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="581" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (25,101,224 samples, 0.03%)</title><rect x="940.5" y="1701" width="0.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="943.52" y="1711.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (153,661,002 samples, 0.18%)</title><rect x="268.0" y="1461" width="2.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="270.97" y="1471.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1493" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="186.34" y="1503.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (31,412,923 samples, 0.04%)</title><rect x="780.8" y="1733" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="783.84" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="757" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="767.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (16,251,434 samples, 0.02%)</title><rect x="150.6" y="53" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="153.63" y="63.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (10,184,625 samples, 0.01%)</title><rect x="39.9" y="1717" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="42.89" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (20,003,571 samples, 0.02%)</title><rect x="1189.4" y="2053" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1192.38" y="2063.5" ></text>
</g>
<g >
<title>vfs_statx (218,837,870 samples, 0.26%)</title><rect x="656.5" y="1653" width="3.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="659.48" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end (10,971,637 samples, 0.01%)</title><rect x="666.2" y="1781" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="669.25" y="1791.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (72,237,534 samples, 0.09%)</title><rect x="34.9" y="1685" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="37.87" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (16,929,268 samples, 0.02%)</title><rect x="904.6" y="1765" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="907.55" y="1775.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (11,021,744 samples, 0.01%)</title><rect x="397.2" y="1621" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="400.24" y="1631.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, char*, char*&gt; (14,797,675 samples, 0.02%)</title><rect x="351.6" y="1637" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="354.56" y="1647.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (37,640,922 samples, 0.05%)</title><rect x="1172.8" y="1781" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1175.85" y="1791.5" ></text>
</g>
<g >
<title>_raw_write_unlock_irq (57,423,119 samples, 0.07%)</title><rect x="731.5" y="1813" width="0.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="734.52" y="1823.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (7,352,788 samples, 0.01%)</title><rect x="540.0" y="1621" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="543.02" y="1631.5" ></text>
</g>
<g >
<title>ip_list_rcv (20,966,097 samples, 0.03%)</title><rect x="714.9" y="1253" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="717.87" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (18,270,690 samples, 0.02%)</title><rect x="44.2" y="1701" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="47.17" y="1711.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (91,820,303 samples, 0.11%)</title><rect x="795.0" y="1749" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="798.04" y="1759.5" ></text>
</g>
<g >
<title>ip_list_rcv (10,351,719 samples, 0.01%)</title><rect x="893.7" y="1861" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="896.68" y="1871.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (30,322,439 samples, 0.04%)</title><rect x="584.3" y="1749" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="587.32" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1125" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1135.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (129,517,646 samples, 0.16%)</title><rect x="729.7" y="1813" width="1.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="732.69" y="1823.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (10,682,296 samples, 0.01%)</title><rect x="118.0" y="1589" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="121.05" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (9,259,113 samples, 0.01%)</title><rect x="410.0" y="1797" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="413.00" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (16,531,024 samples, 0.02%)</title><rect x="877.8" y="1637" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="880.84" y="1647.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,094,779 samples, 0.01%)</title><rect x="662.8" y="1717" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="665.76" y="1727.5" ></text>
</g>
<g >
<title>avc_has_perm (7,296,084 samples, 0.01%)</title><rect x="1018.2" y="1605" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1021.20" y="1615.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (29,448,681 samples, 0.04%)</title><rect x="26.4" y="1701" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="29.37" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1509" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1519.5" ></text>
</g>
<g >
<title>netif_skb_features (7,123,480 samples, 0.01%)</title><rect x="1011.6" y="1365" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1014.56" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (24,992,820 samples, 0.03%)</title><rect x="486.9" y="1733" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="489.94" y="1743.5" ></text>
</g>
<g >
<title>clear_bhb_loop (16,452,521 samples, 0.02%)</title><rect x="898.9" y="1653" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="901.87" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (8,853,361 samples, 0.01%)</title><rect x="408.2" y="1733" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="411.16" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (7,457,239 samples, 0.01%)</title><rect x="1138.6" y="1765" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1141.59" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,517,942 samples, 0.01%)</title><rect x="604.0" y="1461" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="606.96" y="1471.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (66,208,077 samples, 0.08%)</title><rect x="393.4" y="1797" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="396.38" y="1807.5" ></text>
</g>
<g >
<title>__napi_poll (8,385,464 samples, 0.01%)</title><rect x="1121.0" y="1525" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1124.00" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (13,310,678 samples, 0.02%)</title><rect x="784.6" y="1765" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="787.60" y="1775.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (73,926,264 samples, 0.09%)</title><rect x="279.5" y="1557" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="282.53" y="1567.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char*, char*, char&gt; (53,764,411 samples, 0.06%)</title><rect x="670.0" y="1749" width="0.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="672.96" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (229,430,650 samples, 0.28%)</title><rect x="300.0" y="2053" width="3.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="302.98" y="2063.5" ></text>
</g>
<g >
<title>napi_gro_receive (8,762,896 samples, 0.01%)</title><rect x="715.2" y="1269" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="718.19" y="1279.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,137,745 samples, 0.01%)</title><rect x="777.9" y="1541" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="780.94" y="1551.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (10,508,481 samples, 0.01%)</title><rect x="1073.9" y="1717" width="0.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1076.88" y="1727.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,961,558 samples, 0.01%)</title><rect x="1140.9" y="1669" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1143.88" y="1679.5" ></text>
</g>
<g >
<title>tcp_data_ready (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1413" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="925.16" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (183,136,796 samples, 0.22%)</title><rect x="483.3" y="1765" width="2.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="486.26" y="1775.5" ></text>
</g>
<g >
<title>ip_list_rcv (25,587,303 samples, 0.03%)</title><rect x="860.9" y="1253" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="863.91" y="1263.5" ></text>
</g>
<g >
<title>std::function&lt;void  (7,284,516 samples, 0.01%)</title><rect x="20.1" y="1781" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="23.11" y="1791.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,603,822 samples, 0.01%)</title><rect x="455.5" y="2021" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="458.45" y="2031.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (10,172,992 samples, 0.01%)</title><rect x="1139.7" y="1669" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1142.74" y="1679.5" ></text>
</g>
<g >
<title>Channel::OnRead (6,054,677,444 samples, 7.27%)</title><rect x="600.8" y="1909" width="85.7" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="603.78" y="1919.5" >Channel::O..</text>
</g>
<g >
<title>ip_list_rcv (13,377,237 samples, 0.02%)</title><rect x="1173.1" y="1589" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1176.10" y="1599.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (8,703,596 samples, 0.01%)</title><rect x="78.0" y="1781" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="81.04" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (37,369,103 samples, 0.04%)</title><rect x="1131.5" y="1669" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1134.46" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1237" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="430.41" y="1247.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (6,030,717,194 samples, 7.24%)</title><rect x="601.1" y="1861" width="85.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="604.12" y="1871.5" >std::__inv..</text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (21,991,784 samples, 0.03%)</title><rect x="699.3" y="1685" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="702.26" y="1695.5" ></text>
</g>
<g >
<title>tcp_write_xmit (951,084,633 samples, 1.14%)</title><rect x="1002.0" y="1573" width="13.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1005.01" y="1583.5" ></text>
</g>
<g >
<title>napi_complete_done (17,679,770 samples, 0.02%)</title><rect x="674.3" y="1621" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="677.27" y="1631.5" ></text>
</g>
<g >
<title>handle_softirqs (10,306,909 samples, 0.01%)</title><rect x="704.6" y="1621" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="707.61" y="1631.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (756,204,302 samples, 0.91%)</title><rect x="855.3" y="1525" width="10.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="858.33" y="1535.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (18,735,134 samples, 0.02%)</title><rect x="925.7" y="1717" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="928.70" y="1727.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (400,878,180 samples, 0.48%)</title><rect x="906.2" y="1765" width="5.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="909.16" y="1775.5" ></text>
</g>
<g >
<title>do_syscall_64 (245,893,608 samples, 0.30%)</title><rect x="312.5" y="1653" width="3.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="315.51" y="1663.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (31,565,640 samples, 0.04%)</title><rect x="145.8" y="1861" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="148.83" y="1871.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (54,508,390 samples, 0.07%)</title><rect x="360.0" y="1717" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="363.01" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,820,304 samples, 0.01%)</title><rect x="447.3" y="1877" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="450.32" y="1887.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (8,745,319 samples, 0.01%)</title><rect x="427.4" y="933" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="430.41" y="943.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (12,269,948 samples, 0.01%)</title><rect x="293.2" y="1541" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="296.20" y="1551.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (9,559,914 samples, 0.01%)</title><rect x="613.9" y="1685" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="616.92" y="1695.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (17,401,978 samples, 0.02%)</title><rect x="85.1" y="1749" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="88.11" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (15,474,851 samples, 0.02%)</title><rect x="1109.7" y="1781" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1112.68" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (7,661,320 samples, 0.01%)</title><rect x="178.2" y="1685" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="181.23" y="1695.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, 0ul&gt; (16,249,928 samples, 0.02%)</title><rect x="1057.0" y="1637" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1060.03" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="101" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="111.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1189" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (9,184,949 samples, 0.01%)</title><rect x="700.0" y="1717" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="703.04" y="1727.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (9,466,098 samples, 0.01%)</title><rect x="109.3" y="1669" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="112.34" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1077" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1087.5" ></text>
</g>
<g >
<title>inet_recvmsg (334,883,166 samples, 0.40%)</title><rect x="970.5" y="1669" width="4.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="973.49" y="1679.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (22,034,405 samples, 0.03%)</title><rect x="964.3" y="1749" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="967.27" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,747,463,176 samples, 2.10%)</title><rect x="260.2" y="1797" width="24.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="263.19" y="1807.5" >e..</text>
</g>
<g >
<title>hrtimer_start_range_ns (7,556,441 samples, 0.01%)</title><rect x="583.8" y="1781" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="586.83" y="1791.5" ></text>
</g>
<g >
<title>netvsc_xmit (140,260,282 samples, 0.17%)</title><rect x="424.6" y="1365" width="2.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="427.60" y="1375.5" ></text>
</g>
<g >
<title>net_rx_action (18,145,193 samples, 0.02%)</title><rect x="229.6" y="1717" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="232.60" y="1727.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (13,238,894 samples, 0.02%)</title><rect x="670.8" y="1685" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="673.79" y="1695.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (32,452,091 samples, 0.04%)</title><rect x="91.6" y="1621" width="0.5" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="94.65" y="1631.5" ></text>
</g>
<g >
<title>napi_complete_done (14,485,841 samples, 0.02%)</title><rect x="980.2" y="1541" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="983.16" y="1551.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (417,801,296 samples, 0.50%)</title><rect x="760.8" y="1765" width="5.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="763.77" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (11,929,614 samples, 0.01%)</title><rect x="402.1" y="1669" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="405.08" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1765" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1775.5" ></text>
</g>
<g >
<title>__wake_up_sync (7,911,046 samples, 0.01%)</title><rect x="1024.6" y="1333" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1027.57" y="1343.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (60,912,631 samples, 0.07%)</title><rect x="1084.6" y="1685" width="0.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1087.58" y="1695.5" ></text>
</g>
<g >
<title>security_file_permission (124,886,351 samples, 0.15%)</title><rect x="384.8" y="1685" width="1.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="387.76" y="1695.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (20,415,398 samples, 0.02%)</title><rect x="227.7" y="1669" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="230.68" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9,182,790 samples, 0.01%)</title><rect x="440.3" y="1525" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="443.28" y="1535.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (15,492,676 samples, 0.02%)</title><rect x="523.6" y="1749" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="526.65" y="1759.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (52,953,104 samples, 0.06%)</title><rect x="480.3" y="1685" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="483.27" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (15,714,971 samples, 0.02%)</title><rect x="980.2" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="983.16" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (12,147,298 samples, 0.01%)</title><rect x="178.3" y="1765" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="181.34" y="1775.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (13,014,213 samples, 0.02%)</title><rect x="317.5" y="1733" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="320.49" y="1743.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (7,895,654 samples, 0.01%)</title><rect x="851.9" y="1621" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="854.94" y="1631.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (10,060,443 samples, 0.01%)</title><rect x="234.8" y="1637" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="237.84" y="1647.5" ></text>
</g>
<g >
<title>clear_bhb_loop (13,055,752 samples, 0.02%)</title><rect x="673.8" y="1781" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="676.80" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (84,465,619 samples, 0.10%)</title><rect x="205.1" y="1733" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="208.06" y="1743.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (35,377,455 samples, 0.04%)</title><rect x="380.6" y="1797" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="383.60" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,173,028 samples, 0.01%)</title><rect x="1140.9" y="1541" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1143.88" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::empty (11,009,968 samples, 0.01%)</title><rect x="841.4" y="1765" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="844.36" y="1775.5" ></text>
</g>
<g >
<title>netvsc_poll (24,710,104 samples, 0.03%)</title><rect x="60.5" y="1637" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="63.49" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (7,105,145 samples, 0.01%)</title><rect x="298.1" y="1909" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="301.14" y="1919.5" ></text>
</g>
<g >
<title>set_root (8,412,098 samples, 0.01%)</title><rect x="951.8" y="1573" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="954.78" y="1583.5" ></text>
</g>
<g >
<title>napi_complete_done (9,335,646 samples, 0.01%)</title><rect x="311.8" y="1541" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="314.78" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1509" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1519.5" ></text>
</g>
<g >
<title>file_has_perm (31,530,906 samples, 0.04%)</title><rect x="823.4" y="1653" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="826.42" y="1663.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (18,055,780 samples, 0.02%)</title><rect x="379.4" y="1733" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="382.42" y="1743.5" ></text>
</g>
<g >
<title>epoll_ctl (299,836,824 samples, 0.36%)</title><rect x="538.7" y="1685" width="4.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="541.71" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,754,787 samples, 0.01%)</title><rect x="1121.0" y="1621" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1123.98" y="1631.5" ></text>
</g>
<g >
<title>__fget_light (21,079,977 samples, 0.03%)</title><rect x="755.7" y="1573" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="758.67" y="1583.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (23,391,041 samples, 0.03%)</title><rect x="718.6" y="1397" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="721.63" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (80,203,123 samples, 0.10%)</title><rect x="51.3" y="1733" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="54.35" y="1743.5" ></text>
</g>
<g >
<title>[web-server] (12,319,894 samples, 0.01%)</title><rect x="177.3" y="1765" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="180.25" y="1775.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (53,605,132 samples, 0.06%)</title><rect x="857.4" y="1429" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="860.40" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (10,529,748 samples, 0.01%)</title><rect x="594.0" y="2037" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="597.01" y="2047.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (7,717,296 samples, 0.01%)</title><rect x="347.3" y="1765" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="350.28" y="1775.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,480,665 samples, 0.01%)</title><rect x="733.4" y="1733" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="736.43" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (110,678,597 samples, 0.13%)</title><rect x="992.1" y="1749" width="1.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="995.08" y="1759.5" ></text>
</g>
<g >
<title>handle_softirqs (8,052,005 samples, 0.01%)</title><rect x="622.8" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="625.78" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="437" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (415,184,004 samples, 0.50%)</title><rect x="897.9" y="1733" width="5.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="900.91" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (10,024,922 samples, 0.01%)</title><rect x="1178.1" y="1877" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1181.06" y="1887.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (8,031,591 samples, 0.01%)</title><rect x="604.2" y="1637" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="607.23" y="1647.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1541" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="469.26" y="1551.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7,208,810 samples, 0.01%)</title><rect x="674.4" y="1317" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="677.37" y="1327.5" ></text>
</g>
<g >
<title>_copy_to_iter (35,343,048 samples, 0.04%)</title><rect x="827.3" y="1573" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="830.33" y="1583.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (8,558,577 samples, 0.01%)</title><rect x="530.1" y="1605" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="533.10" y="1615.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (23,994,339 samples, 0.03%)</title><rect x="807.1" y="1557" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="810.07" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (7,325,709 samples, 0.01%)</title><rect x="1104.1" y="1765" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1107.07" y="1775.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,770,691 samples, 0.02%)</title><rect x="603.9" y="1589" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="606.90" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equal_to_iter::operator (8,924,179 samples, 0.01%)</title><rect x="41.8" y="1733" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="44.77" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;char*, void&gt; (144,197,882 samples, 0.17%)</title><rect x="521.9" y="1797" width="2.0" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="524.89" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="757" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="767.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1877" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1887.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,385,464 samples, 0.01%)</title><rect x="1121.0" y="1445" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1124.00" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (38,062,408 samples, 0.05%)</title><rect x="646.5" y="1749" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="649.48" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (12,197,515 samples, 0.01%)</title><rect x="813.9" y="1781" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="816.92" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,689,887 samples, 0.01%)</title><rect x="733.5" y="1589" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="736.47" y="1599.5" ></text>
</g>
<g >
<title>handle_softirqs (7,605,581 samples, 0.01%)</title><rect x="1101.3" y="1525" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1104.33" y="1535.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (30,431,984 samples, 0.04%)</title><rect x="294.6" y="1877" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="297.55" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1301" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (9,872,664 samples, 0.01%)</title><rect x="548.4" y="1765" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="551.40" y="1775.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (7,799,543 samples, 0.01%)</title><rect x="880.2" y="1749" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="883.20" y="1759.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (16,916,044 samples, 0.02%)</title><rect x="1024.1" y="1605" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1027.13" y="1615.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (7,154,086 samples, 0.01%)</title><rect x="414.8" y="1605" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="417.82" y="1615.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (21,884,688 samples, 0.03%)</title><rect x="923.1" y="1733" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="926.10" y="1743.5" ></text>
</g>
<g >
<title>napi_complete_done (9,340,124 samples, 0.01%)</title><rect x="577.5" y="1781" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="580.48" y="1791.5" ></text>
</g>
<g >
<title>memset_orig (11,167,035 samples, 0.01%)</title><rect x="1165.7" y="1573" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1168.69" y="1583.5" ></text>
</g>
<g >
<title>handle_softirqs (19,277,707 samples, 0.02%)</title><rect x="311.7" y="1605" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="314.74" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (35,358,613 samples, 0.04%)</title><rect x="796.4" y="1701" width="0.5" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="799.44" y="1711.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (19,710,641 samples, 0.02%)</title><rect x="609.3" y="1717" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="612.34" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (12,221,295 samples, 0.01%)</title><rect x="48.3" y="1765" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="51.30" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (17,160,248 samples, 0.02%)</title><rect x="503.9" y="1749" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="506.86" y="1759.5" ></text>
</g>
<g >
<title>kfree_skbmem (8,884,991 samples, 0.01%)</title><rect x="238.0" y="1605" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="241.04" y="1615.5" ></text>
</g>
<g >
<title>kmalloc_reserve (35,599,461 samples, 0.04%)</title><rect x="133.4" y="1573" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="136.37" y="1583.5" ></text>
</g>
<g >
<title>__napi_poll (8,457,169 samples, 0.01%)</title><rect x="784.4" y="1605" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="787.42" y="1615.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (328,091,657 samples, 0.39%)</title><rect x="422.5" y="1429" width="4.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="425.48" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (8,899,190 samples, 0.01%)</title><rect x="770.2" y="1701" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="773.18" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1781" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1791.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (13,451,848 samples, 0.02%)</title><rect x="125.2" y="1205" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="128.20" y="1215.5" ></text>
</g>
<g >
<title>clear_bhb_loop (12,790,397 samples, 0.02%)</title><rect x="460.4" y="1653" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="463.39" y="1663.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (16,668,329 samples, 0.02%)</title><rect x="901.7" y="1573" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="904.68" y="1583.5" ></text>
</g>
<g >
<title>set_root (15,839,052 samples, 0.02%)</title><rect x="1100.4" y="1557" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1103.41" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (9,068,136 samples, 0.01%)</title><rect x="256.5" y="1669" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="259.50" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (64,818,827 samples, 0.08%)</title><rect x="71.3" y="1749" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="74.28" y="1759.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (173,947,706 samples, 0.21%)</title><rect x="163.6" y="1621" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="166.57" y="1631.5" ></text>
</g>
<g >
<title>__check_object_size (11,696,949 samples, 0.01%)</title><rect x="415.7" y="1605" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="418.73" y="1615.5" ></text>
</g>
<g >
<title>netvsc_poll (7,627,962 samples, 0.01%)</title><rect x="917.9" y="1541" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="920.93" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1525" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1535.5" ></text>
</g>
<g >
<title>malloc (95,636,823 samples, 0.11%)</title><rect x="305.9" y="2053" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="308.90" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (8,793,819 samples, 0.01%)</title><rect x="360.3" y="1413" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="363.26" y="1423.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (14,020,969 samples, 0.02%)</title><rect x="63.4" y="1701" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="66.45" y="1711.5" ></text>
</g>
<g >
<title>pick_next_task_fair (8,117,963 samples, 0.01%)</title><rect x="734.9" y="1749" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="737.94" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10,351,719 samples, 0.01%)</title><rect x="893.7" y="1765" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="896.68" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="181" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="191.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,605,581 samples, 0.01%)</title><rect x="1101.3" y="1557" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1104.33" y="1567.5" ></text>
</g>
<g >
<title>HttpResponse::Clear (12,559,711 samples, 0.02%)</title><rect x="195.7" y="1781" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="198.69" y="1791.5" ></text>
</g>
<g >
<title>std::function&lt;void  (5,776,431,047 samples, 6.93%)</title><rect x="896.6" y="1893" width="81.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="899.62" y="1903.5" >std::func..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (16,935,907 samples, 0.02%)</title><rect x="59.2" y="1669" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="62.16" y="1679.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (8,269,078 samples, 0.01%)</title><rect x="375.5" y="1781" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="378.53" y="1791.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (12,081,369 samples, 0.01%)</title><rect x="671.1" y="1749" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="674.15" y="1759.5" ></text>
</g>
<g >
<title>ip_finish_output2 (369,882,317 samples, 0.44%)</title><rect x="124.0" y="1445" width="5.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="127.04" y="1455.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (50,375,352 samples, 0.06%)</title><rect x="1027.3" y="1717" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1030.31" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (10,536,701 samples, 0.01%)</title><rect x="412.0" y="1685" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="415.00" y="1695.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,362,952 samples, 0.01%)</title><rect x="966.5" y="1541" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="969.46" y="1551.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (32,164,246 samples, 0.04%)</title><rect x="1033.1" y="1797" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1036.13" y="1807.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,734,378 samples, 0.01%)</title><rect x="947.2" y="1605" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="950.20" y="1615.5" ></text>
</g>
<g >
<title>EventLoop::Loop (9,647,041,848 samples, 11.58%)</title><rect x="750.0" y="1941" width="136.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="752.96" y="1951.5" >EventLoop::Loop</text>
</g>
<g >
<title>tcp_v4_do_rcv (11,364,408 samples, 0.01%)</title><rect x="798.1" y="1461" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="801.12" y="1471.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,050,396 samples, 0.01%)</title><rect x="583.4" y="1733" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="586.36" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (213,264,504 samples, 0.26%)</title><rect x="53.2" y="1749" width="3.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="56.15" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (13,291,671 samples, 0.02%)</title><rect x="1136.8" y="1781" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1139.82" y="1791.5" ></text>
</g>
<g >
<title>handle_softirqs (9,558,942 samples, 0.01%)</title><rect x="1045.5" y="1557" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1048.49" y="1567.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9,630,389 samples, 0.01%)</title><rect x="516.1" y="1749" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="519.10" y="1759.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (9,683,011 samples, 0.01%)</title><rect x="429.9" y="1445" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="432.88" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (9,453,944 samples, 0.01%)</title><rect x="397.0" y="1461" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="400.03" y="1471.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,879,824 samples, 0.01%)</title><rect x="39.0" y="1733" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="41.95" y="1743.5" ></text>
</g>
<g >
<title>x64_sys_call (554,331,356 samples, 0.67%)</title><rect x="1093.9" y="1717" width="7.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1096.85" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (73,044,904 samples, 0.09%)</title><rect x="257.5" y="1733" width="1.0" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="260.47" y="1743.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (7,769,409 samples, 0.01%)</title><rect x="875.3" y="1813" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="878.31" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1493" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="782.08" y="1503.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,050,396 samples, 0.01%)</title><rect x="583.4" y="1765" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="586.36" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="197" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="207.5" ></text>
</g>
<g >
<title>memset_orig (91,333,546 samples, 0.11%)</title><rect x="653.9" y="1621" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="656.92" y="1631.5" ></text>
</g>
<g >
<title>strncpy_from_user (55,137,470 samples, 0.07%)</title><rect x="655.3" y="1621" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="658.31" y="1631.5" ></text>
</g>
<g >
<title>kmalloc_reserve (31,250,840 samples, 0.04%)</title><rect x="1164.8" y="1573" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1167.85" y="1583.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,347,263 samples, 0.01%)</title><rect x="605.9" y="1509" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="608.87" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (7,883,127 samples, 0.01%)</title><rect x="1059.3" y="1733" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1062.32" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,074,555 samples, 0.01%)</title><rect x="327.2" y="1733" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="330.18" y="1743.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,196,704 samples, 0.01%)</title><rect x="46.3" y="1653" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="49.27" y="1663.5" ></text>
</g>
<g >
<title>security_file_permission (134,682,262 samples, 0.16%)</title><rect x="676.1" y="1685" width="1.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="679.12" y="1695.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (53,810,215 samples, 0.06%)</title><rect x="773.7" y="1685" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="776.72" y="1695.5" ></text>
</g>
<g >
<title>tcp_rcv_established (9,696,570 samples, 0.01%)</title><rect x="798.1" y="1445" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="801.14" y="1455.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (13,731,743 samples, 0.02%)</title><rect x="674.6" y="1749" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="677.60" y="1759.5" ></text>
</g>
<g >
<title>handle_softirqs (35,495,784 samples, 0.04%)</title><rect x="422.8" y="1365" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="425.77" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1445" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1455.5" ></text>
</g>
<g >
<title>memcpy_orig (14,186,671 samples, 0.02%)</title><rect x="1009.7" y="1349" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1012.74" y="1359.5" ></text>
</g>
<g >
<title>operator new (11,578,570 samples, 0.01%)</title><rect x="1040.9" y="2053" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1043.86" y="2063.5" ></text>
</g>
<g >
<title>Channel::OnWrite (3,014,925,144 samples, 3.62%)</title><rect x="243.5" y="1909" width="42.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="246.47" y="1919.5" >Chan..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (16,141,415 samples, 0.02%)</title><rect x="1053.9" y="1717" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1056.89" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (398,537,005 samples, 0.48%)</title><rect x="1061.9" y="1717" width="5.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1064.91" y="1727.5" ></text>
</g>
<g >
<title>rndis_filter_receive (13,022,214 samples, 0.02%)</title><rect x="880.7" y="1605" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="883.67" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_first_not_of (25,377,059 samples, 0.03%)</title><rect x="37.1" y="1765" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="40.10" y="1775.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (14,897,665 samples, 0.02%)</title><rect x="1021.0" y="1845" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1024.02" y="1855.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (8,867,922 samples, 0.01%)</title><rect x="177.9" y="1765" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="180.92" y="1775.5" ></text>
</g>
<g >
<title>ip_list_rcv (10,699,475 samples, 0.01%)</title><rect x="387.4" y="1413" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="390.42" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (16,621,176 samples, 0.02%)</title><rect x="1067.6" y="1717" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1070.61" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1653" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1663.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,111,018 samples, 0.01%)</title><rect x="480.9" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="483.92" y="1663.5" ></text>
</g>
<g >
<title>__x64_sys_writev (9,906,598 samples, 0.01%)</title><rect x="260.7" y="1765" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="263.73" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (78,964,759 samples, 0.09%)</title><rect x="883.3" y="1861" width="1.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="886.26" y="1871.5" ></text>
</g>
<g >
<title>HttpResponse::Clear (10,354,509 samples, 0.01%)</title><rect x="404.4" y="1781" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="407.38" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (89,076,666 samples, 0.11%)</title><rect x="886.8" y="2037" width="1.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.80" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (19,006,455 samples, 0.02%)</title><rect x="942.8" y="1669" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="945.82" y="1679.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (40,950,594 samples, 0.05%)</title><rect x="1053.0" y="1749" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1056.01" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;char*&gt; (96,901,009 samples, 0.12%)</title><rect x="80.3" y="1765" width="1.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="83.35" y="1775.5" ></text>
</g>
<g >
<title>__strlen_avx2 (9,168,235 samples, 0.01%)</title><rect x="406.3" y="1765" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="409.33" y="1775.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (15,825,747 samples, 0.02%)</title><rect x="674.3" y="1557" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="677.27" y="1567.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (16,594,723 samples, 0.02%)</title><rect x="462.9" y="1541" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="465.94" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (10,160,732 samples, 0.01%)</title><rect x="1110.0" y="1749" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1113.03" y="1759.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (27,561,509 samples, 0.03%)</title><rect x="603.8" y="1637" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="606.83" y="1647.5" ></text>
</g>
<g >
<title>selinux_ip_postroute (36,584,763 samples, 0.04%)</title><rect x="719.4" y="1461" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="722.42" y="1471.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;TimerManager::TimerNode&gt;::shared_ptr (12,667,410 samples, 0.02%)</title><rect x="885.0" y="1909" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="887.97" y="1919.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (20,195,806 samples, 0.02%)</title><rect x="449.2" y="2021" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="452.24" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (16,997,997 samples, 0.02%)</title><rect x="40.7" y="1765" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="43.67" y="1775.5" ></text>
</g>
<g >
<title>_raw_write_unlock_irq (7,755,323 samples, 0.01%)</title><rect x="754.7" y="1605" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="757.66" y="1615.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (790,234,820 samples, 0.95%)</title><rect x="1002.3" y="1557" width="11.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1005.30" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1685" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10,008,551 samples, 0.01%)</title><rect x="1008.0" y="1125" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1010.95" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (17,366,901 samples, 0.02%)</title><rect x="37.9" y="1765" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="40.92" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10,767,267 samples, 0.01%)</title><rect x="742.1" y="2021" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="745.06" y="2031.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,063,380 samples, 0.01%)</title><rect x="898.2" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="901.24" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1477" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="295.80" y="1487.5" ></text>
</g>
<g >
<title>selinux_socket_sendmsg (36,331,761 samples, 0.04%)</title><rect x="725.0" y="1637" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="727.99" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, true&gt;::operator (8,605,578 samples, 0.01%)</title><rect x="991.8" y="1749" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="994.80" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (77,637,085 samples, 0.09%)</title><rect x="74.2" y="1765" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="77.20" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (13,340,280 samples, 0.02%)</title><rect x="541.2" y="1493" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="544.15" y="1503.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (208,046,985 samples, 0.25%)</title><rect x="794.1" y="1765" width="2.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="797.09" y="1775.5" ></text>
</g>
<g >
<title>netvsc_poll (34,499,184 samples, 0.04%)</title><rect x="1172.9" y="1685" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1175.87" y="1695.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (12,298,928 samples, 0.01%)</title><rect x="1092.7" y="1717" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1095.67" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (103,279,605 samples, 0.12%)</title><rect x="109.8" y="1765" width="1.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="112.76" y="1775.5" ></text>
</g>
<g >
<title>netvsc_poll (12,328,208 samples, 0.01%)</title><rect x="586.1" y="1733" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="589.08" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,725,984 samples, 0.01%)</title><rect x="1096.4" y="1589" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1099.44" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1413" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1423.5" ></text>
</g>
<g >
<title>nft_counter_eval (7,635,062 samples, 0.01%)</title><rect x="1006.2" y="1429" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1009.18" y="1439.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (41,655,408 samples, 0.05%)</title><rect x="108.9" y="1717" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="111.88" y="1727.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (5,862,081,038 samples, 7.03%)</title><rect x="160.4" y="1829" width="83.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="163.35" y="1839.5" >HttpConn:..</text>
</g>
<g >
<title>__x64_sys_epoll_wait (459,821,790 samples, 0.55%)</title><rect x="578.8" y="1845" width="6.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="581.82" y="1855.5" ></text>
</g>
<g >
<title>irq_exit_rcu (22,474,549 samples, 0.03%)</title><rect x="584.4" y="1701" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="587.43" y="1711.5" ></text>
</g>
<g >
<title>handle_softirqs (18,504,533 samples, 0.02%)</title><rect x="672.3" y="1733" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="675.32" y="1743.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1509" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1178.57" y="1519.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (16,609,603 samples, 0.02%)</title><rect x="878.2" y="1621" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="881.22" y="1631.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (11,382,379 samples, 0.01%)</title><rect x="1088.6" y="1653" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1091.59" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+ (15,648,360 samples, 0.02%)</title><rect x="28.3" y="1765" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="31.30" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (12,267,785 samples, 0.01%)</title><rect x="447.8" y="1909" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="450.77" y="1919.5" ></text>
</g>
<g >
<title>hv_ringbuffer_write (38,620,415 samples, 0.05%)</title><rect x="567.9" y="1301" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="570.94" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (9,113,073 samples, 0.01%)</title><rect x="551.7" y="1797" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="554.73" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1957" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1967.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,839,585 samples, 0.01%)</title><rect x="1036.4" y="2021" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1039.43" y="2031.5" ></text>
</g>
<g >
<title>HttpRouter::Route (1,376,695,808 samples, 1.65%)</title><rect x="1087.0" y="1781" width="19.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1090.00" y="1791.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (15,460,464 samples, 0.02%)</title><rect x="141.2" y="1781" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="144.18" y="1791.5" ></text>
</g>
<g >
<title>__napi_poll (11,914,981 samples, 0.01%)</title><rect x="562.2" y="1317" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="565.25" y="1327.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (15,116,041 samples, 0.02%)</title><rect x="324.8" y="1685" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="327.76" y="1695.5" ></text>
</g>
<g >
<title>kmem_cache_free (17,406,316 samples, 0.02%)</title><rect x="804.2" y="1637" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="807.16" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="773" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="783.5" ></text>
</g>
<g >
<title>tcp_send_mss (21,232,581 samples, 0.03%)</title><rect x="1015.5" y="1605" width="0.3" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1018.53" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (11,239,603 samples, 0.01%)</title><rect x="752.9" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="755.91" y="1599.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,648,638 samples, 0.01%)</title><rect x="857.2" y="1397" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="860.21" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (21,325,057 samples, 0.03%)</title><rect x="492.9" y="1765" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="495.85" y="1775.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,270,831 samples, 0.01%)</title><rect x="214.2" y="1557" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="217.18" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1301" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1311.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (85,489,446 samples, 0.10%)</title><rect x="130.8" y="1557" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="133.78" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (32,370,689 samples, 0.04%)</title><rect x="500.3" y="1749" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="503.28" y="1759.5" ></text>
</g>
<g >
<title>avc_lookup (10,556,429 samples, 0.01%)</title><rect x="216.7" y="1525" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="219.74" y="1535.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (15,286,066 samples, 0.02%)</title><rect x="565.0" y="1285" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="567.99" y="1295.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (10,255,703 samples, 0.01%)</title><rect x="298.9" y="1893" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="301.89" y="1903.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2,939,883,958 samples, 3.53%)</title><rect x="978.4" y="1893" width="41.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="981.43" y="1903.5" >std..</text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,026,006 samples, 0.01%)</title><rect x="1184.9" y="2021" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1187.88" y="2031.5" ></text>
</g>
<g >
<title>sk_reset_timer (8,063,928 samples, 0.01%)</title><rect x="868.9" y="1541" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="871.92" y="1551.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (8,075,699 samples, 0.01%)</title><rect x="81.3" y="1733" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="84.30" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="373" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1125" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1002.78" y="1135.5" ></text>
</g>
<g >
<title>handle_softirqs (11,121,246 samples, 0.01%)</title><rect x="398.9" y="1525" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="401.95" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_erase (32,102,667 samples, 0.04%)</title><rect x="636.8" y="1749" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="639.77" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (9,889,416 samples, 0.01%)</title><rect x="1142.2" y="1797" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.22" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_established (7,562,544 samples, 0.01%)</title><rect x="141.6" y="1461" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="144.63" y="1471.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (8,091,566 samples, 0.01%)</title><rect x="200.3" y="1717" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="203.26" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (12,743,735 samples, 0.02%)</title><rect x="589.6" y="1909" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="592.61" y="1919.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (11,401,513 samples, 0.01%)</title><rect x="1082.9" y="1701" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1085.92" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (46,798,044 samples, 0.06%)</title><rect x="58.1" y="1685" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="61.15" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (227,348,531 samples, 0.27%)</title><rect x="349.8" y="1749" width="3.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="352.76" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,687,757 samples, 0.02%)</title><rect x="421.2" y="1429" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="424.21" y="1439.5" ></text>
</g>
<g >
<title>net_rx_action (10,062,056 samples, 0.01%)</title><rect x="183.2" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="186.20" y="1599.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (20,803,673 samples, 0.02%)</title><rect x="62.9" y="1701" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="65.86" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_M_next (37,521,535 samples, 0.05%)</title><rect x="544.4" y="1717" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="547.38" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (307,239,313 samples, 0.37%)</title><rect x="603.1" y="1669" width="4.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="606.10" y="1679.5" ></text>
</g>
<g >
<title>inet_recvmsg (314,362,094 samples, 0.38%)</title><rect x="678.4" y="1669" width="4.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="681.40" y="1679.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1301" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="295.80" y="1311.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,856,379 samples, 0.01%)</title><rect x="820.8" y="1733" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="823.80" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,507,946 samples, 0.01%)</title><rect x="193.9" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="196.87" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="117" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (45,047,726 samples, 0.05%)</title><rect x="172.3" y="1717" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="175.28" y="1727.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,725,984 samples, 0.01%)</title><rect x="1096.4" y="1573" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1099.44" y="1583.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (15,337,349 samples, 0.02%)</title><rect x="105.6" y="1781" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="108.63" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="229" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="239.5" ></text>
</g>
<g >
<title>__secure_computing (11,064,406 samples, 0.01%)</title><rect x="246.1" y="1605" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="249.13" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (16,281,244 samples, 0.02%)</title><rect x="108.0" y="1765" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="110.96" y="1775.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (14,179,539 samples, 0.02%)</title><rect x="616.1" y="1621" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="619.15" y="1631.5" ></text>
</g>
<g >
<title>memset_orig (84,452,895 samples, 0.10%)</title><rect x="802.0" y="1621" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="805.05" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (22,735,520 samples, 0.03%)</title><rect x="401.5" y="1749" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="404.51" y="1759.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (30,697,137 samples, 0.04%)</title><rect x="834.7" y="1637" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="837.67" y="1647.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (50,513,272 samples, 0.06%)</title><rect x="392.6" y="1797" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="395.59" y="1807.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (133,396,646 samples, 0.16%)</title><rect x="288.2" y="1797" width="1.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="291.23" y="1807.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (47,077,766 samples, 0.06%)</title><rect x="596.2" y="2053" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="599.24" y="2063.5" ></text>
</g>
<g >
<title>do_syscall_64 (189,223,244 samples, 0.23%)</title><rect x="396.9" y="1653" width="2.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="399.89" y="1663.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (23,177,503 samples, 0.03%)</title><rect x="693.7" y="1733" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="696.73" y="1743.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (156,958,669 samples, 0.19%)</title><rect x="716.4" y="1381" width="2.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="719.39" y="1391.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,871,799 samples, 0.01%)</title><rect x="45.2" y="1637" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="48.22" y="1647.5" ></text>
</g>
<g >
<title>handle_softirqs (7,076,822 samples, 0.01%)</title><rect x="1012.0" y="1397" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1015.00" y="1407.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (7,982,884 samples, 0.01%)</title><rect x="310.1" y="1877" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="313.08" y="1887.5" ></text>
</g>
<g >
<title>netvsc_send (102,168,467 samples, 0.12%)</title><rect x="1158.5" y="1349" width="1.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1161.54" y="1359.5" ></text>
</g>
<g >
<title>[web-server] (10,128,338 samples, 0.01%)</title><rect x="344.9" y="1765" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="347.88" y="1775.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1045" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="430.41" y="1055.5" ></text>
</g>
<g >
<title>tcp_push (964,194,348 samples, 1.16%)</title><rect x="417.1" y="1605" width="13.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="420.09" y="1615.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (9,753,802 samples, 0.01%)</title><rect x="317.5" y="1717" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="320.53" y="1727.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (12,795,137 samples, 0.02%)</title><rect x="363.3" y="1589" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="366.25" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (7,329,179 samples, 0.01%)</title><rect x="1124.4" y="1797" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1127.41" y="1807.5" ></text>
</g>
<g >
<title>__napi_poll (7,648,638 samples, 0.01%)</title><rect x="857.2" y="1333" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="860.21" y="1343.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,364,083 samples, 0.01%)</title><rect x="1047.1" y="1541" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1050.12" y="1551.5" ></text>
</g>
<g >
<title>napi_gro_receive (10,503,795 samples, 0.01%)</title><rect x="440.3" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="443.28" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1461" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="295.80" y="1471.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (9,132,117 samples, 0.01%)</title><rect x="1024.2" y="1429" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1027.24" y="1439.5" ></text>
</g>
<g >
<title>selinux_file_permission (8,811,082 samples, 0.01%)</title><rect x="386.5" y="1685" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="389.53" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (7,689,887 samples, 0.01%)</title><rect x="733.5" y="1621" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="736.47" y="1631.5" ></text>
</g>
<g >
<title>napi_complete_done (7,661,320 samples, 0.01%)</title><rect x="178.2" y="1637" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="181.23" y="1647.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (8,902,703 samples, 0.01%)</title><rect x="14.0" y="1429" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="17.03" y="1439.5" ></text>
</g>
<g >
<title>std::function&lt;void  (421,741,183 samples, 0.51%)</title><rect x="12.6" y="1765" width="6.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="15.65" y="1775.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,758,984 samples, 0.01%)</title><rect x="1095.0" y="1589" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1097.97" y="1599.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (35,863,330 samples, 0.04%)</title><rect x="229.3" y="1797" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="232.35" y="1807.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (16,784,169 samples, 0.02%)</title><rect x="410.9" y="1749" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="413.91" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (16,216,414 samples, 0.02%)</title><rect x="988.1" y="1781" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="991.12" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,922,218 samples, 0.01%)</title><rect x="966.4" y="1605" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="969.44" y="1615.5" ></text>
</g>
<g >
<title>tcp_rcv_established (7,461,868 samples, 0.01%)</title><rect x="672.4" y="1493" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="675.43" y="1503.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (12,063,653 samples, 0.01%)</title><rect x="679.0" y="1589" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="682.00" y="1599.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (8,566,871 samples, 0.01%)</title><rect x="247.5" y="1397" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="250.52" y="1407.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (44,162,939 samples, 0.05%)</title><rect x="1111.3" y="1717" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1114.28" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (10,602,076 samples, 0.01%)</title><rect x="60.9" y="1749" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="63.90" y="1759.5" ></text>
</g>
<g >
<title>netvsc_poll (14,255,933 samples, 0.02%)</title><rect x="244.8" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="247.84" y="1567.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (41,913,046 samples, 0.05%)</title><rect x="351.4" y="1685" width="0.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="354.36" y="1695.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (320,300,133 samples, 0.38%)</title><rect x="842.3" y="1797" width="4.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="845.27" y="1807.5" ></text>
</g>
<g >
<title>netvsc_send (104,137,568 samples, 0.12%)</title><rect x="717.0" y="1349" width="1.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="720.03" y="1359.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7,589,194 samples, 0.01%)</title><rect x="89.8" y="1333" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="92.83" y="1343.5" ></text>
</g>
<g >
<title>__napi_poll (17,676,026 samples, 0.02%)</title><rect x="360.2" y="1605" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="363.21" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;char*&gt; (138,007,474 samples, 0.17%)</title><rect x="522.0" y="1781" width="1.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="524.98" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (7,086,054 samples, 0.01%)</title><rect x="546.2" y="1765" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="549.19" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (85,663,521 samples, 0.10%)</title><rect x="516.0" y="1765" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="518.97" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (7,968,086 samples, 0.01%)</title><rect x="1167.1" y="1541" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1170.05" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (23,027,207 samples, 0.03%)</title><rect x="759.1" y="1749" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="762.09" y="1759.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (8,395,665 samples, 0.01%)</title><rect x="551.3" y="1717" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="554.30" y="1727.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,228,251 samples, 0.01%)</title><rect x="382.7" y="1557" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="385.71" y="1567.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (14,749,825 samples, 0.02%)</title><rect x="619.0" y="1765" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="621.96" y="1775.5" ></text>
</g>
<g >
<title>inet_recvmsg (334,739,935 samples, 0.40%)</title><rect x="89.2" y="1669" width="4.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="92.24" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (10,436,407 samples, 0.01%)</title><rect x="584.4" y="1573" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="587.43" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (12,228,573 samples, 0.01%)</title><rect x="1119.9" y="1621" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1122.93" y="1631.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (25,391,158 samples, 0.03%)</title><rect x="942.7" y="1733" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="945.75" y="1743.5" ></text>
</g>
<g >
<title>nf_conntrack_in (139,154,090 samples, 0.17%)</title><rect x="1003.5" y="1445" width="2.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1006.54" y="1455.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (7,219,502 samples, 0.01%)</title><rect x="149.1" y="1925" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="152.10" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (14,642,132 samples, 0.02%)</title><rect x="249.4" y="1669" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="252.45" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7,155,189 samples, 0.01%)</title><rect x="311.8" y="1381" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="314.78" y="1391.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (12,313,604 samples, 0.01%)</title><rect x="229.6" y="1637" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="232.60" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (17,972,970 samples, 0.02%)</title><rect x="186.6" y="1765" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="189.59" y="1775.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (12,881,409 samples, 0.02%)</title><rect x="904.3" y="1733" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="907.29" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1445" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1455.5" ></text>
</g>
<g >
<title>lock_sock_nested (17,588,441 samples, 0.02%)</title><rect x="556.0" y="1621" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="559.00" y="1631.5" ></text>
</g>
<g >
<title>handle_softirqs (15,586,895 samples, 0.02%)</title><rect x="552.7" y="1733" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="555.69" y="1743.5" ></text>
</g>
<g >
<title>__virt_addr_valid (10,691,008 samples, 0.01%)</title><rect x="707.2" y="1589" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="710.24" y="1599.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::find (103,592,984 samples, 0.12%)</title><rect x="146.7" y="1909" width="1.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="149.69" y="1919.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (14,180,638 samples, 0.02%)</title><rect x="260.9" y="1749" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="263.94" y="1759.5" ></text>
</g>
<g >
<title>__wake_up_common (7,513,023 samples, 0.01%)</title><rect x="1175.6" y="1317" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1178.59" y="1327.5" ></text>
</g>
<g >
<title>irq_exit_rcu (14,435,564 samples, 0.02%)</title><rect x="14.0" y="1589" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="17.03" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (12,390,735 samples, 0.01%)</title><rect x="13.2" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="16.24" y="1599.5" ></text>
</g>
<g >
<title>security_file_permission (65,175,446 samples, 0.08%)</title><rect x="725.6" y="1669" width="0.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="728.56" y="1679.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,246,094 samples, 0.01%)</title><rect x="519.4" y="1717" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="522.40" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_last_not_of (15,524,420 samples, 0.02%)</title><rect x="335.5" y="1765" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="338.47" y="1775.5" ></text>
</g>
<g >
<title>newidle_balance (9,709,252 samples, 0.01%)</title><rect x="880.9" y="1733" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="883.87" y="1743.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,605,581 samples, 0.01%)</title><rect x="1101.3" y="1541" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1104.33" y="1551.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1989" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="747.77" y="1999.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::_M_erase_at_end (25,038,227 samples, 0.03%)</title><rect x="740.1" y="1909" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="743.11" y="1919.5" ></text>
</g>
<g >
<title>[web-server] (13,043,909 samples, 0.02%)</title><rect x="222.8" y="1781" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="225.77" y="1791.5" ></text>
</g>
<g >
<title>__napi_poll (9,878,163 samples, 0.01%)</title><rect x="1163.1" y="1365" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1166.06" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (741,946,622 samples, 0.89%)</title><rect x="230.4" y="1797" width="10.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="233.39" y="1807.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (19,936,469 samples, 0.02%)</title><rect x="1085.7" y="1653" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1088.71" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (314,751,791 samples, 0.38%)</title><rect x="621.7" y="1701" width="4.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="624.67" y="1711.5" ></text>
</g>
<g >
<title>__strlen_avx2 (18,723,952 samples, 0.02%)</title><rect x="153.1" y="2037" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="156.12" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (14,448,922 samples, 0.02%)</title><rect x="999.7" y="1525" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1002.74" y="1535.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,428,225 samples, 0.01%)</title><rect x="974.1" y="1509" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="977.10" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (111,833,289 samples, 0.13%)</title><rect x="51.0" y="1765" width="1.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="54.02" y="1775.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (7,284,516 samples, 0.01%)</title><rect x="20.1" y="1733" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="23.11" y="1743.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (107,529,163 samples, 0.13%)</title><rect x="1129.8" y="1621" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1132.79" y="1631.5" ></text>
</g>
<g >
<title>netvsc_poll (8,033,129 samples, 0.01%)</title><rect x="1173.7" y="1685" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1176.72" y="1695.5" ></text>
</g>
<g >
<title>__napi_poll (7,407,017 samples, 0.01%)</title><rect x="1079.0" y="1669" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1082.03" y="1679.5" ></text>
</g>
<g >
<title>ip_queue_xmit (764,341,873 samples, 0.92%)</title><rect x="855.3" y="1541" width="10.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="858.33" y="1551.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (9,286,410 samples, 0.01%)</title><rect x="696.5" y="1765" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="699.48" y="1775.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (21,451,363 samples, 0.03%)</title><rect x="389.2" y="1621" width="0.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="392.24" y="1631.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*, std::shared_ptr&lt;Channel&gt; &gt; (33,468,814 samples, 0.04%)</title><rect x="1033.1" y="1893" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1036.11" y="1903.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc_cs (9,946,245 samples, 0.01%)</title><rect x="975.0" y="1589" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="977.99" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="405" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="415.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (8,862,351 samples, 0.01%)</title><rect x="693.9" y="1653" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="696.92" y="1663.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,162,330 samples, 0.01%)</title><rect x="711.1" y="1381" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="714.14" y="1391.5" ></text>
</g>
<g >
<title>__fdget_pos (31,146,453 samples, 0.04%)</title><rect x="996.6" y="1717" width="0.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="999.63" y="1727.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (9,039,659 samples, 0.01%)</title><rect x="543.6" y="1701" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="546.60" y="1711.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (24,648,040 samples, 0.03%)</title><rect x="109.1" y="1685" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="112.12" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (16,641,682 samples, 0.02%)</title><rect x="357.7" y="1589" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="360.73" y="1599.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,358,922 samples, 0.01%)</title><rect x="253.0" y="1781" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="255.98" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (16,137,354 samples, 0.02%)</title><rect x="339.8" y="1733" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="342.78" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_established (9,656,570 samples, 0.01%)</title><rect x="421.3" y="1125" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="424.27" y="1135.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (14,616,250 samples, 0.02%)</title><rect x="90.4" y="1621" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="93.41" y="1631.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,514,153 samples, 0.01%)</title><rect x="233.3" y="1509" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="236.32" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_lock (12,594,606 samples, 0.02%)</title><rect x="571.3" y="1477" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="574.32" y="1487.5" ></text>
</g>
<g >
<title>putname (20,037,650 samples, 0.02%)</title><rect x="804.1" y="1653" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="807.12" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (11,292,235 samples, 0.01%)</title><rect x="243.2" y="1813" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="246.20" y="1823.5" ></text>
</g>
<g >
<title>nf_hook_slow (54,663,895 samples, 0.07%)</title><rect x="1012.0" y="1477" width="0.7" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1014.97" y="1487.5" ></text>
</g>
<g >
<title>ip_local_deliver (12,710,587 samples, 0.02%)</title><rect x="272.7" y="1205" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="275.66" y="1215.5" ></text>
</g>
<g >
<title>__strlen_avx2 (9,291,668 samples, 0.01%)</title><rect x="843.1" y="1765" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="846.08" y="1775.5" ></text>
</g>
<g >
<title>__GI___writev (1,866,577,474 samples, 2.24%)</title><rect x="259.5" y="1813" width="26.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="262.53" y="1823.5" >_..</text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1477" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1621" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1631.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (178,195,349 samples, 0.21%)</title><rect x="274.5" y="1397" width="2.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="277.46" y="1407.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (10,627,597 samples, 0.01%)</title><rect x="1175.6" y="1733" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1178.57" y="1743.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (9,163,895 samples, 0.01%)</title><rect x="861.3" y="1285" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="864.29" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (65,984,374 samples, 0.08%)</title><rect x="842.8" y="1781" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="845.81" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1589" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1599.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,785,662 samples, 0.01%)</title><rect x="865.1" y="1413" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="868.14" y="1423.5" ></text>
</g>
<g >
<title>netvsc_poll (44,960,735 samples, 0.05%)</title><rect x="714.8" y="1317" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="717.79" y="1327.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (12,180,482 samples, 0.01%)</title><rect x="141.2" y="1621" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="144.21" y="1631.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (9,140,537 samples, 0.01%)</title><rect x="796.7" y="1637" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="799.75" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (12,646,891 samples, 0.02%)</title><rect x="818.8" y="1653" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="821.85" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (10,907,935 samples, 0.01%)</title><rect x="502.6" y="1749" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="505.63" y="1759.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,612,601 samples, 0.01%)</title><rect x="84.9" y="1701" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="87.90" y="1711.5" ></text>
</g>
<g >
<title>[web-server] (8,621,157 samples, 0.01%)</title><rect x="357.3" y="1765" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="360.29" y="1775.5" ></text>
</g>
<g >
<title>vmbus_next_request_id (22,443,268 samples, 0.03%)</title><rect x="426.2" y="1285" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="429.18" y="1295.5" ></text>
</g>
<g >
<title>irq_exit_rcu (18,145,193 samples, 0.02%)</title><rect x="229.6" y="1765" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="232.60" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (16,666,345 samples, 0.02%)</title><rect x="229.6" y="1701" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="232.60" y="1711.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (16,541,864 samples, 0.02%)</title><rect x="184.5" y="1685" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="187.51" y="1695.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (37,468,630 samples, 0.04%)</title><rect x="937.0" y="1685" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="939.96" y="1695.5" ></text>
</g>
<g >
<title>netvsc_send_pkt (79,594,109 samples, 0.10%)</title><rect x="425.5" y="1333" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="428.46" y="1343.5" ></text>
</g>
<g >
<title>netif_skb_features (8,599,276 samples, 0.01%)</title><rect x="426.7" y="1365" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="429.71" y="1375.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (19,277,707 samples, 0.02%)</title><rect x="311.7" y="1621" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="314.74" y="1631.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (16,657,271 samples, 0.02%)</title><rect x="532.4" y="1621" width="0.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="535.44" y="1631.5" ></text>
</g>
<g >
<title>__napi_poll (7,210,592 samples, 0.01%)</title><rect x="116.0" y="1509" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="119.02" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (7,468,225 samples, 0.01%)</title><rect x="347.8" y="1669" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="350.82" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1381" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="928.84" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_lock (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1221" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="925.16" y="1231.5" ></text>
</g>
<g >
<title>Channel::OnEvents (8,977,050,068 samples, 10.77%)</title><rect x="159.2" y="1925" width="127.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="162.16" y="1935.5" >Channel::OnEvents</text>
</g>
<g >
<title>__x64_sys_epoll_ctl (124,858,160 samples, 0.15%)</title><rect x="246.4" y="1621" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="249.41" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (27,686,813 samples, 0.03%)</title><rect x="338.0" y="1749" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="341.00" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1957" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1967.5" ></text>
</g>
<g >
<title>TimerManager::Tick (46,525,578 samples, 0.06%)</title><rect x="297.6" y="1925" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="300.58" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="229" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1733" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="171.38" y="1743.5" ></text>
</g>
<g >
<title>rep_movs_alternative (44,621,938 samples, 0.05%)</title><rect x="557.3" y="1589" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="560.28" y="1599.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (9,008,203 samples, 0.01%)</title><rect x="174.7" y="1621" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="177.70" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1157" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1167.5" ></text>
</g>
<g >
<title>x64_sys_call (612,023,496 samples, 0.73%)</title><rect x="1115.7" y="1765" width="8.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1118.68" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, true&gt;::operator (7,816,524 samples, 0.01%)</title><rect x="473.3" y="1717" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="476.32" y="1727.5" ></text>
</g>
<g >
<title>__x64_sys_read (533,671,155 samples, 0.64%)</title><rect x="527.5" y="1749" width="7.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="530.51" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1269" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1279.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_begin (10,375,101 samples, 0.01%)</title><rect x="318.9" y="1733" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="321.86" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="149" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="159.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (10,197,229 samples, 0.01%)</title><rect x="1001.7" y="1605" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1004.70" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::push_back (14,165,100 samples, 0.02%)</title><rect x="1031.6" y="1909" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1034.57" y="1919.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7,435,122 samples, 0.01%)</title><rect x="839.3" y="1749" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="842.31" y="1759.5" ></text>
</g>
<g >
<title>file_has_perm (16,447,219 samples, 0.02%)</title><rect x="530.0" y="1653" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="533.01" y="1663.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,734,143 samples, 0.01%)</title><rect x="848.9" y="1557" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="851.89" y="1567.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_begin (11,978,727 samples, 0.01%)</title><rect x="1051.2" y="1733" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1054.24" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (8,010,118 samples, 0.01%)</title><rect x="759.5" y="1669" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="762.52" y="1679.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (19,660,273 samples, 0.02%)</title><rect x="505.6" y="1701" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="508.56" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="597" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="607.5" ></text>
</g>
<g >
<title>EventLoop::Loop (9,847,187,162 samples, 11.82%)</title><rect x="1042.4" y="1941" width="139.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1045.36" y="1951.5" >EventLoop::Loop</text>
</g>
<g >
<title>sock_recvmsg (373,478,261 samples, 0.45%)</title><rect x="824.6" y="1685" width="5.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="827.55" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (12,743,735 samples, 0.02%)</title><rect x="589.6" y="1893" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="592.61" y="1903.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (31,782,619 samples, 0.04%)</title><rect x="938.3" y="1701" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="941.31" y="1711.5" ></text>
</g>
<g >
<title>handle_softirqs (10,060,443 samples, 0.01%)</title><rect x="234.8" y="1589" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="237.84" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="741" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="751.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (215,010,362 samples, 0.26%)</title><rect x="679.7" y="1637" width="3.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="682.67" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (10,655,492 samples, 0.01%)</title><rect x="958.5" y="1781" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="961.50" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (36,056,186 samples, 0.04%)</title><rect x="814.1" y="1781" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="817.12" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1861" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1871.5" ></text>
</g>
<g >
<title>handle_dots (27,193,694 samples, 0.03%)</title><rect x="806.7" y="1573" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="809.65" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="741" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="751.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (9,746,753 samples, 0.01%)</title><rect x="67.0" y="1605" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="70.03" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,685,678,874 samples, 2.02%)</title><rect x="1143.9" y="1781" width="23.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1146.90" y="1791.5" >d..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (24,346,562 samples, 0.03%)</title><rect x="907.0" y="1701" width="0.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="910.04" y="1711.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (10,999,321 samples, 0.01%)</title><rect x="611.9" y="1733" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="614.92" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1333" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1343.5" ></text>
</g>
<g >
<title>x64_sys_call (213,605,659 samples, 0.26%)</title><rect x="754.4" y="1637" width="3.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="757.38" y="1647.5" ></text>
</g>
<g >
<title>tcp_current_mss (11,906,239 samples, 0.01%)</title><rect x="281.4" y="1589" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="284.37" y="1599.5" ></text>
</g>
<g >
<title>__napi_poll (19,829,493 samples, 0.02%)</title><rect x="818.8" y="1701" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="821.82" y="1711.5" ></text>
</g>
<g >
<title>napi_complete_done (11,059,963 samples, 0.01%)</title><rect x="672.4" y="1669" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="675.38" y="1679.5" ></text>
</g>
<g >
<title>do_epoll_wait (408,106,898 samples, 0.49%)</title><rect x="729.4" y="1829" width="5.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="732.39" y="1839.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (7,376,461 samples, 0.01%)</title><rect x="699.5" y="1669" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="702.46" y="1679.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (11,337,883 samples, 0.01%)</title><rect x="18.6" y="1765" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="21.62" y="1775.5" ></text>
</g>
<g >
<title>_raw_write_unlock_irq (43,807,215 samples, 0.05%)</title><rect x="141.2" y="1813" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="144.18" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1765" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1775.5" ></text>
</g>
<g >
<title>lock_sock_nested (27,758,752 samples, 0.03%)</title><rect x="824.8" y="1637" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="827.76" y="1647.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (16,419,506 samples, 0.02%)</title><rect x="162.0" y="1621" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="165.02" y="1631.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (7,398,694 samples, 0.01%)</title><rect x="280.2" y="1477" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="283.22" y="1487.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (9,821,488 samples, 0.01%)</title><rect x="388.0" y="1605" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="391.04" y="1615.5" ></text>
</g>
<g >
<title>napi_complete_done (12,313,604 samples, 0.01%)</title><rect x="229.6" y="1669" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="232.60" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (73,044,904 samples, 0.09%)</title><rect x="257.5" y="1717" width="1.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="260.47" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1365" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1375.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (13,834,264 samples, 0.02%)</title><rect x="650.2" y="1557" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="653.16" y="1567.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (19,230,580 samples, 0.02%)</title><rect x="552.6" y="1797" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="555.64" y="1807.5" ></text>
</g>
<g >
<title>netvsc_poll (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1573" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="186.34" y="1583.5" ></text>
</g>
<g >
<title>HttpRouter::Route (1,353,455,257 samples, 1.62%)</title><rect x="56.5" y="1781" width="19.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="59.52" y="1791.5" ></text>
</g>
<g >
<title>epoll_ctl (7,805,407 samples, 0.01%)</title><rect x="701.5" y="1733" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="704.49" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="693" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="703.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,304,849 samples, 0.01%)</title><rect x="100.6" y="1541" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="103.59" y="1551.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (7,083,157 samples, 0.01%)</title><rect x="379.6" y="1717" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="382.57" y="1727.5" ></text>
</g>
<g >
<title>netvsc_poll (7,370,161 samples, 0.01%)</title><rect x="1144.3" y="1637" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1147.28" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (10,146,324 samples, 0.01%)</title><rect x="763.1" y="1685" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="766.08" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (13,795,151 samples, 0.02%)</title><rect x="552.9" y="1797" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="555.93" y="1807.5" ></text>
</g>
<g >
<title>netvsc_poll (8,075,743 samples, 0.01%)</title><rect x="236.4" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="239.39" y="1519.5" ></text>
</g>
<g >
<title>do_iter_write (1,516,061,507 samples, 1.82%)</title><rect x="705.1" y="1701" width="21.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="708.10" y="1711.5" >d..</text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (29,127,084 samples, 0.03%)</title><rect x="581.8" y="1797" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="584.80" y="1807.5" ></text>
</g>
<g >
<title>vmbus_next_request_id (14,199,173 samples, 0.02%)</title><rect x="718.1" y="1285" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="721.11" y="1295.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (41,676,807 samples, 0.05%)</title><rect x="434.9" y="1797" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="437.87" y="1807.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (387,306,240 samples, 0.46%)</title><rect x="1155.1" y="1429" width="5.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1158.14" y="1439.5" ></text>
</g>
<g >
<title>std::function&lt;void  (8,154,264 samples, 0.01%)</title><rect x="377.0" y="1797" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="380.03" y="1807.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::tuple&lt;true, true&gt; (7,161,136 samples, 0.01%)</title><rect x="325.7" y="1733" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="328.69" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (10,562,673 samples, 0.01%)</title><rect x="639.3" y="1765" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="642.27" y="1775.5" ></text>
</g>
<g >
<title>inode_security (12,827,283 samples, 0.02%)</title><rect x="1118.6" y="1653" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1121.58" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (7,079,510 samples, 0.01%)</title><rect x="649.5" y="1749" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="652.51" y="1759.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (22,047,869 samples, 0.03%)</title><rect x="594.4" y="2053" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="597.37" y="2063.5" ></text>
</g>
<g >
<title>handle_softirqs (9,447,309 samples, 0.01%)</title><rect x="224.2" y="1701" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="227.20" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1589" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (24,874,451 samples, 0.03%)</title><rect x="1007.4" y="1285" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1010.40" y="1295.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,105,077 samples, 0.01%)</title><rect x="539.7" y="1573" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="542.70" y="1583.5" ></text>
</g>
<g >
<title>tcp_push (1,024,038,922 samples, 1.23%)</title><rect x="118.2" y="1605" width="14.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="121.22" y="1615.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,649,911 samples, 0.01%)</title><rect x="1143.2" y="1749" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1146.23" y="1759.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (375,235,760 samples, 0.45%)</title><rect x="459.8" y="1701" width="5.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="462.81" y="1711.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7,621,093 samples, 0.01%)</title><rect x="254.6" y="1765" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="257.64" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1733" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1743.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (8,639,393 samples, 0.01%)</title><rect x="934.8" y="1653" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="937.84" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (11,329,297 samples, 0.01%)</title><rect x="993.6" y="1765" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="996.64" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (8,814,896 samples, 0.01%)</title><rect x="1130.6" y="1509" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1133.63" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (15,783,368 samples, 0.02%)</title><rect x="861.0" y="1141" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="863.98" y="1151.5" ></text>
</g>
<g >
<title>selinux_socket_recvmsg (42,818,345 samples, 0.05%)</title><rect x="1123.4" y="1653" width="0.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1126.41" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::clear (33,468,814 samples, 0.04%)</title><rect x="1033.1" y="1925" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1036.11" y="1935.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (9,807,177 samples, 0.01%)</title><rect x="929.7" y="1749" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="932.68" y="1759.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (536,108,955 samples, 0.64%)</title><rect x="12.5" y="1797" width="7.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="15.45" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (7,627,962 samples, 0.01%)</title><rect x="917.9" y="1573" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="920.93" y="1583.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (299,569,160 samples, 0.36%)</title><rect x="780.3" y="1749" width="4.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="783.32" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (119,448,831 samples, 0.14%)</title><rect x="590.9" y="2037" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="593.93" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1477" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1487.5" ></text>
</g>
<g >
<title>__napi_poll (10,398,359 samples, 0.01%)</title><rect x="505.4" y="1605" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="508.36" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1621" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (10,357,116 samples, 0.01%)</title><rect x="324.4" y="1701" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="327.37" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1061" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (53,343,610 samples, 0.06%)</title><rect x="471.2" y="1669" width="0.7" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="474.16" y="1679.5" ></text>
</g>
<g >
<title>__virt_addr_valid (26,050,729 samples, 0.03%)</title><rect x="1097.0" y="1589" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1099.97" y="1599.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (59,950,352 samples, 0.07%)</title><rect x="95.9" y="1797" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="98.91" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (26,813,961 samples, 0.03%)</title><rect x="124.8" y="1205" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="127.78" y="1215.5" ></text>
</g>
<g >
<title>rndis_filter_receive (8,489,624 samples, 0.01%)</title><rect x="358.0" y="1621" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="360.97" y="1631.5" ></text>
</g>
<g >
<title>do_syscall_64 (476,011,693 samples, 0.57%)</title><rect x="287.3" y="1877" width="6.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="290.26" y="1887.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9,577,744 samples, 0.01%)</title><rect x="225.9" y="1781" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="228.94" y="1791.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (33,905,809 samples, 0.04%)</title><rect x="1090.7" y="1733" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1093.70" y="1743.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (86,444,584 samples, 0.10%)</title><rect x="1088.0" y="1749" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1091.03" y="1759.5" ></text>
</g>
<g >
<title>HttpResponse::Clear (15,071,959 samples, 0.02%)</title><rect x="841.5" y="1781" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="844.54" y="1791.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (163,719,210 samples, 0.20%)</title><rect x="579.3" y="1813" width="2.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="582.30" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1253" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1263.5" ></text>
</g>
<g >
<title>sock_def_readable (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1253" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="951.32" y="1263.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (395,153,126 samples, 0.47%)</title><rect x="161.7" y="1733" width="5.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="164.69" y="1743.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (8,925,469 samples, 0.01%)</title><rect x="552.7" y="1605" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="555.71" y="1615.5" ></text>
</g>
<g >
<title>__napi_poll (8,236,466 samples, 0.01%)</title><rect x="158.3" y="1941" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="161.26" y="1951.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (16,694,806 samples, 0.02%)</title><rect x="1007.5" y="1173" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1010.47" y="1183.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (64,246,136 samples, 0.08%)</title><rect x="408.3" y="1717" width="0.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="411.31" y="1727.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (10,730,749 samples, 0.01%)</title><rect x="69.4" y="1541" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="72.36" y="1551.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (400,650,877 samples, 0.48%)</title><rect x="395.5" y="1781" width="5.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="398.51" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (9,995,007 samples, 0.01%)</title><rect x="373.0" y="1765" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="375.95" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (13,019,765 samples, 0.02%)</title><rect x="798.1" y="1525" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="801.09" y="1535.5" ></text>
</g>
<g >
<title>__napi_poll (15,545,057 samples, 0.02%)</title><rect x="65.7" y="1509" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="68.72" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (24,555,883 samples, 0.03%)</title><rect x="650.1" y="1669" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="653.14" y="1679.5" ></text>
</g>
<g >
<title>napi_complete_done (7,734,143 samples, 0.01%)</title><rect x="848.9" y="1621" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="851.89" y="1631.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (307,564,050 samples, 0.37%)</title><rect x="697.1" y="1797" width="4.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="700.11" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (39,169,916 samples, 0.05%)</title><rect x="1048.1" y="1669" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1051.13" y="1679.5" ></text>
</g>
<g >
<title>rep_movs_alternative (26,539,185 samples, 0.03%)</title><rect x="390.2" y="1557" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="393.22" y="1567.5" ></text>
</g>
<g >
<title>__fget_light (46,175,510 samples, 0.06%)</title><rect x="704.1" y="1701" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="707.10" y="1711.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt; &gt; (42,765,284 samples, 0.05%)</title><rect x="590.0" y="1845" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="593.03" y="1855.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7,064,650 samples, 0.01%)</title><rect x="901.7" y="1333" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="904.71" y="1343.5" ></text>
</g>
<g >
<title>netvsc_poll (7,147,124 samples, 0.01%)</title><rect x="429.5" y="1349" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="432.49" y="1359.5" ></text>
</g>
<g >
<title>netvsc_poll (12,180,482 samples, 0.01%)</title><rect x="141.2" y="1685" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="144.21" y="1695.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (7,136,225 samples, 0.01%)</title><rect x="499.2" y="1717" width="0.1" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="502.21" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="655.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (28,251,859 samples, 0.03%)</title><rect x="944.8" y="1701" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="947.78" y="1711.5" ></text>
</g>
<g >
<title>sock_poll (16,302,032 samples, 0.02%)</title><rect x="1047.3" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1050.31" y="1583.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (8,882,325 samples, 0.01%)</title><rect x="1005.2" y="1397" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1008.21" y="1407.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,151,242 samples, 0.01%)</title><rect x="584.5" y="1525" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="587.48" y="1535.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (23,487,191 samples, 0.03%)</title><rect x="1133.6" y="1749" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1136.56" y="1759.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (16,168,766 samples, 0.02%)</title><rect x="971.1" y="1589" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="974.08" y="1599.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (378,027,349 samples, 0.45%)</title><rect x="171.5" y="1749" width="5.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="174.54" y="1759.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (8,897,934 samples, 0.01%)</title><rect x="985.7" y="1781" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="988.65" y="1791.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,635,905 samples, 0.02%)</title><rect x="296.3" y="1845" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="299.29" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (38,704,910 samples, 0.05%)</title><rect x="23.3" y="1717" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="26.26" y="1727.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (7,937,263 samples, 0.01%)</title><rect x="352.4" y="1685" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="355.40" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (30,302,800 samples, 0.04%)</title><rect x="1133.1" y="1765" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1136.10" y="1775.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (16,115,954 samples, 0.02%)</title><rect x="1115.2" y="1733" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1118.20" y="1743.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (11,969,780 samples, 0.01%)</title><rect x="987.6" y="1781" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="990.56" y="1791.5" ></text>
</g>
<g >
<title>__napi_poll (8,364,083 samples, 0.01%)</title><rect x="1047.1" y="1493" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1050.12" y="1503.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (12,710,587 samples, 0.02%)</title><rect x="272.7" y="1157" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="275.66" y="1167.5" ></text>
</g>
<g >
<title>netvsc_poll (19,460,331 samples, 0.02%)</title><rect x="62.9" y="1589" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="65.86" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (8,010,118 samples, 0.01%)</title><rect x="759.5" y="1765" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="762.52" y="1775.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,603,822 samples, 0.01%)</title><rect x="455.5" y="2037" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="458.45" y="2047.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,030,291 samples, 0.01%)</title><rect x="246.0" y="1573" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="248.98" y="1583.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (9,857,769,951 samples, 11.83%)</title><rect x="1042.3" y="1989" width="139.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1045.33" y="1999.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>[unknown] (9,242,440 samples, 0.01%)</title><rect x="960.7" y="1765" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="963.70" y="1775.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (12,322,232 samples, 0.01%)</title><rect x="231.7" y="1541" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="234.71" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="725" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="735.5" ></text>
</g>
<g >
<title>x64_sys_call (127,797,394 samples, 0.15%)</title><rect x="981.7" y="1637" width="1.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="984.65" y="1647.5" ></text>
</g>
<g >
<title>loopthread6 (10,366,203,252 samples, 12.44%)</title><rect x="895.3" y="2069" width="146.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="898.28" y="2079.5" >loopthread6</text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="613" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="623.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1973" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1983.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,447,309 samples, 0.01%)</title><rect x="224.2" y="1749" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="227.20" y="1759.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (35,746,950 samples, 0.04%)</title><rect x="452.4" y="2053" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="455.35" y="2063.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (9,949,587 samples, 0.01%)</title><rect x="1032.7" y="1925" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1035.67" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (30,306,568 samples, 0.04%)</title><rect x="149.8" y="1829" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="152.75" y="1839.5" ></text>
</g>
<g >
<title>napi_complete_done (8,780,159 samples, 0.01%)</title><rect x="123.0" y="1301" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="125.99" y="1311.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (26,396,991 samples, 0.03%)</title><rect x="650.1" y="1749" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="653.11" y="1759.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (11,628,825 samples, 0.01%)</title><rect x="905.0" y="1733" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="908.01" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (225,441,445 samples, 0.27%)</title><rect x="200.5" y="1765" width="3.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="203.51" y="1775.5" ></text>
</g>
<g >
<title>__fdget (17,832,392 samples, 0.02%)</title><rect x="398.7" y="1589" width="0.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="401.67" y="1599.5" ></text>
</g>
<g >
<title>selinux_file_permission (74,392,661 samples, 0.09%)</title><rect x="968.9" y="1669" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="971.91" y="1679.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (26,505,495 samples, 0.03%)</title><rect x="60.5" y="1733" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="63.47" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9,995,806 samples, 0.01%)</title><rect x="125.2" y="1157" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="128.25" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (7,639,790 samples, 0.01%)</title><rect x="1138.8" y="1765" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1141.76" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (14,571,689 samples, 0.02%)</title><rect x="702.5" y="1701" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="705.52" y="1711.5" ></text>
</g>
<g >
<title>netvsc_poll (8,057,869 samples, 0.01%)</title><rect x="485.0" y="1621" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="487.97" y="1631.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (8,925,385 samples, 0.01%)</title><rect x="1066.2" y="1493" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1069.17" y="1503.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (7,736,990 samples, 0.01%)</title><rect x="250.0" y="1733" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="253.03" y="1743.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (23,446,179 samples, 0.03%)</title><rect x="512.0" y="1557" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="515.00" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (20,735,596 samples, 0.02%)</title><rect x="210.2" y="1621" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="213.17" y="1631.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (10,772,979 samples, 0.01%)</title><rect x="1089.0" y="1685" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1092.03" y="1695.5" ></text>
</g>
<g >
<title>vfs_writev (1,581,823,617 samples, 1.90%)</title><rect x="849.8" y="1717" width="22.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="852.85" y="1727.5" >v..</text>
</g>
<g >
<title>__napi_poll (21,375,833 samples, 0.03%)</title><rect x="213.1" y="1509" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="216.13" y="1519.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (31,914,306 samples, 0.04%)</title><rect x="20.3" y="1781" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="23.26" y="1791.5" ></text>
</g>
<g >
<title>handle_softirqs (15,545,057 samples, 0.02%)</title><rect x="65.7" y="1541" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="68.72" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (8,283,568 samples, 0.01%)</title><rect x="124.7" y="1205" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="127.66" y="1215.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char*, char*&gt; (33,494,837 samples, 0.04%)</title><rect x="227.6" y="1733" width="0.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="230.61" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1941" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,310,689 samples, 0.01%)</title><rect x="112.6" y="1653" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="115.55" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (9,310,933 samples, 0.01%)</title><rect x="665.9" y="1781" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="668.91" y="1791.5" ></text>
</g>
<g >
<title>selinux_socket_sendmsg (31,132,261 samples, 0.04%)</title><rect x="134.8" y="1637" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="137.79" y="1647.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (21,722,162 samples, 0.03%)</title><rect x="757.9" y="1669" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="760.93" y="1679.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,925,469 samples, 0.01%)</title><rect x="552.7" y="1621" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="555.71" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (17,288,620 samples, 0.02%)</title><rect x="816.4" y="1797" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="819.38" y="1807.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (208,477,889 samples, 0.25%)</title><rect x="211.5" y="1637" width="3.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="214.55" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (75,982,672 samples, 0.09%)</title><rect x="844.0" y="1749" width="1.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="846.98" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (11,064,177 samples, 0.01%)</title><rect x="280.3" y="1461" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="283.32" y="1471.5" ></text>
</g>
<g >
<title>netvsc_poll (24,955,747 samples, 0.03%)</title><rect x="82.6" y="1685" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="85.60" y="1695.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (9,662,509,531 samples, 11.59%)</title><rect x="749.9" y="2037" width="136.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="752.91" y="2047.5" >std::thread::_Sta..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (35,960,969 samples, 0.04%)</title><rect x="224.7" y="1781" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="227.71" y="1791.5" ></text>
</g>
<g >
<title>sock_poll (19,099,809 samples, 0.02%)</title><rect x="165.3" y="1573" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="168.30" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1573" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1205" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1215.5" ></text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (15,177,108 samples, 0.02%)</title><rect x="933.5" y="1765" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="936.52" y="1775.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8,398,810 samples, 0.01%)</title><rect x="1139.8" y="1653" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1142.76" y="1663.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,725,984 samples, 0.01%)</title><rect x="1096.4" y="1605" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1099.44" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (13,377,237 samples, 0.02%)</title><rect x="1173.1" y="1621" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1176.10" y="1631.5" ></text>
</g>
<g >
<title>x64_sys_call (473,223,424 samples, 0.57%)</title><rect x="138.7" y="1861" width="6.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="141.72" y="1871.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,221,869 samples, 0.01%)</title><rect x="1174.5" y="1781" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1177.48" y="1791.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (15,555,862 samples, 0.02%)</title><rect x="1179.6" y="1893" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1182.62" y="1903.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (9,104,406 samples, 0.01%)</title><rect x="610.1" y="1621" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="613.11" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;char*, void&gt; (121,271,235 samples, 0.15%)</title><rect x="1110.8" y="1797" width="1.7" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1113.80" y="1807.5" ></text>
</g>
<g >
<title>__virt_addr_valid (18,827,504 samples, 0.02%)</title><rect x="655.7" y="1589" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="658.70" y="1599.5" ></text>
</g>
<g >
<title>handle_softirqs (8,313,292 samples, 0.01%)</title><rect x="853.6" y="1541" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="856.58" y="1551.5" ></text>
</g>
<g >
<title>net_rx_action (9,640,164 samples, 0.01%)</title><rect x="1129.4" y="1541" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1132.35" y="1551.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (34,497,777 samples, 0.04%)</title><rect x="285.5" y="1797" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="288.47" y="1807.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (30,255,273 samples, 0.04%)</title><rect x="440.1" y="1781" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="443.12" y="1791.5" ></text>
</g>
<g >
<title>schedule (77,261,750 samples, 0.09%)</title><rect x="1175.3" y="1781" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1178.25" y="1791.5" ></text>
</g>
<g >
<title>set_root (9,760,810 samples, 0.01%)</title><rect x="951.3" y="1557" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="954.31" y="1567.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1,306,682,637 samples, 1.57%)</title><rect x="852.2" y="1621" width="18.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="855.21" y="1631.5" ></text>
</g>
<g >
<title>irq_exit_rcu (45,257,211 samples, 0.05%)</title><rect x="1024.1" y="1765" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1027.11" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1141" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (15,112,853 samples, 0.02%)</title><rect x="409.7" y="1749" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="412.71" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (47,618,260 samples, 0.06%)</title><rect x="1089.3" y="1733" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1092.26" y="1743.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2,896,306,696 samples, 3.48%)</title><rect x="394.8" y="1893" width="41.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="397.76" y="1903.5" >std..</text>
</g>
<g >
<title>__irq_exit_rcu (9,856,379 samples, 0.01%)</title><rect x="820.8" y="1701" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="823.80" y="1711.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (11,259,704 samples, 0.01%)</title><rect x="985.3" y="1701" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="988.35" y="1711.5" ></text>
</g>
<g >
<title>tcp_poll (13,807,681 samples, 0.02%)</title><rect x="463.3" y="1557" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="466.33" y="1567.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1,230,140,972 samples, 1.48%)</title><rect x="1000.0" y="1621" width="17.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1003.04" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (18,303,938 samples, 0.02%)</title><rect x="798.1" y="1605" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="801.07" y="1615.5" ></text>
</g>
<g >
<title>tcp_rcv_established (11,629,838 samples, 0.01%)</title><rect x="732.0" y="1461" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="734.96" y="1471.5" ></text>
</g>
<g >
<title>handle_softirqs (16,419,506 samples, 0.02%)</title><rect x="162.0" y="1605" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="165.02" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (16,916,044 samples, 0.02%)</title><rect x="1024.1" y="1637" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1027.13" y="1647.5" ></text>
</g>
<g >
<title>detach_if_pending (8,846,443 samples, 0.01%)</title><rect x="131.4" y="1477" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="134.36" y="1487.5" ></text>
</g>
<g >
<title>Channel::OnRead (5,978,758,868 samples, 7.17%)</title><rect x="310.0" y="1909" width="84.7" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="313.01" y="1919.5" >Channel::..</text>
</g>
<g >
<title>std::function&lt;void  (52,121,544 samples, 0.06%)</title><rect x="167.5" y="1781" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="170.51" y="1791.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1685" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="782.08" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (22,695,623 samples, 0.03%)</title><rect x="231.6" y="1669" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="234.64" y="1679.5" ></text>
</g>
<g >
<title>mod_timer (57,879,886 samples, 0.07%)</title><rect x="279.8" y="1509" width="0.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="282.76" y="1519.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (10,965,003 samples, 0.01%)</title><rect x="465.0" y="1653" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="467.97" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (25,401,205 samples, 0.03%)</title><rect x="1122.9" y="1621" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1125.91" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (415,515,643 samples, 0.50%)</title><rect x="328.5" y="1717" width="5.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="331.53" y="1727.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (26,337,875 samples, 0.03%)</title><rect x="672.2" y="1797" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="675.21" y="1807.5" ></text>
</g>
<g >
<title>_int_free (22,077,809 samples, 0.03%)</title><rect x="1036.2" y="2037" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1039.24" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (7,970,906 samples, 0.01%)</title><rect x="37.0" y="1765" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="39.99" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (9,025,962 samples, 0.01%)</title><rect x="382.7" y="1589" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="385.71" y="1599.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,932,829 samples, 0.01%)</title><rect x="46.2" y="1701" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="49.25" y="1711.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (19,370,618 samples, 0.02%)</title><rect x="1037.4" y="2053" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1040.44" y="2063.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,867,495 samples, 0.02%)</title><rect x="141.2" y="1749" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="144.21" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (29,968,717 samples, 0.04%)</title><rect x="42.1" y="1733" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="45.05" y="1743.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (28,444,593 samples, 0.03%)</title><rect x="387.3" y="1605" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="390.27" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1253" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1263.5" ></text>
</g>
<g >
<title>net_rx_action (10,672,868 samples, 0.01%)</title><rect x="1153.0" y="1333" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1156.05" y="1343.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (21,978,922 samples, 0.03%)</title><rect x="1086.3" y="1701" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1089.29" y="1711.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,446,390,824 samples, 1.74%)</title><rect x="850.8" y="1685" width="20.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="853.77" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (31,023,908 samples, 0.04%)</title><rect x="205.4" y="1669" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="208.44" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (24,917,013 samples, 0.03%)</title><rect x="1061.1" y="1765" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1064.07" y="1775.5" ></text>
</g>
<g >
<title>rw_verify_area (40,503,568 samples, 0.05%)</title><rect x="575.0" y="1685" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="578.02" y="1695.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (96,902,869 samples, 0.12%)</title><rect x="173.8" y="1685" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="176.77" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (41,496,566 samples, 0.05%)</title><rect x="197.6" y="1765" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="200.63" y="1775.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (86,732,991 samples, 0.10%)</title><rect x="108.5" y="1781" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="111.53" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (32,614,627 samples, 0.04%)</title><rect x="1087.5" y="1749" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1090.47" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="533" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="543.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="629" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="639.5" ></text>
</g>
<g >
<title>schedule (56,117,323 samples, 0.07%)</title><rect x="734.3" y="1781" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="737.33" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1029" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1039.5" ></text>
</g>
<g >
<title>sk_reset_timer (64,161,888 samples, 0.08%)</title><rect x="571.2" y="1525" width="0.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="574.24" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (8,455,462 samples, 0.01%)</title><rect x="993.1" y="1669" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="996.09" y="1679.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,982,838 samples, 0.01%)</title><rect x="624.7" y="1493" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="627.74" y="1503.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,383,260 samples, 0.01%)</title><rect x="422.8" y="1173" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="425.82" y="1183.5" ></text>
</g>
<g >
<title>nft_do_chain (37,007,072 samples, 0.04%)</title><rect x="270.7" y="1445" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="273.65" y="1455.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (22,322,862 samples, 0.03%)</title><rect x="702.4" y="1797" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="705.44" y="1807.5" ></text>
</g>
<g >
<title>_raw_write_unlock_irq (10,648,631 samples, 0.01%)</title><rect x="756.2" y="1589" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="759.21" y="1599.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,030,291 samples, 0.01%)</title><rect x="246.0" y="1605" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="248.98" y="1615.5" ></text>
</g>
<g >
<title>netvsc_poll (16,433,416 samples, 0.02%)</title><rect x="893.7" y="1925" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="896.68" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1237" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10,749,387 samples, 0.01%)</title><rect x="1056.3" y="1637" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1059.33" y="1647.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,652,623 samples, 0.01%)</title><rect x="89.8" y="1413" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="92.83" y="1423.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (10,053,763 samples, 0.01%)</title><rect x="448.6" y="2037" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="451.64" y="2047.5" ></text>
</g>
<g >
<title>debug_smp_processor_id (7,429,937 samples, 0.01%)</title><rect x="210.8" y="1685" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="213.85" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (10,883,824 samples, 0.01%)</title><rect x="666.1" y="1781" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="669.09" y="1791.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,349,812 samples, 0.02%)</title><rect x="384.3" y="1653" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="387.33" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (10,618,874 samples, 0.01%)</title><rect x="794.8" y="1733" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="797.78" y="1743.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (49,593,658 samples, 0.06%)</title><rect x="585.6" y="1909" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="588.59" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="181" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="191.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (56,594,312 samples, 0.07%)</title><rect x="830.0" y="1797" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="833.03" y="1807.5" ></text>
</g>
<g >
<title>netvsc_poll (7,378,040 samples, 0.01%)</title><rect x="845.9" y="1589" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="848.93" y="1599.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (9,889,416 samples, 0.01%)</title><rect x="1142.2" y="1781" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1145.22" y="1791.5" ></text>
</g>
<g >
<title>avc_lookup (7,454,745 samples, 0.01%)</title><rect x="366.8" y="1525" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="369.80" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (18,672,498 samples, 0.02%)</title><rect x="152.0" y="2021" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="155.00" y="2031.5" ></text>
</g>
<g >
<title>napi_complete_done (8,863,913 samples, 0.01%)</title><rect x="981.2" y="1493" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="984.17" y="1503.5" ></text>
</g>
<g >
<title>netvsc_poll (7,906,809 samples, 0.01%)</title><rect x="703.6" y="1637" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="706.63" y="1647.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (500,754,983 samples, 0.60%)</title><rect x="1052.0" y="1765" width="7.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1055.02" y="1775.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (15,981,397 samples, 0.02%)</title><rect x="297.4" y="1893" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="300.36" y="1903.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (12,051,930 samples, 0.01%)</title><rect x="560.3" y="1477" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="563.30" y="1487.5" ></text>
</g>
<g >
<title>selinux_file_permission (44,829,268 samples, 0.05%)</title><rect x="871.3" y="1653" width="0.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="874.28" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="517" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (23,951,380 samples, 0.03%)</title><rect x="342.7" y="1685" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="345.70" y="1695.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (52,837,721 samples, 0.06%)</title><rect x="501.7" y="1749" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="504.72" y="1759.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,207,254 samples, 0.01%)</title><rect x="668.4" y="1749" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="671.42" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="309" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (15,688,192 samples, 0.02%)</title><rect x="1082.5" y="1717" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1085.52" y="1727.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (10,937,036 samples, 0.01%)</title><rect x="1135.3" y="1669" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1138.28" y="1679.5" ></text>
</g>
<g >
<title>ip_list_rcv (11,365,698 samples, 0.01%)</title><rect x="443.2" y="1525" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="446.18" y="1535.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (11,235,899 samples, 0.01%)</title><rect x="789.6" y="1717" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="792.61" y="1727.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char*, char*, char&gt; (48,066,871 samples, 0.06%)</title><rect x="1111.3" y="1749" width="0.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1114.28" y="1759.5" ></text>
</g>
<g >
<title>__napi_poll (61,736,200 samples, 0.07%)</title><rect x="124.5" y="1333" width="0.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="127.54" y="1343.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (19,590,496 samples, 0.02%)</title><rect x="901.9" y="1589" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="904.92" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (14,828,717 samples, 0.02%)</title><rect x="224.4" y="1781" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="227.37" y="1791.5" ></text>
</g>
<g >
<title>getname_flags (7,892,503 samples, 0.01%)</title><rect x="506.3" y="1669" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="509.34" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="213" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="223.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="501" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (7,342,805 samples, 0.01%)</title><rect x="318.4" y="1685" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="321.38" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1557" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (13,019,765 samples, 0.02%)</title><rect x="798.1" y="1509" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="801.09" y="1519.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (24,393,294 samples, 0.03%)</title><rect x="974.3" y="1605" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="977.34" y="1615.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (14,621,657 samples, 0.02%)</title><rect x="51.7" y="1669" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="54.74" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (9,607,310 samples, 0.01%)</title><rect x="149.4" y="1909" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="152.43" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (10,839,527 samples, 0.01%)</title><rect x="721.7" y="1477" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="724.67" y="1487.5" ></text>
</g>
<g >
<title>epoll_ctl (9,321,818 samples, 0.01%)</title><rect x="551.5" y="1733" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="554.55" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,433,348 samples, 0.01%)</title><rect x="1152.0" y="1381" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1155.03" y="1391.5" ></text>
</g>
<g >
<title>__fget_light (36,555,461 samples, 0.04%)</title><rect x="554.4" y="1701" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="557.39" y="1711.5" ></text>
</g>
<g >
<title>rw_verify_area (138,077,782 samples, 0.17%)</title><rect x="822.4" y="1701" width="2.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="825.42" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="709" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="719.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1829" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1839.5" ></text>
</g>
<g >
<title>_copy_to_iter (38,560,847 samples, 0.05%)</title><rect x="973.7" y="1573" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="976.68" y="1583.5" ></text>
</g>
<g >
<title>__wake_up_common (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1221" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="928.84" y="1231.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (12,522,594 samples, 0.02%)</title><rect x="149.4" y="1925" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="152.39" y="1935.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt; &gt; (30,306,568 samples, 0.04%)</title><rect x="149.8" y="1845" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="152.75" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="821" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="831.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (13,439,109 samples, 0.02%)</title><rect x="133.6" y="1541" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="136.62" y="1551.5" ></text>
</g>
<g >
<title>netvsc_poll (9,582,050 samples, 0.01%)</title><rect x="561.3" y="1301" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="564.33" y="1311.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,582,050 samples, 0.01%)</title><rect x="561.3" y="1413" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="564.33" y="1423.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (33,468,814 samples, 0.04%)</title><rect x="1033.1" y="1877" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1036.11" y="1887.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (70,776,480 samples, 0.08%)</title><rect x="1084.5" y="1717" width="1.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1087.51" y="1727.5" ></text>
</g>
<g >
<title>_int_malloc (58,839,861 samples, 0.07%)</title><rect x="891.0" y="2053" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="893.99" y="2063.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (10,422,308 samples, 0.01%)</title><rect x="791.4" y="1637" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="794.41" y="1647.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (87,150,373 samples, 0.10%)</title><rect x="570.9" y="1557" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="573.91" y="1567.5" ></text>
</g>
<g >
<title>netvsc_poll (11,735,606 samples, 0.01%)</title><rect x="296.3" y="1733" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="299.31" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock (13,832,813 samples, 0.02%)</title><rect x="566.3" y="1397" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="569.28" y="1407.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (146,727,210 samples, 0.18%)</title><rect x="839.3" y="1765" width="2.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="842.28" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (26,505,495 samples, 0.03%)</title><rect x="60.5" y="1685" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="63.47" y="1695.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (61,120,832 samples, 0.07%)</title><rect x="828.9" y="1669" width="0.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="831.87" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (9,360,456 samples, 0.01%)</title><rect x="363.3" y="1525" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="366.30" y="1535.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (10,570,407 samples, 0.01%)</title><rect x="942.8" y="1605" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="945.85" y="1615.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (12,994,125 samples, 0.02%)</title><rect x="606.3" y="1573" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="609.26" y="1583.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,627,597 samples, 0.01%)</title><rect x="1175.6" y="1701" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1178.57" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::allocate (7,272,285 samples, 0.01%)</title><rect x="614.6" y="1685" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="617.60" y="1695.5" ></text>
</g>
<g >
<title>ip_list_rcv (14,879,177 samples, 0.02%)</title><rect x="877.9" y="1589" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="880.87" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (12,529,790 samples, 0.02%)</title><rect x="1079.8" y="1765" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1082.84" y="1775.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (45,834,091 samples, 0.05%)</title><rect x="576.7" y="1797" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="579.68" y="1807.5" ></text>
</g>
<g >
<title>rndis_filter_receive (17,714,993 samples, 0.02%)</title><rect x="141.5" y="1669" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="144.51" y="1679.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8,438,526 samples, 0.01%)</title><rect x="646.6" y="1733" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="649.56" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="821" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (449,203,246 samples, 0.54%)</title><rect x="287.6" y="1845" width="6.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="290.59" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (22,766,773 samples, 0.03%)</title><rect x="630.7" y="1765" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="633.67" y="1775.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, char*&gt; (26,606,455 samples, 0.03%)</title><rect x="80.8" y="1685" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="83.76" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (25,782,903 samples, 0.03%)</title><rect x="167.9" y="1733" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="170.88" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,909,884 samples, 0.01%)</title><rect x="1163.1" y="1445" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1166.06" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="709" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="719.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (11,360,626 samples, 0.01%)</title><rect x="466.0" y="1717" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="468.98" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,757,736 samples, 0.01%)</title><rect x="1045.5" y="1477" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1048.49" y="1487.5" ></text>
</g>
<g >
<title>handle_softirqs (26,699,885 samples, 0.03%)</title><rect x="357.7" y="1685" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="360.73" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (105,546,129 samples, 0.13%)</title><rect x="402.5" y="1733" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="405.53" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (23,484,125 samples, 0.03%)</title><rect x="818.8" y="1765" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="821.77" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (17,413,949 samples, 0.02%)</title><rect x="966.4" y="1653" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="969.44" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (16,269,218 samples, 0.02%)</title><rect x="940.6" y="1669" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="943.62" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (50,121,530 samples, 0.06%)</title><rect x="609.0" y="1765" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="612.03" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (31,822,268 samples, 0.04%)</title><rect x="144.2" y="1573" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="147.16" y="1583.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,986,312 samples, 0.01%)</title><rect x="1066.0" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1069.00" y="1647.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (1,746,968,874 samples, 2.10%)</title><rect x="467.0" y="1781" width="24.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="469.99" y="1791.5" >H..</text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1557" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (27,366,397 samples, 0.03%)</title><rect x="939.8" y="1749" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="942.81" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1285" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1295.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (35,455,866 samples, 0.04%)</title><rect x="314.9" y="1589" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="317.93" y="1599.5" ></text>
</g>
<g >
<title>tcp_poll (16,478,276 samples, 0.02%)</title><rect x="583.5" y="1781" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="586.48" y="1791.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (18,088,988 samples, 0.02%)</title><rect x="236.3" y="1605" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="239.33" y="1615.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (41,205,972 samples, 0.05%)</title><rect x="674.2" y="1765" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="677.21" y="1775.5" ></text>
</g>
<g >
<title>schedule (97,146,768 samples, 0.12%)</title><rect x="1026.9" y="1781" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1029.95" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1333" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="928.84" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (46,552,114 samples, 0.06%)</title><rect x="633.6" y="1701" width="0.6" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="636.58" y="1711.5" ></text>
</g>
<g >
<title>HttpConn::Close (12,332,584 samples, 0.01%)</title><rect x="759.5" y="1797" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="762.46" y="1807.5" ></text>
</g>
<g >
<title>netvsc_poll (20,653,989 samples, 0.02%)</title><rect x="581.8" y="1685" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="584.82" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (8,211,344 samples, 0.01%)</title><rect x="958.7" y="1781" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="961.73" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (12,288,760 samples, 0.01%)</title><rect x="1035.7" y="1941" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1038.68" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="165" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="175.5" ></text>
</g>
<g >
<title>netvsc_poll (9,340,124 samples, 0.01%)</title><rect x="577.5" y="1797" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="580.48" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,114,888 samples, 0.01%)</title><rect x="259.7" y="1637" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="262.75" y="1647.5" ></text>
</g>
<g >
<title>std::priority_queue&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt;, TimerManager::TimerCmp&gt;::empty (9,048,154 samples, 0.01%)</title><rect x="1180.3" y="1909" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1183.32" y="1919.5" ></text>
</g>
<g >
<title>__GI___writev (1,802,286,674 samples, 2.16%)</title><rect x="702.3" y="1813" width="25.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="705.30" y="1823.5" >_..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (14,161,902 samples, 0.02%)</title><rect x="838.8" y="1717" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="841.75" y="1727.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (120,330,194 samples, 0.14%)</title><rect x="866.9" y="1557" width="1.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="869.85" y="1567.5" ></text>
</g>
<g >
<title>__napi_poll (14,232,421 samples, 0.02%)</title><rect x="311.8" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="314.78" y="1583.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (9,462,643,912 samples, 11.35%)</title><rect x="456.8" y="1973" width="134.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="459.84" y="1983.5" >std::__invoke_im..</text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="933" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="943.5" ></text>
</g>
<g >
<title>operator delete (8,750,785 samples, 0.01%)</title><rect x="987.1" y="1669" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="990.08" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (11,738,512 samples, 0.01%)</title><rect x="646.7" y="1733" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="649.73" y="1743.5" ></text>
</g>
<g >
<title>handle_softirqs (13,484,539 samples, 0.02%)</title><rect x="746.0" y="1973" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="749.00" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (13,349,812 samples, 0.02%)</title><rect x="384.3" y="1605" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="387.33" y="1615.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,938,823,143 samples, 11.93%)</title><rect x="599.9" y="2005" width="140.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="602.90" y="2015.5" >std::thread::_Inv..</text>
</g>
<g >
<title>__virt_addr_valid (18,919,762 samples, 0.02%)</title><rect x="213.9" y="1589" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="216.88" y="1599.5" ></text>
</g>
<g >
<title>handle_softirqs (8,192,733 samples, 0.01%)</title><rect x="851.6" y="1541" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="854.58" y="1551.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (348,783,865 samples, 0.42%)</title><rect x="396.1" y="1701" width="5.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="399.13" y="1711.5" ></text>
</g>
<g >
<title>avc_has_perm (8,948,601 samples, 0.01%)</title><rect x="823.5" y="1637" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="826.48" y="1647.5" ></text>
</g>
<g >
<title>ip_local_out (754,485,236 samples, 0.91%)</title><rect x="267.6" y="1509" width="10.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="270.57" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (7,367,996 samples, 0.01%)</title><rect x="106.5" y="1781" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="109.55" y="1791.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (41,830,102 samples, 0.05%)</title><rect x="534.3" y="1669" width="0.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="537.34" y="1679.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (17,861,657 samples, 0.02%)</title><rect x="708.3" y="1605" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="711.26" y="1615.5" ></text>
</g>
<g >
<title>tcp_write_xmit (944,628,614 samples, 1.13%)</title><rect x="417.3" y="1573" width="13.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="420.33" y="1583.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (20,927,495 samples, 0.03%)</title><rect x="667.1" y="1781" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="670.08" y="1791.5" ></text>
</g>
<g >
<title>skb_clone (10,900,709 samples, 0.01%)</title><rect x="1161.8" y="1541" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1164.85" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_S_equals (16,223,107 samples, 0.02%)</title><rect x="1141.1" y="1685" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1144.08" y="1695.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (7,136,147 samples, 0.01%)</title><rect x="556.4" y="1573" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="559.38" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (9,335,646 samples, 0.01%)</title><rect x="311.8" y="1525" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="314.78" y="1535.5" ></text>
</g>
<g >
<title>rep_movs_alternative (7,183,776 samples, 0.01%)</title><rect x="1047.9" y="1605" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1050.88" y="1615.5" ></text>
</g>
<g >
<title>epoll_ctl (381,402,901 samples, 0.46%)</title><rect x="898.1" y="1685" width="5.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="901.11" y="1695.5" ></text>
</g>
<g >
<title>EventLoop::IsInLoopThread (10,647,980 samples, 0.01%)</title><rect x="538.1" y="1765" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="541.10" y="1775.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (10,750,354 samples, 0.01%)</title><rect x="626.2" y="1701" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="629.17" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (10,306,909 samples, 0.01%)</title><rect x="704.6" y="1605" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="707.61" y="1615.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (82,412,028 samples, 0.10%)</title><rect x="1121.4" y="1621" width="1.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1124.39" y="1631.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (144,320,602 samples, 0.17%)</title><rect x="437.9" y="1813" width="2.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="440.89" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (21,505,288 samples, 0.03%)</title><rect x="172.4" y="1701" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="175.39" y="1711.5" ></text>
</g>
<g >
<title>__wake_up_sync (7,208,810 samples, 0.01%)</title><rect x="674.4" y="1333" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="677.37" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_read (14,214,162 samples, 0.02%)</title><rect x="526.5" y="1765" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="529.45" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (10,619,096 samples, 0.01%)</title><rect x="247.5" y="1509" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="250.52" y="1519.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,339,219 samples, 0.01%)</title><rect x="581.7" y="1621" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="584.70" y="1631.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (26,939,315 samples, 0.03%)</title><rect x="878.1" y="1781" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="881.08" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (81,457,112 samples, 0.10%)</title><rect x="694.8" y="1717" width="1.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="697.78" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="965" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="975.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (19,672,279 samples, 0.02%)</title><rect x="546.1" y="1781" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="549.12" y="1791.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,400,562 samples, 0.01%)</title><rect x="280.0" y="1461" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="282.98" y="1471.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,688,113 samples, 0.01%)</title><rect x="1172.7" y="1765" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1175.70" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (10,200,344 samples, 0.01%)</title><rect x="623.6" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="626.59" y="1583.5" ></text>
</g>
<g >
<title>sch_direct_xmit (204,176,872 samples, 0.25%)</title><rect x="126.2" y="1413" width="2.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="129.20" y="1423.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (7,805,407 samples, 0.01%)</title><rect x="701.5" y="1781" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="704.49" y="1791.5" ></text>
</g>
<g >
<title>HttpRouter::Route (7,730,719 samples, 0.01%)</title><rect x="749.7" y="2053" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="752.67" y="2063.5" ></text>
</g>
<g >
<title>operator new (11,686,494 samples, 0.01%)</title><rect x="748.2" y="2053" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="751.20" y="2063.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (203,514,867 samples, 0.24%)</title><rect x="350.1" y="1733" width="2.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="353.07" y="1743.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (16,729,358 samples, 0.02%)</title><rect x="228.1" y="1717" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="231.10" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (11,801,665 samples, 0.01%)</title><rect x="183.2" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="186.18" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (66,548,259 samples, 0.08%)</title><rect x="199.5" y="1749" width="1.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="202.52" y="1759.5" ></text>
</g>
<g >
<title>rw_verify_area (150,427,450 samples, 0.18%)</title><rect x="676.1" y="1701" width="2.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="679.07" y="1711.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7,513,023 samples, 0.01%)</title><rect x="1175.6" y="1269" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1178.59" y="1279.5" ></text>
</g>
<g >
<title>Epoller::GetEventFd (9,279,644 samples, 0.01%)</title><rect x="1169.4" y="1909" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1172.43" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="309" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::_M_erase_at_end (29,925,659 samples, 0.04%)</title><rect x="448.1" y="1909" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="451.11" y="1919.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (20,415,398 samples, 0.02%)</title><rect x="227.7" y="1653" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="230.68" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1541" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1551.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (26,956,083 samples, 0.03%)</title><rect x="817.0" y="1669" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="820.01" y="1679.5" ></text>
</g>
<g >
<title>ip_finish_output2 (351,531,688 samples, 0.42%)</title><rect x="422.2" y="1445" width="5.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="425.24" y="1455.5" ></text>
</g>
<g >
<title>tcp_poll (7,559,085 samples, 0.01%)</title><rect x="541.6" y="1573" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="544.62" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="245" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="255.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (44,136,280 samples, 0.05%)</title><rect x="320.5" y="1749" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="323.49" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (9,845,666 samples, 0.01%)</title><rect x="695.7" y="1669" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="698.71" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (149,974,914 samples, 0.18%)</title><rect x="763.4" y="1717" width="2.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="766.40" y="1727.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (114,873,053 samples, 0.14%)</title><rect x="1026.7" y="1813" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1029.70" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::begin (8,740,106 samples, 0.01%)</title><rect x="223.7" y="1781" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="226.73" y="1791.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (1,776,896,106 samples, 2.13%)</title><rect x="905.7" y="1781" width="25.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="908.74" y="1791.5" >H..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (12,954,847 samples, 0.02%)</title><rect x="758.8" y="1765" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="761.80" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="533" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned long&gt; (7,369,122 samples, 0.01%)</title><rect x="1080.7" y="1749" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1083.72" y="1759.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,687,757 samples, 0.02%)</title><rect x="421.2" y="1413" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="424.21" y="1423.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (11,341,307 samples, 0.01%)</title><rect x="105.4" y="1685" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="108.38" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (15,723,506 samples, 0.02%)</title><rect x="448.9" y="85" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.89" y="95.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (21,208,322 samples, 0.03%)</title><rect x="740.1" y="1781" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="743.14" y="1791.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (10,817,176 samples, 0.01%)</title><rect x="25.6" y="1621" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="28.56" y="1631.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (100,714,064 samples, 0.12%)</title><rect x="292.3" y="1813" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="295.34" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="245" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (32,855,902 samples, 0.04%)</title><rect x="670.1" y="1637" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="673.14" y="1647.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (10,136,202 samples, 0.01%)</title><rect x="959.7" y="1781" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="962.73" y="1791.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (7,547,442 samples, 0.01%)</title><rect x="1161.3" y="1477" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1164.29" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1173" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1183.5" ></text>
</g>
<g >
<title>tcp_data_ready (7,283,500 samples, 0.01%)</title><rect x="144.4" y="1413" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="147.42" y="1423.5" ></text>
</g>
<g >
<title>net_rx_action (13,247,196 samples, 0.02%)</title><rect x="397.0" y="1541" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="400.03" y="1551.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (9,104,406 samples, 0.01%)</title><rect x="610.1" y="1717" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="613.11" y="1727.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,251,740 samples, 0.01%)</title><rect x="273.1" y="1189" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="276.07" y="1199.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (32,435,813 samples, 0.04%)</title><rect x="792.6" y="1717" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="795.64" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="677" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="687.5" ></text>
</g>
<g >
<title>HttpRouter::Route (7,247,389 samples, 0.01%)</title><rect x="960.6" y="1797" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="963.60" y="1807.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,803,673 samples, 0.02%)</title><rect x="62.9" y="1653" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="65.86" y="1663.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,496,094 samples, 0.01%)</title><rect x="1014.3" y="1445" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1017.28" y="1455.5" ></text>
</g>
<g >
<title>__napi_poll (21,560,971 samples, 0.03%)</title><rect x="112.5" y="1701" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="115.50" y="1711.5" ></text>
</g>
<g >
<title>napi_complete_done (11,685,164 samples, 0.01%)</title><rect x="210.2" y="1573" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="213.19" y="1583.5" ></text>
</g>
<g >
<title>handle_softirqs (13,243,813 samples, 0.02%)</title><rect x="581.6" y="1733" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="584.62" y="1743.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (14,773,367 samples, 0.02%)</title><rect x="944.6" y="1653" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="947.57" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (16,217,613 samples, 0.02%)</title><rect x="1153.0" y="1413" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1156.03" y="1423.5" ></text>
</g>
<g >
<title>__napi_poll (11,400,420 samples, 0.01%)</title><rect x="731.5" y="1701" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="734.52" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (14,288,555 samples, 0.02%)</title><rect x="926.2" y="1717" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="929.19" y="1727.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char*&gt; (7,429,627 samples, 0.01%)</title><rect x="1085.8" y="1637" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1088.81" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (10,574,210 samples, 0.01%)</title><rect x="1176.0" y="1541" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1178.96" y="1551.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (54,448,786 samples, 0.07%)</title><rect x="918.2" y="1685" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="921.25" y="1695.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,734,378 samples, 0.01%)</title><rect x="947.2" y="1589" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="950.20" y="1599.5" ></text>
</g>
<g >
<title>handle_softirqs (54,266,523 samples, 0.07%)</title><rect x="1007.4" y="1365" width="0.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1010.37" y="1375.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,801,665 samples, 0.01%)</title><rect x="183.2" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="186.18" y="1647.5" ></text>
</g>
<g >
<title>irq_exit_rcu (31,891,537 samples, 0.04%)</title><rect x="82.5" y="1765" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="85.53" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (365,621,962 samples, 0.44%)</title><rect x="1127.7" y="1749" width="5.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1130.74" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="357" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="367.5" ></text>
</g>
<g >
<title>netvsc_send_pkt (74,847,276 samples, 0.09%)</title><rect x="863.6" y="1333" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="866.63" y="1343.5" ></text>
</g>
<g >
<title>__schedule (96,597,619 samples, 0.12%)</title><rect x="143.7" y="1765" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="146.67" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (221,548,456 samples, 0.27%)</title><rect x="980.4" y="1669" width="3.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="983.38" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1221" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1231.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (2,971,985,914 samples, 3.57%)</title><rect x="1127.0" y="1845" width="42.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1130.01" y="1855.5" >std..</text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,313,760 samples, 0.01%)</title><rect x="972.6" y="1621" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="975.63" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (169,543,689 samples, 0.20%)</title><rect x="172.9" y="1717" width="2.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="175.91" y="1727.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (14,012,890 samples, 0.02%)</title><rect x="524.7" y="1781" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="527.70" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="789" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (12,670,559 samples, 0.02%)</title><rect x="471.3" y="1637" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="474.34" y="1647.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,261,021 samples, 0.01%)</title><rect x="927.6" y="1669" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="930.63" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (54,286,518 samples, 0.07%)</title><rect x="182.6" y="1685" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="185.57" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (11,224,105 samples, 0.01%)</title><rect x="233.3" y="1605" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="236.30" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (28,481,239 samples, 0.03%)</title><rect x="798.1" y="1669" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="801.07" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (30,419,580 samples, 0.04%)</title><rect x="469.6" y="1717" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="472.56" y="1727.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (21,131,847 samples, 0.03%)</title><rect x="80.8" y="1637" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="83.81" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (9,725,984 samples, 0.01%)</title><rect x="1096.4" y="1525" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1099.44" y="1535.5" ></text>
</g>
<g >
<title>___slab_alloc (10,629,766 samples, 0.01%)</title><rect x="574.3" y="1541" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="577.35" y="1551.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,385,464 samples, 0.01%)</title><rect x="1121.0" y="1477" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1124.00" y="1487.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,321,765 samples, 0.01%)</title><rect x="619.3" y="1749" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="622.29" y="1759.5" ></text>
</g>
<g >
<title>__GI___pthread_enable_asynccancel (7,164,668 samples, 0.01%)</title><rect x="228.9" y="1813" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="231.89" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (10,510,831 samples, 0.01%)</title><rect x="761.8" y="1701" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="764.79" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="789" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="799.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1909" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1919.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, char*, char*&gt; (7,224,320 samples, 0.01%)</title><rect x="228.1" y="1669" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="231.14" y="1679.5" ></text>
</g>
<g >
<title>EventLoop::Loop (9,452,488,849 samples, 11.34%)</title><rect x="456.8" y="1941" width="133.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="459.84" y="1951.5" >EventLoop::Loop</text>
</g>
<g >
<title>__virt_addr_valid (12,135,498 samples, 0.01%)</title><rect x="681.4" y="1557" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="684.42" y="1567.5" ></text>
</g>
<g >
<title>__fdget_pos (26,673,936 samples, 0.03%)</title><rect x="849.4" y="1717" width="0.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="852.39" y="1727.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,839,585 samples, 0.01%)</title><rect x="1036.4" y="2005" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1039.43" y="2015.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (15,300,483 samples, 0.02%)</title><rect x="239.1" y="1605" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="242.14" y="1615.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::tuple&lt;true, true&gt; (12,843,301 samples, 0.02%)</title><rect x="176.6" y="1717" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="179.60" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1653" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="171.38" y="1663.5" ></text>
</g>
<g >
<title>handle_softirqs (21,375,833 samples, 0.03%)</title><rect x="213.1" y="1541" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="216.13" y="1551.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,401,788 samples, 0.01%)</title><rect x="312.7" y="1589" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="315.66" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="197" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (77,220,475 samples, 0.09%)</title><rect x="698.8" y="1765" width="1.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="701.80" y="1775.5" ></text>
</g>
<g >
<title>__fdget (11,962,944 samples, 0.01%)</title><rect x="100.4" y="1589" width="0.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="103.37" y="1599.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (92,317,544 samples, 0.11%)</title><rect x="583.8" y="1813" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="586.75" y="1823.5" ></text>
</g>
<g >
<title>clear_bhb_loop (32,099,456 samples, 0.04%)</title><rect x="61.9" y="1733" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="64.94" y="1743.5" ></text>
</g>
<g >
<title>std::function&lt;void  (49,164,840 samples, 0.06%)</title><rect x="249.8" y="1781" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="252.83" y="1791.5" ></text>
</g>
<g >
<title>__wake_up_common (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1349" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="925.16" y="1359.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (12,355,464 samples, 0.01%)</title><rect x="556.3" y="1589" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="559.30" y="1599.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,717,260 samples, 0.01%)</title><rect x="487.3" y="1733" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="490.29" y="1743.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (9,860,719 samples, 0.01%)</title><rect x="1113.2" y="1541" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1116.24" y="1551.5" ></text>
</g>
<g >
<title>avc_has_perm (8,817,751 samples, 0.01%)</title><rect x="969.5" y="1621" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="972.49" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (366,148,975 samples, 0.44%)</title><rect x="244.5" y="1749" width="5.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="247.53" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (17,584,753 samples, 0.02%)</title><rect x="1041.6" y="2053" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1044.57" y="2063.5" ></text>
</g>
<g >
<title>inode_permission (67,435,507 samples, 0.08%)</title><rect x="510.7" y="1589" width="1.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="513.75" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="677" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="687.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1797" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1807.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (10,770,830 samples, 0.01%)</title><rect x="880.7" y="1509" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="883.71" y="1519.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (13,170,569 samples, 0.02%)</title><rect x="1100.7" y="1557" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1103.69" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="981" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="991.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1173" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1183.5" ></text>
</g>
<g >
<title>net_rx_action (8,057,869 samples, 0.01%)</title><rect x="485.0" y="1653" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="487.97" y="1663.5" ></text>
</g>
<g >
<title>x64_sys_call (455,402,693 samples, 0.55%)</title><rect x="287.6" y="1861" width="6.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="290.55" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,419,001 samples, 0.01%)</title><rect x="307.1" y="1893" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="310.08" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,943,763 samples, 0.01%)</title><rect x="421.2" y="1285" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="424.24" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (509,703,151 samples, 0.61%)</title><rect x="63.9" y="1701" width="7.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="66.90" y="1711.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (18,501,652 samples, 0.02%)</title><rect x="201.5" y="1637" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="204.46" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="965" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="975.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (28,857,458 samples, 0.03%)</title><rect x="542.1" y="1669" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="545.12" y="1679.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (156,188,348 samples, 0.19%)</title><rect x="103.4" y="1781" width="2.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="106.42" y="1791.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (9,965,320,676 samples, 11.96%)</title><rect x="158.9" y="2037" width="141.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="161.87" y="2047.5" >std::thread::_Sta..</text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="997" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1007.5" ></text>
</g>
<g >
<title>tcp_rcv_established (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1285" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="951.32" y="1295.5" ></text>
</g>
<g >
<title>HttpResponse::Clear (9,634,493 samples, 0.01%)</title><rect x="785.9" y="1781" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="788.92" y="1791.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (8,192,733 samples, 0.01%)</title><rect x="851.6" y="1589" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="854.58" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1541" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (15,120,622 samples, 0.02%)</title><rect x="521.0" y="1765" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="523.96" y="1775.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,619,096 samples, 0.01%)</title><rect x="247.5" y="1541" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="250.52" y="1551.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (29,416,860 samples, 0.04%)</title><rect x="22.7" y="1717" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="25.69" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1109" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1119.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,247,235 samples, 0.01%)</title><rect x="284.2" y="1637" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="287.18" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="549" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="559.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (11,983,442 samples, 0.01%)</title><rect x="412.0" y="1749" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="415.00" y="1759.5" ></text>
</g>
<g >
<title>handle_softirqs (13,867,495 samples, 0.02%)</title><rect x="141.2" y="1733" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="144.21" y="1743.5" ></text>
</g>
<g >
<title>handle_softirqs (10,672,868 samples, 0.01%)</title><rect x="1153.0" y="1349" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1156.05" y="1359.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (25,486,656 samples, 0.03%)</title><rect x="444.4" y="1861" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="447.43" y="1871.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (15,215,635 samples, 0.02%)</title><rect x="59.2" y="1653" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="62.16" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (40,182,724 samples, 0.05%)</title><rect x="885.9" y="1797" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="888.93" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (7,850,160 samples, 0.01%)</title><rect x="475.5" y="1765" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="478.52" y="1775.5" ></text>
</g>
<g >
<title>selinux_inode_permission (11,987,008 samples, 0.01%)</title><rect x="950.8" y="1573" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="953.84" y="1583.5" ></text>
</g>
<g >
<title>__fdget (38,308,017 samples, 0.05%)</title><rect x="15.6" y="1589" width="0.6" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="18.63" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (10,398,201 samples, 0.01%)</title><rect x="987.9" y="1781" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="990.92" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1493" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1503.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,906,666 samples, 0.01%)</title><rect x="1052.5" y="1701" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1055.47" y="1711.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,712,971 samples, 0.01%)</title><rect x="688.1" y="1461" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="691.11" y="1471.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="53" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1185.01" y="63.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (30,040,255 samples, 0.04%)</title><rect x="296.6" y="1829" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="299.62" y="1839.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,785,662 samples, 0.01%)</title><rect x="865.1" y="1397" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="868.14" y="1407.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (12,359,929 samples, 0.01%)</title><rect x="688.0" y="1509" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="691.05" y="1519.5" ></text>
</g>
<g >
<title>load_balance (8,594,784 samples, 0.01%)</title><rect x="880.9" y="1717" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="883.87" y="1727.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (40,398,683 samples, 0.05%)</title><rect x="644.2" y="1653" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="647.16" y="1663.5" ></text>
</g>
<g >
<title>ep_poll_callback (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1333" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="925.16" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (32,167,876 samples, 0.04%)</title><rect x="840.8" y="1685" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="843.78" y="1695.5" ></text>
</g>
<g >
<title>x64_sys_call (554,400,785 samples, 0.67%)</title><rect x="527.3" y="1765" width="7.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="530.27" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (46,608,291 samples, 0.06%)</title><rect x="54.6" y="1701" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="57.65" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="565" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (23,586,850 samples, 0.03%)</title><rect x="49.2" y="1765" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="52.25" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (18,391,018 samples, 0.02%)</title><rect x="964.3" y="1717" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="967.30" y="1727.5" ></text>
</g>
<g >
<title>rndis_filter_receive (10,042,507 samples, 0.01%)</title><rect x="581.7" y="1669" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="584.66" y="1679.5" ></text>
</g>
<g >
<title>EventLoop::IsInLoopThread (11,396,727 samples, 0.01%)</title><rect x="244.3" y="1765" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="247.32" y="1775.5" ></text>
</g>
<g >
<title>netvsc_poll (10,708,042 samples, 0.01%)</title><rect x="131.2" y="1349" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="134.16" y="1359.5" ></text>
</g>
<g >
<title>netvsc_send (96,570,520 samples, 0.12%)</title><rect x="127.3" y="1349" width="1.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="130.27" y="1359.5" ></text>
</g>
<g >
<title>memcpy_orig (32,775,245 samples, 0.04%)</title><rect x="275.2" y="1349" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="278.17" y="1359.5" ></text>
</g>
<g >
<title>__check_object_size (36,500,477 samples, 0.04%)</title><rect x="803.4" y="1605" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="806.36" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (192,103,515 samples, 0.23%)</title><rect x="936.2" y="1749" width="2.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="939.19" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (11,143,246 samples, 0.01%)</title><rect x="697.5" y="1781" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="700.49" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_established (11,968,332 samples, 0.01%)</title><rect x="861.0" y="1125" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="864.04" y="1135.5" ></text>
</g>
<g >
<title>sock_write_iter (1,466,841,504 samples, 1.76%)</title><rect x="263.0" y="1669" width="20.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="265.99" y="1679.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (24,550,458 samples, 0.03%)</title><rect x="652.2" y="1701" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="655.24" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="197" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="207.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,734,143 samples, 0.01%)</title><rect x="848.9" y="1589" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="851.89" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (102,763,243 samples, 0.12%)</title><rect x="736.6" y="1877" width="1.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="739.58" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (15,730,028 samples, 0.02%)</title><rect x="403.7" y="1669" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="406.70" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,160,263 samples, 0.01%)</title><rect x="1040.6" y="1877" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1043.61" y="1887.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (11,066,933 samples, 0.01%)</title><rect x="980.2" y="1413" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="983.18" y="1423.5" ></text>
</g>
<g >
<title>netvsc_poll (7,160,300 samples, 0.01%)</title><rect x="33.3" y="1557" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="36.32" y="1567.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (149,059,742 samples, 0.18%)</title><rect x="1003.5" y="1461" width="2.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1006.49" y="1471.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (10,156,722 samples, 0.01%)</title><rect x="746.0" y="1893" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="749.03" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::erase (27,498,427 samples, 0.03%)</title><rect x="1077.8" y="1765" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1080.79" y="1775.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (9,938,823,143 samples, 11.93%)</title><rect x="599.9" y="1957" width="140.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="602.90" y="1967.5" >EventLoopThread::..</text>
</g>
<g >
<title>net_rx_action (9,856,379 samples, 0.01%)</title><rect x="820.8" y="1669" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="823.80" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (9,274,914 samples, 0.01%)</title><rect x="76.3" y="1781" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="79.35" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="613" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="623.5" ></text>
</g>
<g >
<title>security_inode_permission (46,196,622 samples, 0.06%)</title><rect x="510.9" y="1573" width="0.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="513.92" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (13,679,871 samples, 0.02%)</title><rect x="405.1" y="1781" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="408.08" y="1791.5" ></text>
</g>
<g >
<title>__fget_light (23,732,340 samples, 0.03%)</title><rect x="900.8" y="1573" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="903.81" y="1583.5" ></text>
</g>
<g >
<title>ip_list_rcv (10,898,341 samples, 0.01%)</title><rect x="818.9" y="1621" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="821.87" y="1631.5" ></text>
</g>
<g >
<title>kmem_cache_free (8,884,991 samples, 0.01%)</title><rect x="238.0" y="1589" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="241.04" y="1599.5" ></text>
</g>
<g >
<title>handle_softirqs (12,919,702 samples, 0.02%)</title><rect x="1115.2" y="1685" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1118.25" y="1695.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1,333,063,460 samples, 1.60%)</title><rect x="115.8" y="1637" width="18.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="118.78" y="1647.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (28,279,853 samples, 0.03%)</title><rect x="1181.4" y="1861" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1184.36" y="1871.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (7,572,190 samples, 0.01%)</title><rect x="1173.4" y="1797" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1176.38" y="1807.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (12,075,556 samples, 0.01%)</title><rect x="1133.3" y="1717" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1136.31" y="1727.5" ></text>
</g>
<g >
<title>release_sock (14,061,791 samples, 0.02%)</title><rect x="679.4" y="1637" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="682.37" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (286,075,376 samples, 0.34%)</title><rect x="907.7" y="1733" width="4.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="910.72" y="1743.5" ></text>
</g>
<g >
<title>release_sock (19,050,884 samples, 0.02%)</title><rect x="116.2" y="1621" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="119.22" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (449,360,179 samples, 0.54%)</title><rect x="179.1" y="1749" width="6.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="182.12" y="1759.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (23,860,137 samples, 0.03%)</title><rect x="766.7" y="1765" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="769.69" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (8,002,776 samples, 0.01%)</title><rect x="964.3" y="1573" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="967.30" y="1583.5" ></text>
</g>
<g >
<title>path_lookupat (250,164,647 samples, 0.30%)</title><rect x="365.0" y="1621" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="367.95" y="1631.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (32,164,246 samples, 0.04%)</title><rect x="1033.1" y="1813" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1036.13" y="1823.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,398,550 samples, 0.01%)</title><rect x="265.4" y="1557" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="268.37" y="1567.5" ></text>
</g>
<g >
<title>__check_object_size (55,057,421 samples, 0.07%)</title><rect x="66.2" y="1605" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="69.21" y="1615.5" ></text>
</g>
<g >
<title>netvsc_poll (13,484,539 samples, 0.02%)</title><rect x="746.0" y="1925" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="749.00" y="1935.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (20,210,064 samples, 0.02%)</title><rect x="1110.5" y="1781" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1113.52" y="1791.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (11,946,319 samples, 0.01%)</title><rect x="873.6" y="1717" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="876.64" y="1727.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (24,697,939 samples, 0.03%)</title><rect x="1085.6" y="1685" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1088.64" y="1695.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1,012,894,787 samples, 1.22%)</title><rect x="708.8" y="1573" width="14.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="711.81" y="1583.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,468,225 samples, 0.01%)</title><rect x="347.8" y="1701" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="350.82" y="1711.5" ></text>
</g>
<g >
<title>std::addressof&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; (7,415,638 samples, 0.01%)</title><rect x="545.6" y="1669" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="548.65" y="1679.5" ></text>
</g>
<g >
<title>std::function&lt;void  (48,145,875 samples, 0.06%)</title><rect x="758.7" y="1781" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="761.73" y="1791.5" ></text>
</g>
<g >
<title>ep_autoremove_wake_function (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1269" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="925.16" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (103,302,785 samples, 0.12%)</title><rect x="300.1" y="2037" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.07" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1205" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (161,020,314 samples, 0.19%)</title><rect x="1129.1" y="1653" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1132.11" y="1663.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (26,066,164 samples, 0.03%)</title><rect x="759.0" y="1765" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.04" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,500,054 samples, 0.01%)</title><rect x="1035.7" y="1877" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1038.71" y="1887.5" ></text>
</g>
<g >
<title>selinux_ip_postroute_compat (19,076,778 samples, 0.02%)</title><rect x="129.5" y="1445" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="132.52" y="1455.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (25,104,825 samples, 0.03%)</title><rect x="317.9" y="1765" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="320.85" y="1775.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,859,649,005 samples, 11.83%)</title><rect x="309.0" y="2021" width="139.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="312.03" y="2031.5" >std::thread::_Inv..</text>
</g>
<g >
<title>rndis_filter_receive (9,395,590 samples, 0.01%)</title><rect x="384.4" y="1557" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="387.36" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (249,388,923 samples, 0.30%)</title><rect x="740.6" y="2053" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.62" y="2063.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (34,236,692 samples, 0.04%)</title><rect x="64.2" y="1621" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="67.22" y="1631.5" ></text>
</g>
<g >
<title>selinux_ip_postroute (33,342,294 samples, 0.04%)</title><rect x="569.3" y="1461" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="572.29" y="1471.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (15,789,407 samples, 0.02%)</title><rect x="383.3" y="1749" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="386.27" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1509" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="295.80" y="1519.5" ></text>
</g>
<g >
<title>handle_dots (21,191,353 samples, 0.03%)</title><rect x="367.3" y="1573" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="370.25" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="165" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="175.5" ></text>
</g>
<g >
<title>net_rx_action (8,617,696 samples, 0.01%)</title><rect x="1144.3" y="1669" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1147.28" y="1679.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (36,014,230 samples, 0.04%)</title><rect x="201.3" y="1685" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="204.33" y="1695.5" ></text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (7,311,363 samples, 0.01%)</title><rect x="577.7" y="1925" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="580.68" y="1935.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char*, char*, char&gt; (51,503,194 samples, 0.06%)</title><rect x="522.5" y="1749" width="0.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="525.50" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (65,730,294 samples, 0.08%)</title><rect x="789.2" y="1765" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="792.24" y="1775.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (21,560,971 samples, 0.03%)</title><rect x="112.5" y="1781" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="115.50" y="1791.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,249,162 samples, 0.02%)</title><rect x="877.8" y="1749" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="880.79" y="1759.5" ></text>
</g>
<g >
<title>TimerManager::GetNextTick (12,228,529 samples, 0.01%)</title><rect x="1169.7" y="1909" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1172.68" y="1919.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (19,703,379 samples, 0.02%)</title><rect x="348.7" y="1717" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="351.75" y="1727.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (12,002,027 samples, 0.01%)</title><rect x="263.7" y="1605" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="266.67" y="1615.5" ></text>
</g>
<g >
<title>napi_complete_done (13,590,027 samples, 0.02%)</title><rect x="873.6" y="1781" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="876.64" y="1791.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (13,526,346 samples, 0.02%)</title><rect x="188.5" y="1733" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="191.52" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (12,721,777 samples, 0.02%)</title><rect x="652.0" y="1429" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="654.98" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1925" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (8,258,530 samples, 0.01%)</title><rect x="825.2" y="1621" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="828.22" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (10,674,439 samples, 0.01%)</title><rect x="626.0" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="628.98" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (7,220,865 samples, 0.01%)</title><rect x="993.7" y="1717" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="996.68" y="1727.5" ></text>
</g>
<g >
<title>EventLoop::IsInLoopThread (17,054,999 samples, 0.02%)</title><rect x="395.5" y="1765" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="398.53" y="1775.5" ></text>
</g>
<g >
<title>generic_permission (14,910,764 samples, 0.02%)</title><rect x="950.1" y="1573" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="953.06" y="1583.5" ></text>
</g>
<g >
<title>inode_has_perm (10,610,329 samples, 0.01%)</title><rect x="871.8" y="1621" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="874.76" y="1631.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (17,968,076 samples, 0.02%)</title><rect x="348.8" y="1701" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="351.77" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (8,925,385 samples, 0.01%)</title><rect x="1066.2" y="1605" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1069.17" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_v (12,592,278 samples, 0.02%)</title><rect x="206.7" y="1653" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="209.65" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (40,366,945 samples, 0.05%)</title><rect x="883.8" y="1845" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="886.81" y="1855.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,776,215 samples, 0.01%)</title><rect x="34.5" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="37.54" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (15,120,622 samples, 0.02%)</title><rect x="521.0" y="1781" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="523.96" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (34,624,149 samples, 0.04%)</title><rect x="648.2" y="1701" width="0.5" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="651.22" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (7,910,609 samples, 0.01%)</title><rect x="775.6" y="1765" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="778.61" y="1775.5" ></text>
</g>
<g >
<title>__fget_light (39,800,330 samples, 0.05%)</title><rect x="527.7" y="1701" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="530.72" y="1711.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,496,094 samples, 0.01%)</title><rect x="1014.3" y="1413" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1017.28" y="1423.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (11,539,969 samples, 0.01%)</title><rect x="469.8" y="1685" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="472.79" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="885" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="895.5" ></text>
</g>
<g >
<title>__napi_poll (7,810,479 samples, 0.01%)</title><rect x="246.0" y="1525" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="249.00" y="1535.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,765,702,225 samples, 11.72%)</title><rect x="895.5" y="2021" width="138.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="898.52" y="2031.5" >std::thread::_Inv..</text>
</g>
<g >
<title>handle_softirqs (7,249,479 samples, 0.01%)</title><rect x="857.0" y="1349" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="859.98" y="1359.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,699,475 samples, 0.01%)</title><rect x="387.4" y="1381" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="390.42" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (39,509,113 samples, 0.05%)</title><rect x="925.4" y="1733" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="928.43" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (132,048,527 samples, 0.16%)</title><rect x="150.6" y="2037" width="1.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.59" y="2047.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (21,547,536 samples, 0.03%)</title><rect x="980.1" y="1669" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="983.08" y="1679.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (13,527,822 samples, 0.02%)</title><rect x="1172.9" y="1605" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.87" y="1615.5" ></text>
</g>
<g >
<title>handle_softirqs (8,428,225 samples, 0.01%)</title><rect x="974.1" y="1477" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="977.10" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7,623,741 samples, 0.01%)</title><rect x="131.7" y="1461" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="134.74" y="1471.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,105,077 samples, 0.01%)</title><rect x="539.7" y="1621" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="542.70" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (11,282,531 samples, 0.01%)</title><rect x="1104.2" y="1765" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1107.18" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (27,891,788 samples, 0.03%)</title><rect x="356.2" y="1685" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="359.16" y="1695.5" ></text>
</g>
<g >
<title>lock_timer_base (13,594,473 samples, 0.02%)</title><rect x="572.0" y="1477" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="574.95" y="1487.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (9,715,073 samples, 0.01%)</title><rect x="1142.0" y="1717" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1145.02" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="485" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="495.5" ></text>
</g>
<g >
<title>selinux_file_permission (92,297,313 samples, 0.11%)</title><rect x="822.9" y="1669" width="1.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="825.88" y="1679.5" ></text>
</g>
<g >
<title>__napi_poll (13,484,539 samples, 0.02%)</title><rect x="746.0" y="1941" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="749.00" y="1951.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (10,591,316 samples, 0.01%)</title><rect x="353.0" y="1749" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="355.98" y="1759.5" ></text>
</g>
<g >
<title>path_lookupat (223,304,757 samples, 0.27%)</title><rect x="1098.4" y="1621" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1101.41" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (314,835,320 samples, 0.38%)</title><rect x="321.2" y="1733" width="4.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="324.23" y="1743.5" ></text>
</g>
<g >
<title>handle_softirqs (11,612,601 samples, 0.01%)</title><rect x="84.9" y="1685" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="87.90" y="1695.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, char*, char*&gt; (8,383,360 samples, 0.01%)</title><rect x="1112.1" y="1669" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1115.09" y="1679.5" ></text>
</g>
<g >
<title>__check_object_size (12,201,764 samples, 0.01%)</title><rect x="1148.0" y="1605" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1151.03" y="1615.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (456,566,885 samples, 0.55%)</title><rect x="979.3" y="1797" width="6.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="982.32" y="1807.5" ></text>
</g>
<g >
<title>std::function&lt;void  (344,675,628 samples, 0.41%)</title><rect x="1044.6" y="1765" width="4.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1047.57" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (10,516,382 samples, 0.01%)</title><rect x="847.9" y="1653" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="850.90" y="1663.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,484,244 samples, 0.02%)</title><rect x="853.5" y="1605" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="856.54" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="565" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="575.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="853" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="863.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (99,337,522 samples, 0.12%)</title><rect x="442.3" y="1813" width="1.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="445.30" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (17,534,189 samples, 0.02%)</title><rect x="82.6" y="1653" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="85.63" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_established (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1429" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="925.16" y="1439.5" ></text>
</g>
<g >
<title>net_rx_action (25,570,183 samples, 0.03%)</title><rect x="503.3" y="1669" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="506.29" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (11,904,538 samples, 0.01%)</title><rect x="662.7" y="1765" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="665.70" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (8,877,997 samples, 0.01%)</title><rect x="451.6" y="2037" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="454.64" y="2047.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,519,736 samples, 0.01%)</title><rect x="157.4" y="2005" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="160.42" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1461" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1471.5" ></text>
</g>
<g >
<title>pick_next_task_fair (9,709,252 samples, 0.01%)</title><rect x="880.9" y="1749" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="883.87" y="1759.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (26,367,768 samples, 0.03%)</title><rect x="1084.8" y="1637" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1087.75" y="1647.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (154,296,149 samples, 0.19%)</title><rect x="126.5" y="1381" width="2.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="129.49" y="1391.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (23,027,207 samples, 0.03%)</title><rect x="759.1" y="1733" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="762.09" y="1743.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (560,751,684 samples, 0.67%)</title><rect x="602.0" y="1797" width="8.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="605.02" y="1807.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (7,624,912 samples, 0.01%)</title><rect x="263.4" y="1605" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="266.41" y="1615.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (8,719,474 samples, 0.01%)</title><rect x="228.5" y="1733" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="231.49" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1637" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (8,233,739 samples, 0.01%)</title><rect x="908.1" y="1717" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="911.14" y="1727.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (7,451,199 samples, 0.01%)</title><rect x="1119.6" y="1605" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1122.63" y="1615.5" ></text>
</g>
<g >
<title>netvsc_poll (8,860,791 samples, 0.01%)</title><rect x="804.3" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="807.26" y="1519.5" ></text>
</g>
<g >
<title>__ip_finish_output (370,265,383 samples, 0.44%)</title><rect x="860.1" y="1461" width="5.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="863.07" y="1471.5" ></text>
</g>
<g >
<title>net_rx_action (8,589,037 samples, 0.01%)</title><rect x="225.1" y="1685" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="228.10" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,383,260 samples, 0.01%)</title><rect x="422.8" y="1189" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="425.82" y="1199.5" ></text>
</g>
<g >
<title>release_sock (19,093,945 samples, 0.02%)</title><rect x="263.6" y="1621" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="266.60" y="1631.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (8,274,387 samples, 0.01%)</title><rect x="412.2" y="1749" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="415.17" y="1759.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (42,462,996 samples, 0.05%)</title><rect x="522.6" y="1717" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="525.60" y="1727.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (10,688,113 samples, 0.01%)</title><rect x="1172.7" y="1781" width="0.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1175.70" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (13,741,186 samples, 0.02%)</title><rect x="1027.5" y="1509" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1030.51" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (12,522,417 samples, 0.02%)</title><rect x="1090.8" y="1461" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1093.83" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1365" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1375.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (12,484,600 samples, 0.01%)</title><rect x="1071.2" y="1733" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1074.20" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (17,290,569 samples, 0.02%)</title><rect x="476.5" y="1701" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="479.49" y="1711.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (13,954,589 samples, 0.02%)</title><rect x="474.3" y="1765" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="477.25" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="917" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="927.5" ></text>
</g>
<g >
<title>ep_done_scan (9,184,792 samples, 0.01%)</title><rect x="1173.4" y="1813" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1176.38" y="1823.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (8,968,174 samples, 0.01%)</title><rect x="974.6" y="1557" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="977.56" y="1567.5" ></text>
</g>
<g >
<title>vfs_statx (263,381,384 samples, 0.32%)</title><rect x="364.8" y="1653" width="3.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="367.79" y="1663.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (33,468,814 samples, 0.04%)</title><rect x="1033.1" y="1861" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1036.11" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1749" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1759.5" ></text>
</g>
<g >
<title>nft_do_chain (55,696,034 samples, 0.07%)</title><rect x="420.8" y="1445" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="423.81" y="1455.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (15,221,406 samples, 0.02%)</title><rect x="19.1" y="1733" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="22.15" y="1743.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (9,765,702,225 samples, 11.72%)</title><rect x="895.5" y="1957" width="138.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="898.52" y="1967.5" >EventLoopThread::..</text>
</g>
<g >
<title>handle_softirqs (7,062,985 samples, 0.01%)</title><rect x="35.8" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="38.79" y="1615.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (21,622,143 samples, 0.03%)</title><rect x="494.7" y="1765" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="497.66" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (232,056,126 samples, 0.28%)</title><rect x="1083.6" y="1749" width="3.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1086.55" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (21,208,322 samples, 0.03%)</title><rect x="740.1" y="1797" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="743.14" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="655.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (232,059,295 samples, 0.28%)</title><rect x="103.4" y="1797" width="3.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="106.42" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,517,942 samples, 0.01%)</title><rect x="604.0" y="1477" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="606.96" y="1487.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (10,863,375 samples, 0.01%)</title><rect x="89.8" y="1477" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="92.81" y="1487.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (362,417,843 samples, 0.43%)</title><rect x="538.1" y="1781" width="5.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="541.10" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (9,310,633 samples, 0.01%)</title><rect x="178.1" y="1765" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="181.07" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (10,953,065 samples, 0.01%)</title><rect x="321.4" y="1717" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="324.35" y="1727.5" ></text>
</g>
<g >
<title>netvsc_poll (22,127,065 samples, 0.03%)</title><rect x="290.2" y="1685" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="293.21" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;Channel&gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (8,261,474 samples, 0.01%)</title><rect x="446.7" y="1877" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="449.74" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (9,400,733 samples, 0.01%)</title><rect x="846.8" y="1749" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="849.83" y="1759.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (131,676,664 samples, 0.16%)</title><rect x="540.2" y="1621" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="543.18" y="1631.5" ></text>
</g>
<g >
<title>handle_softirqs (18,145,193 samples, 0.02%)</title><rect x="229.6" y="1733" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="232.60" y="1743.5" ></text>
</g>
<g >
<title>rndis_filter_receive (10,574,210 samples, 0.01%)</title><rect x="1176.0" y="1605" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1178.96" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,757,736 samples, 0.01%)</title><rect x="1045.5" y="1461" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1048.49" y="1471.5" ></text>
</g>
<g >
<title>HttpResponse::Clear (17,137,515 samples, 0.02%)</title><rect x="696.4" y="1781" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="699.37" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (42,184,544 samples, 0.05%)</title><rect x="356.1" y="1717" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="359.07" y="1727.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (31,661,980 samples, 0.04%)</title><rect x="380.6" y="1781" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="383.65" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (8,932,129 samples, 0.01%)</title><rect x="57.5" y="1733" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="60.54" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (20,890,749 samples, 0.03%)</title><rect x="584.4" y="1653" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="587.43" y="1663.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (12,858,304 samples, 0.02%)</title><rect x="391.3" y="1605" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="394.29" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1061" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1071.5" ></text>
</g>
<g >
<title>net_rx_action (13,484,539 samples, 0.02%)</title><rect x="746.0" y="1957" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="749.00" y="1967.5" ></text>
</g>
<g >
<title>__check_object_size (31,526,915 samples, 0.04%)</title><rect x="655.5" y="1605" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="658.54" y="1615.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (22,528,622 samples, 0.03%)</title><rect x="942.8" y="1701" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="945.77" y="1711.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,603,822 samples, 0.01%)</title><rect x="455.5" y="2005" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="458.45" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (116,622,036 samples, 0.14%)</title><rect x="992.0" y="1765" width="1.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="994.99" y="1775.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (374,007,972 samples, 0.45%)</title><rect x="979.4" y="1781" width="5.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="982.41" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (13,615,411 samples, 0.02%)</title><rect x="112.8" y="1797" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="115.80" y="1807.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,112,476 samples, 0.02%)</title><rect x="1093.1" y="1653" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1096.10" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (17,015,595 samples, 0.02%)</title><rect x="468.7" y="1701" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="471.74" y="1711.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (8,417,066 samples, 0.01%)</title><rect x="779.2" y="1749" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="782.18" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1605" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1615.5" ></text>
</g>
<g >
<title>vfs_fstatat (461,630,394 samples, 0.55%)</title><rect x="211.4" y="1669" width="6.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="214.37" y="1679.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (832,853,664 samples, 1.00%)</title><rect x="797.9" y="1765" width="11.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="800.88" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10,925,130 samples, 0.01%)</title><rect x="793.3" y="1685" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="796.27" y="1695.5" ></text>
</g>
<g >
<title>memcpy_orig (17,397,051 samples, 0.02%)</title><rect x="425.0" y="1349" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="428.01" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (22,601,090 samples, 0.03%)</title><rect x="48.5" y="1765" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="51.47" y="1775.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (25,582,186 samples, 0.03%)</title><rect x="128.7" y="1397" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="131.73" y="1407.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,310,689 samples, 0.01%)</title><rect x="112.6" y="1637" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="115.55" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (33,298,373 samples, 0.04%)</title><rect x="549.3" y="1733" width="0.5" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="552.29" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (8,001,565 samples, 0.01%)</title><rect x="394.5" y="1813" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="397.45" y="1823.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,172,978 samples, 0.01%)</title><rect x="99.0" y="1589" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="102.02" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (16,419,506 samples, 0.02%)</title><rect x="162.0" y="1589" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="165.02" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (5,889,460,427 samples, 7.07%)</title><rect x="1043.3" y="1877" width="83.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1046.27" y="1887.5" >std::_Fun..</text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (13,547,466 samples, 0.02%)</title><rect x="325.8" y="1765" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="328.79" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="85" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="95.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (15,242,049 samples, 0.02%)</title><rect x="1143.1" y="1797" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1146.15" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (13,923,467 samples, 0.02%)</title><rect x="372.8" y="1765" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="375.76" y="1775.5" ></text>
</g>
<g >
<title>__strlen_avx2 (13,184,774 samples, 0.02%)</title><rect x="591.8" y="2021" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="594.82" y="2031.5" ></text>
</g>
<g >
<title>__napi_poll (7,386,516 samples, 0.01%)</title><rect x="972.7" y="1525" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="975.66" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (17,177,571 samples, 0.02%)</title><rect x="1077.3" y="1765" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1080.32" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1141" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1151.5" ></text>
</g>
<g >
<title>net_rx_action (7,160,300 samples, 0.01%)</title><rect x="33.3" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="36.32" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1573" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1583.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (26,316,637 samples, 0.03%)</title><rect x="584.4" y="1717" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="587.37" y="1727.5" ></text>
</g>
<g >
<title>std::mutex::lock (15,493,907 samples, 0.02%)</title><rect x="738.7" y="1893" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="741.69" y="1903.5" ></text>
</g>
<g >
<title>__napi_poll (10,598,624 samples, 0.01%)</title><rect x="208.2" y="1653" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="211.19" y="1663.5" ></text>
</g>
<g >
<title>__qdisc_run (15,111,835 samples, 0.02%)</title><rect x="1008.2" y="1413" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1011.16" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (31,230,051 samples, 0.04%)</title><rect x="648.3" y="1669" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="651.25" y="1679.5" ></text>
</g>
<g >
<title>release_sock (20,667,278 samples, 0.02%)</title><rect x="706.3" y="1621" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="709.26" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (7,196,704 samples, 0.01%)</title><rect x="46.3" y="1621" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="49.27" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1749" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1759.5" ></text>
</g>
<g >
<title>__seccomp_filter (16,621,950 samples, 0.02%)</title><rect x="527.0" y="1717" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="529.96" y="1727.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (15,450,957 samples, 0.02%)</title><rect x="1109.1" y="1781" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1112.13" y="1791.5" ></text>
</g>
<g >
<title>irq_exit_rcu (26,699,885 samples, 0.03%)</title><rect x="357.7" y="1717" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="360.73" y="1727.5" ></text>
</g>
<g >
<title>napi_complete_done (8,310,689 samples, 0.01%)</title><rect x="112.6" y="1669" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="115.55" y="1679.5" ></text>
</g>
<g >
<title>rep_movs_alternative (24,338,423 samples, 0.03%)</title><rect x="92.6" y="1557" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="95.61" y="1567.5" ></text>
</g>
<g >
<title>__alloc_skb (91,419,816 samples, 0.11%)</title><rect x="133.3" y="1589" width="1.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="136.29" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (7,425,796 samples, 0.01%)</title><rect x="36.9" y="1765" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="39.88" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (14,435,564 samples, 0.02%)</title><rect x="14.0" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="17.03" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="917" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="927.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,207,254 samples, 0.01%)</title><rect x="668.4" y="1765" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="671.42" y="1775.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (9,060,119 samples, 0.01%)</title><rect x="925.8" y="1685" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="928.84" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (99,611,485 samples, 0.12%)</title><rect x="408.2" y="1749" width="1.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="411.16" y="1759.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (7,260,875 samples, 0.01%)</title><rect x="815.1" y="1781" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="818.14" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (35,773,603 samples, 0.04%)</title><rect x="964.7" y="1797" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="967.66" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (78,711,248 samples, 0.09%)</title><rect x="545.0" y="1717" width="1.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="547.97" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (33,154,624 samples, 0.04%)</title><rect x="401.4" y="1765" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="404.38" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (8,468,222 samples, 0.01%)</title><rect x="549.5" y="1669" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="552.53" y="1679.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (11,875,140 samples, 0.01%)</title><rect x="1012.2" y="1461" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1015.17" y="1471.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (9,453,944 samples, 0.01%)</title><rect x="397.0" y="1477" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="400.03" y="1487.5" ></text>
</g>
<g >
<title>HttpRouter::Route (10,658,614 samples, 0.01%)</title><rect x="78.9" y="1797" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="81.93" y="1807.5" ></text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (8,448,946 samples, 0.01%)</title><rect x="524.0" y="1813" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="527.05" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (7,386,516 samples, 0.01%)</title><rect x="972.7" y="1541" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="975.66" y="1551.5" ></text>
</g>
<g >
<title>sock_def_readable (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1061" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="430.41" y="1071.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (812,452,482 samples, 0.97%)</title><rect x="1150.2" y="1525" width="11.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1153.24" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (12,376,308 samples, 0.01%)</title><rect x="1155.9" y="1141" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1158.87" y="1151.5" ></text>
</g>
<g >
<title>irq_exit_rcu (22,034,405 samples, 0.03%)</title><rect x="964.3" y="1765" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="967.27" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (21,030,750 samples, 0.03%)</title><rect x="674.3" y="1669" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="677.27" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1461" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="597" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="607.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (25,922,154 samples, 0.03%)</title><rect x="312.6" y="1637" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="315.61" y="1647.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (36,478,201 samples, 0.04%)</title><rect x="463.2" y="1589" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="466.17" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1637" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1647.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (7,572,190 samples, 0.01%)</title><rect x="1173.4" y="1781" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1176.38" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (450,378,242 samples, 0.54%)</title><rect x="1061.7" y="1733" width="6.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1064.73" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,968,086 samples, 0.01%)</title><rect x="1167.1" y="1605" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1170.05" y="1615.5" ></text>
</g>
<g >
<title>lock_sock_nested (15,248,314 samples, 0.02%)</title><rect x="851.5" y="1621" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="854.50" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (9,422,144 samples, 0.01%)</title><rect x="944.6" y="1541" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="947.60" y="1551.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (23,082,151 samples, 0.03%)</title><rect x="934.7" y="1701" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="937.75" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (14,988,025 samples, 0.02%)</title><rect x="475.3" y="1765" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="478.30" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (15,939,059 samples, 0.02%)</title><rect x="591.1" y="37" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="594.08" y="47.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, char*&gt; (33,106,005 samples, 0.04%)</title><rect x="817.0" y="1701" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="819.98" y="1711.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,140,667 samples, 0.01%)</title><rect x="1071.8" y="1701" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1074.79" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (21,913,277 samples, 0.03%)</title><rect x="59.1" y="1685" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="62.09" y="1695.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (21,375,833 samples, 0.03%)</title><rect x="213.1" y="1557" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="216.13" y="1567.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (11,341,307 samples, 0.01%)</title><rect x="105.4" y="1701" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="108.38" y="1711.5" ></text>
</g>
<g >
<title>vmbus_sendpacket (7,991,799 samples, 0.01%)</title><rect x="478.3" y="1525" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="481.28" y="1535.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (31,169,463 samples, 0.04%)</title><rect x="299.3" y="1813" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="302.28" y="1823.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (539,013,736 samples, 0.65%)</title><rect x="1094.0" y="1685" width="7.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1097.04" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1829" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1653" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="925.16" y="1663.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (66,293,964 samples, 0.08%)</title><rect x="124.5" y="1397" width="1.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="127.54" y="1407.5" ></text>
</g>
<g >
<title>net_rx_action (11,433,348 samples, 0.01%)</title><rect x="1152.0" y="1333" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1155.03" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7,911,046 samples, 0.01%)</title><rect x="1024.6" y="1301" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1027.57" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::clear (35,537,327 samples, 0.04%)</title><rect x="149.7" y="1925" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="152.71" y="1935.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (41,822,290 samples, 0.05%)</title><rect x="1085.6" y="1717" width="0.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1088.55" y="1727.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,760,778 samples, 0.01%)</title><rect x="598.2" y="1989" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="601.19" y="1999.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (19,382,628 samples, 0.02%)</title><rect x="641.2" y="1701" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="644.19" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (93,250,820 samples, 0.11%)</title><rect x="1056.0" y="1669" width="1.3" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="1059.01" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (229,367,010 samples, 0.28%)</title><rect x="396.4" y="1669" width="3.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="399.37" y="1679.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (12,322,232 samples, 0.01%)</title><rect x="231.7" y="1493" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="234.71" y="1503.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (94,233,664 samples, 0.11%)</title><rect x="1175.0" y="1797" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1178.01" y="1807.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (32,164,246 samples, 0.04%)</title><rect x="1033.1" y="1781" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1036.13" y="1791.5" ></text>
</g>
<g >
<title>__put_user_nocheck_4 (10,197,767 samples, 0.01%)</title><rect x="1170.4" y="1829" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1173.39" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (19,451,524 samples, 0.02%)</title><rect x="573.7" y="1557" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="576.69" y="1567.5" ></text>
</g>
<g >
<title>tcp_recvmsg (317,876,247 samples, 0.38%)</title><rect x="970.7" y="1653" width="4.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="973.67" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1349" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1359.5" ></text>
</g>
<g >
<title>operator new (7,694,529 samples, 0.01%)</title><rect x="516.5" y="1749" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="519.49" y="1759.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (21,562,454 samples, 0.03%)</title><rect x="1181.5" y="1781" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1184.45" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (334,083,290 samples, 0.40%)</title><rect x="97.9" y="1717" width="4.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="100.86" y="1727.5" ></text>
</g>
<g >
<title>operator new (15,278,608 samples, 0.02%)</title><rect x="893.9" y="2053" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="896.93" y="2063.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (7,918,646 samples, 0.01%)</title><rect x="384.4" y="1541" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="387.38" y="1551.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,362,952 samples, 0.01%)</title><rect x="966.5" y="1493" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="969.46" y="1503.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (9,137,745 samples, 0.01%)</title><rect x="777.9" y="1573" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="780.94" y="1583.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,642,282 samples, 0.01%)</title><rect x="670.5" y="1605" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="673.47" y="1615.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,398,550 samples, 0.01%)</title><rect x="265.4" y="1589" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="268.37" y="1599.5" ></text>
</g>
<g >
<title>sock_poll (28,549,658 samples, 0.03%)</title><rect x="315.0" y="1573" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="317.98" y="1583.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (7,533,120 samples, 0.01%)</title><rect x="674.8" y="1749" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="677.84" y="1759.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (11,611,382 samples, 0.01%)</title><rect x="373.4" y="1781" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="376.35" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (13,121,803 samples, 0.02%)</title><rect x="731.9" y="1525" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="734.94" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="277" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="287.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (40,467,144 samples, 0.05%)</title><rect x="590.1" y="1797" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="593.06" y="1807.5" ></text>
</g>
<g >
<title>netvsc_poll (7,062,985 samples, 0.01%)</title><rect x="35.8" y="1557" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="38.79" y="1567.5" ></text>
</g>
<g >
<title>__napi_poll (23,158,489 samples, 0.03%)</title><rect x="141.4" y="1701" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="144.45" y="1711.5" ></text>
</g>
<g >
<title>__GI___pthread_self (7,354,472 samples, 0.01%)</title><rect x="97.6" y="1749" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="100.62" y="1759.5" ></text>
</g>
<g >
<title>__napi_poll (11,224,105 samples, 0.01%)</title><rect x="233.3" y="1589" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="236.30" y="1599.5" ></text>
</g>
<g >
<title>netvsc_poll (7,628,560 samples, 0.01%)</title><rect x="1095.0" y="1493" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1098.00" y="1503.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::find (108,643,626 samples, 0.13%)</title><rect x="1178.0" y="1909" width="1.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1181.00" y="1919.5" ></text>
</g>
<g >
<title>Channel::OnRead (5,785,391,241 samples, 6.94%)</title><rect x="896.5" y="1909" width="81.9" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="899.49" y="1919.5" >Channel::..</text>
</g>
<g >
<title>net_rx_action (19,021,499 samples, 0.02%)</title><rect x="387.3" y="1541" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="390.34" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (60,031,294 samples, 0.07%)</title><rect x="1082.3" y="1733" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1085.31" y="1743.5" ></text>
</g>
<g >
<title>x64_sys_call (476,251,955 samples, 0.57%)</title><rect x="652.8" y="1717" width="6.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="655.83" y="1727.5" ></text>
</g>
<g >
<title>__fdget_pos (41,315,861 samples, 0.05%)</title><rect x="261.4" y="1717" width="0.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="264.36" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (8,878,656 samples, 0.01%)</title><rect x="157.8" y="2037" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="160.81" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (7,751,435 samples, 0.01%)</title><rect x="754.0" y="1541" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="757.04" y="1551.5" ></text>
</g>
<g >
<title>napi_complete_done (9,990,250 samples, 0.01%)</title><rect x="233.3" y="1557" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="236.30" y="1567.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (10,306,909 samples, 0.01%)</title><rect x="704.6" y="1685" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="707.61" y="1695.5" ></text>
</g>
<g >
<title>handle_softirqs (12,757,239 samples, 0.02%)</title><rect x="439.9" y="1733" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="442.94" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1237" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1247.5" ></text>
</g>
<g >
<title>netvsc_poll (10,231,219 samples, 0.01%)</title><rect x="538.8" y="1557" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="541.77" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="325" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (32,164,246 samples, 0.04%)</title><rect x="1033.1" y="1829" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1036.13" y="1839.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (6,009,852,267 samples, 7.21%)</title><rect x="11.7" y="1845" width="85.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="14.73" y="1855.5" >std::__inv..</text>
</g>
<g >
<title>vmbus_next_request_id (11,861,370 samples, 0.01%)</title><rect x="276.6" y="1285" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="279.60" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (78,112,446 samples, 0.09%)</title><rect x="1124.5" y="1797" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1127.52" y="1807.5" ></text>
</g>
<g >
<title>irq_exit_rcu (15,989,192 samples, 0.02%)</title><rect x="688.0" y="1637" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="691.05" y="1647.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,590,027 samples, 0.02%)</title><rect x="873.6" y="1893" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="876.64" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (9,859,649,005 samples, 11.83%)</title><rect x="309.0" y="1989" width="139.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="312.03" y="1999.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>napi_complete_done (10,436,407 samples, 0.01%)</title><rect x="584.4" y="1605" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="587.43" y="1615.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (36,237,726 samples, 0.04%)</title><rect x="497.6" y="1685" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="500.58" y="1695.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (33,574,250 samples, 0.04%)</title><rect x="643.3" y="1653" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="646.33" y="1663.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (19,572,108 samples, 0.02%)</title><rect x="1112.0" y="1717" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1114.98" y="1727.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (12,180,482 samples, 0.01%)</title><rect x="141.2" y="1653" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="144.21" y="1663.5" ></text>
</g>
<g >
<title>netvsc_send_pkt (10,162,208 samples, 0.01%)</title><rect x="273.4" y="1317" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="276.40" y="1327.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (11,025,842 samples, 0.01%)</title><rect x="58.6" y="1637" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="61.56" y="1647.5" ></text>
</g>
<g >
<title>netvsc_poll (16,666,345 samples, 0.02%)</title><rect x="229.6" y="1685" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="232.60" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (25,592,022 samples, 0.03%)</title><rect x="1133.5" y="1765" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1136.53" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (100,830,429 samples, 0.12%)</title><rect x="845.3" y="1749" width="1.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="848.31" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="261" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="271.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (105,522,739 samples, 0.13%)</title><rect x="582.2" y="1813" width="1.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="585.22" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (25,098,158 samples, 0.03%)</title><rect x="144.2" y="1509" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="147.19" y="1519.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (16,784,169 samples, 0.02%)</title><rect x="410.9" y="1781" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="413.91" y="1791.5" ></text>
</g>
<g >
<title>_int_malloc (53,119,784 samples, 0.06%)</title><rect x="1038.1" y="2053" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1041.10" y="2063.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@@GLIBC_2.2.5 (20,915,652 samples, 0.03%)</title><rect x="1180.0" y="1877" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1182.96" y="1887.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (9,662,509,531 samples, 11.59%)</title><rect x="749.9" y="1973" width="136.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="752.91" y="1983.5" >std::__invoke_imp..</text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_v (8,776,219 samples, 0.01%)</title><rect x="501.9" y="1653" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="504.87" y="1663.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,060,119 samples, 0.01%)</title><rect x="925.8" y="1605" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="928.84" y="1615.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (20,411,092 samples, 0.02%)</title><rect x="695.6" y="1701" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="698.64" y="1711.5" ></text>
</g>
<g >
<title>_copy_to_iter (26,042,038 samples, 0.03%)</title><rect x="533.3" y="1573" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="536.27" y="1583.5" ></text>
</g>
<g >
<title>netvsc_send_pkt (83,434,141 samples, 0.10%)</title><rect x="127.5" y="1333" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="130.45" y="1343.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (8,630,904 samples, 0.01%)</title><rect x="940.4" y="1701" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="943.39" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (9,210,023 samples, 0.01%)</title><rect x="1189.3" y="2053" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1192.25" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7,513,023 samples, 0.01%)</title><rect x="1175.6" y="1413" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1178.59" y="1423.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (8,832,762 samples, 0.01%)</title><rect x="844.6" y="1669" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="847.59" y="1679.5" ></text>
</g>
<g >
<title>netvsc_poll (12,390,735 samples, 0.01%)</title><rect x="13.2" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="16.24" y="1567.5" ></text>
</g>
<g >
<title>ep_poll_callback (7,283,500 samples, 0.01%)</title><rect x="144.4" y="1333" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="147.42" y="1343.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,025,962 samples, 0.01%)</title><rect x="382.7" y="1573" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="385.71" y="1583.5" ></text>
</g>
<g >
<title>Channel::OnWrite (2,874,938,650 samples, 3.45%)</title><rect x="96.8" y="1909" width="40.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="99.82" y="1919.5" >Cha..</text>
</g>
<g >
<title>kmem_cache_free (11,532,950 samples, 0.01%)</title><rect x="91.9" y="1589" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="94.92" y="1599.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (14,328,788 samples, 0.02%)</title><rect x="1112.1" y="1685" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1115.06" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (629,151,339 samples, 0.75%)</title><rect x="650.7" y="1749" width="8.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="653.70" y="1759.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1845" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="747.77" y="1855.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1749" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="171.38" y="1759.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1381" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1002.78" y="1391.5" ></text>
</g>
<g >
<title>std::function&lt;void  (447,682,792 samples, 0.54%)</title><rect x="602.5" y="1765" width="6.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="605.54" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (18,629,895 samples, 0.02%)</title><rect x="406.7" y="1781" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="409.73" y="1791.5" ></text>
</g>
<g >
<title>_copy_from_iter (44,012,340 samples, 0.05%)</title><rect x="852.9" y="1605" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="855.91" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="213" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="223.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (10,247,924 samples, 0.01%)</title><rect x="1177.5" y="1909" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1180.50" y="1919.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (740,138,464 samples, 0.89%)</title><rect x="1169.4" y="1925" width="10.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1172.36" y="1935.5" ></text>
</g>
<g >
<title>netvsc_poll (8,050,396 samples, 0.01%)</title><rect x="583.4" y="1669" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="586.36" y="1679.5" ></text>
</g>
<g >
<title>__fget_light (7,316,784 samples, 0.01%)</title><rect x="901.2" y="1589" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="904.19" y="1599.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (164,392,980 samples, 0.20%)</title><rect x="1021.7" y="1797" width="2.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1024.67" y="1807.5" ></text>
</g>
<g >
<title>ip_list_rcv (15,669,777 samples, 0.02%)</title><rect x="141.5" y="1589" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="144.53" y="1599.5" ></text>
</g>
<g >
<title>inode_permission (96,305,171 samples, 0.12%)</title><rect x="365.6" y="1589" width="1.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="368.63" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,667,145,289 samples, 2.00%)</title><rect x="848.7" y="1781" width="23.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="851.72" y="1791.5" >d..</text>
</g>
<g >
<title>Server::HandlerNewConn (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1717" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="171.38" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (17,130,646 samples, 0.02%)</title><rect x="250.2" y="1749" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="253.23" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (12,313,604 samples, 0.01%)</title><rect x="229.6" y="1653" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="232.60" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1973" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (12,235,863 samples, 0.01%)</title><rect x="213.2" y="1317" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="216.21" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1349" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (12,778,135 samples, 0.02%)</title><rect x="616.8" y="1701" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="619.83" y="1711.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, char*, char*&gt; (7,919,750 samples, 0.01%)</title><rect x="523.4" y="1669" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="526.41" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="933" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="943.5" ></text>
</g>
<g >
<title>security_file_permission (38,359,415 samples, 0.05%)</title><rect x="1017.8" y="1669" width="0.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1020.79" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (8,969,590 samples, 0.01%)</title><rect x="36.6" y="1717" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="39.58" y="1727.5" ></text>
</g>
<g >
<title>selinux_file_permission (12,378,859 samples, 0.01%)</title><rect x="678.0" y="1685" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="681.02" y="1695.5" ></text>
</g>
<g >
<title>hv_ringbuffer_write (50,270,921 samples, 0.06%)</title><rect x="863.9" y="1301" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="866.89" y="1311.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (16,509,995 samples, 0.02%)</title><rect x="503.3" y="1605" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="506.29" y="1615.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (9,593,055 samples, 0.01%)</title><rect x="177.5" y="1765" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="180.48" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (21,736,201 samples, 0.03%)</title><rect x="818.8" y="1717" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="821.79" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (99,702,269 samples, 0.12%)</title><rect x="955.4" y="1765" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="958.45" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (19,116,311 samples, 0.02%)</title><rect x="345.5" y="1765" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="348.53" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::empty (12,546,569 samples, 0.02%)</title><rect x="929.8" y="1765" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="932.82" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (13,000,328 samples, 0.02%)</title><rect x="343.9" y="1765" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="346.91" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (44,482,991 samples, 0.05%)</title><rect x="1139.3" y="1733" width="0.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1142.28" y="1743.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (26,721,680 samples, 0.03%)</title><rect x="962.4" y="1653" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="965.35" y="1663.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (20,608,838 samples, 0.02%)</title><rect x="962.8" y="1749" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="965.76" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (50,324,296 samples, 0.06%)</title><rect x="1141.0" y="1701" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1144.03" y="1711.5" ></text>
</g>
<g >
<title>rw_verify_area (126,241,587 samples, 0.15%)</title><rect x="968.4" y="1701" width="1.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="971.38" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node_ptr (50,027,056 samples, 0.06%)</title><rect x="694.9" y="1701" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="697.90" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (7,614,538 samples, 0.01%)</title><rect x="79.1" y="1797" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="82.08" y="1807.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (9,082,956 samples, 0.01%)</title><rect x="806.5" y="1573" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="809.48" y="1583.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (7,730,719 samples, 0.01%)</title><rect x="749.7" y="2037" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="752.67" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (52,067,552 samples, 0.06%)</title><rect x="1155.6" y="1349" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1158.56" y="1359.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (215,532,771 samples, 0.26%)</title><rect x="632.8" y="1717" width="3.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="635.85" y="1727.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (26,822,597 samples, 0.03%)</title><rect x="791.9" y="1653" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="794.89" y="1663.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,236,466 samples, 0.01%)</title><rect x="158.3" y="2037" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="161.26" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (14,827,730 samples, 0.02%)</title><rect x="60.5" y="1589" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="63.49" y="1599.5" ></text>
</g>
<g >
<title>rw_verify_area (66,920,475 samples, 0.08%)</title><rect x="725.6" y="1685" width="0.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="728.56" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (10,863,323 samples, 0.01%)</title><rect x="503.3" y="1461" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="506.29" y="1471.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,925,385 samples, 0.01%)</title><rect x="1066.2" y="1637" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1069.17" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (11,066,933 samples, 0.01%)</title><rect x="980.2" y="1397" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="983.18" y="1407.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (40,116,122 samples, 0.05%)</title><rect x="565.4" y="1413" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="568.44" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (17,575,450 samples, 0.02%)</title><rect x="1041.2" y="2053" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1044.21" y="2063.5" ></text>
</g>
<g >
<title>handle_softirqs (7,507,946 samples, 0.01%)</title><rect x="193.9" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="196.87" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (555,067,681 samples, 0.67%)</title><rect x="1020.9" y="1893" width="7.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1023.90" y="1903.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (23,346,406 samples, 0.03%)</title><rect x="20.4" y="1765" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="23.38" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (121,104,338 samples, 0.15%)</title><rect x="740.8" y="2037" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.78" y="2047.5" ></text>
</g>
<g >
<title>clear_bhb_loop (10,665,327 samples, 0.01%)</title><rect x="539.5" y="1653" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="542.45" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::erase (42,318,142 samples, 0.05%)</title><rect x="636.7" y="1765" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="639.67" y="1775.5" ></text>
</g>
<g >
<title>operator new (11,915,305 samples, 0.01%)</title><rect x="956.1" y="1749" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="959.08" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (14,058,781 samples, 0.02%)</title><rect x="82.6" y="1557" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="85.65" y="1567.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (12,496,941 samples, 0.01%)</title><rect x="1115.5" y="1749" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1118.48" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_begin (8,273,878 samples, 0.01%)</title><rect x="466.8" y="1733" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="469.83" y="1743.5" ></text>
</g>
<g >
<title>ip_output (494,904,350 samples, 0.59%)</title><rect x="1154.5" y="1493" width="7.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1157.50" y="1503.5" ></text>
</g>
<g >
<title>ksys_read (567,966,636 samples, 0.68%)</title><rect x="232.7" y="1733" width="8.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="235.72" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_comp_iter&lt;char const*&gt; (9,115,464 samples, 0.01%)</title><rect x="486.2" y="1749" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="489.24" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_M_next (20,042,820 samples, 0.02%)</title><rect x="694.5" y="1717" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="697.49" y="1727.5" ></text>
</g>
<g >
<title>netvsc_poll (7,819,499 samples, 0.01%)</title><rect x="839.7" y="1589" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="842.66" y="1599.5" ></text>
</g>
<g >
<title>__memchr_avx2 (19,978,197 samples, 0.02%)</title><rect x="1185.2" y="2053" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1188.17" y="2063.5" ></text>
</g>
<g >
<title>__memchr_avx2 (19,048,995 samples, 0.02%)</title><rect x="744.2" y="2053" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="747.16" y="2063.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (13,121,803 samples, 0.02%)</title><rect x="731.9" y="1509" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="734.94" y="1519.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,147,124 samples, 0.01%)</title><rect x="429.5" y="1445" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="432.49" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1317" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1327.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (11,062,697 samples, 0.01%)</title><rect x="568.8" y="1397" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="571.81" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1221" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1231.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (52,363,482 samples, 0.06%)</title><rect x="1084.6" y="1653" width="0.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1087.59" y="1663.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,635,533 samples, 0.01%)</title><rect x="181.6" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="184.59" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1429" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="357" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="367.5" ></text>
</g>
<g >
<title>rndis_filter_receive (10,863,375 samples, 0.01%)</title><rect x="89.8" y="1493" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="92.81" y="1503.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (18,513,923 samples, 0.02%)</title><rect x="971.0" y="1605" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="974.04" y="1615.5" ></text>
</g>
<g >
<title>_int_malloc (65,559,421 samples, 0.08%)</title><rect x="745.3" y="2053" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="748.29" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (8,107,049 samples, 0.01%)</title><rect x="592.5" y="2021" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="595.50" y="2031.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,340,280 samples, 0.02%)</title><rect x="541.2" y="1557" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="544.15" y="1567.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1701" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="295.80" y="1711.5" ></text>
</g>
<g >
<title>__napi_poll (9,755,903 samples, 0.01%)</title><rect x="857.9" y="1317" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="860.87" y="1327.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (11,934,288 samples, 0.01%)</title><rect x="307.1" y="2037" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="310.08" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,689,966,945 samples, 2.03%)</title><rect x="703.0" y="1797" width="24.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="706.04" y="1807.5" >e..</text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (8,175,998 samples, 0.01%)</title><rect x="1050.7" y="1685" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1053.69" y="1695.5" ></text>
</g>
<g >
<title>_copy_from_iter (36,045,303 samples, 0.04%)</title><rect x="707.5" y="1605" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="710.47" y="1615.5" ></text>
</g>
<g >
<title>handle_softirqs (21,560,971 samples, 0.03%)</title><rect x="112.5" y="1733" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="115.50" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1685" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1695.5" ></text>
</g>
<g >
<title>vmbus_sendpacket (57,568,042 samples, 0.07%)</title><rect x="863.8" y="1317" width="0.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="866.84" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (50,762,805 samples, 0.06%)</title><rect x="616.7" y="1717" width="0.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="619.73" y="1727.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (10,292,015 samples, 0.01%)</title><rect x="578.6" y="1861" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="581.63" y="1871.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (7,252,768 samples, 0.01%)</title><rect x="259.4" y="1813" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="262.40" y="1823.5" ></text>
</g>
<g >
<title>___slab_alloc (8,620,374 samples, 0.01%)</title><rect x="1017.0" y="1541" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1019.96" y="1551.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (8,137,169 samples, 0.01%)</title><rect x="402.1" y="1637" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="405.14" y="1647.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,094,779 samples, 0.01%)</title><rect x="662.8" y="1749" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="665.76" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (382,638,760 samples, 0.46%)</title><rect x="913.9" y="1717" width="5.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="916.92" y="1727.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,072,047 samples, 0.01%)</title><rect x="28.8" y="1717" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="31.79" y="1727.5" ></text>
</g>
<g >
<title>detach_if_pending (7,201,007 samples, 0.01%)</title><rect x="280.1" y="1477" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="283.09" y="1487.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (8,618,941 samples, 0.01%)</title><rect x="222.6" y="1781" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="225.65" y="1791.5" ></text>
</g>
<g >
<title>sock_read_iter (386,176,552 samples, 0.46%)</title><rect x="824.4" y="1701" width="5.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="827.37" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (27,991,444 samples, 0.03%)</title><rect x="236.3" y="1621" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="239.33" y="1631.5" ></text>
</g>
<g >
<title>[web-server] (12,248,380 samples, 0.01%)</title><rect x="107.6" y="1765" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="110.55" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (7,979,472 samples, 0.01%)</title><rect x="599.2" y="2053" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="602.22" y="2063.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_erase_at_end (8,462,250 samples, 0.01%)</title><rect x="930.6" y="1733" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="933.63" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (58,880,465 samples, 0.07%)</title><rect x="700.2" y="1717" width="0.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="703.19" y="1727.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (11,025,626 samples, 0.01%)</title><rect x="825.0" y="1589" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="827.98" y="1599.5" ></text>
</g>
<g >
<title>__napi_poll (14,925,628 samples, 0.02%)</title><rect x="463.0" y="1493" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="465.96" y="1503.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (28,346,751 samples, 0.03%)</title><rect x="141.4" y="1797" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="144.40" y="1807.5" ></text>
</g>
<g >
<title>Channel::OnEvents (8,506,292,617 samples, 10.21%)</title><rect x="457.2" y="1925" width="120.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="460.19" y="1935.5" >Channel::OnEvents</text>
</g>
<g >
<title>_raw_spin_unlock_bh (23,662,994 samples, 0.03%)</title><rect x="679.0" y="1621" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="681.98" y="1631.5" ></text>
</g>
<g >
<title>inet_recvmsg (274,881,645 samples, 0.33%)</title><rect x="236.0" y="1669" width="3.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="239.05" y="1679.5" ></text>
</g>
<g >
<title>__seccomp_filter (16,852,076 samples, 0.02%)</title><rect x="652.3" y="1669" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="655.33" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (23,147,355 samples, 0.03%)</title><rect x="403.6" y="1685" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="406.65" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="469" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="479.5" ></text>
</g>
<g >
<title>tcp_current_mss (18,035,355 samples, 0.02%)</title><rect x="869.2" y="1589" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="872.19" y="1599.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc_cs (16,746,648 samples, 0.02%)</title><rect x="570.6" y="1557" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="573.59" y="1567.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (24,696,909 samples, 0.03%)</title><rect x="1181.4" y="1797" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1184.41" y="1807.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1477" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="782.08" y="1487.5" ></text>
</g>
<g >
<title>sock_rfree (7,213,882 samples, 0.01%)</title><rect x="1122.6" y="1621" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1125.56" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (15,207,892 samples, 0.02%)</title><rect x="168.0" y="1717" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="171.03" y="1727.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (32,159,390 samples, 0.04%)</title><rect x="798.0" y="1701" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="801.04" y="1711.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,776,215 samples, 0.01%)</title><rect x="34.5" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="37.54" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (23,774,436 samples, 0.03%)</title><rect x="940.5" y="1685" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="943.53" y="1695.5" ></text>
</g>
<g >
<title>pick_next_task_fair (13,251,855 samples, 0.02%)</title><rect x="443.4" y="1749" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="446.42" y="1759.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (9,104,406 samples, 0.01%)</title><rect x="610.1" y="1605" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="613.11" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (9,989,484 samples, 0.01%)</title><rect x="1060.9" y="1765" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1063.87" y="1775.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (38,019,371 samples, 0.05%)</title><rect x="498.7" y="1717" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="501.67" y="1727.5" ></text>
</g>
<g >
<title>__napi_poll (14,808,734 samples, 0.02%)</title><rect x="162.0" y="1573" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="165.04" y="1583.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (9,012,423 samples, 0.01%)</title><rect x="499.5" y="1733" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="502.51" y="1743.5" ></text>
</g>
<g >
<title>[web-server] (15,466,183 samples, 0.02%)</title><rect x="474.4" y="1765" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="477.45" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1493" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1503.5" ></text>
</g>
<g >
<title>tcp_rcv_established (7,485,479 samples, 0.01%)</title><rect x="565.1" y="1125" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="568.06" y="1135.5" ></text>
</g>
<g >
<title>__do_softirq (12,901,362 samples, 0.02%)</title><rect x="1119.4" y="1573" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1122.42" y="1583.5" ></text>
</g>
<g >
<title>netvsc_poll (8,496,094 samples, 0.01%)</title><rect x="1014.3" y="1349" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1017.28" y="1359.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (12,433,896 samples, 0.01%)</title><rect x="76.1" y="1781" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="79.12" y="1791.5" ></text>
</g>
<g >
<title>handle_softirqs (7,547,446 samples, 0.01%)</title><rect x="1024.0" y="1733" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1027.00" y="1743.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (12,052,157 samples, 0.01%)</title><rect x="62.5" y="1717" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="65.46" y="1727.5" ></text>
</g>
<g >
<title>do_syscall_64 (247,975,452 samples, 0.30%)</title><rect x="899.1" y="1653" width="3.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="902.10" y="1663.5" ></text>
</g>
<g >
<title>napi_complete_done (7,757,736 samples, 0.01%)</title><rect x="1045.5" y="1493" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1048.49" y="1503.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (9,423,703 samples, 0.01%)</title><rect x="682.1" y="1621" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="685.13" y="1631.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (10,122,227 samples, 0.01%)</title><rect x="987.4" y="1685" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="990.39" y="1695.5" ></text>
</g>
<g >
<title>netvsc_xmit (9,029,011 samples, 0.01%)</title><rect x="125.5" y="1349" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="128.50" y="1359.5" ></text>
</g>
<g >
<title>tcp_rcv_established (7,757,952 samples, 0.01%)</title><rect x="944.6" y="1397" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="947.60" y="1407.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,052,862 samples, 0.01%)</title><rect x="380.8" y="1541" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="383.79" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (13,611,749 samples, 0.02%)</title><rect x="167.6" y="1749" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="170.58" y="1759.5" ></text>
</g>
<g >
<title>x64_sys_call (123,149,184 samples, 0.15%)</title><rect x="835.2" y="1637" width="1.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="838.22" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (12,690,715 samples, 0.02%)</title><rect x="131.1" y="1477" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="134.13" y="1487.5" ></text>
</g>
<g >
<title>__napi_poll (14,878,351 samples, 0.02%)</title><rect x="652.0" y="1605" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="654.98" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (37,869,669 samples, 0.05%)</title><rect x="906.9" y="1733" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="909.94" y="1743.5" ></text>
</g>
<g >
<title>do_syscall_64 (643,009,084 samples, 0.77%)</title><rect x="1092.6" y="1733" width="9.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1095.60" y="1743.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (18,411,599 samples, 0.02%)</title><rect x="1107.0" y="1781" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1109.96" y="1791.5" ></text>
</g>
<g >
<title>__fdget (28,078,400 samples, 0.03%)</title><rect x="164.6" y="1589" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="167.55" y="1599.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (26,813,961 samples, 0.03%)</title><rect x="124.8" y="1173" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="127.78" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1525" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1535.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (10,989,506 samples, 0.01%)</title><rect x="386.1" y="1605" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="389.07" y="1615.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (9,938,823,143 samples, 11.93%)</title><rect x="599.9" y="2037" width="140.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="602.90" y="2047.5" >std::thread::_Sta..</text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::_M_erase_at_end (37,950,365 samples, 0.05%)</title><rect x="299.2" y="1909" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="302.20" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (21,601,966 samples, 0.03%)</title><rect x="906.5" y="1749" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="909.51" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (8,614,919 samples, 0.01%)</title><rect x="76.5" y="1781" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="79.54" y="1791.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (14,951,513 samples, 0.02%)</title><rect x="541.2" y="1573" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="544.15" y="1583.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (8,226,950 samples, 0.01%)</title><rect x="708.0" y="1461" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="710.98" y="1471.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (7,492,051 samples, 0.01%)</title><rect x="604.1" y="1621" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="607.12" y="1631.5" ></text>
</g>
<g >
<title>loopthread0 (10,498,892,666 samples, 12.60%)</title><rect x="10.0" y="2069" width="148.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >loopthread0</text>
</g>
<g >
<title>nf_conntrack_in (144,017,049 samples, 0.17%)</title><rect x="560.6" y="1445" width="2.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="563.63" y="1455.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,060,119 samples, 0.01%)</title><rect x="925.8" y="1589" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="928.84" y="1599.5" ></text>
</g>
<g >
<title>handle_softirqs (9,420,373 samples, 0.01%)</title><rect x="1154.0" y="1365" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1157.03" y="1375.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long&gt; (8,179,582 samples, 0.01%)</title><rect x="352.2" y="1717" width="0.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="355.15" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (14,258,486 samples, 0.02%)</title><rect x="1177.7" y="1893" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1180.74" y="1903.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (32,514,266 samples, 0.04%)</title><rect x="1111.4" y="1653" width="0.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1114.40" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1797" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1807.5" ></text>
</g>
<g >
<title>sock_recvmsg (391,928,588 samples, 0.47%)</title><rect x="89.2" y="1685" width="5.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="92.19" y="1695.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (7,216,411 samples, 0.01%)</title><rect x="352.7" y="1701" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="355.71" y="1711.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (22,991,294 samples, 0.03%)</title><rect x="753.9" y="1637" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="756.93" y="1647.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (33,656,895 samples, 0.04%)</title><rect x="756.4" y="1589" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="759.41" y="1599.5" ></text>
</g>
<g >
<title>__napi_poll (10,107,971 samples, 0.01%)</title><rect x="69.2" y="1445" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="72.22" y="1455.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (7,437,251 samples, 0.01%)</title><rect x="69.2" y="1269" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="72.22" y="1279.5" ></text>
</g>
<g >
<title>tcp_poll (24,983,848 samples, 0.03%)</title><rect x="1026.2" y="1781" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1029.22" y="1791.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,249,479 samples, 0.01%)</title><rect x="857.0" y="1381" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="859.98" y="1391.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,558,942 samples, 0.01%)</title><rect x="1045.5" y="1621" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1048.49" y="1631.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,169,734 samples, 0.02%)</title><rect x="526.7" y="1701" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="529.73" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (10,035,076 samples, 0.01%)</title><rect x="758.3" y="1653" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="761.31" y="1663.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (109,124,899 samples, 0.13%)</title><rect x="1015.9" y="1605" width="1.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1018.92" y="1615.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (20,818,023 samples, 0.02%)</title><rect x="202.7" y="1701" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="205.68" y="1711.5" ></text>
</g>
<g >
<title>__fget_light (37,052,011 samples, 0.04%)</title><rect x="15.6" y="1573" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="18.63" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1429" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1439.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,350,092 samples, 0.01%)</title><rect x="399.0" y="1413" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="401.97" y="1423.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (27,337,827 samples, 0.03%)</title><rect x="93.3" y="1621" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="96.35" y="1631.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (32,582,625 samples, 0.04%)</title><rect x="795.7" y="1653" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="798.66" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (13,121,803 samples, 0.02%)</title><rect x="731.9" y="1493" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="734.94" y="1503.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,468,225 samples, 0.01%)</title><rect x="347.8" y="1717" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="350.82" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1317" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1327.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (17,223,009 samples, 0.02%)</title><rect x="316.8" y="1685" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="319.80" y="1695.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (15,038,719 samples, 0.02%)</title><rect x="334.2" y="1701" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="337.20" y="1711.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (7,547,446 samples, 0.01%)</title><rect x="1024.0" y="1797" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1027.00" y="1807.5" ></text>
</g>
<g >
<title>__memchr_avx2 (46,886,088 samples, 0.06%)</title><rect x="152.5" y="2037" width="0.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="155.46" y="2047.5" ></text>
</g>
<g >
<title>__napi_poll (20,249,162 samples, 0.02%)</title><rect x="877.8" y="1701" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="880.79" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (13,340,280 samples, 0.02%)</title><rect x="541.2" y="1509" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="544.15" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (13,986,030 samples, 0.02%)</title><rect x="867.7" y="1381" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="870.67" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (795,398,430 samples, 0.95%)</title><rect x="965.2" y="1797" width="11.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="968.16" y="1807.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (18,523,703 samples, 0.02%)</title><rect x="974.9" y="1605" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="977.86" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (13,451,848 samples, 0.02%)</title><rect x="125.2" y="1253" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="128.20" y="1263.5" ></text>
</g>
<g >
<title>__schedule (97,146,768 samples, 0.12%)</title><rect x="1026.9" y="1765" width="1.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1029.95" y="1775.5" ></text>
</g>
<g >
<title>__errno_location (11,129,184 samples, 0.01%)</title><rect x="1112.6" y="1813" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1115.63" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (20,266,821 samples, 0.02%)</title><rect x="984.9" y="1765" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="987.89" y="1775.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, char*&gt; (26,349,496 samples, 0.03%)</title><rect x="227.7" y="1701" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="230.68" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (19,788,841 samples, 0.02%)</title><rect x="103.1" y="1733" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="106.09" y="1743.5" ></text>
</g>
<g >
<title>ip_list_rcv (22,103,943 samples, 0.03%)</title><rect x="731.9" y="1589" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="734.90" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1909" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1919.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (105,294,041 samples, 0.13%)</title><rect x="990.4" y="1781" width="1.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="993.43" y="1791.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*, std::shared_ptr&lt;Channel&gt; &gt; (44,903,279 samples, 0.05%)</title><rect x="590.0" y="1893" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="593.00" y="1903.5" ></text>
</g>
<g >
<title>security_file_permission (110,325,246 samples, 0.13%)</title><rect x="968.4" y="1685" width="1.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="971.40" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (15,176,083 samples, 0.02%)</title><rect x="543.3" y="1765" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="546.29" y="1775.5" ></text>
</g>
<g >
<title>getname_flags (241,190,454 samples, 0.29%)</title><rect x="1094.4" y="1653" width="3.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1097.45" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (9,242,440 samples, 0.01%)</title><rect x="960.7" y="1781" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="963.70" y="1791.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (64,523,300 samples, 0.08%)</title><rect x="940.2" y="1749" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="943.24" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (8,073,535 samples, 0.01%)</title><rect x="767.4" y="1765" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="770.44" y="1775.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (4,178,221,479 samples, 5.01%)</title><rect x="1050.8" y="1797" width="59.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1053.80" y="1807.5" >HttpCo..</text>
</g>
<g >
<title>ip_list_rcv (10,636,759 samples, 0.01%)</title><rect x="800.4" y="1525" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="803.44" y="1535.5" ></text>
</g>
<g >
<title>kfree_skbmem (11,532,950 samples, 0.01%)</title><rect x="91.9" y="1605" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="94.92" y="1615.5" ></text>
</g>
<g >
<title>epoll_wait (9,088,650 samples, 0.01%)</title><rect x="739.1" y="1909" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="742.11" y="1919.5" ></text>
</g>
<g >
<title>napi_complete_done (12,646,891 samples, 0.02%)</title><rect x="818.8" y="1669" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="821.85" y="1679.5" ></text>
</g>
<g >
<title>__napi_poll (11,842,066 samples, 0.01%)</title><rect x="581.6" y="1701" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="584.64" y="1711.5" ></text>
</g>
<g >
<title>kmem_cache_free (9,443,783 samples, 0.01%)</title><rect x="680.8" y="1589" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="683.76" y="1599.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (11,183,310 samples, 0.01%)</title><rect x="984.5" y="1653" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="987.48" y="1663.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (16,668,329 samples, 0.02%)</title><rect x="901.7" y="1541" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="904.68" y="1551.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (7,272,454 samples, 0.01%)</title><rect x="551.0" y="1669" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="553.96" y="1679.5" ></text>
</g>
<g >
<title>handle_softirqs (8,961,558 samples, 0.01%)</title><rect x="1140.9" y="1637" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1143.88" y="1647.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (15,490,417 samples, 0.02%)</title><rect x="911.8" y="1765" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="914.84" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1077" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1087.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (10,876,114 samples, 0.01%)</title><rect x="375.4" y="1781" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="378.38" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (362,542,194 samples, 0.44%)</title><rect x="244.6" y="1733" width="5.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="247.58" y="1743.5" ></text>
</g>
<g >
<title>__GI___stat64 (11,311,534 samples, 0.01%)</title><rect x="219.8" y="1765" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="222.78" y="1775.5" ></text>
</g>
<g >
<title>tcp_ack (7,654,169 samples, 0.01%)</title><rect x="798.1" y="1429" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="801.14" y="1439.5" ></text>
</g>
<g >
<title>path_init (32,534,937 samples, 0.04%)</title><rect x="1101.0" y="1605" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1103.98" y="1615.5" ></text>
</g>
<g >
<title>std::function&lt;void  (57,308,135 samples, 0.07%)</title><rect x="838.2" y="1781" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="841.22" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1669" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (35,395,174 samples, 0.04%)</title><rect x="990.8" y="1701" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="993.79" y="1711.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (19,760,456 samples, 0.02%)</title><rect x="229.6" y="1781" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="232.58" y="1791.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (17,064,040 samples, 0.02%)</title><rect x="251.7" y="1669" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="254.73" y="1679.5" ></text>
</g>
<g >
<title>rndis_filter_receive (7,128,977 samples, 0.01%)</title><rect x="210.4" y="1573" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="213.36" y="1583.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (17,714,993 samples, 0.02%)</title><rect x="141.5" y="1653" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="144.51" y="1663.5" ></text>
</g>
<g >
<title>avc_lookup (7,592,002 samples, 0.01%)</title><rect x="69.4" y="1525" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="72.41" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (634,674,584 samples, 0.76%)</title><rect x="504.1" y="1749" width="9.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="507.11" y="1759.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10,982,421 samples, 0.01%)</title><rect x="74.4" y="1749" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="77.37" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (12,777,731 samples, 0.02%)</title><rect x="334.5" y="1717" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="337.53" y="1727.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (212,624,720 samples, 0.26%)</title><rect x="64.2" y="1637" width="3.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="67.16" y="1647.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (13,026,982 samples, 0.02%)</title><rect x="740.8" y="53" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="743.83" y="63.5" ></text>
</g>
<g >
<title>__napi_poll (8,057,869 samples, 0.01%)</title><rect x="485.0" y="1637" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="487.97" y="1647.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (8,075,743 samples, 0.01%)</title><rect x="236.4" y="1477" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="239.39" y="1487.5" ></text>
</g>
<g >
<title>std::function&lt;void  (423,575,179 samples, 0.51%)</title><rect x="897.8" y="1765" width="6.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="900.82" y="1775.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,961,558 samples, 0.01%)</title><rect x="1140.9" y="1685" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1143.88" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (11,836,624 samples, 0.01%)</title><rect x="469.3" y="1717" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="472.25" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;char*, void&gt; (127,795,222 samples, 0.15%)</title><rect x="961.5" y="1797" width="1.8" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="964.52" y="1807.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1,061,937,682 samples, 1.27%)</title><rect x="854.1" y="1589" width="15.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="857.07" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,503,795 samples, 0.01%)</title><rect x="440.3" y="1541" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="443.28" y="1551.5" ></text>
</g>
<g >
<title>ipv4_dst_check (8,026,971 samples, 0.01%)</title><rect x="855.6" y="1493" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="858.60" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (7,421,617 samples, 0.01%)</title><rect x="768.7" y="1765" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="771.73" y="1775.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (22,595,405 samples, 0.03%)</title><rect x="640.0" y="1765" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="643.04" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (16,922,867 samples, 0.02%)</title><rect x="695.7" y="1685" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="698.67" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (69,785,308 samples, 0.08%)</title><rect x="355.1" y="1733" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="358.06" y="1743.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (14,903,372 samples, 0.02%)</title><rect x="1163.5" y="1445" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1166.46" y="1455.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (7,074,576 samples, 0.01%)</title><rect x="143.6" y="1781" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="146.57" y="1791.5" ></text>
</g>
<g >
<title>__fdget (30,247,438 samples, 0.04%)</title><rect x="605.6" y="1589" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="608.61" y="1599.5" ></text>
</g>
<g >
<title>__napi_poll (10,306,909 samples, 0.01%)</title><rect x="704.6" y="1589" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="707.61" y="1599.5" ></text>
</g>
<g >
<title>__strlen_avx2 (14,955,861 samples, 0.02%)</title><rect x="300.9" y="2021" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="303.92" y="2031.5" ></text>
</g>
<g >
<title>__napi_poll (11,115,827 samples, 0.01%)</title><rect x="524.7" y="1701" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="527.72" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (8,016,728 samples, 0.01%)</title><rect x="606.3" y="1317" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="609.26" y="1327.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (31,891,537 samples, 0.04%)</title><rect x="82.5" y="1749" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="85.53" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (7,343,560 samples, 0.01%)</title><rect x="413.9" y="1605" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="416.89" y="1615.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (94,233,664 samples, 0.11%)</title><rect x="1175.0" y="1813" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1178.01" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (8,236,466 samples, 0.01%)</title><rect x="158.3" y="1957" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="161.26" y="1967.5" ></text>
</g>
<g >
<title>rndis_filter_receive (14,063,341 samples, 0.02%)</title><rect x="387.4" y="1493" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="390.39" y="1503.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (168,569,389 samples, 0.20%)</title><rect x="1098.6" y="1605" width="2.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1101.59" y="1615.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (18,785,250 samples, 0.02%)</title><rect x="682.5" y="1605" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="685.45" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="901" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="911.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,863,323 samples, 0.01%)</title><rect x="503.3" y="1541" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="506.29" y="1551.5" ></text>
</g>
<g >
<title>ip_local_out (716,884,712 samples, 0.86%)</title><rect x="855.8" y="1509" width="10.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="858.79" y="1519.5" ></text>
</g>
<g >
<title>__strlen_avx2 (27,799,237 samples, 0.03%)</title><rect x="151.4" y="2021" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="154.43" y="2031.5" ></text>
</g>
<g >
<title>netvsc_poll (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1477" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="951.32" y="1487.5" ></text>
</g>
<g >
<title>napi_complete_done (7,397,284 samples, 0.01%)</title><rect x="410.9" y="1669" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="413.91" y="1679.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (346,725,804 samples, 0.42%)</title><rect x="244.7" y="1701" width="5.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="247.75" y="1711.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,050,396 samples, 0.01%)</title><rect x="583.4" y="1781" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="586.36" y="1791.5" ></text>
</g>
<g >
<title>selinux_file_permission (40,655,059 samples, 0.05%)</title><rect x="135.3" y="1653" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="138.25" y="1663.5" ></text>
</g>
<g >
<title>__strlen_avx2 (7,853,893 samples, 0.01%)</title><rect x="842.4" y="1781" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="845.41" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (70,350,921 samples, 0.08%)</title><rect x="205.2" y="1717" width="1.0" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="208.19" y="1727.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,407,017 samples, 0.01%)</title><rect x="1079.0" y="1765" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1082.03" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1973" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1983.5" ></text>
</g>
<g >
<title>handle_softirqs (46,022,699 samples, 0.06%)</title><rect x="731.7" y="1733" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="734.68" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (16,141,447 samples, 0.02%)</title><rect x="903.5" y="1685" width="0.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="906.54" y="1695.5" ></text>
</g>
<g >
<title>inode_permission (80,259,225 samples, 0.10%)</title><rect x="949.9" y="1589" width="1.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="952.88" y="1599.5" ></text>
</g>
<g >
<title>rep_movs_alternative (32,508,099 samples, 0.04%)</title><rect x="707.5" y="1589" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="710.52" y="1599.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,200,344 samples, 0.01%)</title><rect x="623.6" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="626.59" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (7,519,736 samples, 0.01%)</title><rect x="157.4" y="1957" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="160.42" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (172,283,841 samples, 0.21%)</title><rect x="245.8" y="1653" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="248.77" y="1663.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (51,073,300 samples, 0.06%)</title><rect x="648.1" y="1749" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="651.13" y="1759.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (16,839,598 samples, 0.02%)</title><rect x="827.9" y="1605" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="830.94" y="1615.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, char*, char*&gt; (11,127,346 samples, 0.01%)</title><rect x="202.0" y="1637" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="205.04" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (11,362,520 samples, 0.01%)</title><rect x="78.6" y="1781" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="81.57" y="1791.5" ></text>
</g>
<g >
<title>clear_bhb_loop (7,373,258 samples, 0.01%)</title><rect x="312.4" y="1653" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="315.41" y="1663.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (14,936,381 samples, 0.02%)</title><rect x="125.2" y="1285" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="128.18" y="1295.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (7,342,805 samples, 0.01%)</title><rect x="318.4" y="1717" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="321.38" y="1727.5" ></text>
</g>
<g >
<title>lock_timer_base (7,623,741 samples, 0.01%)</title><rect x="131.7" y="1477" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="134.74" y="1487.5" ></text>
</g>
<g >
<title>irq_exit_rcu (16,102,136 samples, 0.02%)</title><rect x="800.4" y="1669" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="803.39" y="1679.5" ></text>
</g>
<g >
<title>lock_sock_nested (41,694,384 samples, 0.05%)</title><rect x="970.8" y="1637" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="973.80" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (18,767,079 samples, 0.02%)</title><rect x="250.2" y="1765" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="253.21" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (10,708,042 samples, 0.01%)</title><rect x="131.2" y="1365" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="134.16" y="1375.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (11,400,420 samples, 0.01%)</title><rect x="731.5" y="1797" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="734.52" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (14,728,664 samples, 0.02%)</title><rect x="904.6" y="1733" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="907.59" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="581" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="591.5" ></text>
</g>
<g >
<title>irq_exit_rcu (17,676,026 samples, 0.02%)</title><rect x="360.2" y="1669" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="363.21" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (8,654,742 samples, 0.01%)</title><rect x="1074.2" y="1717" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1077.21" y="1727.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,333,147 samples, 0.02%)</title><rect x="314.7" y="1589" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="317.74" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="853" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="863.5" ></text>
</g>
<g >
<title>__napi_poll (11,172,978 samples, 0.01%)</title><rect x="99.0" y="1525" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="102.02" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (18,003,624 samples, 0.02%)</title><rect x="1072.2" y="1765" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1075.22" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (33,825,634 samples, 0.04%)</title><rect x="32.0" y="1685" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="35.04" y="1695.5" ></text>
</g>
<g >
<title>__napi_poll (9,663,935 samples, 0.01%)</title><rect x="752.9" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="755.91" y="1583.5" ></text>
</g>
<g >
<title>__virt_addr_valid (23,802,629 samples, 0.03%)</title><rect x="66.5" y="1589" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="69.52" y="1599.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (106,587,864 samples, 0.13%)</title><rect x="290.7" y="1813" width="1.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="293.68" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (49,127,533 samples, 0.06%)</title><rect x="648.2" y="1733" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="651.16" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (11,891,973 samples, 0.01%)</title><rect x="108.3" y="1781" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="111.29" y="1791.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (24,272,738 samples, 0.03%)</title><rect x="446.1" y="1829" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="449.14" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,946,319 samples, 0.01%)</title><rect x="873.6" y="1765" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="876.64" y="1775.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,046,277 samples, 0.01%)</title><rect x="163.3" y="1589" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="166.30" y="1599.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (45,257,211 samples, 0.05%)</title><rect x="1024.1" y="1749" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1027.11" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (59,423,663 samples, 0.07%)</title><rect x="95.0" y="1797" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="98.02" y="1807.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (73,463,906 samples, 0.09%)</title><rect x="973.3" y="1621" width="1.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="976.26" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (11,378,064 samples, 0.01%)</title><rect x="22.2" y="1701" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="25.16" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (37,722,074 samples, 0.05%)</title><rect x="478.4" y="1685" width="0.6" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="481.42" y="1695.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (9,765,702,225 samples, 11.72%)</title><rect x="895.5" y="1989" width="138.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="898.52" y="1999.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>syscall_exit_to_user_mode (7,352,788 samples, 0.01%)</title><rect x="540.0" y="1637" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="543.02" y="1647.5" ></text>
</g>
<g >
<title>__fdget (26,800,811 samples, 0.03%)</title><rect x="247.1" y="1589" width="0.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="250.06" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (10,240,256 samples, 0.01%)</title><rect x="1029.8" y="1893" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1032.80" y="1903.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1637" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="186.34" y="1647.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (18,752,799 samples, 0.02%)</title><rect x="722.2" y="1445" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="725.15" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="901" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (10,808,360 samples, 0.01%)</title><rect x="25.2" y="1637" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="28.24" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1509" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="951.32" y="1519.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (10,661,787 samples, 0.01%)</title><rect x="348.8" y="1653" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="351.83" y="1663.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (12,994,125 samples, 0.02%)</title><rect x="606.3" y="1589" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="609.26" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (457,496,432 samples, 0.55%)</title><rect x="1170.2" y="1877" width="6.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1173.17" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (25,587,303 samples, 0.03%)</title><rect x="860.9" y="1285" width="0.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="863.91" y="1295.5" ></text>
</g>
<g >
<title>netvsc_poll (43,410,514 samples, 0.05%)</title><rect x="1024.1" y="1685" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1027.13" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (7,333,162 samples, 0.01%)</title><rect x="339.4" y="1733" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="342.44" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (36,538,123 samples, 0.04%)</title><rect x="193.5" y="1685" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="196.48" y="1695.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10,214,605 samples, 0.01%)</title><rect x="1084.9" y="1605" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1087.86" y="1615.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (609,448,516 samples, 0.73%)</title><rect x="47.7" y="1781" width="8.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="50.67" y="1791.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,882,009 samples, 0.01%)</title><rect x="562.2" y="1221" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="565.25" y="1231.5" ></text>
</g>
<g >
<title>ep_poll_callback (7,208,810 samples, 0.01%)</title><rect x="674.4" y="1349" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="677.37" y="1359.5" ></text>
</g>
<g >
<title>_int_free (39,057,886 samples, 0.05%)</title><rect x="888.8" y="2037" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="891.82" y="2047.5" ></text>
</g>
<g >
<title>handle_softirqs (15,989,192 samples, 0.02%)</title><rect x="688.0" y="1605" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="691.05" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1605" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1615.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (17,662,879 samples, 0.02%)</title><rect x="766.0" y="1701" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="768.96" y="1711.5" ></text>
</g>
<g >
<title>tcp_poll (8,592,678 samples, 0.01%)</title><rect x="902.0" y="1557" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="904.96" y="1567.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,871,799 samples, 0.01%)</title><rect x="45.2" y="1685" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="48.22" y="1695.5" ></text>
</g>
<g >
<title>netvsc_select_queue (35,698,830 samples, 0.04%)</title><rect x="565.5" y="1397" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="568.50" y="1407.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (46,408,909 samples, 0.06%)</title><rect x="643.2" y="1701" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="646.24" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (37,113,452 samples, 0.04%)</title><rect x="77.2" y="1781" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="80.15" y="1791.5" ></text>
</g>
<g >
<title>napi_complete_done (8,114,888 samples, 0.01%)</title><rect x="259.7" y="1669" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="262.75" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (47,103,666 samples, 0.06%)</title><rect x="844.1" y="1733" width="0.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="847.07" y="1743.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,288,760 samples, 0.01%)</title><rect x="1035.7" y="1973" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1038.68" y="1983.5" ></text>
</g>
<g >
<title>__napi_poll (7,072,047 samples, 0.01%)</title><rect x="28.8" y="1669" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="31.79" y="1679.5" ></text>
</g>
<g >
<title>handle_softirqs (12,063,380 samples, 0.01%)</title><rect x="898.2" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="901.24" y="1615.5" ></text>
</g>
<g >
<title>handle_softirqs (16,807,709 samples, 0.02%)</title><rect x="382.7" y="1685" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="385.71" y="1695.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (10,646,526 samples, 0.01%)</title><rect x="572.4" y="1557" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="575.37" y="1567.5" ></text>
</g>
<g >
<title>error_entry (7,912,611 samples, 0.01%)</title><rect x="242.1" y="1797" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="245.08" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::push_back (11,305,214 samples, 0.01%)</title><rect x="148.2" y="1909" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="151.18" y="1919.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,938,879 samples, 0.01%)</title><rect x="1047.1" y="1589" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1050.12" y="1599.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,792,498 samples, 0.01%)</title><rect x="1002.6" y="1509" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1005.64" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1669" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (26,177,163 samples, 0.03%)</title><rect x="1132.5" y="1685" width="0.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1135.50" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (11,537,378 samples, 0.01%)</title><rect x="410.9" y="1685" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="413.91" y="1695.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,385,464 samples, 0.01%)</title><rect x="1121.0" y="1589" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1124.00" y="1599.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,252,038 samples, 0.01%)</title><rect x="707.9" y="1541" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="710.88" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (36,319,056 samples, 0.04%)</title><rect x="464.1" y="1669" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="467.11" y="1679.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,601,532 samples, 0.01%)</title><rect x="1143.2" y="1781" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1146.20" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (5,707,546,915 samples, 6.85%)</title><rect x="751.2" y="1861" width="80.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="754.20" y="1871.5" >std::__in..</text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,140,667 samples, 0.01%)</title><rect x="1071.8" y="1733" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1074.79" y="1743.5" ></text>
</g>
<g >
<title>epoll_ctl (318,354,120 samples, 0.38%)</title><rect x="244.8" y="1685" width="4.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="247.78" y="1695.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (7,670,335 samples, 0.01%)</title><rect x="993.4" y="1669" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="996.36" y="1679.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (9,241,773 samples, 0.01%)</title><rect x="672.4" y="1541" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="675.41" y="1551.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (26,112,305 samples, 0.03%)</title><rect x="899.2" y="1637" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="902.23" y="1647.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (8,982,838 samples, 0.01%)</title><rect x="624.7" y="1477" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="627.74" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (477,775,029 samples, 0.57%)</title><rect x="578.6" y="1877" width="6.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="581.61" y="1887.5" ></text>
</g>
<g >
<title>avc_lookup (7,112,587 samples, 0.01%)</title><rect x="511.5" y="1525" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="514.45" y="1535.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (10,255,703 samples, 0.01%)</title><rect x="298.9" y="1909" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="301.89" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="277" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="287.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (20,862,890 samples, 0.03%)</title><rect x="17.7" y="1669" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="20.65" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (12,740,646 samples, 0.02%)</title><rect x="624.7" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="627.69" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (8,519,175 samples, 0.01%)</title><rect x="356.3" y="1637" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="359.28" y="1647.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, char*, char*&gt; (7,454,015 samples, 0.01%)</title><rect x="670.8" y="1669" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="673.79" y="1679.5" ></text>
</g>
<g >
<title>x64_sys_call (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1525" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="171.38" y="1535.5" ></text>
</g>
<g >
<title>handle_softirqs (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1365" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="430.41" y="1375.5" ></text>
</g>
<g >
<title>netvsc_send_pkt (70,978,692 samples, 0.09%)</title><rect x="567.6" y="1333" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="570.65" y="1343.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9,669,469 samples, 0.01%)</title><rect x="955.7" y="1749" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="958.67" y="1759.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,042,044 samples, 0.01%)</title><rect x="918.0" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="921.03" y="1647.5" ></text>
</g>
<g >
<title>operator new (9,150,524 samples, 0.01%)</title><rect x="157.5" y="2053" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="160.55" y="2063.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (4,885,860,755 samples, 5.86%)</title><rect x="310.7" y="1813" width="69.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="313.73" y="1823.5" >HttpCon..</text>
</g>
<g >
<title>clear_bhb_loop (22,839,191 samples, 0.03%)</title><rect x="799.6" y="1733" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="802.56" y="1743.5" ></text>
</g>
<g >
<title>__x64_sys_writev (1,525,485,432 samples, 1.83%)</title><rect x="412.6" y="1749" width="21.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="415.59" y="1759.5" >_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (8,068,488 samples, 0.01%)</title><rect x="253.4" y="1781" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="256.41" y="1791.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,484,539 samples, 0.02%)</title><rect x="746.0" y="1989" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="749.00" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1093" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1103.5" ></text>
</g>
<g >
<title>epoll_wait (517,317,990 samples, 0.62%)</title><rect x="138.3" y="1909" width="7.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="141.34" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1333" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1002.78" y="1343.5" ></text>
</g>
<g >
<title>__wake_up_sync (8,745,319 samples, 0.01%)</title><rect x="427.4" y="981" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="430.41" y="991.5" ></text>
</g>
<g >
<title>net_rx_action (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1653" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1178.57" y="1663.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (9,559,190 samples, 0.01%)</title><rect x="60.5" y="1541" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="63.55" y="1551.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (19,006,063 samples, 0.02%)</title><rect x="966.4" y="1701" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="969.44" y="1711.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,123,157 samples, 0.01%)</title><rect x="929.1" y="1637" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="932.06" y="1647.5" ></text>
</g>
<g >
<title>std::mutex::unlock (7,458,355 samples, 0.01%)</title><rect x="1032.1" y="1893" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1035.07" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="165" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="175.5" ></text>
</g>
<g >
<title>__GI___writev (1,755,034,619 samples, 2.11%)</title><rect x="552.5" y="1813" width="24.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="555.48" y="1823.5" >_..</text>
</g>
<g >
<title>netif_receive_skb_list_internal (9,002,017 samples, 0.01%)</title><rect x="1188.5" y="1893" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1191.51" y="1903.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::find (106,340,402 samples, 0.13%)</title><rect x="1030.0" y="1909" width="1.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1033.04" y="1919.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,661,320 samples, 0.01%)</title><rect x="178.2" y="1717" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="181.23" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1925" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1935.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,758,984 samples, 0.01%)</title><rect x="1095.0" y="1557" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1097.97" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (10,769,373 samples, 0.01%)</title><rect x="956.7" y="1749" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="959.69" y="1759.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (36,318,712 samples, 0.04%)</title><rect x="737.5" y="1829" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="740.48" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (9,995,806 samples, 0.01%)</title><rect x="125.2" y="1173" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="128.25" y="1183.5" ></text>
</g>
<g >
<title>ip_finish_output (394,816,997 samples, 0.47%)</title><rect x="271.8" y="1477" width="5.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="274.82" y="1487.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (29,680,410 samples, 0.04%)</title><rect x="774.7" y="1701" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="777.66" y="1711.5" ></text>
</g>
<g >
<title>__x64_sys_close (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1509" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="469.26" y="1519.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (14,878,351 samples, 0.02%)</title><rect x="652.0" y="1509" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="654.98" y="1519.5" ></text>
</g>
<g >
<title>epoll_wait (493,583,385 samples, 0.59%)</title><rect x="1169.9" y="1909" width="7.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1172.89" y="1919.5" ></text>
</g>
<g >
<title>__x64_sys_writev (1,600,331,279 samples, 1.92%)</title><rect x="704.0" y="1749" width="22.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="707.04" y="1759.5" >_..</text>
</g>
<g >
<title>napi_complete_done (7,385,901 samples, 0.01%)</title><rect x="1066.0" y="1541" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1069.03" y="1551.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (12,984,790 samples, 0.02%)</title><rect x="1007.9" y="1253" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1010.91" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (9,903,426 samples, 0.01%)</title><rect x="253.3" y="1781" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="256.27" y="1791.5" ></text>
</g>
<g >
<title>tcp_current_mss (15,121,772 samples, 0.02%)</title><rect x="723.4" y="1589" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="726.36" y="1599.5" ></text>
</g>
<g >
<title>__napi_poll (19,021,499 samples, 0.02%)</title><rect x="387.3" y="1525" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="390.34" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="885" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="895.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (12,446,704 samples, 0.01%)</title><rect x="923.2" y="1717" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="926.19" y="1727.5" ></text>
</g>
<g >
<title>filename_lookup (220,464,804 samples, 0.26%)</title><rect x="949.1" y="1637" width="3.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="952.14" y="1647.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (12,567,198 samples, 0.02%)</title><rect x="498.2" y="1701" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="501.16" y="1711.5" ></text>
</g>
<g >
<title>rndis_filter_receive (19,329,035 samples, 0.02%)</title><rect x="272.9" y="1301" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="275.94" y="1311.5" ></text>
</g>
<g >
<title>__napi_poll (28,153,941 samples, 0.03%)</title><rect x="442.9" y="1637" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="445.95" y="1647.5" ></text>
</g>
<g >
<title>clear_bhb_loop (13,946,676 samples, 0.02%)</title><rect x="980.8" y="1653" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="983.80" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;char*&gt; (87,249,442 samples, 0.10%)</title><rect x="816.9" y="1765" width="1.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="819.87" y="1775.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (32,844,911 samples, 0.04%)</title><rect x="168.7" y="1781" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="171.75" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1397" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1957" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1125" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1135.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (468,467,252 samples, 0.56%)</title><rect x="1170.0" y="1893" width="6.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1173.01" y="1903.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (15,609,886 samples, 0.02%)</title><rect x="1067.3" y="1685" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1070.31" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (7,343,560 samples, 0.01%)</title><rect x="413.9" y="1573" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="416.89" y="1583.5" ></text>
</g>
<g >
<title>__napi_poll (8,094,779 samples, 0.01%)</title><rect x="662.8" y="1653" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="665.76" y="1663.5" ></text>
</g>
<g >
<title>putname (21,503,637 samples, 0.03%)</title><rect x="509.8" y="1653" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="512.83" y="1663.5" ></text>
</g>
<g >
<title>handle_softirqs (7,111,018 samples, 0.01%)</title><rect x="480.9" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="483.92" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (11,986,312 samples, 0.01%)</title><rect x="1066.0" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1069.00" y="1599.5" ></text>
</g>
<g >
<title>netvsc_poll (7,876,432 samples, 0.01%)</title><rect x="899.3" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="902.33" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_erase (10,196,303 samples, 0.01%)</title><rect x="47.3" y="1749" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="50.27" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (16,852,257 samples, 0.02%)</title><rect x="615.8" y="1637" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="618.76" y="1647.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (20,871,830 samples, 0.03%)</title><rect x="1024.5" y="1653" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1027.45" y="1663.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (512,473,252 samples, 0.61%)</title><rect x="361.3" y="1701" width="7.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="364.26" y="1711.5" ></text>
</g>
<g >
<title>TimerManager::GetNextTick (18,688,036 samples, 0.02%)</title><rect x="1020.4" y="1909" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1023.43" y="1919.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (30,018,939 samples, 0.04%)</title><rect x="466.5" y="1781" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="469.52" y="1791.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (751,658,311 samples, 0.90%)</title><rect x="709.7" y="1525" width="10.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="712.73" y="1535.5" ></text>
</g>
<g >
<title>netvsc_poll (8,385,464 samples, 0.01%)</title><rect x="1121.0" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1124.00" y="1519.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (748,959,300 samples, 0.90%)</title><rect x="874.0" y="1925" width="10.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="877.04" y="1935.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (25,796,688 samples, 0.03%)</title><rect x="734.6" y="1717" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="737.58" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (22,420,260 samples, 0.03%)</title><rect x="701.1" y="1733" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="704.10" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (12,180,482 samples, 0.01%)</title><rect x="141.2" y="1717" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="144.21" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (55,957,480 samples, 0.07%)</title><rect x="795.3" y="1685" width="0.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="798.33" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2,859,774,736 samples, 3.43%)</title><rect x="97.0" y="1877" width="40.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="100.04" y="1887.5" >std..</text>
</g>
<g >
<title>netvsc_poll (16,807,709 samples, 0.02%)</title><rect x="382.7" y="1637" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="385.71" y="1647.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (22,610,033 samples, 0.03%)</title><rect x="495.7" y="1669" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="498.72" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (239,287,120 samples, 0.29%)</title><rect x="150.5" y="2053" width="3.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.48" y="2063.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (9,056,442 samples, 0.01%)</title><rect x="985.4" y="1669" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="988.38" y="1679.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (31,038,983 samples, 0.04%)</title><rect x="303.6" y="2053" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="306.61" y="2063.5" ></text>
</g>
<g >
<title>__do_softirq (11,838,551 samples, 0.01%)</title><rect x="531.3" y="1573" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="534.26" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (18,747,448 samples, 0.02%)</title><rect x="776.3" y="1765" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="779.30" y="1775.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (23,108,960 samples, 0.03%)</title><rect x="761.7" y="1749" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="764.70" y="1759.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (11,654,708 samples, 0.01%)</title><rect x="545.4" y="1669" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="548.36" y="1679.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,226,950 samples, 0.01%)</title><rect x="708.0" y="1557" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="710.98" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1877" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (12,355,464 samples, 0.01%)</title><rect x="556.3" y="1605" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="559.30" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10,863,323 samples, 0.01%)</title><rect x="503.3" y="1477" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="506.29" y="1487.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,589,194 samples, 0.01%)</title><rect x="89.8" y="1381" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="92.83" y="1391.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (1,800,619,448 samples, 2.16%)</title><rect x="319.0" y="1781" width="25.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="322.00" y="1791.5" >H..</text>
</g>
<g >
<title>entry_SYSCALL_64 (12,937,514 samples, 0.02%)</title><rect x="1034.0" y="37" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1037.02" y="47.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="293" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="303.5" ></text>
</g>
<g >
<title>sock_poll (20,535,973 samples, 0.02%)</title><rect x="463.3" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="466.26" y="1583.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (27,082,372 samples, 0.03%)</title><rect x="239.4" y="1621" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="242.38" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1413" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1002.78" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="389" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="399.5" ></text>
</g>
<g >
<title>__wake_up_common (9,182,790 samples, 0.01%)</title><rect x="440.3" y="1381" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="443.28" y="1391.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (107,177,841 samples, 0.13%)</title><rect x="586.7" y="1893" width="1.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="589.65" y="1903.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,335,646 samples, 0.01%)</title><rect x="311.8" y="1493" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="314.78" y="1503.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,297,747 samples, 0.01%)</title><rect x="1068.6" y="1717" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1071.61" y="1727.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (25,433,460 samples, 0.03%)</title><rect x="318.6" y="1781" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="321.64" y="1791.5" ></text>
</g>
<g >
<title>__fdget (22,630,935 samples, 0.03%)</title><rect x="1130.3" y="1589" width="0.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1133.25" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (14,479,481 samples, 0.02%)</title><rect x="109.5" y="1733" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="112.47" y="1743.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (39,295,961 samples, 0.05%)</title><rect x="378.4" y="1653" width="0.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="381.45" y="1663.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9,400,733 samples, 0.01%)</title><rect x="846.8" y="1717" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="849.83" y="1727.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (25,587,303 samples, 0.03%)</title><rect x="860.9" y="1237" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="863.91" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (64,912,661 samples, 0.08%)</title><rect x="615.5" y="1669" width="0.9" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="618.45" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1397" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1407.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1541" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="925.16" y="1551.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (10,688,113 samples, 0.01%)</title><rect x="1172.7" y="1797" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1175.70" y="1807.5" ></text>
</g>
<g >
<title>avc_has_perm (11,392,689 samples, 0.01%)</title><rect x="530.1" y="1621" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="533.08" y="1631.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,413,018 samples, 0.01%)</title><rect x="293.2" y="1525" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="296.20" y="1535.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (14,009,678 samples, 0.02%)</title><rect x="545.9" y="1685" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="548.85" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+ (21,624,142 samples, 0.03%)</title><rect x="326.5" y="1765" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="329.50" y="1775.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,033,129 samples, 0.01%)</title><rect x="1173.7" y="1749" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1176.72" y="1759.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1,389,964,228 samples, 1.67%)</title><rect x="263.3" y="1637" width="19.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="266.31" y="1647.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (9,060,119 samples, 0.01%)</title><rect x="925.8" y="1701" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="928.84" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (5,884,201,654 samples, 7.06%)</title><rect x="1043.3" y="1861" width="83.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1046.34" y="1871.5" >std::__in..</text>
</g>
<g >
<title>ip_sublist_rcv (8,385,464 samples, 0.01%)</title><rect x="1121.0" y="1429" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1124.00" y="1439.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,585,113 samples, 0.02%)</title><rect x="981.1" y="1605" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="984.12" y="1615.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (9,258,675 samples, 0.01%)</title><rect x="443.0" y="1525" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="445.97" y="1535.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,468,225 samples, 0.01%)</title><rect x="347.8" y="1749" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="350.82" y="1759.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (2,822,252,773 samples, 3.39%)</title><rect x="537.5" y="1829" width="40.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="540.52" y="1839.5" >Htt..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::deallocate (27,704,331 samples, 0.03%)</title><rect x="403.2" y="1685" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="406.17" y="1695.5" ></text>
</g>
<g >
<title>handle_softirqs (9,725,984 samples, 0.01%)</title><rect x="1096.4" y="1541" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1099.44" y="1551.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (77,584,278 samples, 0.09%)</title><rect x="1121.5" y="1589" width="1.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1124.46" y="1599.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (25,113,406 samples, 0.03%)</title><rect x="864.7" y="1397" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="867.74" y="1407.5" ></text>
</g>
<g >
<title>__napi_poll (19,006,455 samples, 0.02%)</title><rect x="942.8" y="1653" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="945.82" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (9,978,356 samples, 0.01%)</title><rect x="814.6" y="1781" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="817.63" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (12,567,473 samples, 0.02%)</title><rect x="589.0" y="1925" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="592.02" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,658,546,900 samples, 1.99%)</title><rect x="995.4" y="1797" width="23.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="998.43" y="1807.5" >e..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (9,311,398 samples, 0.01%)</title><rect x="73.8" y="1765" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="76.78" y="1775.5" ></text>
</g>
<g >
<title>clear_bhb_loop (20,915,474 samples, 0.03%)</title><rect x="834.3" y="1653" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="837.32" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (19,664,296 samples, 0.02%)</title><rect x="407.4" y="1701" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="410.41" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1989" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1999.5" ></text>
</g>
<g >
<title>__napi_poll (9,558,942 samples, 0.01%)</title><rect x="1045.5" y="1525" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1048.49" y="1535.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (14,519,520 samples, 0.02%)</title><rect x="519.7" y="1781" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="522.68" y="1791.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1237" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="951.32" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (7,778,924 samples, 0.01%)</title><rect x="613.9" y="1669" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="616.94" y="1679.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (9,176,508 samples, 0.01%)</title><rect x="553.9" y="1749" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="556.88" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (14,257,638 samples, 0.02%)</title><rect x="800.4" y="1621" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="803.42" y="1631.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (8,271,078 samples, 0.01%)</title><rect x="823.7" y="1605" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="826.72" y="1615.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (24,523,093 samples, 0.03%)</title><rect x="502.0" y="1653" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="504.99" y="1663.5" ></text>
</g>
<g >
<title>handle_softirqs (7,378,040 samples, 0.01%)</title><rect x="845.9" y="1637" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="848.93" y="1647.5" ></text>
</g>
<g >
<title>sch_direct_xmit (200,818,370 samples, 0.24%)</title><rect x="424.2" y="1413" width="2.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="427.24" y="1423.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,662,509,531 samples, 11.59%)</title><rect x="749.9" y="2021" width="136.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="752.91" y="2031.5" >std::thread::_Inv..</text>
</g>
<g >
<title>irq_exit_rcu (10,536,701 samples, 0.01%)</title><rect x="412.0" y="1717" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="415.00" y="1727.5" ></text>
</g>
<g >
<title>__check_object_size (37,854,565 samples, 0.05%)</title><rect x="826.8" y="1573" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="829.77" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;char*&gt; (139,685,879 samples, 0.17%)</title><rect x="669.4" y="1781" width="2.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="672.39" y="1791.5" ></text>
</g>
<g >
<title>__napi_poll (7,246,094 samples, 0.01%)</title><rect x="519.4" y="1669" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="522.40" y="1679.5" ></text>
</g>
<g >
<title>x64_sys_call (503,797,416 samples, 0.60%)</title><rect x="945.2" y="1717" width="7.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="948.25" y="1727.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (463,205,842 samples, 0.56%)</title><rect x="138.7" y="1845" width="6.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="141.74" y="1855.5" ></text>
</g>
<g >
<title>handle_softirqs (11,330,791 samples, 0.01%)</title><rect x="478.3" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="481.26" y="1615.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (538,693,065 samples, 0.65%)</title><rect x="492.1" y="1781" width="7.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="495.07" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (14,957,023 samples, 0.02%)</title><rect x="786.7" y="1765" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="789.72" y="1775.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (42,146,253 samples, 0.05%)</title><rect x="231.5" y="1765" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.55" y="1775.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,068,201 samples, 0.01%)</title><rect x="298.5" y="1925" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="301.46" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;TimerManager::TimerNode,  (7,282,741 samples, 0.01%)</title><rect x="588.8" y="1893" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="591.84" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="437" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="447.5" ></text>
</g>
<g >
<title>x64_sys_call (129,468,166 samples, 0.16%)</title><rect x="99.6" y="1637" width="1.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="102.56" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (13,785,142 samples, 0.02%)</title><rect x="678.8" y="1621" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="681.79" y="1631.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (74,720,361 samples, 0.09%)</title><rect x="573.5" y="1605" width="1.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="576.52" y="1615.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (33,593,794 samples, 0.04%)</title><rect x="293.1" y="1733" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="296.12" y="1743.5" ></text>
</g>
<g >
<title>handle_softirqs (7,398,550 samples, 0.01%)</title><rect x="265.4" y="1541" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="268.37" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (216,379,433 samples, 0.26%)</title><rect x="834.0" y="1669" width="3.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="836.98" y="1679.5" ></text>
</g>
<g >
<title>handle_softirqs (7,196,704 samples, 0.01%)</title><rect x="46.3" y="1637" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="49.27" y="1647.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (7,342,805 samples, 0.01%)</title><rect x="318.4" y="1637" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="321.38" y="1647.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (23,147,355 samples, 0.03%)</title><rect x="403.6" y="1701" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="406.65" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1189" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1199.5" ></text>
</g>
<g >
<title>__fdget_pos (47,054,057 samples, 0.06%)</title><rect x="85.9" y="1717" width="0.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="88.89" y="1727.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (8,010,118 samples, 0.01%)</title><rect x="759.5" y="1637" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="762.52" y="1647.5" ></text>
</g>
<g >
<title>netvsc_poll (8,052,005 samples, 0.01%)</title><rect x="622.8" y="1557" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="625.78" y="1567.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (5,718,129,121 samples, 6.86%)</title><rect x="751.1" y="1877" width="80.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="754.05" y="1887.5" >std::_Fun..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (408,273,083 samples, 0.49%)</title><rect x="752.7" y="1717" width="5.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="755.69" y="1727.5" ></text>
</g>
<g >
<title>ip_output (432,600,048 samples, 0.52%)</title><rect x="421.9" y="1493" width="6.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="424.90" y="1503.5" ></text>
</g>
<g >
<title>__napi_poll (11,695,179 samples, 0.01%)</title><rect x="261.0" y="1653" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="263.97" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (12,203,773 samples, 0.01%)</title><rect x="1067.4" y="1669" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1070.36" y="1679.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (12,435,649 samples, 0.01%)</title><rect x="233.3" y="1669" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="236.28" y="1679.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt; &gt; (26,752,942 samples, 0.03%)</title><rect x="1181.4" y="1845" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1184.38" y="1855.5" ></text>
</g>
<g >
<title>tcp_send_mss (28,065,178 samples, 0.03%)</title><rect x="132.8" y="1605" width="0.4" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="135.82" y="1615.5" ></text>
</g>
<g >
<title>fput (7,164,617 samples, 0.01%)</title><rect x="967.2" y="1733" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="970.24" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,304,849 samples, 0.01%)</title><rect x="100.6" y="1557" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="103.59" y="1567.5" ></text>
</g>
<g >
<title>epoll_ctl (304,346,430 samples, 0.37%)</title><rect x="1044.8" y="1685" width="4.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1047.76" y="1695.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc_cs (9,908,947 samples, 0.01%)</title><rect x="828.6" y="1589" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="831.60" y="1599.5" ></text>
</g>
<g >
<title>__napi_poll (9,879,824 samples, 0.01%)</title><rect x="39.0" y="1637" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="41.95" y="1647.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (16,675,355 samples, 0.02%)</title><rect x="379.2" y="1733" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="382.16" y="1743.5" ></text>
</g>
<g >
<title>netvsc_poll (9,526,627 samples, 0.01%)</title><rect x="848.9" y="1637" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="851.89" y="1647.5" ></text>
</g>
<g >
<title>__fget_light (26,623,608 samples, 0.03%)</title><rect x="605.6" y="1573" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="608.61" y="1583.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (7,118,135 samples, 0.01%)</title><rect x="414.5" y="1573" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="417.52" y="1583.5" ></text>
</g>
<g >
<title>_int_malloc (47,756,755 samples, 0.06%)</title><rect x="1186.4" y="2053" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1189.41" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (12,652,713 samples, 0.02%)</title><rect x="815.8" y="1797" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="818.79" y="1807.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (23,818,156 samples, 0.03%)</title><rect x="722.1" y="1461" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="725.11" y="1471.5" ></text>
</g>
<g >
<title>__memchr_avx2 (21,620,088 samples, 0.03%)</title><rect x="592.7" y="2037" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="595.68" y="2047.5" ></text>
</g>
<g >
<title>do_epoll_wait (429,365,987 samples, 0.52%)</title><rect x="287.8" y="1829" width="6.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="290.76" y="1839.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (18,431,917 samples, 0.02%)</title><rect x="202.0" y="1653" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="205.00" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (14,506,671 samples, 0.02%)</title><rect x="987.4" y="1701" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="990.36" y="1711.5" ></text>
</g>
<g >
<title>netvsc_poll (9,797,356 samples, 0.01%)</title><rect x="435.8" y="1797" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="438.79" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (12,519,938 samples, 0.02%)</title><rect x="499.5" y="1749" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="502.46" y="1759.5" ></text>
</g>
<g >
<title>tcp_rcv_established (9,106,626 samples, 0.01%)</title><rect x="1155.9" y="1125" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1158.92" y="1135.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (9,548,152 samples, 0.01%)</title><rect x="240.9" y="1797" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="243.89" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1845" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_established (23,042,111 samples, 0.03%)</title><rect x="144.2" y="1429" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="147.22" y="1439.5" ></text>
</g>
<g >
<title>__GI___writev (1,768,317,994 samples, 2.12%)</title><rect x="994.8" y="1813" width="25.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="997.84" y="1823.5" >_..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (43,555,796 samples, 0.05%)</title><rect x="737.4" y="1845" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="740.39" y="1855.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (36,011,466 samples, 0.04%)</title><rect x="904.0" y="1765" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="907.04" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (67,064,281 samples, 0.08%)</title><rect x="549.1" y="1765" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="552.09" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (21,170,516 samples, 0.03%)</title><rect x="1163.4" y="1461" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1166.43" y="1471.5" ></text>
</g>
<g >
<title>x64_sys_call (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1525" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="469.26" y="1535.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (14,976,414 samples, 0.02%)</title><rect x="670.8" y="1717" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="673.77" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1701" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1711.5" ></text>
</g>
<g >
<title>selinux_inode_permission (27,949,730 samples, 0.03%)</title><rect x="950.4" y="1557" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="953.45" y="1567.5" ></text>
</g>
<g >
<title>__GI___pthread_self (7,622,629 samples, 0.01%)</title><rect x="395.6" y="1749" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="398.56" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="981" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="991.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (2,848,189,021 samples, 3.42%)</title><rect x="97.2" y="1845" width="40.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="100.20" y="1855.5" >std..</text>
</g>
<g >
<title>net_rx_action (11,735,606 samples, 0.01%)</title><rect x="296.3" y="1765" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="299.31" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (8,792,498 samples, 0.01%)</title><rect x="1002.6" y="1445" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1005.64" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="869" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="879.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (10,607,066 samples, 0.01%)</title><rect x="554.0" y="1749" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="557.03" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (21,210,997 samples, 0.03%)</title><rect x="485.9" y="1765" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="488.86" y="1775.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, char*&gt; (42,808,693 samples, 0.05%)</title><rect x="670.0" y="1701" width="0.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="673.04" y="1711.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (41,477,692 samples, 0.05%)</title><rect x="54.7" y="1685" width="0.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="57.72" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (449,353,206 samples, 0.54%)</title><rect x="475.6" y="1765" width="6.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="478.65" y="1775.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (14,020,969 samples, 0.02%)</title><rect x="63.4" y="1717" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="66.45" y="1727.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (13,562,789 samples, 0.02%)</title><rect x="465.6" y="1717" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="468.63" y="1727.5" ></text>
</g>
<g >
<title>malloc (99,788,990 samples, 0.12%)</title><rect x="596.9" y="2053" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="599.91" y="2063.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::allocate (7,934,290 samples, 0.01%)</title><rect x="1057.6" y="1701" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1060.59" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (8,695,306 samples, 0.01%)</title><rect x="907.6" y="1733" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="910.60" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1781" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1791.5" ></text>
</g>
<g >
<title>_copy_from_iter (38,887,500 samples, 0.05%)</title><rect x="264.8" y="1605" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="267.82" y="1615.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (33,282,961 samples, 0.04%)</title><rect x="937.0" y="1669" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="940.02" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="661" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="671.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (18,769,323 samples, 0.02%)</title><rect x="36.0" y="1701" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="39.04" y="1711.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (26,165,965 samples, 0.03%)</title><rect x="887.1" y="2021" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="890.14" y="2031.5" ></text>
</g>
<g >
<title>handle_softirqs (8,846,290 samples, 0.01%)</title><rect x="137.5" y="1845" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="140.53" y="1855.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1205" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1002.78" y="1215.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (8,347,091 samples, 0.01%)</title><rect x="729.6" y="1813" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="732.57" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="997" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1007.5" ></text>
</g>
<g >
<title>__alloc_skb (86,363,449 samples, 0.10%)</title><rect x="723.6" y="1589" width="1.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="726.65" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1109" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (32,881,119 samples, 0.04%)</title><rect x="783.7" y="1685" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="786.72" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (13,410,042 samples, 0.02%)</title><rect x="19.8" y="1717" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="22.80" y="1727.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,052,862 samples, 0.01%)</title><rect x="380.8" y="1589" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="383.79" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="549" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="559.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (14,435,564 samples, 0.02%)</title><rect x="14.0" y="1621" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="17.03" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1893" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (7,401,675 samples, 0.01%)</title><rect x="146.3" y="1909" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="149.28" y="1919.5" ></text>
</g>
<g >
<title>__napi_poll (9,797,356 samples, 0.01%)</title><rect x="435.8" y="1813" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="438.79" y="1823.5" ></text>
</g>
<g >
<title>__fget_light (20,628,951 samples, 0.02%)</title><rect x="462.4" y="1573" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="465.36" y="1583.5" ></text>
</g>
<g >
<title>rndis_filter_receive (22,815,739 samples, 0.03%)</title><rect x="1024.4" y="1669" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1027.42" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1013" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1023.5" ></text>
</g>
<g >
<title>__memchr_avx2 (41,228,992 samples, 0.05%)</title><rect x="888.1" y="2037" width="0.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="891.08" y="2047.5" ></text>
</g>
<g >
<title>netvsc_poll (7,810,479 samples, 0.01%)</title><rect x="246.0" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="249.00" y="1519.5" ></text>
</g>
<g >
<title>__secure_computing (9,176,508 samples, 0.01%)</title><rect x="553.9" y="1733" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="556.88" y="1743.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (22,738,206 samples, 0.03%)</title><rect x="1185.4" y="2053" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1188.45" y="2063.5" ></text>
</g>
<g >
<title>netvsc_poll (25,272,563 samples, 0.03%)</title><rect x="1090.8" y="1637" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1093.77" y="1647.5" ></text>
</g>
<g >
<title>__check_object_size (23,365,890 samples, 0.03%)</title><rect x="973.3" y="1573" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="976.35" y="1583.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (9,335,250 samples, 0.01%)</title><rect x="904.6" y="1669" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="907.64" y="1679.5" ></text>
</g>
<g >
<title>inode_permission (93,061,959 samples, 0.11%)</title><rect x="657.2" y="1589" width="1.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="660.16" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (7,185,967 samples, 0.01%)</title><rect x="220.6" y="1765" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="223.55" y="1775.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (7,357,903 samples, 0.01%)</title><rect x="885.5" y="1925" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="888.53" y="1935.5" ></text>
</g>
<g >
<title>__napi_poll (8,631,893 samples, 0.01%)</title><rect x="898.3" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="901.29" y="1583.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,906,647 samples, 0.01%)</title><rect x="839.7" y="1685" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="842.66" y="1695.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt; &gt; (32,164,246 samples, 0.04%)</title><rect x="1033.1" y="1845" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1036.13" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="133" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="143.5" ></text>
</g>
<g >
<title>napi_complete_done (8,385,464 samples, 0.01%)</title><rect x="1121.0" y="1493" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1124.00" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="229" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="239.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1685" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="747.77" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (18,123,074 samples, 0.02%)</title><rect x="630.2" y="1749" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="633.15" y="1759.5" ></text>
</g>
<g >
<title>netvsc_poll (11,943,763 samples, 0.01%)</title><rect x="421.2" y="1317" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="424.24" y="1327.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (12,317,383 samples, 0.01%)</title><rect x="403.2" y="1669" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="406.19" y="1679.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (19,980,988 samples, 0.02%)</title><rect x="848.8" y="1765" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="851.82" y="1775.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,241,773 samples, 0.01%)</title><rect x="672.4" y="1605" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="675.41" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (22,355,131 samples, 0.03%)</title><rect x="929.5" y="1765" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="932.50" y="1775.5" ></text>
</g>
<g >
<title>ip_list_rcv (17,679,770 samples, 0.02%)</title><rect x="674.3" y="1573" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="677.27" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1893" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="773" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="783.5" ></text>
</g>
<g >
<title>handle_softirqs (8,226,950 samples, 0.01%)</title><rect x="708.0" y="1541" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="710.98" y="1551.5" ></text>
</g>
<g >
<title>netvsc_xmit (159,743,724 samples, 0.19%)</title><rect x="1157.8" y="1365" width="2.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1160.77" y="1375.5" ></text>
</g>
<g >
<title>mod_timer (87,692,306 samples, 0.11%)</title><rect x="867.3" y="1509" width="1.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="870.31" y="1519.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (19,427,879 samples, 0.02%)</title><rect x="1017.5" y="1653" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1020.51" y="1663.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (18,501,933 samples, 0.02%)</title><rect x="350.8" y="1637" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="353.82" y="1647.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (11,883,631 samples, 0.01%)</title><rect x="168.1" y="1701" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="171.05" y="1711.5" ></text>
</g>
<g >
<title>netvsc_poll (10,107,971 samples, 0.01%)</title><rect x="69.2" y="1429" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="72.22" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (11,487,099 samples, 0.01%)</title><rect x="107.2" y="1781" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="110.22" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="661" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="671.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1125" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="430.41" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (29,258,136 samples, 0.04%)</title><rect x="519.1" y="1781" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="522.09" y="1791.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (24,102,680 samples, 0.03%)</title><rect x="1051.1" y="1765" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1054.07" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;char*&gt; (111,975,757 samples, 0.13%)</title><rect x="1110.8" y="1781" width="1.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1113.85" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (21,560,971 samples, 0.03%)</title><rect x="112.5" y="1717" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="115.50" y="1727.5" ></text>
</g>
<g >
<title>kmalloc_reserve (19,451,524 samples, 0.02%)</title><rect x="573.7" y="1573" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="576.69" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="869" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="879.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1413" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="421" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (7,669,496 samples, 0.01%)</title><rect x="1068.0" y="1717" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1070.97" y="1727.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8,483,266 samples, 0.01%)</title><rect x="643.5" y="1605" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="646.55" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="309" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (15,190,800 samples, 0.02%)</title><rect x="693.0" y="1653" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="696.04" y="1663.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (14,152,776 samples, 0.02%)</title><rect x="905.4" y="1749" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="908.42" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, true&gt;::operator (7,278,515 samples, 0.01%)</title><rect x="549.9" y="1749" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="552.94" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1701" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1711.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,617,696 samples, 0.01%)</title><rect x="1144.3" y="1701" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1147.28" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (58,172,724 samples, 0.07%)</title><rect x="622.9" y="1685" width="0.8" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="625.91" y="1695.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (151,176,807 samples, 0.18%)</title><rect x="424.5" y="1381" width="2.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="427.48" y="1391.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (7,866,050 samples, 0.01%)</title><rect x="11.4" y="1877" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="14.44" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (33,401,252 samples, 0.04%)</title><rect x="779.3" y="1765" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="782.30" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (12,754,733 samples, 0.02%)</title><rect x="603.9" y="1541" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="606.91" y="1551.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (6,004,709,778 samples, 7.21%)</title><rect x="11.8" y="1829" width="85.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="14.80" y="1839.5" >HttpConn::..</text>
</g>
<g >
<title>__check_object_size (38,583,041 samples, 0.05%)</title><rect x="947.7" y="1605" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="950.70" y="1615.5" ></text>
</g>
<g >
<title>inode_has_perm (8,072,464 samples, 0.01%)</title><rect x="433.6" y="1621" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="436.65" y="1631.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,178,480 samples, 0.01%)</title><rect x="906.4" y="1749" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="909.37" y="1759.5" ></text>
</g>
<g >
<title>inode_security (28,916,244 samples, 0.03%)</title><rect x="677.6" y="1653" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="680.61" y="1663.5" ></text>
</g>
<g >
<title>handle_softirqs (15,714,971 samples, 0.02%)</title><rect x="980.2" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="983.16" y="1615.5" ></text>
</g>
<g >
<title>sock_poll (9,049,051 samples, 0.01%)</title><rect x="1130.8" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1133.83" y="1583.5" ></text>
</g>
<g >
<title>napi_complete_done (11,922,218 samples, 0.01%)</title><rect x="966.4" y="1621" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="969.44" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="2005" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (8,273,878 samples, 0.01%)</title><rect x="466.8" y="1749" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="469.83" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (10,668,366 samples, 0.01%)</title><rect x="531.1" y="1621" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="534.09" y="1631.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::allocate (25,397,712 samples, 0.03%)</title><rect x="24.4" y="1685" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="27.39" y="1695.5" ></text>
</g>
<g >
<title>[web-server] (21,271,938 samples, 0.03%)</title><rect x="1059.7" y="1765" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1062.69" y="1775.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (7,335,066 samples, 0.01%)</title><rect x="466.0" y="1685" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="468.98" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="805" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="815.5" ></text>
</g>
<g >
<title>__napi_poll (11,433,348 samples, 0.01%)</title><rect x="1152.0" y="1317" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1155.03" y="1327.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (12,840,979 samples, 0.02%)</title><rect x="496.3" y="1717" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="499.31" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (75,646,212 samples, 0.09%)</title><rect x="1178.3" y="1861" width="1.0" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1181.27" y="1871.5" ></text>
</g>
<g >
<title>ip_output (417,876,142 samples, 0.50%)</title><rect x="564.0" y="1493" width="5.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="567.03" y="1503.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, 0ul&gt; (9,865,134 samples, 0.01%)</title><rect x="323.8" y="1637" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="326.78" y="1647.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,846,290 samples, 0.01%)</title><rect x="137.5" y="1861" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="140.53" y="1871.5" ></text>
</g>
<g >
<title>__fget_light (45,906,977 samples, 0.06%)</title><rect x="383.9" y="1701" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="386.87" y="1711.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (40,790,905 samples, 0.05%)</title><rect x="59.5" y="1765" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.55" y="1775.5" ></text>
</g>
<g >
<title>perf_ctx_disable (7,799,543 samples, 0.01%)</title><rect x="880.2" y="1733" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="883.20" y="1743.5" ></text>
</g>
<g >
<title>handle_softirqs (7,603,822 samples, 0.01%)</title><rect x="455.5" y="1973" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="458.45" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (24,696,909 samples, 0.03%)</title><rect x="1181.4" y="1813" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1184.41" y="1823.5" ></text>
</g>
<g >
<title>__ip_finish_output (366,939,558 samples, 0.44%)</title><rect x="422.0" y="1461" width="5.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="425.02" y="1471.5" ></text>
</g>
<g >
<title>irq_exit_rcu (19,690,420 samples, 0.02%)</title><rect x="259.7" y="1765" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="262.66" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1653" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (46,800,141 samples, 0.06%)</title><rect x="714.8" y="1349" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="717.76" y="1359.5" ></text>
</g>
<g >
<title>__napi_poll (9,340,124 samples, 0.01%)</title><rect x="577.5" y="1813" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="580.48" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2,884,673,766 samples, 3.46%)</title><rect x="394.9" y="1877" width="40.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="397.87" y="1887.5" >std..</text>
</g>
<g >
<title>sysvec_hyperv_callback (7,488,809 samples, 0.01%)</title><rect x="94.6" y="1621" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="97.56" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_established (7,236,966 samples, 0.01%)</title><rect x="380.8" y="1493" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="383.83" y="1503.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (30,472,901 samples, 0.04%)</title><rect x="609.2" y="1733" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="612.19" y="1743.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1221" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="430.41" y="1231.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,640,164 samples, 0.01%)</title><rect x="1129.4" y="1573" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1132.35" y="1583.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (16,916,044 samples, 0.02%)</title><rect x="1024.1" y="1541" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1027.13" y="1551.5" ></text>
</g>
<g >
<title>handle_softirqs (8,496,094 samples, 0.01%)</title><rect x="1014.3" y="1397" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1017.28" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="117" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="127.5" ></text>
</g>
<g >
<title>__strlen_avx2 (22,917,366 samples, 0.03%)</title><rect x="593.0" y="2037" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="595.98" y="2047.5" ></text>
</g>
<g >
<title>napi_complete_done (7,517,942 samples, 0.01%)</title><rect x="604.0" y="1493" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="606.96" y="1503.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (11,628,825 samples, 0.01%)</title><rect x="905.0" y="1605" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="908.01" y="1615.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (10,477,897 samples, 0.01%)</title><rect x="1008.2" y="1381" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1011.20" y="1391.5" ></text>
</g>
<g >
<title>selinux_inode_permission (64,213,832 samples, 0.08%)</title><rect x="657.4" y="1557" width="0.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="660.44" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (10,617,263 samples, 0.01%)</title><rect x="485.7" y="1749" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="488.66" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="85" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (8,053,857 samples, 0.01%)</title><rect x="109.2" y="1669" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="112.22" y="1679.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,236,971 samples, 0.01%)</title><rect x="357.8" y="1493" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="360.76" y="1503.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (165,905,680 samples, 0.20%)</title><rect x="1021.7" y="1813" width="2.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1024.65" y="1823.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,073,398 samples, 0.01%)</title><rect x="777.9" y="1685" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="780.94" y="1695.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,339,219 samples, 0.01%)</title><rect x="581.7" y="1557" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="584.70" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1845" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1855.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (24,972,006 samples, 0.03%)</title><rect x="610.4" y="1765" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="613.42" y="1775.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (31,648,764 samples, 0.04%)</title><rect x="880.4" y="1749" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="883.43" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (12,063,380 samples, 0.01%)</title><rect x="898.2" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="901.24" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (7,249,898 samples, 0.01%)</title><rect x="666.4" y="1781" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="669.40" y="1791.5" ></text>
</g>
<g >
<title>__napi_poll (7,076,822 samples, 0.01%)</title><rect x="1012.0" y="1365" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1015.00" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (97,329,099 samples, 0.12%)</title><rect x="927.8" y="1701" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="930.81" y="1711.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (22,274,907 samples, 0.03%)</title><rect x="903.2" y="1669" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="906.20" y="1679.5" ></text>
</g>
<g >
<title>__fdget (10,525,694 samples, 0.01%)</title><rect x="836.0" y="1589" width="0.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="839.01" y="1599.5" ></text>
</g>
<g >
<title>inode_security (17,271,158 samples, 0.02%)</title><rect x="969.7" y="1653" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="972.72" y="1663.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (13,019,765 samples, 0.02%)</title><rect x="798.1" y="1493" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="801.09" y="1503.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (31,673,531 samples, 0.04%)</title><rect x="1069.9" y="1749" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1072.89" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1285" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1295.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (17,835,373 samples, 0.02%)</title><rect x="496.1" y="1717" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="499.06" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (7,714,784 samples, 0.01%)</title><rect x="571.6" y="1381" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="574.57" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (9,346,207 samples, 0.01%)</title><rect x="519.5" y="1781" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="522.51" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (16,511,978 samples, 0.02%)</title><rect x="320.8" y="1701" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="323.83" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (7,273,831 samples, 0.01%)</title><rect x="739.1" y="1893" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="742.11" y="1903.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,938,823,143 samples, 11.93%)</title><rect x="599.9" y="2021" width="140.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="602.90" y="2031.5" >std::thread::_Inv..</text>
</g>
<g >
<title>__netif_receive_skb_list_core (10,351,719 samples, 0.01%)</title><rect x="893.7" y="1877" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="896.68" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7,658,408 samples, 0.01%)</title><rect x="25.1" y="1637" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="28.13" y="1647.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (9,621,800 samples, 0.01%)</title><rect x="877.9" y="1509" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="880.91" y="1519.5" ></text>
</g>
<g >
<title>operator delete (7,469,458 samples, 0.01%)</title><rect x="840.6" y="1669" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="843.58" y="1679.5" ></text>
</g>
<g >
<title>irq_exit_rcu (42,705,081 samples, 0.05%)</title><rect x="144.1" y="1701" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="147.08" y="1711.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (14,614,824 samples, 0.02%)</title><rect x="62.9" y="1509" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="65.86" y="1519.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,437,251 samples, 0.01%)</title><rect x="69.2" y="1397" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="72.22" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (136,385,191 samples, 0.16%)</title><rect x="397.6" y="1621" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="400.61" y="1631.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (12,209,238 samples, 0.01%)</title><rect x="304.4" y="2053" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="307.43" y="2063.5" ></text>
</g>
<g >
<title>tcp_rcv_established (11,089,214 samples, 0.01%)</title><rect x="272.7" y="1125" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="275.68" y="1135.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,033,129 samples, 0.01%)</title><rect x="1173.7" y="1765" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1176.72" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1717" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (14,012,890 samples, 0.02%)</title><rect x="524.7" y="1733" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="527.70" y="1743.5" ></text>
</g>
<g >
<title>rep_movs_alternative (42,248,388 samples, 0.05%)</title><rect x="1000.9" y="1589" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1003.86" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (495,129,719 samples, 0.59%)</title><rect x="437.0" y="1893" width="7.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="439.97" y="1903.5" ></text>
</g>
<g >
<title>epoll_wait (498,492,704 samples, 0.60%)</title><rect x="728.6" y="1909" width="7.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="731.55" y="1919.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (16,916,044 samples, 0.02%)</title><rect x="1024.1" y="1589" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1027.13" y="1599.5" ></text>
</g>
<g >
<title>__fdget (11,768,795 samples, 0.01%)</title><rect x="461.1" y="1605" width="0.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="464.12" y="1615.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (19,006,063 samples, 0.02%)</title><rect x="966.4" y="1749" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="969.44" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="949" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="959.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (7,540,504 samples, 0.01%)</title><rect x="665.0" y="1781" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="667.98" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1013" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1023.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,266,023 samples, 0.01%)</title><rect x="768.6" y="1733" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="771.60" y="1743.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,603,822 samples, 0.01%)</title><rect x="455.5" y="1989" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="458.45" y="1999.5" ></text>
</g>
<g >
<title>skb_clone (20,430,986 samples, 0.02%)</title><rect x="278.4" y="1541" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="281.42" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (120,278,542 samples, 0.14%)</title><rect x="1182.0" y="2037" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="2047.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1541" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="951.32" y="1551.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (15,946,308 samples, 0.02%)</title><rect x="641.2" y="1685" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="644.19" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (8,793,819 samples, 0.01%)</title><rect x="360.3" y="1477" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="363.26" y="1487.5" ></text>
</g>
<g >
<title>handle_softirqs (7,754,268 samples, 0.01%)</title><rect x="34.7" y="1621" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="37.72" y="1631.5" ></text>
</g>
<g >
<title>ipv4_conntrack_defrag (7,588,074 samples, 0.01%)</title><rect x="1150.7" y="1477" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1153.67" y="1487.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,421,283 samples, 0.02%)</title><rect x="1128.3" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1131.25" y="1631.5" ></text>
</g>
<g >
<title>__seccomp_filter (10,245,146 samples, 0.01%)</title><rect x="689.2" y="1589" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="692.16" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="837" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="847.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (2,908,295,692 samples, 3.49%)</title><rect x="832.4" y="1845" width="41.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="835.42" y="1855.5" >std..</text>
</g>
<g >
<title>x64_sys_call (446,612,066 samples, 0.54%)</title><rect x="1170.3" y="1861" width="6.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1173.32" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10,516,382 samples, 0.01%)</title><rect x="847.9" y="1525" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="850.90" y="1535.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (8,216,483 samples, 0.01%)</title><rect x="521.4" y="1797" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="524.45" y="1807.5" ></text>
</g>
<g >
<title>selinux_socket_recvmsg (9,947,841 samples, 0.01%)</title><rect x="534.9" y="1669" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="537.93" y="1679.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (19,101,302 samples, 0.02%)</title><rect x="383.0" y="1749" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="385.95" y="1759.5" ></text>
</g>
<g >
<title>netvsc_poll (9,558,942 samples, 0.01%)</title><rect x="1045.5" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1048.49" y="1519.5" ></text>
</g>
<g >
<title>security_file_permission (46,549,351 samples, 0.06%)</title><rect x="871.3" y="1669" width="0.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="874.25" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (8,519,168 samples, 0.01%)</title><rect x="1061.4" y="1765" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1064.43" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,671,405 samples, 0.01%)</title><rect x="224.2" y="1605" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="227.20" y="1615.5" ></text>
</g>
<g >
<title>tcp_rcv_established (12,522,417 samples, 0.02%)</title><rect x="1090.8" y="1445" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1093.83" y="1455.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (43,904,117 samples, 0.05%)</title><rect x="144.1" y="1733" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="147.07" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::clear (37,950,365 samples, 0.05%)</title><rect x="299.2" y="1925" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="302.20" y="1935.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,097,802 samples, 0.01%)</title><rect x="100.6" y="1573" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="103.56" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (13,333,147 samples, 0.02%)</title><rect x="314.7" y="1509" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="317.74" y="1519.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (17,410,175 samples, 0.02%)</title><rect x="714.9" y="1237" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="717.92" y="1247.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (14,457,475 samples, 0.02%)</title><rect x="423.1" y="1285" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="426.07" y="1295.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (387,536,461 samples, 0.47%)</title><rect x="687.8" y="1749" width="5.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="690.77" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (7,504,373 samples, 0.01%)</title><rect x="355.8" y="1701" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="358.79" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+ (8,247,025 samples, 0.01%)</title><rect x="1083.4" y="1749" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1086.39" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;char*, void&gt; (122,813,773 samples, 0.15%)</title><rect x="80.0" y="1797" width="1.8" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="83.03" y="1807.5" ></text>
</g>
<g >
<title>tcp_current_mss (20,310,181 samples, 0.02%)</title><rect x="573.0" y="1589" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="576.04" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1029" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1039.5" ></text>
</g>
<g >
<title>netvsc_poll (8,558,468 samples, 0.01%)</title><rect x="803.1" y="1493" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="806.09" y="1503.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (33,677,755 samples, 0.04%)</title><rect x="746.2" y="2053" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="749.21" y="2063.5" ></text>
</g>
<g >
<title>handle_softirqs (13,590,027 samples, 0.02%)</title><rect x="873.6" y="1845" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="876.64" y="1855.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1365" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="295.80" y="1375.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (20,722,263 samples, 0.02%)</title><rect x="249.0" y="1669" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="251.99" y="1679.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,351,719 samples, 0.01%)</title><rect x="893.7" y="1781" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="896.68" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="837" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (19,252,056 samples, 0.02%)</title><rect x="346.1" y="1765" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="349.11" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (8,746,621 samples, 0.01%)</title><rect x="1054.2" y="1701" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1057.19" y="1711.5" ></text>
</g>
<g >
<title>__GI___pthread_enable_asynccancel (8,386,983 samples, 0.01%)</title><rect x="410.7" y="1813" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="413.71" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (45,257,211 samples, 0.05%)</title><rect x="1024.1" y="1717" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1027.11" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (9,340,124 samples, 0.01%)</title><rect x="577.5" y="1829" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="580.48" y="1839.5" ></text>
</g>
<g >
<title>tcp_recvmsg (233,441,726 samples, 0.28%)</title><rect x="531.0" y="1653" width="3.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="533.98" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (12,892,172 samples, 0.02%)</title><rect x="301.2" y="2021" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="304.15" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (15,161,206 samples, 0.02%)</title><rect x="307.6" y="2053" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="310.64" y="2063.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (30,299,035 samples, 0.04%)</title><rect x="921.9" y="1749" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="924.86" y="1759.5" ></text>
</g>
<g >
<title>sock_recvmsg (367,179,786 samples, 0.44%)</title><rect x="1119.0" y="1685" width="5.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1122.03" y="1695.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (29,467,570 samples, 0.04%)</title><rect x="102.0" y="1669" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="104.99" y="1679.5" ></text>
</g>
<g >
<title>epoll_ctl (295,366,651 samples, 0.35%)</title><rect x="833.7" y="1685" width="4.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="836.73" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="949" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="959.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,553,028 samples, 0.01%)</title><rect x="1175.8" y="1589" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1178.77" y="1599.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (21,568,533 samples, 0.03%)</title><rect x="1112.0" y="1733" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1114.96" y="1743.5" ></text>
</g>
<g >
<title>__napi_poll (11,410,063 samples, 0.01%)</title><rect x="1093.1" y="1605" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1096.12" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (20,284,877 samples, 0.02%)</title><rect x="1113.2" y="1717" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1116.19" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_established (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1445" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="295.80" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (80,260,765 samples, 0.10%)</title><rect x="173.8" y="1669" width="1.2" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="176.82" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="517" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (15,724,258 samples, 0.02%)</title><rect x="882.8" y="1909" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="885.79" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1717" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,810,535 samples, 0.01%)</title><rect x="582.0" y="1605" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="584.99" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (8,162,512 samples, 0.01%)</title><rect x="334.4" y="1717" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="337.42" y="1727.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (307,613,044 samples, 0.37%)</title><rect x="405.3" y="1797" width="4.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="408.30" y="1807.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (14,412,670 samples, 0.02%)</title><rect x="252.3" y="1701" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="255.30" y="1711.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (14,988,759 samples, 0.02%)</title><rect x="113.5" y="1765" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.51" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_M_next (22,992,425 samples, 0.03%)</title><rect x="986.3" y="1717" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="989.26" y="1727.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (8,745,319 samples, 0.01%)</title><rect x="427.4" y="949" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="430.41" y="959.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (20,249,162 samples, 0.02%)</title><rect x="877.8" y="1797" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="880.79" y="1807.5" ></text>
</g>
<g >
<title>__napi_poll (8,412,072 samples, 0.01%)</title><rect x="1077.1" y="1605" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1080.13" y="1615.5" ></text>
</g>
<g >
<title>napi_complete_done (9,453,944 samples, 0.01%)</title><rect x="397.0" y="1493" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="400.03" y="1503.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (32,304,266 samples, 0.04%)</title><rect x="796.5" y="1685" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="799.48" y="1695.5" ></text>
</g>
<g >
<title>ep_poll_callback (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1637" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="747.77" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,350,092 samples, 0.01%)</title><rect x="399.0" y="1429" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="401.97" y="1439.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (14,588,046 samples, 0.02%)</title><rect x="397.0" y="1605" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="400.01" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (7,603,822 samples, 0.01%)</title><rect x="455.5" y="1957" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="458.45" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="501" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="511.5" ></text>
</g>
<g >
<title>tcp_push (1,039,613,831 samples, 1.25%)</title><rect x="708.5" y="1605" width="14.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="711.54" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="453" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="463.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,898,796 samples, 0.01%)</title><rect x="303.9" y="2005" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="306.92" y="2015.5" ></text>
</g>
<g >
<title>sock_poll (71,040,631 samples, 0.09%)</title><rect x="291.2" y="1797" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="294.19" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (18,561,499 samples, 0.02%)</title><rect x="358.3" y="1749" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="361.33" y="1759.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (27,558,593 samples, 0.03%)</title><rect x="207.4" y="1765" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.40" y="1775.5" ></text>
</g>
<g >
<title>std::function&lt;void  (5,728,519,610 samples, 6.87%)</title><rect x="750.9" y="1893" width="81.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="753.93" y="1903.5" >std::func..</text>
</g>
<g >
<title>netvsc_poll (11,433,348 samples, 0.01%)</title><rect x="1152.0" y="1301" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1155.03" y="1311.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (1,869,993,979 samples, 2.24%)</title><rect x="610.8" y="1781" width="26.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="613.79" y="1791.5" >H..</text>
</g>
<g >
<title>EventLoop::GetActiveChannel (754,457,551 samples, 0.91%)</title><rect x="577.8" y="1925" width="10.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="580.79" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (36,494,316 samples, 0.04%)</title><rect x="355.2" y="1685" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="358.22" y="1695.5" ></text>
</g>
<g >
<title>__memchr_avx2 (21,154,487 samples, 0.03%)</title><rect x="451.8" y="2053" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="454.76" y="2063.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (15,194,400 samples, 0.02%)</title><rect x="531.2" y="1621" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="534.24" y="1631.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (48,166,200 samples, 0.06%)</title><rect x="643.2" y="1717" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="646.21" y="1727.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,462,965 samples, 0.02%)</title><rect x="1152.0" y="1397" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1155.00" y="1407.5" ></text>
</g>
<g >
<title>do_epoll_ctl (162,033,900 samples, 0.19%)</title><rect x="14.8" y="1605" width="2.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="17.76" y="1615.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,347,263 samples, 0.01%)</title><rect x="605.9" y="1525" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="608.87" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (15,208,079 samples, 0.02%)</title><rect x="761.4" y="1749" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="764.40" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (17,679,770 samples, 0.02%)</title><rect x="674.3" y="1605" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="677.27" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="805" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="815.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (12,710,587 samples, 0.02%)</title><rect x="272.7" y="1189" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="275.66" y="1199.5" ></text>
</g>
<g >
<title>operator delete (18,434,607 samples, 0.02%)</title><rect x="104.9" y="1669" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="107.88" y="1679.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (600,827,396 samples, 0.72%)</title><rect x="1078.5" y="1781" width="8.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1081.47" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (10,636,759 samples, 0.01%)</title><rect x="800.4" y="1541" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="803.44" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="421" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="431.5" ></text>
</g>
<g >
<title>nf_hook_slow (12,261,374 samples, 0.01%)</title><rect x="1161.5" y="1493" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1164.51" y="1503.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (22,356,207 samples, 0.03%)</title><rect x="390.8" y="1621" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="393.85" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (7,831,649 samples, 0.01%)</title><rect x="668.3" y="1797" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="671.28" y="1807.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (513,395,716 samples, 0.62%)</title><rect x="311.0" y="1797" width="7.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="314.03" y="1807.5" ></text>
</g>
<g >
<title>vfs_fstatat (458,242,747 samples, 0.55%)</title><rect x="801.4" y="1669" width="6.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="804.42" y="1679.5" ></text>
</g>
<g >
<title>__virt_addr_valid (9,050,701 samples, 0.01%)</title><rect x="533.1" y="1557" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="536.05" y="1567.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,902,703 samples, 0.01%)</title><rect x="14.0" y="1477" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="17.03" y="1487.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1157" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="951.32" y="1167.5" ></text>
</g>
<g >
<title>std::function&lt;void  (5,975,507,487 samples, 7.17%)</title><rect x="310.1" y="1893" width="84.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="313.05" y="1903.5" >std::func..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (14,377,167 samples, 0.02%)</title><rect x="485.5" y="1749" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="488.46" y="1759.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (8,195,207 samples, 0.01%)</title><rect x="273.1" y="1141" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="276.10" y="1151.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,421,283 samples, 0.02%)</title><rect x="1128.3" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1131.25" y="1679.5" ></text>
</g>
<g >
<title>operator delete (7,623,895 samples, 0.01%)</title><rect x="1135.4" y="1669" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1138.43" y="1679.5" ></text>
</g>
<g >
<title>nft_counter_eval (15,084,077 samples, 0.02%)</title><rect x="713.1" y="1429" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="716.14" y="1439.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (178,007,972 samples, 0.21%)</title><rect x="215.2" y="1605" width="2.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="218.23" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (208,663,999 samples, 0.25%)</title><rect x="1033.8" y="2053" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.79" y="2063.5" ></text>
</g>
<g >
<title>__rcu_read_lock (8,418,474 samples, 0.01%)</title><rect x="67.9" y="1605" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="70.86" y="1615.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,860,791 samples, 0.01%)</title><rect x="804.3" y="1589" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="807.26" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (13,856,410 samples, 0.02%)</title><rect x="1024.5" y="1525" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1027.49" y="1535.5" ></text>
</g>
<g >
<title>sock_poll (11,829,629 samples, 0.01%)</title><rect x="691.1" y="1573" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="694.07" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1269" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1279.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1509" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="186.34" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (7,334,156 samples, 0.01%)</title><rect x="502.1" y="1637" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="505.12" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (175,842,227 samples, 0.21%)</title><rect x="200.9" y="1733" width="2.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="203.92" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,803,673 samples, 0.02%)</title><rect x="62.9" y="1669" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="65.86" y="1679.5" ></text>
</g>
<g >
<title>__check_object_size (39,333,364 samples, 0.05%)</title><rect x="389.6" y="1573" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="392.62" y="1583.5" ></text>
</g>
<g >
<title>sock_poll (17,569,014 samples, 0.02%)</title><rect x="982.7" y="1573" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="985.72" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::empty (21,463,991 samples, 0.03%)</title><rect x="404.1" y="1765" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="407.08" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="293" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="303.5" ></text>
</g>
<g >
<title>handle_softirqs (10,112,787 samples, 0.01%)</title><rect x="123.0" y="1365" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="125.99" y="1375.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (588,767,031 samples, 0.71%)</title><rect x="637.5" y="1781" width="8.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="640.45" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (19,344,081 samples, 0.02%)</title><rect x="666.7" y="1781" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="669.68" y="1791.5" ></text>
</g>
<g >
<title>tcp_poll (28,552,050 samples, 0.03%)</title><rect x="1174.6" y="1781" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1177.58" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1813" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,234,970 samples, 0.01%)</title><rect x="731.6" y="1605" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="734.56" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1157" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1093" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (28,665,118 samples, 0.03%)</title><rect x="256.3" y="1701" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="259.30" y="1711.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (25,275,816 samples, 0.03%)</title><rect x="818.7" y="1781" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="821.74" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (20,525,289 samples, 0.02%)</title><rect x="844.7" y="1733" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="847.74" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (11,479,433 samples, 0.01%)</title><rect x="700.0" y="1733" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="703.01" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1381" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1391.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (32,514,266 samples, 0.04%)</title><rect x="1111.4" y="1637" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1114.40" y="1647.5" ></text>
</g>
<g >
<title>tcp_release_cb (15,385,190 samples, 0.02%)</title><rect x="93.7" y="1637" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="96.73" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (45,043,001 samples, 0.05%)</title><rect x="844.1" y="1717" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="847.10" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (12,864,839 samples, 0.02%)</title><rect x="464.9" y="1669" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="467.94" y="1679.5" ></text>
</g>
<g >
<title>__x64_sys_close (10,634,752 samples, 0.01%)</title><rect x="905.0" y="1509" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="908.03" y="1519.5" ></text>
</g>
<g >
<title>__fdget_pos (45,906,977 samples, 0.06%)</title><rect x="383.9" y="1717" width="0.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="386.87" y="1727.5" ></text>
</g>
<g >
<title>__ip_local_out (250,440,802 samples, 0.30%)</title><rect x="418.3" y="1493" width="3.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="421.28" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (15,581,343 samples, 0.02%)</title><rect x="316.8" y="1669" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="319.83" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (10,591,659 samples, 0.01%)</title><rect x="552.7" y="1653" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="555.69" y="1663.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (334,360,431 samples, 0.40%)</title><rect x="22.4" y="1749" width="4.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="25.42" y="1759.5" ></text>
</g>
<g >
<title>__napi_poll (15,989,192 samples, 0.02%)</title><rect x="688.0" y="1573" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="691.05" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (29,504,685 samples, 0.04%)</title><rect x="46.4" y="1765" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="49.43" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="293" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (96,927,296 samples, 0.12%)</title><rect x="550.0" y="1749" width="1.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="553.04" y="1759.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (8,192,733 samples, 0.01%)</title><rect x="851.6" y="1573" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="854.58" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (502,540,808 samples, 0.60%)</title><rect x="29.7" y="1733" width="7.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="32.74" y="1743.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1413" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="928.84" y="1423.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,587,076 samples, 0.01%)</title><rect x="618.2" y="1765" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="621.21" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (20,803,673 samples, 0.02%)</title><rect x="62.9" y="1637" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="65.86" y="1647.5" ></text>
</g>
<g >
<title>__napi_poll (9,776,215 samples, 0.01%)</title><rect x="34.5" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="37.54" y="1583.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (12,876,121 samples, 0.02%)</title><rect x="817.5" y="1733" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="820.53" y="1743.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (11,215,156 samples, 0.01%)</title><rect x="740.6" y="2037" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="743.62" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (25,698,567 samples, 0.03%)</title><rect x="672.7" y="1797" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="675.71" y="1807.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (8,588,705 samples, 0.01%)</title><rect x="412.3" y="1765" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="415.29" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (187,807,849 samples, 0.23%)</title><rect x="1055.1" y="1717" width="2.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1058.13" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (10,574,210 samples, 0.01%)</title><rect x="1176.0" y="1557" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1178.96" y="1567.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (12,116,352 samples, 0.01%)</title><rect x="700.9" y="1685" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="703.85" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (54,281,364 samples, 0.07%)</title><rect x="882.0" y="1877" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="884.97" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (229,217,733 samples, 0.28%)</title><rect x="642.5" y="1733" width="3.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="645.48" y="1743.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (476,386,398 samples, 0.57%)</title><rect x="211.2" y="1701" width="6.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="214.21" y="1711.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (30,300,215 samples, 0.04%)</title><rect x="426.7" y="1397" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="429.65" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="357" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="367.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1045" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1055.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1,265,717,597 samples, 1.52%)</title><rect x="556.7" y="1621" width="17.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="559.68" y="1631.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (40,182,724 samples, 0.05%)</title><rect x="885.9" y="1781" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="888.93" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="117" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="127.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (8,568,756 samples, 0.01%)</title><rect x="115.9" y="1605" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="118.90" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="261" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="271.5" ></text>
</g>
<g >
<title>__fget_light (11,962,944 samples, 0.01%)</title><rect x="100.4" y="1573" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="103.37" y="1583.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,354,031 samples, 0.01%)</title><rect x="748.0" y="1989" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="751.02" y="1999.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,342,622 samples, 0.01%)</title><rect x="855.1" y="1541" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="858.11" y="1551.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (355,370,468 samples, 0.43%)</title><rect x="244.6" y="1717" width="5.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="247.62" y="1727.5" ></text>
</g>
<g >
<title>rndis_filter_receive (12,695,307 samples, 0.02%)</title><rect x="715.2" y="1301" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="718.16" y="1311.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (31,435,205 samples, 0.04%)</title><rect x="337.5" y="1733" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="340.48" y="1743.5" ></text>
</g>
<g >
<title>napi_complete_done (7,671,405 samples, 0.01%)</title><rect x="224.2" y="1637" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="227.20" y="1647.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (70,049,139 samples, 0.08%)</title><rect x="647.1" y="1749" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="650.14" y="1759.5" ></text>
</g>
<g >
<title>tcp_tso_segs (8,317,973 samples, 0.01%)</title><rect x="572.8" y="1557" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="575.78" y="1567.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (9,104,406 samples, 0.01%)</title><rect x="610.1" y="1701" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="613.11" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (7,187,477 samples, 0.01%)</title><rect x="586.5" y="1909" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="589.50" y="1919.5" ></text>
</g>
<g >
<title>netvsc_poll (10,398,359 samples, 0.01%)</title><rect x="505.4" y="1589" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="508.36" y="1599.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (35,122,308 samples, 0.04%)</title><rect x="937.6" y="1685" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="940.60" y="1695.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (21,147,487 samples, 0.03%)</title><rect x="641.2" y="1717" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="644.17" y="1727.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (60,191,247 samples, 0.07%)</title><rect x="272.5" y="1413" width="0.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="275.52" y="1423.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,016,647,105 samples, 1.22%)</title><rect x="537.8" y="1813" width="14.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="540.85" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (10,490,926 samples, 0.01%)</title><rect x="734.6" y="1573" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="737.60" y="1583.5" ></text>
</g>
<g >
<title>epoll_ctl (11,704,207 samples, 0.01%)</title><rect x="376.5" y="1733" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="379.50" y="1743.5" ></text>
</g>
<g >
<title>netvsc_poll (8,144,801 samples, 0.01%)</title><rect x="679.0" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="682.00" y="1519.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (45,601,744 samples, 0.05%)</title><rect x="382.6" y="1765" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="385.58" y="1775.5" ></text>
</g>
<g >
<title>malloc (7,346,926 samples, 0.01%)</title><rect x="769.3" y="1717" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="772.30" y="1727.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,986,312 samples, 0.01%)</title><rect x="1066.0" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1069.00" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1045" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1055.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (38,485,159 samples, 0.05%)</title><rect x="171.0" y="1749" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="173.99" y="1759.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,582,050 samples, 0.01%)</title><rect x="561.3" y="1381" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="564.33" y="1391.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,751,435 samples, 0.01%)</title><rect x="754.0" y="1573" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="757.04" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (17,634,127 samples, 0.02%)</title><rect x="259.7" y="1717" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="262.69" y="1727.5" ></text>
</g>
<g >
<title>path_init (26,053,390 samples, 0.03%)</title><rect x="512.5" y="1605" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="515.48" y="1615.5" ></text>
</g>
<g >
<title>[web-server] (14,376,323 samples, 0.02%)</title><rect x="406.0" y="1765" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="409.01" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1733" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1743.5" ></text>
</g>
<g >
<title>__napi_poll (17,159,667 samples, 0.02%)</title><rect x="672.3" y="1701" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="675.34" y="1711.5" ></text>
</g>
<g >
<title>napi_complete_done (8,516,130 samples, 0.01%)</title><rect x="65.7" y="1477" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="68.74" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (15,290,330 samples, 0.02%)</title><rect x="650.2" y="1589" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="653.16" y="1599.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10,918,694 samples, 0.01%)</title><rect x="663.3" y="1749" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="666.34" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (7,382,363 samples, 0.01%)</title><rect x="1107.7" y="1781" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1110.73" y="1791.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (12,542,712 samples, 0.02%)</title><rect x="199.8" y="1685" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="202.78" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (14,448,922 samples, 0.02%)</title><rect x="999.7" y="1493" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1002.74" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (19,247,131 samples, 0.02%)</title><rect x="1164.9" y="1557" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1167.95" y="1567.5" ></text>
</g>
<g >
<title>handle_softirqs (9,879,824 samples, 0.01%)</title><rect x="39.0" y="1669" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="41.95" y="1679.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,428,225 samples, 0.01%)</title><rect x="974.1" y="1493" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="977.10" y="1503.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (29,514,335 samples, 0.04%)</title><rect x="498.2" y="1717" width="0.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="501.16" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::deallocate (25,288,662 samples, 0.03%)</title><rect x="986.8" y="1685" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="989.84" y="1695.5" ></text>
</g>
<g >
<title>Channel::OnRead (5,920,148,714 samples, 7.10%)</title><rect x="159.6" y="1909" width="83.9" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="162.64" y="1919.5" >Channel::..</text>
</g>
<g >
<title>net_rx_action (23,061,344 samples, 0.03%)</title><rect x="880.5" y="1653" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="883.53" y="1663.5" ></text>
</g>
<g >
<title>netvsc_poll (8,364,083 samples, 0.01%)</title><rect x="1047.1" y="1477" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1050.12" y="1487.5" ></text>
</g>
<g >
<title>filename_lookup (259,719,055 samples, 0.31%)</title><rect x="364.8" y="1637" width="3.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="367.82" y="1647.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9,607,160 samples, 0.01%)</title><rect x="1182.0" y="37" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1185.01" y="47.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="469" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_M_next (21,860,645 samples, 0.03%)</title><rect x="251.1" y="1717" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="254.10" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1381" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1391.5" ></text>
</g>
<g >
<title>handle_softirqs (12,063,653 samples, 0.01%)</title><rect x="679.0" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="682.00" y="1567.5" ></text>
</g>
<g >
<title>__napi_poll (9,649,911 samples, 0.01%)</title><rect x="1143.2" y="1701" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1146.23" y="1711.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (925,390,841 samples, 1.11%)</title><rect x="60.2" y="1765" width="13.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="63.24" y="1775.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (473,271,735 samples, 0.57%)</title><rect x="211.2" y="1685" width="6.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="214.21" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::clear (29,925,659 samples, 0.04%)</title><rect x="448.1" y="1925" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="451.11" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1813" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="693" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="703.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (962,574,188 samples, 1.16%)</title><rect x="1001.8" y="1589" width="13.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1004.85" y="1599.5" ></text>
</g>
<g >
<title>ksys_read (528,361,733 samples, 0.63%)</title><rect x="527.6" y="1733" width="7.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="530.59" y="1743.5" ></text>
</g>
<g >
<title>ip_output (453,506,547 samples, 0.54%)</title><rect x="271.7" y="1493" width="6.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="274.70" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (10,575,997 samples, 0.01%)</title><rect x="955.3" y="1765" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="958.30" y="1775.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (309,852,065 samples, 0.37%)</title><rect x="547.1" y="1797" width="4.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="550.11" y="1807.5" ></text>
</g>
<g >
<title>handle_softirqs (23,484,125 samples, 0.03%)</title><rect x="818.8" y="1733" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="821.77" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (8,646,499 samples, 0.01%)</title><rect x="763.1" y="1653" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="766.10" y="1663.5" ></text>
</g>
<g >
<title>ip_list_rcv (13,806,761 samples, 0.02%)</title><rect x="565.0" y="1253" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="568.01" y="1263.5" ></text>
</g>
<g >
<title>HttpResponse::SetStatusCode (10,740,099 samples, 0.01%)</title><rect x="797.5" y="1765" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="800.53" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (11,628,825 samples, 0.01%)</title><rect x="905.0" y="1685" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="908.01" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1861" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1871.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (7,220,959 samples, 0.01%)</title><rect x="754.2" y="1621" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="757.15" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::empty (9,918,805 samples, 0.01%)</title><rect x="490.8" y="1765" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="493.81" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="725" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="735.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1,014,973,400 samples, 1.22%)</title><rect x="558.5" y="1589" width="14.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="561.53" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (13,668,447 samples, 0.02%)</title><rect x="715.0" y="1189" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="717.97" y="1199.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (10,690,229 samples, 0.01%)</title><rect x="817.6" y="1701" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="820.56" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1333" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;char*&gt; (104,038,603 samples, 0.12%)</title><rect x="1111.0" y="1765" width="1.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1113.96" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (9,906,647 samples, 0.01%)</title><rect x="839.7" y="1621" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="842.66" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7,757,952 samples, 0.01%)</title><rect x="944.6" y="1461" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="947.60" y="1471.5" ></text>
</g>
<g >
<title>netvsc_poll (12,288,760 samples, 0.01%)</title><rect x="1035.7" y="1909" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1038.68" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="533" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="543.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (9,708,803 samples, 0.01%)</title><rect x="499.0" y="1685" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="501.96" y="1695.5" ></text>
</g>
<g >
<title>ip_list_rcv (13,047,709 samples, 0.02%)</title><rect x="1113.2" y="1621" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1116.24" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1029" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1039.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (29,335,553 samples, 0.04%)</title><rect x="168.8" y="1765" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="171.80" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="901" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="911.5" ></text>
</g>
<g >
<title>__napi_poll (23,084,826 samples, 0.03%)</title><rect x="581.8" y="1701" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="584.82" y="1711.5" ></text>
</g>
<g >
<title>x64_sys_call (117,010,181 samples, 0.14%)</title><rect x="1129.7" y="1637" width="1.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1132.73" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (9,025,962 samples, 0.01%)</title><rect x="382.7" y="1605" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="385.71" y="1615.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (8,175,998 samples, 0.01%)</title><rect x="1050.7" y="1749" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1053.69" y="1759.5" ></text>
</g>
<g >
<title>ktime_get (8,044,749 samples, 0.01%)</title><rect x="1123.0" y="1605" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1126.01" y="1615.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (10,162,208 samples, 0.01%)</title><rect x="273.4" y="1381" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="276.40" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (37,418,279 samples, 0.04%)</title><rect x="844.2" y="1701" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="847.21" y="1711.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (10,898,341 samples, 0.01%)</title><rect x="818.9" y="1605" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="821.87" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (9,335,646 samples, 0.01%)</title><rect x="311.8" y="1509" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="314.78" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (90,178,725 samples, 0.11%)</title><rect x="844.0" y="1765" width="1.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="846.98" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (12,500,843 samples, 0.02%)</title><rect x="82.7" y="1525" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="85.67" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_first_not_of (12,291,132 samples, 0.01%)</title><rect x="482.4" y="1765" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="485.37" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (23,682,254 samples, 0.03%)</title><rect x="1071.9" y="1749" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1074.89" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (11,563,678 samples, 0.01%)</title><rect x="981.1" y="1541" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="984.15" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver (11,633,375 samples, 0.01%)</title><rect x="62.9" y="1477" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="65.86" y="1487.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (78,092,317 samples, 0.09%)</title><rect x="1065.1" y="1685" width="1.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1068.07" y="1695.5" ></text>
</g>
<g >
<title>__schedule (67,831,866 samples, 0.08%)</title><rect x="584.1" y="1765" width="0.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="587.06" y="1775.5" ></text>
</g>
<g >
<title>avc_has_perm (7,275,679 samples, 0.01%)</title><rect x="1161.1" y="1413" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1164.12" y="1423.5" ></text>
</g>
<g >
<title>EventLoop::IsInLoopThread (11,240,017 samples, 0.01%)</title><rect x="97.6" y="1765" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="100.62" y="1775.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (7,949,203 samples, 0.01%)</title><rect x="73.5" y="1765" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="76.48" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="853" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="863.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="565" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="575.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (15,299,589 samples, 0.02%)</title><rect x="562.2" y="1413" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="565.25" y="1423.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (20,629,915 samples, 0.02%)</title><rect x="54.1" y="1637" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="57.09" y="1647.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (54,773,108 samples, 0.07%)</title><rect x="62.7" y="1717" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.67" y="1727.5" ></text>
</g>
<g >
<title>netvsc_poll (9,360,456 samples, 0.01%)</title><rect x="363.3" y="1493" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="366.30" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="325" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="335.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (57,871,325 samples, 0.07%)</title><rect x="561.7" y="1429" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="564.71" y="1439.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (10,699,475 samples, 0.01%)</title><rect x="387.4" y="1397" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="390.42" y="1407.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,076,822 samples, 0.01%)</title><rect x="1012.0" y="1461" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1015.00" y="1471.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (163,719,210 samples, 0.20%)</title><rect x="579.3" y="1797" width="2.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="582.30" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (14,978,728 samples, 0.02%)</title><rect x="1090.8" y="1525" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1093.79" y="1535.5" ></text>
</g>
<g >
<title>__check_object_size (41,376,197 samples, 0.05%)</title><rect x="213.7" y="1605" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="216.73" y="1615.5" ></text>
</g>
<g >
<title>lock_sock_nested (36,066,372 samples, 0.04%)</title><rect x="1119.3" y="1637" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1122.26" y="1647.5" ></text>
</g>
<g >
<title>__GI___writev (1,739,464,200 samples, 2.09%)</title><rect x="410.8" y="1813" width="24.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="413.83" y="1823.5" >_..</text>
</g>
<g >
<title>clear_bhb_loop (24,976,808 samples, 0.03%)</title><rect x="504.6" y="1733" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="507.65" y="1743.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1141" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1002.78" y="1151.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (18,863,858 samples, 0.02%)</title><rect x="497.7" y="1653" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="500.73" y="1663.5" ></text>
</g>
<g >
<title>copy_iovec_from_user (8,849,746 samples, 0.01%)</title><rect x="136.0" y="1685" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="139.00" y="1695.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (7,670,965 samples, 0.01%)</title><rect x="138.6" y="1845" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="141.59" y="1855.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (290,549,934 samples, 0.35%)</title><rect x="486.2" y="1765" width="4.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="489.22" y="1775.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,751,435 samples, 0.01%)</title><rect x="754.0" y="1589" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="757.04" y="1599.5" ></text>
</g>
<g >
<title>tcp_send_mss (21,899,158 samples, 0.03%)</title><rect x="573.0" y="1605" width="0.3" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="576.02" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (86,997,514 samples, 0.10%)</title><rect x="146.7" y="1877" width="1.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="149.75" y="1887.5" ></text>
</g>
<g >
<title>getname_flags (220,074,346 samples, 0.26%)</title><rect x="64.2" y="1653" width="3.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="67.16" y="1663.5" ></text>
</g>
<g >
<title>ip_list_rcv (20,317,784 samples, 0.02%)</title><rect x="1090.8" y="1573" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1093.77" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (41,265,016 samples, 0.05%)</title><rect x="399.6" y="1669" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="402.62" y="1679.5" ></text>
</g>
<g >
<title>inode_has_perm (7,296,084 samples, 0.01%)</title><rect x="1018.2" y="1621" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1021.20" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,661,320 samples, 0.01%)</title><rect x="178.2" y="1605" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="181.23" y="1615.5" ></text>
</g>
<g >
<title>irq_exit_rcu (16,594,723 samples, 0.02%)</title><rect x="462.9" y="1557" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="465.94" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (7,614,538 samples, 0.01%)</title><rect x="79.1" y="1749" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="82.08" y="1759.5" ></text>
</g>
<g >
<title>selinux_socket_recvmsg (57,122,785 samples, 0.07%)</title><rect x="975.2" y="1653" width="0.9" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="978.24" y="1663.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (951,924,357 samples, 1.14%)</title><rect x="357.4" y="1765" width="13.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="360.41" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash (8,386,640 samples, 0.01%)</title><rect x="846.4" y="1733" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="849.38" y="1743.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (50,985,631 samples, 0.06%)</title><rect x="937.5" y="1717" width="0.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="940.54" y="1727.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (776,603,606 samples, 0.93%)</title><rect x="417.5" y="1557" width="11.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="420.48" y="1567.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (16,929,268 samples, 0.02%)</title><rect x="904.6" y="1749" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="907.55" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (84,796,472 samples, 0.10%)</title><rect x="479.0" y="1685" width="1.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="481.95" y="1695.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (3,843,709,710 samples, 4.61%)</title><rect x="466.4" y="1797" width="54.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="469.37" y="1807.5" >HttpC..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::deallocate (53,164,788 samples, 0.06%)</title><rect x="104.4" y="1685" width="0.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="107.38" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (19,476,260 samples, 0.02%)</title><rect x="638.1" y="1765" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="641.11" y="1775.5" ></text>
</g>
<g >
<title>do_epoll_ctl (108,919,540 samples, 0.13%)</title><rect x="246.5" y="1605" width="1.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="249.46" y="1615.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (210,296,067 samples, 0.25%)</title><rect x="926.4" y="1717" width="3.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="929.41" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+ (7,244,802 samples, 0.01%)</title><rect x="785.3" y="1749" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="788.26" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="501" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="511.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (435,793,307 samples, 0.52%)</title><rect x="897.7" y="1781" width="6.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="900.68" y="1791.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (20,249,162 samples, 0.02%)</title><rect x="877.8" y="1781" width="0.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="880.79" y="1791.5" ></text>
</g>
<g >
<title>rndis_filter_receive (11,400,420 samples, 0.01%)</title><rect x="731.5" y="1669" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="734.52" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (11,633,375 samples, 0.01%)</title><rect x="62.9" y="1461" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="65.86" y="1471.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (15,875,490 samples, 0.02%)</title><rect x="51.7" y="1685" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="54.73" y="1695.5" ></text>
</g>
<g >
<title>selinux_file_permission (14,008,865 samples, 0.02%)</title><rect x="970.0" y="1685" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="972.97" y="1695.5" ></text>
</g>
<g >
<title>__napi_poll (7,143,655 samples, 0.01%)</title><rect x="1120.0" y="1525" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1122.96" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,843,600 samples, 0.01%)</title><rect x="610.1" y="1541" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="613.13" y="1551.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (14,904,218 samples, 0.02%)</title><rect x="1150.8" y="1477" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1153.78" y="1487.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (7,324,851 samples, 0.01%)</title><rect x="528.6" y="1685" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="531.64" y="1695.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (15,579,535 samples, 0.02%)</title><rect x="213.2" y="1413" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="216.16" y="1423.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (43,851,998 samples, 0.05%)</title><rect x="941.2" y="1733" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="944.15" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,378,040 samples, 0.01%)</title><rect x="845.9" y="1669" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="848.93" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="805" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="815.5" ></text>
</g>
<g >
<title>epoll_wait (525,318,958 samples, 0.63%)</title><rect x="286.8" y="1909" width="7.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="289.84" y="1919.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,660,277 samples, 0.01%)</title><rect x="784.2" y="1685" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="787.18" y="1695.5" ></text>
</g>
<g >
<title>epoll_ctl (349,200,708 samples, 0.42%)</title><rect x="688.0" y="1685" width="4.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="690.96" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (30,147,107 samples, 0.04%)</title><rect x="19.6" y="1765" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="22.57" y="1775.5" ></text>
</g>
<g >
<title>all (83,335,694,200 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (80,464,042 samples, 0.10%)</title><rect x="1134.8" y="1717" width="1.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1137.82" y="1727.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (9,433,126 samples, 0.01%)</title><rect x="1144.6" y="1765" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1147.58" y="1775.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (161,063,439 samples, 0.19%)</title><rect x="1151.0" y="1461" width="2.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1154.04" y="1471.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (9,904,066,853 samples, 11.88%)</title><rect x="10.2" y="2037" width="140.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="13.25" y="2047.5" >std::thread::_Sta..</text>
</g>
<g >
<title>sysvec_hyperv_callback (7,648,638 samples, 0.01%)</title><rect x="857.2" y="1413" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="860.21" y="1423.5" ></text>
</g>
<g >
<title>Epoller::ModFd (7,081,040 samples, 0.01%)</title><rect x="161.8" y="1701" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="164.79" y="1711.5" ></text>
</g>
<g >
<title>__secure_computing (19,407,849 samples, 0.02%)</title><rect x="1093.4" y="1685" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1096.40" y="1695.5" ></text>
</g>
<g >
<title>__napi_poll (10,449,493 samples, 0.01%)</title><rect x="865.1" y="1333" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="868.14" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (11,274,827 samples, 0.01%)</title><rect x="493.6" y="1765" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="496.56" y="1775.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (11,800,546 samples, 0.01%)</title><rect x="203.1" y="1717" width="0.1" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="206.05" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1669" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (393,738,892 samples, 0.47%)</title><rect x="459.6" y="1749" width="5.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="462.57" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,059,963 samples, 0.01%)</title><rect x="672.4" y="1653" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="675.38" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::begin (8,654,685 samples, 0.01%)</title><rect x="50.5" y="1749" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="53.50" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (84,839,946 samples, 0.10%)</title><rect x="348.2" y="1765" width="1.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="351.24" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="133" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="143.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (234,589,280 samples, 0.28%)</title><rect x="971.8" y="1637" width="3.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="974.81" y="1647.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,094,779 samples, 0.01%)</title><rect x="662.8" y="1701" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="665.76" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,841,314 samples, 0.01%)</title><rect x="273.0" y="1237" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="276.04" y="1247.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,994,125 samples, 0.02%)</title><rect x="606.3" y="1541" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="609.26" y="1551.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,347,263 samples, 0.01%)</title><rect x="605.9" y="1557" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="608.87" y="1567.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (7,465,884 samples, 0.01%)</title><rect x="131.2" y="1317" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="134.21" y="1327.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (27,859,642 samples, 0.03%)</title><rect x="820.8" y="1765" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="823.76" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (8,054,251 samples, 0.01%)</title><rect x="608.7" y="1669" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="611.72" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (11,265,714 samples, 0.01%)</title><rect x="994.1" y="1797" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="997.06" y="1807.5" ></text>
</g>
<g >
<title>selinux_ip_postroute_compat (21,575,543 samples, 0.03%)</title><rect x="1160.9" y="1445" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1163.94" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1285" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1295.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,814,896 samples, 0.01%)</title><rect x="1130.6" y="1557" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1133.63" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_read (9,013,014 samples, 0.01%)</title><rect x="966.1" y="1765" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="969.09" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (13,935,629 samples, 0.02%)</title><rect x="208.5" y="1749" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="211.47" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (16,441,993 samples, 0.02%)</title><rect x="404.8" y="1781" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="407.85" y="1791.5" ></text>
</g>
<g >
<title>netvsc_poll (8,226,950 samples, 0.01%)</title><rect x="708.0" y="1493" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="710.98" y="1503.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+ (9,380,557 samples, 0.01%)</title><rect x="349.6" y="1749" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="352.60" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (55,957,480 samples, 0.07%)</title><rect x="795.3" y="1701" width="0.8" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="798.33" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (7,329,715 samples, 0.01%)</title><rect x="20.6" y="1749" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="23.61" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1269" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="430.41" y="1279.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (14,005,105 samples, 0.02%)</title><rect x="360.2" y="1541" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="363.21" y="1551.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (117,937,656 samples, 0.14%)</title><rect x="732.4" y="1813" width="1.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="735.42" y="1823.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (11,153,494 samples, 0.01%)</title><rect x="1082.7" y="1717" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1085.74" y="1727.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1,059,076,151 samples, 1.27%)</title><rect x="266.2" y="1573" width="15.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="269.22" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (19,662,083 samples, 0.02%)</title><rect x="22.7" y="1701" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="25.72" y="1711.5" ></text>
</g>
<g >
<title>vfs_writev (1,576,270,855 samples, 1.89%)</title><rect x="1145.4" y="1717" width="22.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1148.38" y="1727.5" >v..</text>
</g>
<g >
<title>ip_sublist_rcv (8,514,153 samples, 0.01%)</title><rect x="233.3" y="1493" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="236.32" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (10,466,050 samples, 0.01%)</title><rect x="482.0" y="1765" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="485.02" y="1775.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,378,860 samples, 0.01%)</title><rect x="141.2" y="1557" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="144.23" y="1567.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (24,874,451 samples, 0.03%)</title><rect x="1007.4" y="1269" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1010.40" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,648,261,973 samples, 1.98%)</title><rect x="113.0" y="1797" width="23.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="116.00" y="1807.5" >e..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (741,755,258 samples, 0.89%)</title><rect x="1113.9" y="1797" width="10.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1116.91" y="1807.5" ></text>
</g>
<g >
<title>import_iovec (12,404,582 samples, 0.01%)</title><rect x="136.0" y="1701" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="138.98" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1109" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1119.5" ></text>
</g>
<g >
<title>netvsc_poll (52,476,435 samples, 0.06%)</title><rect x="1007.4" y="1317" width="0.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1010.37" y="1327.5" ></text>
</g>
<g >
<title>irq_exit_rcu (16,784,169 samples, 0.02%)</title><rect x="410.9" y="1765" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="413.91" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (19,424,442 samples, 0.02%)</title><rect x="932.2" y="1765" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="935.22" y="1775.5" ></text>
</g>
<g >
<title>napi_complete_done (17,257,301 samples, 0.02%)</title><rect x="380.8" y="1669" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="383.75" y="1679.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (318,493,502 samples, 0.38%)</title><rect x="924.9" y="1749" width="4.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="927.91" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (14,337,555 samples, 0.02%)</title><rect x="609.7" y="1733" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="612.74" y="1743.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (10,354,854 samples, 0.01%)</title><rect x="109.5" y="1717" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="112.53" y="1727.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::function&lt;void  (11,488,987 samples, 0.01%)</title><rect x="885.2" y="1893" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="888.19" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Epoller*, std::default_delete&lt;Epoller&gt; &gt; (8,768,049 samples, 0.01%)</title><rect x="903.6" y="1637" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="906.64" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1989" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1999.5" ></text>
</g>
<g >
<title>sock_write_iter (1,439,260,534 samples, 1.73%)</title><rect x="1146.3" y="1669" width="20.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1149.31" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="853" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="863.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (8,262,802 samples, 0.01%)</title><rect x="966.5" y="1477" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="969.49" y="1487.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (11,866,841 samples, 0.01%)</title><rect x="766.0" y="1685" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="769.01" y="1695.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (8,226,950 samples, 0.01%)</title><rect x="708.0" y="1589" width="0.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="710.98" y="1599.5" ></text>
</g>
<g >
<title>rndis_filter_receive (8,226,950 samples, 0.01%)</title><rect x="708.0" y="1477" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="710.98" y="1487.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (58,866,632 samples, 0.07%)</title><rect x="331.0" y="1685" width="0.8" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="333.96" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="325" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="335.5" ></text>
</g>
<g >
<title>irq_exit_rcu (12,757,239 samples, 0.02%)</title><rect x="439.9" y="1765" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="442.94" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (8,591,212 samples, 0.01%)</title><rect x="171.3" y="1685" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="174.25" y="1695.5" ></text>
</g>
<g >
<title>file_has_perm (12,781,389 samples, 0.02%)</title><rect x="871.7" y="1637" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="874.73" y="1647.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,906,809 samples, 0.01%)</title><rect x="703.6" y="1749" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="706.63" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="997" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1007.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (29,925,659 samples, 0.04%)</title><rect x="448.1" y="1877" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="451.11" y="1887.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,695,179 samples, 0.01%)</title><rect x="261.0" y="1717" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="263.97" y="1727.5" ></text>
</g>
<g >
<title>irq_exit_rcu (16,807,709 samples, 0.02%)</title><rect x="382.7" y="1717" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="385.71" y="1727.5" ></text>
</g>
<g >
<title>napi_complete_done (11,471,970 samples, 0.01%)</title><rect x="606.3" y="1461" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="609.26" y="1471.5" ></text>
</g>
<g >
<title>loopthread4 (10,601,350,502 samples, 12.72%)</title><rect x="599.6" y="2069" width="150.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="602.55" y="2079.5" >loopthread4</text>
</g>
<g >
<title>ip_list_rcv (7,671,405 samples, 0.01%)</title><rect x="224.2" y="1589" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="227.20" y="1599.5" ></text>
</g>
<g >
<title>_int_free (26,652,005 samples, 0.03%)</title><rect x="451.2" y="2037" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="454.18" y="2047.5" ></text>
</g>
<g >
<title>__seccomp_filter (7,406,867 samples, 0.01%)</title><rect x="674.6" y="1717" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="677.63" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (19,745,784 samples, 0.02%)</title><rect x="521.6" y="1797" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="524.61" y="1807.5" ></text>
</g>
<g >
<title>TimerManager::Tick (42,783,722 samples, 0.05%)</title><rect x="1031.8" y="1925" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1034.77" y="1935.5" ></text>
</g>
<g >
<title>nft_do_chain_ipv4 (44,421,430 samples, 0.05%)</title><rect x="1005.8" y="1461" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1008.79" y="1471.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (19,690,420 samples, 0.02%)</title><rect x="259.7" y="1749" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="262.66" y="1759.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, char*, char*&gt; (8,026,767 samples, 0.01%)</title><rect x="496.1" y="1637" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="499.08" y="1647.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (14,083,581 samples, 0.02%)</title><rect x="752.9" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="755.89" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (8,218,801 samples, 0.01%)</title><rect x="1179.7" y="1845" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1182.67" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1541" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1551.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (7,255,579 samples, 0.01%)</title><rect x="722.7" y="1557" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="725.69" y="1567.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (200,501,118 samples, 0.24%)</title><rect x="804.8" y="1605" width="2.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="807.75" y="1615.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,506,648 samples, 0.01%)</title><rect x="929.0" y="1669" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="932.04" y="1679.5" ></text>
</g>
<g >
<title>epoll_wait (583,515,149 samples, 0.70%)</title><rect x="1020.7" y="1909" width="8.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1023.72" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (56,086,067 samples, 0.07%)</title><rect x="789.4" y="1749" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="792.37" y="1759.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (10,112,787 samples, 0.01%)</title><rect x="123.0" y="1413" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="125.99" y="1423.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1285" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1002.78" y="1295.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,801,665 samples, 0.01%)</title><rect x="183.2" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="186.18" y="1631.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (161,303,601 samples, 0.19%)</title><rect x="566.5" y="1397" width="2.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="569.47" y="1407.5" ></text>
</g>
<g >
<title>__napi_poll (7,627,962 samples, 0.01%)</title><rect x="917.9" y="1557" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="920.93" y="1567.5" ></text>
</g>
<g >
<title>sock_write_iter (1,370,696,403 samples, 1.64%)</title><rect x="998.4" y="1669" width="19.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1001.38" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (7,244,386 samples, 0.01%)</title><rect x="810.4" y="1765" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="813.39" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (7,366,368 samples, 0.01%)</title><rect x="334.9" y="1765" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="337.88" y="1775.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7,513,023 samples, 0.01%)</title><rect x="1175.6" y="1333" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1178.59" y="1343.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (26,782,140 samples, 0.03%)</title><rect x="670.7" y="1749" width="0.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="673.72" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (13,942,990 samples, 0.02%)</title><rect x="957.0" y="1765" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="960.04" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (13,247,196 samples, 0.02%)</title><rect x="397.0" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="400.03" y="1567.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (11,344,922 samples, 0.01%)</title><rect x="674.8" y="1765" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="677.79" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (7,968,086 samples, 0.01%)</title><rect x="1167.1" y="1557" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1170.05" y="1567.5" ></text>
</g>
<g >
<title>netvsc_poll (7,196,704 samples, 0.01%)</title><rect x="46.3" y="1589" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="49.27" y="1599.5" ></text>
</g>
<g >
<title>napi_complete_done (23,765,658 samples, 0.03%)</title><rect x="272.6" y="1301" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="275.58" y="1311.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (7,339,219 samples, 0.01%)</title><rect x="581.7" y="1493" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="584.70" y="1503.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (2,899,736,426 samples, 3.48%)</title><rect x="686.8" y="1845" width="41.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="689.84" y="1855.5" >std..</text>
</g>
<g >
<title>EventLoop::ModChannel (14,264,349 samples, 0.02%)</title><rect x="1133.3" y="1733" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1136.28" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (7,876,432 samples, 0.01%)</title><rect x="899.3" y="1541" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="902.33" y="1551.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (11,261,021 samples, 0.01%)</title><rect x="927.6" y="1685" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="930.63" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (10,820,769 samples, 0.01%)</title><rect x="740.9" y="37" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="743.86" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,046,204 samples, 0.01%)</title><rect x="423.2" y="1237" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="426.16" y="1247.5" ></text>
</g>
<g >
<title>security_file_permission (44,798,249 samples, 0.05%)</title><rect x="433.2" y="1669" width="0.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="436.15" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (9,433,185 samples, 0.01%)</title><rect x="571.5" y="1477" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="574.55" y="1487.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (35,769,511 samples, 0.04%)</title><rect x="442.9" y="1717" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="445.88" y="1727.5" ></text>
</g>
<g >
<title>netvsc_poll (20,843,576 samples, 0.03%)</title><rect x="380.8" y="1685" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="383.75" y="1695.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (2,931,558,023 samples, 3.52%)</title><rect x="978.5" y="1845" width="41.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="981.55" y="1855.5" >std..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (228,381,923 samples, 0.27%)</title><rect x="191.1" y="1733" width="3.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="194.06" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="351.5" ></text>
</g>
<g >
<title>x64_sys_call (10,634,752 samples, 0.01%)</title><rect x="905.0" y="1525" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="908.03" y="1535.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char*&gt; (8,257,703 samples, 0.01%)</title><rect x="937.9" y="1637" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="940.91" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (7,284,516 samples, 0.01%)</title><rect x="20.1" y="1765" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="23.11" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (8,793,819 samples, 0.01%)</title><rect x="360.3" y="1461" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="363.26" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_close (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1509" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="171.38" y="1519.5" ></text>
</g>
<g >
<title>handle_softirqs (22,034,405 samples, 0.03%)</title><rect x="964.3" y="1733" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="967.27" y="1743.5" ></text>
</g>
<g >
<title>rw_verify_area (135,454,754 samples, 0.16%)</title><rect x="384.7" y="1701" width="2.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="387.74" y="1711.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,488,809 samples, 0.01%)</title><rect x="94.6" y="1637" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="97.56" y="1647.5" ></text>
</g>
<g >
<title>__memchr_avx2 (36,359,290 samples, 0.04%)</title><rect x="742.5" y="2037" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="745.50" y="2047.5" ></text>
</g>
<g >
<title>netvsc_poll (21,375,833 samples, 0.03%)</title><rect x="213.1" y="1493" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="216.13" y="1503.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9,656,570 samples, 0.01%)</title><rect x="421.3" y="1157" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="424.27" y="1167.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (12,322,232 samples, 0.01%)</title><rect x="231.7" y="1477" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="234.71" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1317" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1909" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="789" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="799.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1285" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="295.80" y="1295.5" ></text>
</g>
<g >
<title>net_rx_action (8,050,396 samples, 0.01%)</title><rect x="583.4" y="1701" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="586.36" y="1711.5" ></text>
</g>
<g >
<title>selinux_ip_postroute (7,673,995 samples, 0.01%)</title><rect x="1161.4" y="1477" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1164.40" y="1487.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,797,356 samples, 0.01%)</title><rect x="435.8" y="1909" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="438.79" y="1919.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (15,545,057 samples, 0.02%)</title><rect x="65.7" y="1589" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="68.72" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (25,601,705 samples, 0.03%)</title><rect x="150.6" y="2021" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="2031.5" ></text>
</g>
<g >
<title>rndis_filter_receive (8,426,982 samples, 0.01%)</title><rect x="734.7" y="1605" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="737.75" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (25,867,757 samples, 0.03%)</title><rect x="407.3" y="1733" width="0.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="410.32" y="1743.5" ></text>
</g>
<g >
<title>nf_hook_slow (39,759,079 samples, 0.05%)</title><rect x="277.5" y="1477" width="0.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="280.48" y="1487.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (8,010,118 samples, 0.01%)</title><rect x="759.5" y="1605" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="762.52" y="1615.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (428,314,860 samples, 0.51%)</title><rect x="459.2" y="1781" width="6.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="462.18" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+ (8,325,028 samples, 0.01%)</title><rect x="55.7" y="1669" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="58.74" y="1679.5" ></text>
</g>
<g >
<title>loopthread7 (10,447,694,952 samples, 12.54%)</title><rect x="1042.1" y="2069" width="147.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1045.06" y="2079.5" >loopthread7</text>
</g>
<g >
<title>tcp_rearm_rto (12,565,950 samples, 0.02%)</title><rect x="280.6" y="1557" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="283.61" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1797" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="677" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="687.5" ></text>
</g>
<g >
<title>__napi_poll (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1493" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="951.32" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::erase (42,194,407 samples, 0.05%)</title><rect x="930.3" y="1765" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="933.30" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (21,235,374 samples, 0.03%)</title><rect x="186.3" y="1765" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="189.29" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (10,146,324 samples, 0.01%)</title><rect x="763.1" y="1669" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="766.08" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (48,715,421 samples, 0.06%)</title><rect x="110.3" y="1701" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="113.29" y="1711.5" ></text>
</g>
<g >
<title>skb_release_data (7,645,362 samples, 0.01%)</title><rect x="680.9" y="1605" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="683.90" y="1615.5" ></text>
</g>
<g >
<title>netvsc_poll (14,257,638 samples, 0.02%)</title><rect x="800.4" y="1589" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="803.42" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1429" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1439.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,362,952 samples, 0.01%)</title><rect x="966.5" y="1509" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="969.46" y="1519.5" ></text>
</g>
<g >
<title>selinux_inode_permission (39,728,348 samples, 0.05%)</title><rect x="366.3" y="1557" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="369.34" y="1567.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (17,435,829 samples, 0.02%)</title><rect x="466.7" y="1765" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="469.70" y="1775.5" ></text>
</g>
<g >
<title>HttpResponse::Clear (10,364,499 samples, 0.01%)</title><rect x="252.8" y="1781" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="255.84" y="1791.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (11,072,922 samples, 0.01%)</title><rect x="471.7" y="1621" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="474.71" y="1631.5" ></text>
</g>
<g >
<title>netvsc_poll (8,428,225 samples, 0.01%)</title><rect x="974.1" y="1429" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="977.10" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="325" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="335.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (356,494,616 samples, 0.43%)</title><rect x="988.6" y="1797" width="5.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="991.60" y="1807.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (211,930,846 samples, 0.25%)</title><rect x="402.3" y="1797" width="3.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="405.28" y="1807.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,261,021 samples, 0.01%)</title><rect x="927.6" y="1653" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="930.63" y="1663.5" ></text>
</g>
<g >
<title>tcp_recvmsg (321,863,711 samples, 0.39%)</title><rect x="89.4" y="1653" width="4.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="92.39" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (27,489,712 samples, 0.03%)</title><rect x="1089.4" y="1701" width="0.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1092.37" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,236,971 samples, 0.01%)</title><rect x="357.8" y="1509" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="360.76" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (25,719,591 samples, 0.03%)</title><rect x="371.9" y="1749" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="374.91" y="1759.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (15,800,317 samples, 0.02%)</title><rect x="505.8" y="1717" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="508.84" y="1727.5" ></text>
</g>
<g >
<title>std::function&lt;void  (8,175,998 samples, 0.01%)</title><rect x="1050.7" y="1781" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1053.69" y="1791.5" ></text>
</g>
<g >
<title>lock_sock_nested (13,680,250 samples, 0.02%)</title><rect x="706.1" y="1621" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="709.07" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1797" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1807.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (9,108,344 samples, 0.01%)</title><rect x="520.2" y="1781" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="523.25" y="1791.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (481,342,039 samples, 0.58%)</title><rect x="945.5" y="1701" width="6.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="948.47" y="1711.5" ></text>
</g>
<g >
<title>netvsc_poll (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1925" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="747.77" y="1935.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (13,308,896 samples, 0.02%)</title><rect x="440.2" y="1653" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="443.24" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (14,540,273 samples, 0.02%)</title><rect x="923.5" y="1749" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="926.47" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1173" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1183.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,815,769 samples, 0.01%)</title><rect x="296.3" y="1685" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="299.31" y="1695.5" ></text>
</g>
<g >
<title>__fget_light (47,054,057 samples, 0.06%)</title><rect x="85.9" y="1701" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="88.89" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (12,500,843 samples, 0.02%)</title><rect x="82.7" y="1509" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="85.67" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (19,321,683 samples, 0.02%)</title><rect x="327.7" y="1765" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="330.68" y="1775.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,699,475 samples, 0.01%)</title><rect x="387.4" y="1333" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="390.42" y="1343.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (46,339,620 samples, 0.06%)</title><rect x="711.6" y="1429" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="714.59" y="1439.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (27,520,035 samples, 0.03%)</title><rect x="350.8" y="1653" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="353.77" y="1663.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (10,149,535 samples, 0.01%)</title><rect x="764.8" y="1621" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="767.78" y="1631.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (14,058,781 samples, 0.02%)</title><rect x="82.6" y="1541" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="85.65" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_read (630,585,005 samples, 0.76%)</title><rect x="675.1" y="1749" width="8.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="678.11" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1909" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="453" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="463.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,627,962 samples, 0.01%)</title><rect x="917.9" y="1605" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="920.93" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1093" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1103.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (18,145,193 samples, 0.02%)</title><rect x="229.6" y="1749" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="232.60" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (99,420,056 samples, 0.12%)</title><rect x="109.8" y="1749" width="1.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="112.79" y="1759.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (8,842,015 samples, 0.01%)</title><rect x="534.1" y="1605" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="537.11" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1205" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1215.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (387,536,461 samples, 0.47%)</title><rect x="687.8" y="1733" width="5.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="690.77" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (15,898,744 samples, 0.02%)</title><rect x="182.9" y="1669" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="185.92" y="1679.5" ></text>
</g>
<g >
<title>selinux_socket_sendmsg (46,272,805 samples, 0.06%)</title><rect x="283.1" y="1637" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="286.08" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (27,501,388 samples, 0.03%)</title><rect x="448.9" y="2021" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="2031.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,385,901 samples, 0.01%)</title><rect x="1066.0" y="1493" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1069.03" y="1503.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1493" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1178.57" y="1503.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (64,899,529 samples, 0.08%)</title><rect x="909.8" y="1669" width="0.9" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="912.77" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (8,860,791 samples, 0.01%)</title><rect x="804.3" y="1541" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="807.26" y="1551.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (16,248,392 samples, 0.02%)</title><rect x="348.8" y="1685" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="351.77" y="1695.5" ></text>
</g>
<g >
<title>inode_security (24,298,622 samples, 0.03%)</title><rect x="88.6" y="1653" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="91.64" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (8,338,241 samples, 0.01%)</title><rect x="609.5" y="1701" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="612.47" y="1711.5" ></text>
</g>
<g >
<title>ksys_read (633,434,097 samples, 0.76%)</title><rect x="967.3" y="1733" width="9.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="970.34" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1397" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="928.84" y="1407.5" ></text>
</g>
<g >
<title>rep_movs_alternative (39,930,090 samples, 0.05%)</title><rect x="416.1" y="1589" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="419.05" y="1599.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (12,235,863 samples, 0.01%)</title><rect x="213.2" y="1397" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="216.21" y="1407.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (33,593,794 samples, 0.04%)</title><rect x="293.1" y="1685" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="296.12" y="1695.5" ></text>
</g>
<g >
<title>cubictcp_cwnd_event (7,264,294 samples, 0.01%)</title><rect x="130.4" y="1557" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="133.36" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (9,596,595 samples, 0.01%)</title><rect x="1108.7" y="1781" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1111.74" y="1791.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1,297,758,626 samples, 1.56%)</title><rect x="414.3" y="1637" width="18.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="417.35" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7,155,189 samples, 0.01%)</title><rect x="311.8" y="1429" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="314.78" y="1439.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (106,097,687 samples, 0.13%)</title><rect x="295.7" y="1877" width="1.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="298.69" y="1887.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,249,479 samples, 0.01%)</title><rect x="857.0" y="1413" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="859.98" y="1423.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (25,061,613 samples, 0.03%)</title><rect x="838.6" y="1749" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="841.60" y="1759.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (46,784,210 samples, 0.06%)</title><rect x="670.0" y="1717" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="672.98" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,437,251 samples, 0.01%)</title><rect x="69.2" y="1381" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="72.22" y="1391.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (46,022,699 samples, 0.06%)</title><rect x="731.7" y="1781" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="734.68" y="1791.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (90,750,607 samples, 0.11%)</title><rect x="1162.5" y="1557" width="1.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1165.54" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="885" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="895.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (379,316,229 samples, 0.46%)</title><rect x="161.9" y="1701" width="5.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="164.89" y="1711.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,957,799,613 samples, 11.95%)</title><rect x="599.6" y="2053" width="141.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="602.63" y="2063.5" >[libstdc++.so.6.0..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (328,475,743 samples, 0.39%)</title><rect x="329.4" y="1701" width="4.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="332.39" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (9,104,406 samples, 0.01%)</title><rect x="610.1" y="1733" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="613.11" y="1743.5" ></text>
</g>
<g >
<title>__napi_poll (14,255,933 samples, 0.02%)</title><rect x="244.8" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="247.84" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (11,140,267 samples, 0.01%)</title><rect x="846.8" y="1797" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="849.80" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (13,000,535 samples, 0.02%)</title><rect x="518.6" y="1781" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="521.63" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (336,230,260 samples, 0.40%)</title><rect x="97.9" y="1733" width="4.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="100.86" y="1743.5" ></text>
</g>
<g >
<title>TimerManager::Tick (40,715,099 samples, 0.05%)</title><rect x="446.9" y="1925" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="449.90" y="1935.5" ></text>
</g>
<g >
<title>HttpResponse::Clear (8,782,303 samples, 0.01%)</title><rect x="987.7" y="1781" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="990.73" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (137,705,464 samples, 0.17%)</title><rect x="1140.2" y="1749" width="2.0" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1143.21" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="277" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_last_not_of (14,839,991 samples, 0.02%)</title><rect x="37.5" y="1765" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="40.46" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (8,347,263 samples, 0.01%)</title><rect x="605.9" y="1461" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="608.87" y="1471.5" ></text>
</g>
<g >
<title>vfs_read (507,634,021 samples, 0.61%)</title><rect x="233.6" y="1717" width="7.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="236.57" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (7,507,946 samples, 0.01%)</title><rect x="193.9" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="196.87" y="1599.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (20,075,499 samples, 0.02%)</title><rect x="526.9" y="1749" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="529.91" y="1759.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (8,591,787 samples, 0.01%)</title><rect x="1081.8" y="1765" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1084.76" y="1775.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (10,080,533 samples, 0.01%)</title><rect x="754.0" y="1605" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="757.01" y="1615.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (101,332,454 samples, 0.12%)</title><rect x="141.9" y="1813" width="1.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="144.92" y="1823.5" ></text>
</g>
<g >
<title>__napi_poll (8,925,385 samples, 0.01%)</title><rect x="1066.2" y="1589" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1069.17" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9,922,883 samples, 0.01%)</title><rect x="300.1" y="37" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="303.11" y="47.5" ></text>
</g>
<g >
<title>std::function&lt;void  (397,899,750 samples, 0.48%)</title><rect x="687.6" y="1765" width="5.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="690.62" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2,981,888,949 samples, 3.58%)</title><rect x="1126.9" y="1877" width="42.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1129.87" y="1887.5" >std..</text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (291,436,878 samples, 0.35%)</title><rect x="190.2" y="1749" width="4.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="193.16" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (235,185,734 samples, 0.28%)</title><rect x="935.7" y="1765" width="3.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="938.74" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (9,258,675 samples, 0.01%)</title><rect x="443.0" y="1509" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="445.97" y="1519.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (32,556,104 samples, 0.04%)</title><rect x="38.6" y="1749" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="41.63" y="1759.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (10,619,096 samples, 0.01%)</title><rect x="247.5" y="1573" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="250.52" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (9,010,333 samples, 0.01%)</title><rect x="517.0" y="1749" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="520.03" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="2005" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (9,420,373 samples, 0.01%)</title><rect x="1154.0" y="1349" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1157.03" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="373" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="383.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (7,681,166 samples, 0.01%)</title><rect x="1144.5" y="1749" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1147.47" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (50,375,352 samples, 0.06%)</title><rect x="1027.3" y="1733" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1030.31" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,735,606 samples, 0.01%)</title><rect x="296.3" y="1829" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="299.31" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_erase (17,606,831 samples, 0.02%)</title><rect x="344.2" y="1749" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="347.20" y="1759.5" ></text>
</g>
<g >
<title>__napi_poll (11,943,763 samples, 0.01%)</title><rect x="421.2" y="1333" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="424.24" y="1343.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (24,472,219 samples, 0.03%)</title><rect x="231.6" y="1701" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="234.61" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (8,093,985 samples, 0.01%)</title><rect x="127.9" y="1285" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="130.92" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (10,078,129 samples, 0.01%)</title><rect x="666.5" y="1781" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="669.51" y="1791.5" ></text>
</g>
<g >
<title>ip_list_rcv (15,579,535 samples, 0.02%)</title><rect x="213.2" y="1429" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="216.16" y="1439.5" ></text>
</g>
<g >
<title>__fdget_pos (36,555,461 samples, 0.04%)</title><rect x="554.4" y="1717" width="0.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="557.39" y="1727.5" ></text>
</g>
<g >
<title>netvsc_send_pkt (63,115,024 samples, 0.08%)</title><rect x="276.0" y="1333" width="0.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="278.98" y="1343.5" ></text>
</g>
<g >
<title>__GI___writev (1,820,695,228 samples, 2.18%)</title><rect x="847.7" y="1813" width="25.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="850.69" y="1823.5" >_..</text>
</g>
<g >
<title>irq_exit_rcu (8,057,869 samples, 0.01%)</title><rect x="485.0" y="1701" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="487.97" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (28,015,217 samples, 0.03%)</title><rect x="448.1" y="1813" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="451.14" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (24,440,962 samples, 0.03%)</title><rect x="548.7" y="1781" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="551.67" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,712,971 samples, 0.01%)</title><rect x="688.1" y="1445" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="691.11" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (18,646,247 samples, 0.02%)</title><rect x="778.4" y="1749" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="781.38" y="1759.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (10,125,063 samples, 0.01%)</title><rect x="168.1" y="1685" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="171.08" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (10,860,659 samples, 0.01%)</title><rect x="1188.5" y="1957" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1191.51" y="1967.5" ></text>
</g>
<g >
<title>hv_ringbuffer_write (10,477,897 samples, 0.01%)</title><rect x="1008.2" y="1285" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1011.20" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1829" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1839.5" ></text>
</g>
<g >
<title>sch_direct_xmit (195,718,547 samples, 0.23%)</title><rect x="566.2" y="1413" width="2.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="569.20" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (208,705,991 samples, 0.25%)</title><rect x="688.9" y="1653" width="2.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="691.89" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="613" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="623.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,152,732 samples, 0.01%)</title><rect x="865.1" y="1269" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="868.14" y="1279.5" ></text>
</g>
<g >
<title>ip_list_rcv (21,770,579 samples, 0.03%)</title><rect x="272.6" y="1253" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="275.60" y="1263.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,516,382 samples, 0.01%)</title><rect x="847.9" y="1541" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="850.90" y="1551.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (17,250,299 samples, 0.02%)</title><rect x="239.1" y="1621" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="242.14" y="1631.5" ></text>
</g>
<g >
<title>tcp_push (1,023,287,929 samples, 1.23%)</title><rect x="558.5" y="1605" width="14.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="561.48" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (7,147,124 samples, 0.01%)</title><rect x="429.5" y="1381" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="432.49" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (26,434,756 samples, 0.03%)</title><rect x="1068.9" y="1765" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1071.86" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (8,788,808 samples, 0.01%)</title><rect x="141.3" y="1493" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="144.25" y="1503.5" ></text>
</g>
<g >
<title>napi_complete_done (13,527,822 samples, 0.02%)</title><rect x="1172.9" y="1669" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1175.87" y="1679.5" ></text>
</g>
<g >
<title>irq_exit_rcu (12,063,380 samples, 0.01%)</title><rect x="898.2" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="901.24" y="1647.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1669" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="171.38" y="1679.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,961,558 samples, 0.01%)</title><rect x="1140.9" y="1653" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1143.88" y="1663.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (28,346,751 samples, 0.03%)</title><rect x="141.4" y="1781" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="144.40" y="1791.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (71,585,290 samples, 0.09%)</title><rect x="734.1" y="1813" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="737.11" y="1823.5" ></text>
</g>
<g >
<title>file_has_perm (20,936,164 samples, 0.03%)</title><rect x="1118.2" y="1653" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1121.20" y="1663.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (51,456,015 samples, 0.06%)</title><rect x="710.5" y="1429" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="713.52" y="1439.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, 0ul&gt; (17,255,982 samples, 0.02%)</title><rect x="174.6" y="1637" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="177.59" y="1647.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (40,013,258 samples, 0.05%)</title><rect x="82.4" y="1797" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="85.43" y="1807.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (7,620,926 samples, 0.01%)</title><rect x="572.0" y="1445" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="575.04" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="933" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="943.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,297,747 samples, 0.01%)</title><rect x="1068.6" y="1749" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1071.61" y="1759.5" ></text>
</g>
<g >
<title>HttpResponse::Clear (10,907,998 samples, 0.01%)</title><rect x="1078.3" y="1781" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1081.32" y="1791.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (191,923,031 samples, 0.23%)</title><rect x="361.6" y="1637" width="2.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="364.63" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (7,623,917 samples, 0.01%)</title><rect x="845.1" y="1749" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="848.07" y="1759.5" ></text>
</g>
<g >
<title>tcp_rcv_established (9,182,790 samples, 0.01%)</title><rect x="440.3" y="1461" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="443.28" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (11,400,820 samples, 0.01%)</title><rect x="551.5" y="1765" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="554.52" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,930,668 samples, 0.01%)</title><rect x="244.9" y="1509" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="247.87" y="1519.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (17,555,999 samples, 0.02%)</title><rect x="162.0" y="1669" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="165.00" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9,621,800 samples, 0.01%)</title><rect x="877.9" y="1493" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="880.91" y="1503.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,115,937 samples, 0.01%)</title><rect x="859.1" y="1381" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="862.06" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1989" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1999.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,860,791 samples, 0.01%)</title><rect x="804.3" y="1621" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="807.26" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1557" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (12,181,978 samples, 0.01%)</title><rect x="894.1" y="2053" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="897.15" y="2063.5" ></text>
</g>
<g >
<title>__napi_poll (26,373,766 samples, 0.03%)</title><rect x="565.0" y="1333" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="567.95" y="1343.5" ></text>
</g>
<g >
<title>netvsc_poll (7,246,094 samples, 0.01%)</title><rect x="519.4" y="1653" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="522.40" y="1663.5" ></text>
</g>
<g >
<title>netvsc_poll (37,785,597 samples, 0.05%)</title><rect x="731.7" y="1685" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="734.73" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::empty (15,384,902 samples, 0.02%)</title><rect x="696.1" y="1765" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="699.11" y="1775.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (359,334,548 samples, 0.43%)</title><rect x="1127.8" y="1733" width="5.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1130.83" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (16,655,467 samples, 0.02%)</title><rect x="652.0" y="1621" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="654.98" y="1631.5" ></text>
</g>
<g >
<title>validate_xmit_skb (16,473,104 samples, 0.02%)</title><rect x="718.7" y="1381" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="721.73" y="1391.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,383,260 samples, 0.01%)</title><rect x="422.8" y="1221" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="425.82" y="1231.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,934,288 samples, 0.01%)</title><rect x="307.1" y="1989" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="310.08" y="1999.5" ></text>
</g>
<g >
<title>rndis_filter_receive (19,080,358 samples, 0.02%)</title><rect x="1007.8" y="1301" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1010.85" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (9,399,669 samples, 0.01%)</title><rect x="960.1" y="1781" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="963.15" y="1791.5" ></text>
</g>
<g >
<title>x64_sys_call (226,654,887 samples, 0.27%)</title><rect x="14.4" y="1637" width="3.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="17.42" y="1647.5" ></text>
</g>
<g >
<title>__do_softirq (66,293,964 samples, 0.08%)</title><rect x="124.5" y="1381" width="1.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="127.54" y="1391.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Epoller*, std::default_delete&lt;Epoller&gt; &gt; (7,718,379 samples, 0.01%)</title><rect x="295.2" y="1861" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="298.24" y="1871.5" ></text>
</g>
<g >
<title>avc_has_perm (14,188,503 samples, 0.02%)</title><rect x="823.6" y="1621" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="826.63" y="1631.5" ></text>
</g>
<g >
<title>rndis_filter_receive (18,247,842 samples, 0.02%)</title><rect x="878.2" y="1669" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="881.20" y="1679.5" ></text>
</g>
<g >
<title>__check_object_size (41,209,925 samples, 0.05%)</title><rect x="1121.5" y="1573" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1124.46" y="1583.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (24,211,879 samples, 0.03%)</title><rect x="282.0" y="1557" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="285.04" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1349" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1359.5" ></text>
</g>
<g >
<title>Epoller::ModFd (7,443,319 samples, 0.01%)</title><rect x="311.5" y="1685" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="314.54" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="933" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (8,108,186 samples, 0.01%)</title><rect x="44.1" y="1701" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="47.06" y="1711.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (19,997,686 samples, 0.02%)</title><rect x="113.7" y="1765" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="116.72" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (28,453,619 samples, 0.03%)</title><rect x="1090.7" y="1685" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1093.74" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (13,602,498 samples, 0.02%)</title><rect x="47.8" y="1765" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="50.85" y="1775.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,107,971 samples, 0.01%)</title><rect x="69.2" y="1493" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="72.22" y="1503.5" ></text>
</g>
<g >
<title>generic_permission (8,184,178 samples, 0.01%)</title><rect x="216.0" y="1573" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="219.00" y="1583.5" ></text>
</g>
<g >
<title>netvsc_select_queue (34,093,106 samples, 0.04%)</title><rect x="1156.7" y="1397" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1159.69" y="1407.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (17,676,026 samples, 0.02%)</title><rect x="360.2" y="1653" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="363.21" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="821" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_writev (1,561,776,178 samples, 1.87%)</title><rect x="114.1" y="1749" width="22.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="117.14" y="1759.5" >_..</text>
</g>
<g >
<title>ep_item_poll.isra.0 (17,838,288 samples, 0.02%)</title><rect x="247.7" y="1589" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="250.67" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,156,049 samples, 0.01%)</title><rect x="99.0" y="1477" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="102.02" y="1487.5" ></text>
</g>
<g >
<title>handle_softirqs (8,057,869 samples, 0.01%)</title><rect x="485.0" y="1669" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="487.97" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (9,789,595 samples, 0.01%)</title><rect x="223.6" y="1781" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="226.59" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (9,662,509,531 samples, 11.59%)</title><rect x="749.9" y="1989" width="136.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="752.91" y="1999.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="149" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="159.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1829" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="709" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="719.5" ></text>
</g>
<g >
<title>__do_softirq (40,225,328 samples, 0.05%)</title><rect x="860.9" y="1381" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="863.85" y="1391.5" ></text>
</g>
<g >
<title>net_rx_action (8,347,263 samples, 0.01%)</title><rect x="605.9" y="1477" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="608.87" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,979,595 samples, 0.01%)</title><rect x="901.7" y="1429" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="904.68" y="1439.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (224,067,362 samples, 0.27%)</title><rect x="1134.0" y="1797" width="3.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1136.96" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (14,536,654 samples, 0.02%)</title><rect x="328.0" y="1765" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="330.95" y="1775.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::deallocate (35,672,181 samples, 0.04%)</title><rect x="695.1" y="1685" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="698.08" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (20,479,008 samples, 0.02%)</title><rect x="734.6" y="1621" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="737.58" y="1631.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,428,225 samples, 0.01%)</title><rect x="974.1" y="1541" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="977.10" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (16,351,619 samples, 0.02%)</title><rect x="106.0" y="1781" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="109.01" y="1791.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,064,650 samples, 0.01%)</title><rect x="901.7" y="1381" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="904.71" y="1391.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;TimerManager::TimerNode,  (7,504,630 samples, 0.01%)</title><rect x="298.0" y="1893" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="301.03" y="1903.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7,892,233 samples, 0.01%)</title><rect x="1104.9" y="1749" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1107.89" y="1759.5" ></text>
</g>
<g >
<title>malloc (114,548,701 samples, 0.14%)</title><rect x="892.3" y="2053" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="895.29" y="2063.5" ></text>
</g>
<g >
<title>__fget_light (27,674,248 samples, 0.03%)</title><rect x="690.5" y="1573" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="693.48" y="1583.5" ></text>
</g>
<g >
<title>__fget_light (34,610,516 samples, 0.04%)</title><rect x="675.3" y="1701" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="678.28" y="1711.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,846,290 samples, 0.01%)</title><rect x="137.5" y="1909" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="140.53" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="885" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="895.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,339,219 samples, 0.01%)</title><rect x="581.7" y="1541" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="584.70" y="1551.5" ></text>
</g>
<g >
<title>netvsc_poll (9,060,119 samples, 0.01%)</title><rect x="925.8" y="1509" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="928.84" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (264,842,075 samples, 0.32%)</title><rect x="1083.2" y="1765" width="3.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1086.23" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (22,127,065 samples, 0.03%)</title><rect x="290.2" y="1717" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="293.21" y="1727.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (27,382,338 samples, 0.03%)</title><rect x="352.3" y="1717" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="355.27" y="1727.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (12,810,586 samples, 0.02%)</title><rect x="312.8" y="1621" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="315.80" y="1631.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1445" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1178.57" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (18,817,411 samples, 0.02%)</title><rect x="914.2" y="1701" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="917.18" y="1711.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (16,016,691 samples, 0.02%)</title><rect x="20.4" y="1749" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="23.38" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1461" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1178.57" y="1471.5" ></text>
</g>
<g >
<title>ip_local_deliver (9,656,570 samples, 0.01%)</title><rect x="421.3" y="1205" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="424.27" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="197" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="207.5" ></text>
</g>
<g >
<title>net_rx_action (7,388,302 samples, 0.01%)</title><rect x="312.7" y="1541" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="315.69" y="1551.5" ></text>
</g>
<g >
<title>avc_has_perm (14,284,176 samples, 0.02%)</title><rect x="386.0" y="1621" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="389.03" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,539,401 samples, 0.01%)</title><rect x="1143.2" y="1637" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1146.23" y="1647.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,964,144 samples, 0.01%)</title><rect x="16.6" y="1589" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="19.56" y="1599.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (30,067,170 samples, 0.04%)</title><rect x="1177.1" y="1893" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1180.07" y="1903.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (361,421,628 samples, 0.43%)</title><rect x="1044.4" y="1781" width="5.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1047.38" y="1791.5" ></text>
</g>
<g >
<title>tcp_data_ready (9,132,117 samples, 0.01%)</title><rect x="1024.2" y="1477" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1027.24" y="1487.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (12,713,021 samples, 0.02%)</title><rect x="1133.7" y="1717" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1136.71" y="1727.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11,692,767 samples, 0.01%)</title><rect x="1186.0" y="2053" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1189.03" y="2063.5" ></text>
</g>
<g >
<title>__do_softirq (10,538,567 samples, 0.01%)</title><rect x="116.0" y="1557" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="119.02" y="1567.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,412,072 samples, 0.01%)</title><rect x="1077.1" y="1669" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1080.13" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (14,110,663 samples, 0.02%)</title><rect x="697.8" y="1765" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="700.81" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (102,313,376 samples, 0.12%)</title><rect x="1140.3" y="1733" width="1.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1143.29" y="1743.5" ></text>
</g>
<g >
<title>__napi_poll (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1589" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="186.34" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="645" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="655.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (37,068,575 samples, 0.04%)</title><rect x="1029.2" y="1909" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1032.17" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (21,674,924 samples, 0.03%)</title><rect x="345.8" y="1765" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="348.80" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (39,542,238 samples, 0.05%)</title><rect x="828.2" y="1621" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="831.18" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1141" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1151.5" ></text>
</g>
<g >
<title>handle_dots (12,494,952 samples, 0.01%)</title><rect x="511.8" y="1573" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="514.82" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (9,767,041 samples, 0.01%)</title><rect x="599.3" y="2053" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="602.33" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (7,092,149 samples, 0.01%)</title><rect x="1089.8" y="1701" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1092.75" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="389" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (8,411,742 samples, 0.01%)</title><rect x="374.0" y="1781" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="377.03" y="1791.5" ></text>
</g>
<g >
<title>handle_softirqs (15,389,957 samples, 0.02%)</title><rect x="867.7" y="1397" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="870.65" y="1407.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (33,593,794 samples, 0.04%)</title><rect x="293.1" y="1717" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="296.12" y="1727.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (61,703,117 samples, 0.07%)</title><rect x="500.8" y="1749" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="503.84" y="1759.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (30,906,395 samples, 0.04%)</title><rect x="497.7" y="1669" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="500.65" y="1679.5" ></text>
</g>
<g >
<title>__napi_poll (9,725,984 samples, 0.01%)</title><rect x="1096.4" y="1509" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1099.44" y="1519.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (18,927,843 samples, 0.02%)</title><rect x="621.1" y="1701" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="624.13" y="1711.5" ></text>
</g>
<g >
<title>mod_timer (68,631,287 samples, 0.08%)</title><rect x="131.0" y="1509" width="1.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="134.02" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (9,334,211 samples, 0.01%)</title><rect x="98.7" y="1637" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="101.68" y="1647.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,421,283 samples, 0.02%)</title><rect x="1128.3" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1131.25" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (64,031,679 samples, 0.08%)</title><rect x="107.4" y="1781" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="110.38" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (9,253,316 samples, 0.01%)</title><rect x="1080.1" y="1765" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1083.13" y="1775.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (39,295,881 samples, 0.05%)</title><rect x="936.9" y="1701" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="939.93" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (17,190,819 samples, 0.02%)</title><rect x="1188.8" y="2053" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1191.82" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1029" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1039.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (43,800,185 samples, 0.05%)</title><rect x="885.9" y="1829" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="888.88" y="1839.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::deallocate (40,835,159 samples, 0.05%)</title><rect x="840.1" y="1685" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="843.11" y="1695.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (25,054,390 samples, 0.03%)</title><rect x="937.0" y="1653" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="940.03" y="1663.5" ></text>
</g>
<g >
<title>nf_conntrack_in (143,168,303 samples, 0.17%)</title><rect x="710.4" y="1445" width="2.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="713.36" y="1455.5" ></text>
</g>
<g >
<title>Channel::OnWrite (2,844,376,290 samples, 3.41%)</title><rect x="537.2" y="1909" width="40.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="540.20" y="1919.5" >Cha..</text>
</g>
<g >
<title>__strlen_avx2 (27,570,075 samples, 0.03%)</title><rect x="302.3" y="2037" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="305.28" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (16,248,990 samples, 0.02%)</title><rect x="1183.1" y="2021" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1186.11" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,714,291,508 samples, 2.06%)</title><rect x="1143.6" y="1797" width="24.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1146.58" y="1807.5" >e..</text>
</g>
<g >
<title>tcp_v4_rcv (16,916,044 samples, 0.02%)</title><rect x="1024.1" y="1525" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1027.13" y="1535.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (11,362,429 samples, 0.01%)</title><rect x="236.4" y="1589" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="239.39" y="1599.5" ></text>
</g>
<g >
<title>x64_sys_call (1,575,363,869 samples, 1.89%)</title><rect x="114.0" y="1765" width="22.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="117.01" y="1775.5" >x..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (8,883,140 samples, 0.01%)</title><rect x="25.6" y="1605" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="28.59" y="1615.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,813,382 samples, 0.02%)</title><rect x="1188.5" y="1989" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1191.48" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1637" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (7,342,622 samples, 0.01%)</title><rect x="855.1" y="1461" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="858.11" y="1471.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc_cs (12,858,304 samples, 0.02%)</title><rect x="391.3" y="1589" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="394.29" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,346,516 samples, 0.01%)</title><rect x="162.0" y="1509" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="165.04" y="1519.5" ></text>
</g>
<g >
<title>epoll_ctl (9,242,440 samples, 0.01%)</title><rect x="960.7" y="1733" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="963.70" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="501" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (15,789,450 samples, 0.02%)</title><rect x="1073.5" y="1733" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1076.53" y="1743.5" ></text>
</g>
<g >
<title>std::function&lt;void  (418,612,767 samples, 0.50%)</title><rect x="311.2" y="1765" width="5.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="314.21" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1749" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1759.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1829" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="747.77" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (8,046,277 samples, 0.01%)</title><rect x="163.3" y="1541" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="166.30" y="1551.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (362,588,752 samples, 0.44%)</title><rect x="396.0" y="1733" width="5.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="398.99" y="1743.5" ></text>
</g>
<g >
<title>handle_softirqs (9,060,119 samples, 0.01%)</title><rect x="925.8" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="928.84" y="1567.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (36,294,942 samples, 0.04%)</title><rect x="1115.1" y="1765" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1118.14" y="1775.5" ></text>
</g>
<g >
<title>x64_sys_call (657,001,287 samples, 0.79%)</title><rect x="85.5" y="1765" width="9.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="88.54" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (11,563,678 samples, 0.01%)</title><rect x="981.1" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="984.15" y="1567.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (232,995,680 samples, 0.28%)</title><rect x="204.1" y="1765" width="3.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="207.08" y="1775.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,162,330 samples, 0.01%)</title><rect x="711.1" y="1397" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="714.14" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="277" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="287.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (47,970,189 samples, 0.06%)</title><rect x="210.0" y="1717" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.00" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (24,927,230 samples, 0.03%)</title><rect x="693.7" y="1749" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="696.71" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (8,565,233 samples, 0.01%)</title><rect x="589.1" y="1893" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="592.05" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (446,222,982 samples, 0.54%)</title><rect x="602.5" y="1749" width="6.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="605.54" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="917" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="927.5" ></text>
</g>
<g >
<title>getname_flags (212,602,188 samples, 0.26%)</title><rect x="506.7" y="1653" width="3.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="509.74" y="1663.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,714,784 samples, 0.01%)</title><rect x="571.6" y="1445" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="574.57" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;Channel&gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (8,249,796 samples, 0.01%)</title><rect x="588.3" y="1877" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="591.33" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (14,664,644 samples, 0.02%)</title><rect x="257.2" y="1733" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="260.23" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (7,628,989 samples, 0.01%)</title><rect x="613.4" y="1717" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="616.39" y="1727.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (20,250,793 samples, 0.02%)</title><rect x="379.4" y="1749" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="382.42" y="1759.5" ></text>
</g>
<g >
<title>skb_clone (8,367,684 samples, 0.01%)</title><rect x="1013.2" y="1541" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1016.23" y="1551.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,164,382 samples, 0.01%)</title><rect x="848.9" y="1717" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="851.86" y="1727.5" ></text>
</g>
<g >
<title>do_epoll_ctl (83,209,164 samples, 0.10%)</title><rect x="1129.9" y="1605" width="1.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1132.92" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (8,160,039 samples, 0.01%)</title><rect x="549.8" y="1733" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="552.76" y="1743.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (10,473,209 samples, 0.01%)</title><rect x="809.9" y="1765" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="812.88" y="1775.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (16,439,327 samples, 0.02%)</title><rect x="702.5" y="1749" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="705.52" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1957" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (7,141,500 samples, 0.01%)</title><rect x="102.5" y="1653" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="105.47" y="1663.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (41,354,588 samples, 0.05%)</title><rect x="444.2" y="1909" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="447.20" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1285" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (541,143,450 samples, 0.65%)</title><rect x="1094.0" y="1701" width="7.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1097.04" y="1711.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,579,751,277 samples, 1.90%)</title><rect x="553.7" y="1781" width="22.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="556.65" y="1791.5" >d..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (33,337,828 samples, 0.04%)</title><rect x="300.5" y="2021" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="303.45" y="2031.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (11,628,825 samples, 0.01%)</title><rect x="905.0" y="1621" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="908.01" y="1631.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (23,077,855 samples, 0.03%)</title><rect x="991.0" y="1685" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="993.96" y="1695.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (8,936,175 samples, 0.01%)</title><rect x="498.8" y="1669" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="501.83" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1461" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="213" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="223.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="309" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="319.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@@GLIBC_2.2.5 (7,938,996 samples, 0.01%)</title><rect x="297.8" y="1877" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="300.79" y="1887.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2,836,696,291 samples, 3.40%)</title><rect x="537.3" y="1893" width="40.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="540.31" y="1903.5" >std..</text>
</g>
<g >
<title>std::__shared_ptr_access&lt;EventLoop,  (13,192,116 samples, 0.02%)</title><rect x="79.4" y="1797" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="82.44" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1845" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1855.5" ></text>
</g>
<g >
<title>handle_softirqs (7,906,809 samples, 0.01%)</title><rect x="703.6" y="1685" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="706.63" y="1695.5" ></text>
</g>
<g >
<title>tcp_poll (8,702,327 samples, 0.01%)</title><rect x="541.5" y="1557" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="544.47" y="1567.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,173,028 samples, 0.01%)</title><rect x="1140.9" y="1525" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1143.88" y="1535.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (20,606,642 samples, 0.02%)</title><rect x="175.7" y="1685" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="178.71" y="1695.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (10,708,042 samples, 0.01%)</title><rect x="131.2" y="1445" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="134.16" y="1455.5" ></text>
</g>
<g >
<title>net_rx_action (12,757,239 samples, 0.02%)</title><rect x="439.9" y="1717" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="442.94" y="1727.5" ></text>
</g>
<g >
<title>irq_exit_rcu (28,346,751 samples, 0.03%)</title><rect x="141.4" y="1765" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="144.40" y="1775.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (18,146,008 samples, 0.02%)</title><rect x="893.7" y="2037" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="896.65" y="2047.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (7,387,740 samples, 0.01%)</title><rect x="509.6" y="1605" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="512.57" y="1615.5" ></text>
</g>
<g >
<title>irq_exit_rcu (28,048,336 samples, 0.03%)</title><rect x="380.7" y="1765" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="383.68" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (12,092,676 samples, 0.01%)</title><rect x="635.6" y="1701" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="638.61" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (11,219,140 samples, 0.01%)</title><rect x="797.3" y="1749" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="800.35" y="1759.5" ></text>
</g>
<g >
<title>napi_complete_done (9,846,957 samples, 0.01%)</title><rect x="964.3" y="1669" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="967.30" y="1679.5" ></text>
</g>
<g >
<title>[web-server] (14,313,991 samples, 0.02%)</title><rect x="665.1" y="1781" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="668.09" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (69,644,627 samples, 0.08%)</title><rect x="218.1" y="1749" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="221.07" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (39,497,787 samples, 0.05%)</title><rect x="699.0" y="1733" width="0.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="702.05" y="1743.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (7,342,805 samples, 0.01%)</title><rect x="318.4" y="1621" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="321.38" y="1631.5" ></text>
</g>
<g >
<title>netvsc_select_queue (32,023,593 samples, 0.04%)</title><rect x="273.8" y="1397" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="276.80" y="1407.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (25,889,990 samples, 0.03%)</title><rect x="982.7" y="1589" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="985.66" y="1599.5" ></text>
</g>
<g >
<title>__napi_poll (12,432,807 samples, 0.01%)</title><rect x="995.0" y="1701" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="997.96" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="965" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="975.5" ></text>
</g>
<g >
<title>ip_local_deliver (8,195,207 samples, 0.01%)</title><rect x="273.1" y="1173" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="276.10" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="133" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="143.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,339,219 samples, 0.01%)</title><rect x="581.7" y="1589" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="584.70" y="1599.5" ></text>
</g>
<g >
<title>x64_sys_call (660,547,014 samples, 0.79%)</title><rect x="967.0" y="1765" width="9.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="970.00" y="1775.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,983,442 samples, 0.01%)</title><rect x="412.0" y="1733" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="415.00" y="1743.5" ></text>
</g>
<g >
<title>inode_has_perm (17,666,757 samples, 0.02%)</title><rect x="823.6" y="1637" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="826.61" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (12,462,375 samples, 0.01%)</title><rect x="1054.1" y="1717" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1057.14" y="1727.5" ></text>
</g>
<g >
<title>EventLoop::Loop (9,850,417,619 samples, 11.82%)</title><rect x="309.1" y="1941" width="139.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="312.06" y="1951.5" >EventLoop::Loop</text>
</g>
<g >
<title>sysvec_hyperv_callback (9,207,254 samples, 0.01%)</title><rect x="668.4" y="1781" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="671.42" y="1791.5" ></text>
</g>
<g >
<title>[web-server] (7,278,469 samples, 0.01%)</title><rect x="187.3" y="1749" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="190.26" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="997" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1253" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (32,697,629 samples, 0.04%)</title><rect x="192.2" y="1701" width="0.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="195.21" y="1711.5" ></text>
</g>
<g >
<title>HttpConn::Close (11,323,357 samples, 0.01%)</title><rect x="1050.6" y="1797" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1053.64" y="1807.5" ></text>
</g>
<g >
<title>EventLoop::Loop (9,946,835,512 samples, 11.94%)</title><rect x="158.9" y="1941" width="140.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="161.90" y="1951.5" >EventLoop::Loop</text>
</g>
<g >
<title>ip_list_rcv (14,827,730 samples, 0.02%)</title><rect x="60.5" y="1573" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="63.49" y="1583.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (207,945,706 samples, 0.25%)</title><rect x="90.8" y="1637" width="2.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="93.79" y="1647.5" ></text>
</g>
<g >
<title>ip_queue_xmit (756,773,233 samples, 0.91%)</title><rect x="119.5" y="1541" width="10.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="122.48" y="1551.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (162,818,357 samples, 0.20%)</title><rect x="500.2" y="1765" width="2.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="503.16" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,575,450 samples, 0.02%)</title><rect x="1041.2" y="2037" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1044.21" y="2047.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (9,857,769,951 samples, 11.83%)</title><rect x="1042.3" y="2037" width="139.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1045.33" y="2047.5" >std::thread::_Sta..</text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (21,057,108 samples, 0.03%)</title><rect x="63.2" y="1701" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="66.15" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1109" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1119.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (25,107,997 samples, 0.03%)</title><rect x="591.5" y="2021" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="594.47" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1013" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1023.5" ></text>
</g>
<g >
<title>walk_component (70,520,091 samples, 0.08%)</title><rect x="367.1" y="1589" width="1.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="370.07" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (10,890,735 samples, 0.01%)</title><rect x="279.9" y="1477" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="282.93" y="1487.5" ></text>
</g>
<g >
<title>__napi_poll (7,118,135 samples, 0.01%)</title><rect x="414.5" y="1509" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="417.52" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="645" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="655.5" ></text>
</g>
<g >
<title>__ip_finish_output (389,956,858 samples, 0.47%)</title><rect x="271.9" y="1461" width="5.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="274.87" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1141" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1151.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,036,188,678 samples, 1.24%)</title><rect x="97.4" y="1813" width="14.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="100.40" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="325" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="335.5" ></text>
</g>
<g >
<title>__secure_computing (19,111,221 samples, 0.02%)</title><rect x="944.9" y="1685" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="947.89" y="1695.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (54,510,193 samples, 0.07%)</title><rect x="350.5" y="1717" width="0.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="353.49" y="1727.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,589,037 samples, 0.01%)</title><rect x="225.1" y="1733" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="228.10" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (7,840,045 samples, 0.01%)</title><rect x="1058.8" y="1717" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1061.78" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (16,807,709 samples, 0.02%)</title><rect x="382.7" y="1669" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="385.71" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,281,630 samples, 0.01%)</title><rect x="624.7" y="1509" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="627.71" y="1519.5" ></text>
</g>
<g >
<title>sock_poll (27,829,078 samples, 0.03%)</title><rect x="756.5" y="1573" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="759.47" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1733" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1743.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (8,279,046 samples, 0.01%)</title><rect x="84.9" y="1557" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="87.92" y="1567.5" ></text>
</g>
<g >
<title>kmalloc_reserve (31,207,630 samples, 0.04%)</title><rect x="869.8" y="1573" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="872.77" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (7,307,869 samples, 0.01%)</title><rect x="535.2" y="1797" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="538.17" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (15,581,343 samples, 0.02%)</title><rect x="316.8" y="1653" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="319.83" y="1663.5" ></text>
</g>
<g >
<title>nf_hook_slow (230,519,065 samples, 0.28%)</title><rect x="120.1" y="1477" width="3.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="123.13" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1589" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1599.5" ></text>
</g>
<g >
<title>ip_queue_xmit (741,947,348 samples, 0.89%)</title><rect x="417.8" y="1541" width="10.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="420.81" y="1551.5" ></text>
</g>
<g >
<title>std::priority_queue&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt;, TimerManager::TimerCmp&gt;::empty (9,178,078 samples, 0.01%)</title><rect x="1032.8" y="1925" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1035.84" y="1935.5" ></text>
</g>
<g >
<title>handle_softirqs (13,491,874 samples, 0.02%)</title><rect x="208.2" y="1685" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="211.17" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (7,278,515 samples, 0.01%)</title><rect x="549.9" y="1733" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="552.94" y="1743.5" ></text>
</g>
<g >
<title>tcp_release_cb (8,159,459 samples, 0.01%)</title><rect x="706.6" y="1621" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="709.63" y="1631.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (7,781,747 samples, 0.01%)</title><rect x="382.8" y="1605" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="385.84" y="1615.5" ></text>
</g>
<g >
<title>__check_object_size (22,564,162 samples, 0.03%)</title><rect x="852.6" y="1605" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="855.57" y="1615.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (27,262,226 samples, 0.03%)</title><rect x="245.9" y="1637" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="248.90" y="1647.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (247,175,941 samples, 0.30%)</title><rect x="688.4" y="1669" width="3.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="691.37" y="1679.5" ></text>
</g>
<g >
<title>napi_complete_done (7,751,435 samples, 0.01%)</title><rect x="754.0" y="1493" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="757.04" y="1503.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (36,451,287 samples, 0.04%)</title><rect x="305.4" y="2053" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="308.38" y="2063.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (8,175,998 samples, 0.01%)</title><rect x="1050.7" y="1717" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1053.69" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (31,767,636 samples, 0.04%)</title><rect x="1178.8" y="1845" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1181.85" y="1855.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (25,789,491 samples, 0.03%)</title><rect x="880.5" y="1685" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="883.51" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (36,321,259 samples, 0.04%)</title><rect x="928.5" y="1685" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="931.53" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (12,901,510 samples, 0.02%)</title><rect x="944.6" y="1589" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="947.60" y="1599.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (310,637,012 samples, 0.37%)</title><rect x="564.6" y="1429" width="4.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="567.57" y="1439.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (9,559,190 samples, 0.01%)</title><rect x="60.5" y="1493" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="63.55" y="1503.5" ></text>
</g>
<g >
<title>tcp_data_queue (7,896,714 samples, 0.01%)</title><rect x="144.3" y="1413" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="147.31" y="1423.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (11,190,386 samples, 0.01%)</title><rect x="439.9" y="1653" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="442.94" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (35,867,416 samples, 0.04%)</title><rect x="1172.9" y="1717" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1175.87" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1045" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1055.5" ></text>
</g>
<g >
<title>selinux_xfrm_postroute_last (8,013,485 samples, 0.01%)</title><rect x="569.7" y="1445" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="572.65" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1477" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1487.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (10,413,541 samples, 0.01%)</title><rect x="487.1" y="1717" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="490.14" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (20,554,537 samples, 0.02%)</title><rect x="1034.0" y="117" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1037.02" y="127.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (9,513,870 samples, 0.01%)</title><rect x="201.6" y="1621" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="204.59" y="1631.5" ></text>
</g>
<g >
<title>epoll_ctl (307,021,784 samples, 0.37%)</title><rect x="1128.1" y="1685" width="4.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1131.15" y="1695.5" ></text>
</g>
<g >
<title>sock_read_iter (404,282,369 samples, 0.49%)</title><rect x="678.2" y="1701" width="5.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="681.23" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (29,206,973 samples, 0.04%)</title><rect x="167.8" y="1749" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="170.83" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (15,930,158 samples, 0.02%)</title><rect x="920.2" y="1765" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="923.21" y="1775.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (9,760,027 samples, 0.01%)</title><rect x="40.9" y="1765" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="43.91" y="1775.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, 0ul&gt; (19,126,980 samples, 0.02%)</title><rect x="764.7" y="1637" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="767.65" y="1647.5" ></text>
</g>
<g >
<title>hv_ringbuffer_write (44,845,532 samples, 0.05%)</title><rect x="717.7" y="1301" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="720.71" y="1311.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (58,708,141 samples, 0.07%)</title><rect x="355.1" y="1717" width="0.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="358.11" y="1727.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (55,065,538 samples, 0.07%)</title><rect x="238.3" y="1621" width="0.8" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="241.28" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1333" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1343.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (14,616,355 samples, 0.02%)</title><rect x="777.0" y="1749" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="779.97" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,072,047 samples, 0.01%)</title><rect x="28.8" y="1765" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="31.79" y="1775.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (13,573,638 samples, 0.02%)</title><rect x="935.3" y="1701" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="938.28" y="1711.5" ></text>
</g>
<g >
<title>epoll_ctl (380,856,362 samples, 0.46%)</title><rect x="752.8" y="1685" width="5.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="755.85" y="1695.5" ></text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (10,642,087 samples, 0.01%)</title><rect x="286.3" y="1925" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="289.30" y="1935.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,516,488 samples, 0.01%)</title><rect x="918.0" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="921.03" y="1663.5" ></text>
</g>
<g >
<title>do_syscall_64 (259,856,374 samples, 0.31%)</title><rect x="603.6" y="1653" width="3.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="606.62" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="485" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="495.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="741" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="751.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1861" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (24,438,222 samples, 0.03%)</title><rect x="581.8" y="1717" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="584.82" y="1727.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (27,514,891 samples, 0.03%)</title><rect x="1059.1" y="1765" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1062.11" y="1775.5" ></text>
</g>
<g >
<title>__skb_clone (7,682,821 samples, 0.01%)</title><rect x="119.2" y="1541" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="122.17" y="1551.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (30,078,406 samples, 0.04%)</title><rect x="444.4" y="1877" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="447.36" y="1887.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (4,086,249,740 samples, 4.90%)</title><rect x="318.5" y="1797" width="57.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="321.48" y="1807.5" >HttpCo..</text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,906,647 samples, 0.01%)</title><rect x="839.7" y="1701" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="842.66" y="1711.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,401,788 samples, 0.01%)</title><rect x="312.7" y="1605" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="315.66" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (65,057,435 samples, 0.08%)</title><rect x="845.5" y="1717" width="0.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="848.46" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (11,675,568 samples, 0.01%)</title><rect x="803.0" y="1525" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="806.05" y="1535.5" ></text>
</g>
<g >
<title>vfs_read (539,186,934 samples, 0.65%)</title><rect x="822.2" y="1717" width="7.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="825.20" y="1727.5" ></text>
</g>
<g >
<title>__strlen_avx2 (7,102,161 samples, 0.01%)</title><rect x="1052.7" y="1733" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1055.74" y="1743.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (8,699,326 samples, 0.01%)</title><rect x="841.6" y="1765" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="844.63" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (16,554,758 samples, 0.02%)</title><rect x="505.3" y="1621" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="508.33" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1813" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1381" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1391.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (23,516,698 samples, 0.03%)</title><rect x="404.1" y="1781" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="407.05" y="1791.5" ></text>
</g>
<g >
<title>sock_recvmsg (395,662,372 samples, 0.47%)</title><rect x="678.4" y="1685" width="5.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="681.35" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (7,062,985 samples, 0.01%)</title><rect x="35.8" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="38.79" y="1599.5" ></text>
</g>
<g >
<title>nf_conntrack_in (143,887,065 samples, 0.17%)</title><rect x="120.2" y="1445" width="2.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="123.20" y="1455.5" ></text>
</g>
<g >
<title>netvsc_poll (9,776,215 samples, 0.01%)</title><rect x="34.5" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="37.54" y="1567.5" ></text>
</g>
<g >
<title>tcp_data_queue (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1429" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="295.80" y="1439.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (69,372,684 samples, 0.08%)</title><rect x="973.3" y="1589" width="1.0" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="976.32" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (18,254,497 samples, 0.02%)</title><rect x="377.3" y="1781" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="380.33" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (36,494,316 samples, 0.04%)</title><rect x="355.2" y="1701" width="0.5" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="358.22" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (663,872,085 samples, 0.80%)</title><rect x="208.7" y="1749" width="9.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="211.67" y="1759.5" ></text>
</g>
<g >
<title>handle_dots (13,762,558 samples, 0.02%)</title><rect x="217.1" y="1573" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="220.09" y="1583.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (7,237,850 samples, 0.01%)</title><rect x="991.2" y="1669" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="994.19" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (17,418,847 samples, 0.02%)</title><rect x="861.0" y="1189" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="863.96" y="1199.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10,383,260 samples, 0.01%)</title><rect x="422.8" y="1157" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="425.82" y="1167.5" ></text>
</g>
<g >
<title>handle_softirqs (66,293,964 samples, 0.08%)</title><rect x="124.5" y="1365" width="1.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="127.54" y="1375.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,057,869 samples, 0.01%)</title><rect x="485.0" y="1733" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="487.97" y="1743.5" ></text>
</g>
<g >
<title>walk_component (43,612,198 samples, 0.05%)</title><rect x="658.5" y="1589" width="0.7" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="661.53" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (85,976,743 samples, 0.10%)</title><rect x="772.5" y="1685" width="1.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="775.50" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (47,586,803 samples, 0.06%)</title><rect x="585.6" y="1893" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="588.62" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (11,365,698 samples, 0.01%)</title><rect x="443.2" y="1461" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="446.18" y="1471.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1669" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="747.77" y="1679.5" ></text>
</g>
<g >
<title>handle_softirqs (9,755,903 samples, 0.01%)</title><rect x="857.9" y="1349" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="860.87" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1557" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="171.38" y="1567.5" ></text>
</g>
<g >
<title>__strlen_avx2 (9,205,292 samples, 0.01%)</title><rect x="170.7" y="1733" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="173.69" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (7,724,714 samples, 0.01%)</title><rect x="1041.5" y="2053" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1044.46" y="2063.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (27,512,777 samples, 0.03%)</title><rect x="1031.0" y="1829" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1034.00" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (7,805,407 samples, 0.01%)</title><rect x="701.5" y="1765" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="704.49" y="1775.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (8,021,954 samples, 0.01%)</title><rect x="899.1" y="1637" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="902.10" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (8,412,072 samples, 0.01%)</title><rect x="1077.1" y="1621" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1080.13" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (25,089,643 samples, 0.03%)</title><rect x="838.2" y="1765" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="841.22" y="1775.5" ></text>
</g>
<g >
<title>netvsc_select_queue (28,093,779 samples, 0.03%)</title><rect x="1008.6" y="1397" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1011.56" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1861" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1871.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (16,839,598 samples, 0.02%)</title><rect x="827.9" y="1621" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="830.94" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="293" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="303.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1157" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="430.41" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1333" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1343.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (83,581,268 samples, 0.10%)</title><rect x="322.9" y="1685" width="1.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="325.94" y="1695.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char*, char*&gt; (38,575,256 samples, 0.05%)</title><rect x="962.2" y="1733" width="0.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="965.21" y="1743.5" ></text>
</g>
<g >
<title>EventLoop::Loop (9,883,805,960 samples, 11.86%)</title><rect x="10.3" y="1941" width="139.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="13.30" y="1951.5" >EventLoop::Loop</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (12,468,939 samples, 0.01%)</title><rect x="76.7" y="1781" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="79.68" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (8,352,855 samples, 0.01%)</title><rect x="999.2" y="1605" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1002.16" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1685" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (20,554,537 samples, 0.02%)</title><rect x="1034.0" y="69" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1037.02" y="79.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (14,505,461 samples, 0.02%)</title><rect x="886.9" y="37" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="889.88" y="47.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (14,214,720 samples, 0.02%)</title><rect x="464.9" y="1685" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="467.92" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (25,482,996 samples, 0.03%)</title><rect x="300.1" y="2021" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (12,652,713 samples, 0.02%)</title><rect x="815.8" y="1749" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="818.79" y="1759.5" ></text>
</g>
<g >
<title>handle_softirqs (7,297,747 samples, 0.01%)</title><rect x="1068.6" y="1685" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1071.61" y="1695.5" ></text>
</g>
<g >
<title>__fput_sync (10,634,752 samples, 0.01%)</title><rect x="905.0" y="1493" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="908.03" y="1503.5" ></text>
</g>
<g >
<title>std::function&lt;void  (85,559,855 samples, 0.10%)</title><rect x="18.8" y="1781" width="1.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="21.80" y="1791.5" ></text>
</g>
<g >
<title>__fdget_pos (47,715,771 samples, 0.06%)</title><rect x="967.4" y="1717" width="0.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="970.38" y="1727.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (152,699,456 samples, 0.18%)</title><rect x="103.5" y="1765" width="2.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="106.47" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (7,597,884 samples, 0.01%)</title><rect x="931.5" y="1765" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="934.46" y="1775.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (28,452,556 samples, 0.03%)</title><rect x="836.3" y="1589" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="839.32" y="1599.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (14,505,461 samples, 0.02%)</title><rect x="886.9" y="53" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="889.88" y="63.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1621" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (15,030,656 samples, 0.02%)</title><rect x="320.1" y="1749" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="323.13" y="1759.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (10,771,183 samples, 0.01%)</title><rect x="1148.8" y="1605" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1151.78" y="1615.5" ></text>
</g>
<g >
<title>__do_softirq (11,362,429 samples, 0.01%)</title><rect x="236.4" y="1573" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="239.39" y="1583.5" ></text>
</g>
<g >
<title>__napi_poll (9,367,253 samples, 0.01%)</title><rect x="478.3" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="481.26" y="1583.5" ></text>
</g>
<g >
<title>epoll_ctl (9,172,119 samples, 0.01%)</title><rect x="993.7" y="1733" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="996.68" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (137,542,686 samples, 0.17%)</title><rect x="470.2" y="1701" width="2.0" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="473.24" y="1711.5" ></text>
</g>
<g >
<title>__GI___pthread_self (7,757,569 samples, 0.01%)</title><rect x="752.3" y="1749" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="755.29" y="1759.5" ></text>
</g>
<g >
<title>handle_softirqs (7,627,962 samples, 0.01%)</title><rect x="917.9" y="1589" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="920.93" y="1599.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7,896,714 samples, 0.01%)</title><rect x="144.3" y="1349" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="147.31" y="1359.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (7,342,805 samples, 0.01%)</title><rect x="318.4" y="1701" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="321.38" y="1711.5" ></text>
</g>
<g >
<title>__fget_light (30,547,625 samples, 0.04%)</title><rect x="114.2" y="1701" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="117.24" y="1711.5" ></text>
</g>
<g >
<title>__secure_computing (9,892,430 samples, 0.01%)</title><rect x="1115.5" y="1733" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1118.52" y="1743.5" ></text>
</g>
<g >
<title>__napi_poll (9,488,162 samples, 0.01%)</title><rect x="626.0" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="628.98" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (13,781,820 samples, 0.02%)</title><rect x="712.0" y="1413" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="715.01" y="1423.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (722,734,185 samples, 0.87%)</title><rect x="1002.8" y="1525" width="10.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1005.79" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (10,042,044 samples, 0.01%)</title><rect x="918.0" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="921.03" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (13,827,692 samples, 0.02%)</title><rect x="254.0" y="1781" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="257.02" y="1791.5" ></text>
</g>
<g >
<title>netvsc_poll (8,347,263 samples, 0.01%)</title><rect x="605.9" y="1445" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="608.87" y="1455.5" ></text>
</g>
<g >
<title>netvsc_poll (14,878,351 samples, 0.02%)</title><rect x="652.0" y="1589" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="654.98" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (16,432,687 samples, 0.02%)</title><rect x="31.8" y="1685" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="34.80" y="1695.5" ></text>
</g>
<g >
<title>_copy_from_iter (21,793,452 samples, 0.03%)</title><rect x="1148.2" y="1605" width="0.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1151.20" y="1615.5" ></text>
</g>
<g >
<title>rw_verify_area (135,275,271 samples, 0.16%)</title><rect x="1117.0" y="1701" width="1.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1119.99" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (18,459,744 samples, 0.02%)</title><rect x="741.8" y="2021" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="744.80" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (7,768,029 samples, 0.01%)</title><rect x="919.3" y="1717" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="922.34" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (13,112,476 samples, 0.02%)</title><rect x="1093.1" y="1637" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1096.10" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (17,480,637 samples, 0.02%)</title><rect x="409.3" y="1733" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="412.30" y="1743.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (50,485,936 samples, 0.06%)</title><rect x="615.6" y="1653" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="618.63" y="1663.5" ></text>
</g>
<g >
<title>__x64_sys_read (635,025,915 samples, 0.76%)</title><rect x="85.7" y="1749" width="9.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="88.75" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (17,878,780 samples, 0.02%)</title><rect x="774.8" y="1669" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="777.79" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1733" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1743.5" ></text>
</g>
<g >
<title>__fdget_pos (46,175,510 samples, 0.06%)</title><rect x="704.1" y="1717" width="0.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="707.10" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_established (9,860,719 samples, 0.01%)</title><rect x="1113.2" y="1493" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1116.24" y="1503.5" ></text>
</g>
<g >
<title>_int_free (44,098,043 samples, 0.05%)</title><rect x="593.3" y="2037" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="596.31" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="949" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="959.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (125,339,612 samples, 0.15%)</title><rect x="402.3" y="1781" width="1.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="405.28" y="1791.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (8,794,147 samples, 0.01%)</title><rect x="754.3" y="1637" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="757.26" y="1647.5" ></text>
</g>
<g >
<title>std::function&lt;void  (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1781" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="469.26" y="1791.5" ></text>
</g>
<g >
<title>netvsc_poll (18,390,310 samples, 0.02%)</title><rect x="584.4" y="1621" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="587.43" y="1631.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (28,658,107 samples, 0.03%)</title><rect x="431.5" y="1557" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="434.53" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (35,492,446 samples, 0.04%)</title><rect x="501.8" y="1669" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="504.84" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (20,596,902 samples, 0.02%)</title><rect x="958.9" y="1781" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="961.94" y="1791.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (13,840,471 samples, 0.02%)</title><rect x="176.9" y="1765" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="179.89" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (8,960,914 samples, 0.01%)</title><rect x="1167.9" y="1797" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1170.85" y="1807.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (74,746,635 samples, 0.09%)</title><rect x="721.5" y="1541" width="1.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="724.48" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (38,386,636 samples, 0.05%)</title><rect x="1016.1" y="1557" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1019.11" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1717" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1727.5" ></text>
</g>
<g >
<title>__napi_poll (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1333" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="430.41" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (19,080,908 samples, 0.02%)</title><rect x="501.2" y="1669" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="504.21" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (8,435,820 samples, 0.01%)</title><rect x="766.3" y="1717" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="769.27" y="1727.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, char*, char*&gt; (14,665,705 samples, 0.02%)</title><rect x="55.0" y="1637" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="57.95" y="1647.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (155,000,346 samples, 0.19%)</title><rect x="839.2" y="1781" width="2.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="842.16" y="1791.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (461,184,089 samples, 0.55%)</title><rect x="611.3" y="1765" width="6.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="614.35" y="1775.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, char*&gt; (32,653,453 samples, 0.04%)</title><rect x="80.7" y="1701" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="83.70" y="1711.5" ></text>
</g>
<g >
<title>netvsc_select_queue (35,402,447 samples, 0.04%)</title><rect x="861.8" y="1397" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="864.78" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (14,955,560 samples, 0.02%)</title><rect x="150.6" y="37" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="153.63" y="47.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,002,017 samples, 0.01%)</title><rect x="1188.5" y="1861" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1191.51" y="1871.5" ></text>
</g>
<g >
<title>handle_softirqs (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1525" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="951.32" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node_ptr (39,869,435 samples, 0.05%)</title><rect x="1135.0" y="1701" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1138.03" y="1711.5" ></text>
</g>
<g >
<title>__napi_poll (8,046,277 samples, 0.01%)</title><rect x="163.3" y="1525" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="166.30" y="1535.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (9,127,524 samples, 0.01%)</title><rect x="207.0" y="1637" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="210.04" y="1647.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,674,439 samples, 0.01%)</title><rect x="626.0" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="628.98" y="1647.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,115,937 samples, 0.01%)</title><rect x="859.1" y="1429" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="862.06" y="1439.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (12,269,948 samples, 0.01%)</title><rect x="293.2" y="1573" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="296.20" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,350,092 samples, 0.01%)</title><rect x="399.0" y="1445" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="401.97" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1605" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1615.5" ></text>
</g>
<g >
<title>netvsc_poll (9,447,309 samples, 0.01%)</title><rect x="224.2" y="1653" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="227.20" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (15,586,895 samples, 0.02%)</title><rect x="552.7" y="1717" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="555.69" y="1727.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,934,288 samples, 0.01%)</title><rect x="307.1" y="2005" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="310.08" y="2015.5" ></text>
</g>
<g >
<title>epoll_ctl (306,968,350 samples, 0.37%)</title><rect x="98.1" y="1685" width="4.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="101.06" y="1695.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (28,534,930 samples, 0.03%)</title><rect x="151.0" y="2021" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="154.03" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="837" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="847.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (8,526,499 samples, 0.01%)</title><rect x="1119.3" y="1605" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1122.26" y="1615.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (180,664,808 samples, 0.22%)</title><rect x="1157.5" y="1381" width="2.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1160.52" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (17,511,330 samples, 0.02%)</title><rect x="551.2" y="1733" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="554.17" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (77,659,242 samples, 0.09%)</title><rect x="990.6" y="1749" width="1.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="993.60" y="1759.5" ></text>
</g>
<g >
<title>__check_object_size (13,308,929 samples, 0.02%)</title><rect x="117.2" y="1605" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="120.23" y="1615.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1445" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="928.84" y="1455.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (43,185,066 samples, 0.05%)</title><rect x="391.6" y="1669" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="394.64" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,156,049 samples, 0.01%)</title><rect x="99.0" y="1461" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="102.02" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="325" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="335.5" ></text>
</g>
<g >
<title>vfs_writev (1,525,973,352 samples, 1.83%)</title><rect x="997.1" y="1717" width="21.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1000.13" y="1727.5" >v..</text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="389" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="399.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (424,549,857 samples, 0.51%)</title><rect x="21.1" y="1765" width="6.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="24.14" y="1775.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (6,028,488,558 samples, 7.23%)</title><rect x="601.2" y="1845" width="85.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="604.15" y="1855.5" >std::__inv..</text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (21,375,833 samples, 0.03%)</title><rect x="213.1" y="1605" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="216.13" y="1615.5" ></text>
</g>
<g >
<title>inode_permission (93,435,576 samples, 0.11%)</title><rect x="805.1" y="1589" width="1.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="808.06" y="1599.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (111,129,268 samples, 0.13%)</title><rect x="699.9" y="1781" width="1.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="702.89" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (10,103,204 samples, 0.01%)</title><rect x="290.2" y="1637" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="293.24" y="1647.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (339,306,619 samples, 0.41%)</title><rect x="631.1" y="1765" width="4.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="634.09" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (7,614,538 samples, 0.01%)</title><rect x="79.1" y="1781" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="82.08" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,863,323 samples, 0.01%)</title><rect x="503.3" y="1525" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="506.29" y="1535.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::_M_max_size (9,862,784 samples, 0.01%)</title><rect x="470.8" y="1669" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="473.83" y="1679.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (34,526,910 samples, 0.04%)</title><rect x="817.0" y="1717" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="819.96" y="1727.5" ></text>
</g>
<g >
<title>netvsc_send_pkt (76,734,218 samples, 0.09%)</title><rect x="1010.3" y="1333" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1013.28" y="1343.5" ></text>
</g>
<g >
<title>__siphash_unaligned (7,386,701 samples, 0.01%)</title><rect x="1004.6" y="1429" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1007.65" y="1439.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1653" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="186.34" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (18,254,497 samples, 0.02%)</title><rect x="377.3" y="1797" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="380.33" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (41,528,524 samples, 0.05%)</title><rect x="1108.2" y="1781" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1111.15" y="1791.5" ></text>
</g>
<g >
<title>do_writev (1,613,314,920 samples, 1.94%)</title><rect x="1144.9" y="1733" width="22.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1147.85" y="1743.5" >d..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (24,293,527 samples, 0.03%)</title><rect x="923.7" y="1749" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="926.68" y="1759.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (27,258,030 samples, 0.03%)</title><rect x="155.9" y="2053" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="158.95" y="2063.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (16,389,104 samples, 0.02%)</title><rect x="1024.5" y="1557" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1027.45" y="1567.5" ></text>
</g>
<g >
<title>__napi_poll (22,744,712 samples, 0.03%)</title><rect x="650.1" y="1653" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="653.14" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (7,598,183 samples, 0.01%)</title><rect x="295.6" y="1877" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="298.58" y="1887.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,925,385 samples, 0.01%)</title><rect x="1066.2" y="1509" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1069.17" y="1519.5" ></text>
</g>
<g >
<title>tcp_data_ready (9,182,790 samples, 0.01%)</title><rect x="440.3" y="1445" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="443.28" y="1455.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,856,379 samples, 0.01%)</title><rect x="820.8" y="1717" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="823.80" y="1727.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (18,164,638 samples, 0.02%)</title><rect x="523.3" y="1717" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="526.31" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (284,854,053 samples, 0.34%)</title><rect x="477.0" y="1701" width="4.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="479.99" y="1711.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,563,678 samples, 0.01%)</title><rect x="981.1" y="1589" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="984.15" y="1599.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (410,262,346 samples, 0.49%)</title><rect x="12.8" y="1717" width="5.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="15.76" y="1727.5" ></text>
</g>
<g >
<title>security_file_permission (152,087,249 samples, 0.18%)</title><rect x="86.8" y="1685" width="2.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="89.83" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (11,544,469 samples, 0.01%)</title><rect x="384.3" y="1573" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="387.33" y="1583.5" ></text>
</g>
<g >
<title>sock_read_iter (316,840,798 samples, 0.38%)</title><rect x="530.6" y="1701" width="4.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="533.58" y="1711.5" ></text>
</g>
<g >
<title>ip_list_rcv (11,979,595 samples, 0.01%)</title><rect x="901.7" y="1413" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="904.68" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (10,747,052 samples, 0.01%)</title><rect x="1053.9" y="1701" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1056.94" y="1711.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (15,545,057 samples, 0.02%)</title><rect x="65.7" y="1557" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="68.72" y="1567.5" ></text>
</g>
<g >
<title>handle_softirqs (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1621" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="186.34" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (27,569,223 samples, 0.03%)</title><rect x="258.1" y="1701" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="261.11" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (8,891,403 samples, 0.01%)</title><rect x="469.3" y="1701" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="472.29" y="1711.5" ></text>
</g>
<g >
<title>do_epoll_ctl (103,768,083 samples, 0.12%)</title><rect x="99.7" y="1605" width="1.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="102.72" y="1615.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (30,597,956 samples, 0.04%)</title><rect x="54.0" y="1653" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="57.01" y="1663.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (18,671,922 samples, 0.02%)</title><rect x="505.3" y="1685" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="508.30" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1365" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1375.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,585,113 samples, 0.02%)</title><rect x="981.1" y="1621" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="984.12" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1077" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1087.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (5,745,355,844 samples, 6.89%)</title><rect x="896.9" y="1829" width="81.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="899.93" y="1839.5" >HttpConn:..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (42,598,467 samples, 0.05%)</title><rect x="80.6" y="1717" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="83.56" y="1727.5" ></text>
</g>
<g >
<title>vfs_statx (212,980,176 samples, 0.26%)</title><rect x="214.9" y="1653" width="3.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="217.89" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (8,923,118 samples, 0.01%)</title><rect x="327.1" y="1765" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="330.06" y="1775.5" ></text>
</g>
<g >
<title>vfs_read (573,624,814 samples, 0.69%)</title><rect x="86.6" y="1717" width="8.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="89.62" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1765" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1775.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1493" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="295.80" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (277,570,187 samples, 0.33%)</title><rect x="312.1" y="1669" width="3.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="315.06" y="1679.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (10,162,208 samples, 0.01%)</title><rect x="273.4" y="1365" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="276.40" y="1375.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,902,703 samples, 0.01%)</title><rect x="14.0" y="1461" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="17.03" y="1471.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,735,606 samples, 0.01%)</title><rect x="296.3" y="1813" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="299.31" y="1823.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char*, char*&gt; (48,066,871 samples, 0.06%)</title><rect x="1111.3" y="1733" width="0.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1114.28" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,500,054 samples, 0.01%)</title><rect x="1035.7" y="1861" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1038.71" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (18,689,403 samples, 0.02%)</title><rect x="1182.0" y="2021" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="2031.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1365" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1002.78" y="1375.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7,208,810 samples, 0.01%)</title><rect x="674.4" y="1381" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="677.37" y="1391.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (442,869,364 samples, 0.53%)</title><rect x="467.6" y="1765" width="6.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="470.61" y="1775.5" ></text>
</g>
<g >
<title>lookup_fast (28,116,124 samples, 0.03%)</title><rect x="807.0" y="1573" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="810.04" y="1583.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (12,201,477 samples, 0.01%)</title><rect x="632.6" y="1717" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="635.58" y="1727.5" ></text>
</g>
<g >
<title>__fget_light (20,698,883 samples, 0.02%)</title><rect x="412.7" y="1701" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="415.71" y="1711.5" ></text>
</g>
<g >
<title>___slab_alloc (8,206,133 samples, 0.01%)</title><rect x="134.1" y="1541" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="137.09" y="1551.5" ></text>
</g>
<g >
<title>__mod_timer (63,669,439 samples, 0.08%)</title><rect x="721.6" y="1493" width="0.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="724.56" y="1503.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,553,028 samples, 0.01%)</title><rect x="1175.8" y="1573" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1178.77" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7,797,383 samples, 0.01%)</title><rect x="552.7" y="1509" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="555.73" y="1519.5" ></text>
</g>
<g >
<title>netvsc_poll (23,158,489 samples, 0.03%)</title><rect x="141.4" y="1685" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="144.45" y="1695.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,152,732 samples, 0.01%)</title><rect x="865.1" y="1253" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="868.14" y="1263.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (43,007,060 samples, 0.05%)</title><rect x="124.6" y="1285" width="0.6" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="127.57" y="1295.5" ></text>
</g>
<g >
<title>netvsc_poll (14,571,689 samples, 0.02%)</title><rect x="702.5" y="1685" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="705.52" y="1695.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (11,235,899 samples, 0.01%)</title><rect x="789.6" y="1669" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="792.61" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (13,816,296 samples, 0.02%)</title><rect x="40.4" y="1749" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="43.42" y="1759.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt; &gt; (23,156,776 samples, 0.03%)</title><rect x="740.1" y="1845" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="743.11" y="1855.5" ></text>
</g>
<g >
<title>__napi_poll (8,860,791 samples, 0.01%)</title><rect x="804.3" y="1525" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="807.26" y="1535.5" ></text>
</g>
<g >
<title>std::function&lt;void  (397,830,472 samples, 0.48%)</title><rect x="459.5" y="1765" width="5.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="462.51" y="1775.5" ></text>
</g>
<g >
<title>napi_complete_done (14,827,730 samples, 0.02%)</title><rect x="60.5" y="1621" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="63.49" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1061" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1071.5" ></text>
</g>
<g >
<title>ip_list_rcv (31,822,268 samples, 0.04%)</title><rect x="144.2" y="1557" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="147.16" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_S_equals (13,861,059 samples, 0.02%)</title><rect x="550.7" y="1685" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="553.66" y="1695.5" ></text>
</g>
<g >
<title>tcp_poll (18,140,835 samples, 0.02%)</title><rect x="143.1" y="1781" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="146.05" y="1791.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (13,169,734 samples, 0.02%)</title><rect x="526.7" y="1733" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="529.73" y="1743.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (29,912,126 samples, 0.04%)</title><rect x="125.7" y="1413" width="0.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="128.75" y="1423.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (418,726,982 samples, 0.50%)</title><rect x="12.7" y="1733" width="5.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="15.66" y="1743.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (46,931,066 samples, 0.06%)</title><rect x="856.4" y="1429" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="859.42" y="1439.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,360,456 samples, 0.01%)</title><rect x="363.3" y="1573" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="366.30" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="85" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="95.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1525" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="782.08" y="1535.5" ></text>
</g>
<g >
<title>irq_exit_rcu (15,545,057 samples, 0.02%)</title><rect x="65.7" y="1573" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="68.72" y="1583.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,060,443 samples, 0.01%)</title><rect x="234.8" y="1621" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="237.84" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (29,476,572 samples, 0.04%)</title><rect x="293.1" y="1653" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="296.14" y="1663.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,313,760 samples, 0.01%)</title><rect x="972.6" y="1605" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="975.63" y="1615.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (58,027,846 samples, 0.07%)</title><rect x="45.3" y="1701" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="48.33" y="1711.5" ></text>
</g>
<g >
<title>__napi_poll (26,939,315 samples, 0.03%)</title><rect x="878.1" y="1701" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="881.08" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (8,010,118 samples, 0.01%)</title><rect x="759.5" y="1653" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="762.52" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (16,278,824 samples, 0.02%)</title><rect x="40.2" y="1749" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="43.19" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1589" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="951.32" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (36,270,457 samples, 0.04%)</title><rect x="587.6" y="1845" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="590.55" y="1855.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (12,730,377 samples, 0.02%)</title><rect x="752.9" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="755.91" y="1663.5" ></text>
</g>
<g >
<title>rep_movs_alternative (35,934,965 samples, 0.04%)</title><rect x="973.7" y="1557" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="976.71" y="1567.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (50,320,874 samples, 0.06%)</title><rect x="350.6" y="1701" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="353.55" y="1711.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (9,755,903 samples, 0.01%)</title><rect x="857.9" y="1381" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="860.87" y="1391.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,105,077 samples, 0.01%)</title><rect x="539.7" y="1589" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="542.70" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (7,828,698 samples, 0.01%)</title><rect x="613.3" y="1717" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="616.26" y="1727.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (29,561,151 samples, 0.04%)</title><rect x="60.4" y="1749" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="63.42" y="1759.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (16,609,603 samples, 0.02%)</title><rect x="878.2" y="1653" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="881.22" y="1663.5" ></text>
</g>
<g >
<title>handle_softirqs (8,050,396 samples, 0.01%)</title><rect x="583.4" y="1717" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="586.36" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (92,592,557 samples, 0.11%)</title><rect x="586.8" y="1877" width="1.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="589.76" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1413" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1423.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (12,432,807 samples, 0.01%)</title><rect x="995.0" y="1797" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="997.96" y="1807.5" ></text>
</g>
<g >
<title>file_has_perm (34,254,986 samples, 0.04%)</title><rect x="88.1" y="1653" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="91.07" y="1663.5" ></text>
</g>
<g >
<title>napi_complete_done (12,269,948 samples, 0.01%)</title><rect x="293.2" y="1605" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="296.20" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="373" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="383.5" ></text>
</g>
<g >
<title>std::operator!=&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9,253,911 samples, 0.01%)</title><rect x="27.5" y="1749" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="30.45" y="1759.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (9,182,790 samples, 0.01%)</title><rect x="440.3" y="1413" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="443.28" y="1423.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (10,488,275 samples, 0.01%)</title><rect x="50.5" y="1765" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="53.50" y="1775.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (44,581,058 samples, 0.05%)</title><rect x="400.2" y="1669" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="403.21" y="1679.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (50,774,664 samples, 0.06%)</title><rect x="121.4" y="1429" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="124.39" y="1439.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (12,235,753 samples, 0.01%)</title><rect x="1082.6" y="1669" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1085.57" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (18,433,412 samples, 0.02%)</title><rect x="800.4" y="1701" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="803.36" y="1711.5" ></text>
</g>
<g >
<title>__napi_poll (7,252,038 samples, 0.01%)</title><rect x="707.9" y="1477" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="710.88" y="1487.5" ></text>
</g>
<g >
<title>EventLoop::Loop (9,922,392,363 samples, 11.91%)</title><rect x="600.0" y="1941" width="140.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="602.97" y="1951.5" >EventLoop::Loop</text>
</g>
<g >
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;*&gt;::pointer_to (9,111,628 samples, 0.01%)</title><rect x="545.6" y="1685" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="548.62" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="261" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="271.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (149,986,923 samples, 0.18%)</title><rect x="1009.3" y="1397" width="2.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1012.27" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1893" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1903.5" ></text>
</g>
<g >
<title>rep_movs_alternative (35,018,458 samples, 0.04%)</title><rect x="264.9" y="1589" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="267.87" y="1599.5" ></text>
</g>
<g >
<title>netvsc_send_pkt (77,874,441 samples, 0.09%)</title><rect x="1158.9" y="1333" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1161.86" y="1343.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (10,142,334 samples, 0.01%)</title><rect x="908.0" y="1717" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="910.98" y="1727.5" ></text>
</g>
<g >
<title>netvsc_poll (7,871,799 samples, 0.01%)</title><rect x="45.2" y="1573" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="48.22" y="1583.5" ></text>
</g>
<g >
<title>__ip_finish_output (422,384,335 samples, 0.51%)</title><rect x="1154.7" y="1461" width="6.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1157.73" y="1471.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (14,058,781 samples, 0.02%)</title><rect x="82.6" y="1589" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="85.65" y="1599.5" ></text>
</g>
<g >
<title>ip_list_rcv (10,156,722 samples, 0.01%)</title><rect x="746.0" y="1861" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="749.03" y="1871.5" ></text>
</g>
<g >
<title>irq_exit_rcu (14,873,190 samples, 0.02%)</title><rect x="586.1" y="1813" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="589.08" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (8,286,574 samples, 0.01%)</title><rect x="210.2" y="1429" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="213.21" y="1439.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (1,860,268,533 samples, 2.23%)</title><rect x="169.3" y="1781" width="26.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="172.27" y="1791.5" >H..</text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (22,276,111 samples, 0.03%)</title><rect x="175.7" y="1701" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="178.69" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1663.5" ></text>
</g>
<g >
<title>[web-server] (20,475,204 samples, 0.02%)</title><rect x="75.7" y="1781" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="78.71" y="1791.5" ></text>
</g>
<g >
<title>nft_do_chain_ipv4 (46,759,361 samples, 0.06%)</title><rect x="1153.6" y="1461" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1156.56" y="1471.5" ></text>
</g>
<g >
<title>TimerManager::GetNextTick (17,094,074 samples, 0.02%)</title><rect x="578.1" y="1909" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="581.13" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (190,569,196 samples, 0.23%)</title><rect x="628.0" y="1765" width="2.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="630.97" y="1775.5" ></text>
</g>
<g >
<title>send_recv_completions (7,991,799 samples, 0.01%)</title><rect x="478.3" y="1541" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="481.28" y="1551.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (9,132,117 samples, 0.01%)</title><rect x="1024.2" y="1365" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1027.24" y="1375.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (14,474,449 samples, 0.02%)</title><rect x="624.7" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="627.66" y="1631.5" ></text>
</g>
<g >
<title>napi_complete_done (12,892,864 samples, 0.02%)</title><rect x="422.8" y="1301" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="425.82" y="1311.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (9,207,402 samples, 0.01%)</title><rect x="1181.0" y="1893" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1183.98" y="1903.5" ></text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (16,305,819 samples, 0.02%)</title><rect x="1081.1" y="1765" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1084.13" y="1775.5" ></text>
</g>
<g >
<title>std::function&lt;void  (63,274,139 samples, 0.08%)</title><rect x="984.8" y="1781" width="0.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="987.76" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (24,535,514 samples, 0.03%)</title><rect x="700.7" y="1701" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="703.67" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (16,668,329 samples, 0.02%)</title><rect x="901.7" y="1509" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="904.68" y="1519.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long&gt; (11,159,575 samples, 0.01%)</title><rect x="936.4" y="1733" width="0.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="939.41" y="1743.5" ></text>
</g>
<g >
<title>vfs_writev (1,489,691,460 samples, 1.79%)</title><rect x="413.1" y="1717" width="21.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="416.05" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (11,909,884 samples, 0.01%)</title><rect x="1163.1" y="1381" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1166.06" y="1391.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (424,878,639 samples, 0.51%)</title><rect x="833.1" y="1797" width="6.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="836.12" y="1807.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,710,334 samples, 0.01%)</title><rect x="327.2" y="1765" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="330.18" y="1775.5" ></text>
</g>
<g >
<title>netvsc_send (100,949,687 samples, 0.12%)</title><rect x="1009.9" y="1349" width="1.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1012.94" y="1359.5" ></text>
</g>
<g >
<title>loopthread3 (10,090,266,361 samples, 12.11%)</title><rect x="456.7" y="2069" width="142.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="459.68" y="2079.5" >loopthread3</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (92,592,557 samples, 0.11%)</title><rect x="586.8" y="1861" width="1.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="589.76" y="1871.5" ></text>
</g>
<g >
<title>__secure_computing (17,798,877 samples, 0.02%)</title><rect x="63.2" y="1685" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="66.20" y="1695.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (24,154,886 samples, 0.03%)</title><rect x="867.5" y="1477" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="870.53" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1701" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (341,436,010 samples, 0.41%)</title><rect x="1044.6" y="1749" width="4.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1047.61" y="1759.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1701" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="925.16" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (7,342,805 samples, 0.01%)</title><rect x="318.4" y="1733" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="321.38" y="1743.5" ></text>
</g>
<g >
<title>handle_softirqs (11,909,884 samples, 0.01%)</title><rect x="1163.1" y="1397" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1166.06" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;char*&gt; (129,366,381 samples, 0.16%)</title><rect x="522.1" y="1765" width="1.8" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="525.10" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="101" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="111.5" ></text>
</g>
<g >
<title>epoll_wait (12,567,473 samples, 0.02%)</title><rect x="589.0" y="1909" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="592.02" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="469" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="479.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="325" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (461,607,216 samples, 0.55%)</title><rect x="728.8" y="1877" width="6.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="731.83" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (9,915,506 samples, 0.01%)</title><rect x="171.2" y="1701" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="174.23" y="1711.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (21,084,761 samples, 0.03%)</title><rect x="840.3" y="1669" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="843.28" y="1679.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8,899,740 samples, 0.01%)</title><rect x="544.0" y="1749" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="546.99" y="1759.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,172,978 samples, 0.01%)</title><rect x="99.0" y="1573" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="102.02" y="1583.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (12,795,137 samples, 0.02%)</title><rect x="363.3" y="1605" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="366.25" y="1615.5" ></text>
</g>
<g >
<title>sock_poll (17,011,417 samples, 0.02%)</title><rect x="399.1" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="402.10" y="1583.5" ></text>
</g>
<g >
<title>handle_softirqs (9,797,356 samples, 0.01%)</title><rect x="435.8" y="1845" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="438.79" y="1855.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (7,862,518 samples, 0.01%)</title><rect x="641.5" y="1701" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="644.49" y="1711.5" ></text>
</g>
<g >
<title>handle_softirqs (8,094,779 samples, 0.01%)</title><rect x="662.8" y="1685" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="665.76" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (21,325,822 samples, 0.03%)</title><rect x="917.7" y="1669" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="920.73" y="1679.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (37,741,993 samples, 0.05%)</title><rect x="1094.6" y="1621" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1097.59" y="1631.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (32,159,390 samples, 0.04%)</title><rect x="798.0" y="1733" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="801.04" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (27,740,667 samples, 0.03%)</title><rect x="290.2" y="1765" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="293.20" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (9,207,254 samples, 0.01%)</title><rect x="668.4" y="1717" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="671.42" y="1727.5" ></text>
</g>
<g >
<title>clear_bhb_loop (28,537,920 samples, 0.03%)</title><rect x="525.8" y="1781" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="528.81" y="1791.5" ></text>
</g>
<g >
<title>__fput (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1477" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="469.26" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1365" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1375.5" ></text>
</g>
<g >
<title>tcp_send_ack (8,968,174 samples, 0.01%)</title><rect x="974.6" y="1589" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="977.56" y="1599.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (23,729,146 samples, 0.03%)</title><rect x="1011.4" y="1397" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1014.41" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,706,291,555 samples, 2.05%)</title><rect x="848.3" y="1797" width="24.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="851.29" y="1807.5" >e..</text>
</g>
<g >
<title>_raw_write_unlock_irq (52,277,147 samples, 0.06%)</title><rect x="1172.6" y="1813" width="0.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1175.64" y="1823.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (18,248,607 samples, 0.02%)</title><rect x="206.9" y="1653" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="209.91" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (12,328,208 samples, 0.01%)</title><rect x="586.1" y="1765" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="589.08" y="1775.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (15,545,057 samples, 0.02%)</title><rect x="65.7" y="1605" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="68.72" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (12,721,777 samples, 0.02%)</title><rect x="652.0" y="1477" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="654.98" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1077" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1087.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (19,465,960 samples, 0.02%)</title><rect x="77.8" y="1781" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="80.76" y="1791.5" ></text>
</g>
<g >
<title>read (992,634,052 samples, 1.19%)</title><rect x="229.1" y="1813" width="14.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="232.10" y="1823.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (14,474,449 samples, 0.02%)</title><rect x="624.7" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="627.66" y="1679.5" ></text>
</g>
<g >
<title>__secure_computing (20,908,230 samples, 0.03%)</title><rect x="652.3" y="1685" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="655.30" y="1695.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (47,618,260 samples, 0.06%)</title><rect x="1089.3" y="1749" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1092.26" y="1759.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (12,757,239 samples, 0.02%)</title><rect x="439.9" y="1797" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="442.94" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (7,246,094 samples, 0.01%)</title><rect x="519.4" y="1685" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="522.40" y="1695.5" ></text>
</g>
<g >
<title>_int_free (25,716,836 samples, 0.03%)</title><rect x="302.7" y="2037" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="305.67" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (407,692,453 samples, 0.49%)</title><rect x="161.5" y="1749" width="5.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="164.51" y="1759.5" ></text>
</g>
<g >
<title>clear_bhb_loop (25,617,251 samples, 0.03%)</title><rect x="1092.2" y="1733" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1095.24" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,635,533 samples, 0.01%)</title><rect x="181.6" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="184.59" y="1647.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (139,232,148 samples, 0.17%)</title><rect x="418.6" y="1461" width="2.0" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="421.59" y="1471.5" ></text>
</g>
<g >
<title>__put_user_nocheck_4 (7,130,984 samples, 0.01%)</title><rect x="138.7" y="1829" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="141.74" y="1839.5" ></text>
</g>
<g >
<title>__secure_computing (10,875,047 samples, 0.01%)</title><rect x="360.1" y="1701" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="363.06" y="1711.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (480,501,791 samples, 0.58%)</title><rect x="170.1" y="1765" width="6.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="173.09" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (11,362,429 samples, 0.01%)</title><rect x="236.4" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="239.39" y="1567.5" ></text>
</g>
<g >
<title>rep_movs_alternative (12,726,865 samples, 0.02%)</title><rect x="17.3" y="1605" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="20.26" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1663.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (11,761,673 samples, 0.01%)</title><rect x="1027.8" y="1589" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1030.81" y="1599.5" ></text>
</g>
<g >
<title>HttpConn::Close (11,282,996 samples, 0.01%)</title><rect x="20.1" y="1797" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="23.06" y="1807.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (12,844,043 samples, 0.02%)</title><rect x="1049.9" y="1717" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1052.89" y="1727.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (8,844,212 samples, 0.01%)</title><rect x="853.9" y="1589" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="856.95" y="1599.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (51,218,426 samples, 0.06%)</title><rect x="909.9" y="1653" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="912.90" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (17,843,887 samples, 0.02%)</title><rect x="840.8" y="1669" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="843.84" y="1679.5" ></text>
</g>
<g >
<title>sk_reset_timer (50,357,061 samples, 0.06%)</title><rect x="1014.1" y="1525" width="0.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1017.14" y="1535.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,313,760 samples, 0.01%)</title><rect x="972.6" y="1589" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="975.63" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (9,953,506 samples, 0.01%)</title><rect x="748.7" y="2037" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="751.69" y="2047.5" ></text>
</g>
<g >
<title>fput (7,258,081 samples, 0.01%)</title><rect x="1116.0" y="1733" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1119.00" y="1743.5" ></text>
</g>
<g >
<title>nf_hook_slow (245,384,503 samples, 0.29%)</title><rect x="267.8" y="1477" width="3.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="270.81" y="1487.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (28,369,501 samples, 0.03%)</title><rect x="962.3" y="1669" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="965.33" y="1679.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,115,937 samples, 0.01%)</title><rect x="859.1" y="1413" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="862.06" y="1423.5" ></text>
</g>
<g >
<title>tcp_ack (11,797,629 samples, 0.01%)</title><rect x="124.8" y="1109" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="127.83" y="1119.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (57,228,042 samples, 0.07%)</title><rect x="944.4" y="1717" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="947.37" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1301" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1311.5" ></text>
</g>
<g >
<title>newidle_balance (11,144,659 samples, 0.01%)</title><rect x="584.7" y="1733" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="587.75" y="1743.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (25,438,411 samples, 0.03%)</title><rect x="541.4" y="1589" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="544.37" y="1599.5" ></text>
</g>
<g >
<title>memset_orig (82,727,846 samples, 0.10%)</title><rect x="946.1" y="1621" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="949.14" y="1631.5" ></text>
</g>
<g >
<title>napi_complete_done (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1621" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="295.80" y="1631.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (5,862,431,928 samples, 7.03%)</title><rect x="1043.7" y="1829" width="83.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1046.65" y="1839.5" >HttpConn:..</text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1061" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_read (586,274,289 samples, 0.70%)</title><rect x="821.6" y="1749" width="8.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="824.57" y="1759.5" ></text>
</g>
<g >
<title>clear_bhb_loop (8,886,723 samples, 0.01%)</title><rect x="1143.8" y="1781" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1146.78" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="869" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="879.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (13,497,268 samples, 0.02%)</title><rect x="996.0" y="1765" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="999.02" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1413" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1423.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (25,383,598 samples, 0.03%)</title><rect x="201.4" y="1653" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="204.41" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (11,326,650 samples, 0.01%)</title><rect x="910.2" y="1637" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="913.23" y="1647.5" ></text>
</g>
<g >
<title>__secure_computing (12,283,014 samples, 0.01%)</title><rect x="651.8" y="1701" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="654.81" y="1711.5" ></text>
</g>
<g >
<title>sock_def_readable (7,208,810 samples, 0.01%)</title><rect x="674.4" y="1413" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="677.37" y="1423.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (25,961,950 samples, 0.03%)</title><rect x="724.4" y="1573" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="727.43" y="1583.5" ></text>
</g>
<g >
<title>vfs_read (550,551,009 samples, 0.66%)</title><rect x="384.5" y="1717" width="7.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="387.54" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="661" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (14,281,120 samples, 0.02%)</title><rect x="487.6" y="1717" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="490.59" y="1727.5" ></text>
</g>
<g >
<title>tcp_poll (23,162,314 samples, 0.03%)</title><rect x="441.8" y="1781" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="444.81" y="1791.5" ></text>
</g>
<g >
<title>do_syscall_64 (266,399,093 samples, 0.32%)</title><rect x="13.9" y="1653" width="3.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="16.85" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1301" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1002.78" y="1311.5" ></text>
</g>
<g >
<title>net_rx_action (7,210,592 samples, 0.01%)</title><rect x="116.0" y="1525" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="119.02" y="1535.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (10,826,871 samples, 0.01%)</title><rect x="70.2" y="1557" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="73.23" y="1567.5" ></text>
</g>
<g >
<title>ip_list_rcv (16,641,682 samples, 0.02%)</title><rect x="357.7" y="1573" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="360.73" y="1583.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (10,574,210 samples, 0.01%)</title><rect x="1176.0" y="1509" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1178.96" y="1519.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,173,028 samples, 0.01%)</title><rect x="1140.9" y="1509" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1143.88" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (11,621,097 samples, 0.01%)</title><rect x="1139.6" y="1669" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1142.57" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (54,266,523 samples, 0.07%)</title><rect x="1007.4" y="1349" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1010.37" y="1359.5" ></text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (7,323,393 samples, 0.01%)</title><rect x="639.9" y="1765" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="642.93" y="1775.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (11,119,556 samples, 0.01%)</title><rect x="1154.0" y="1413" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1157.01" y="1423.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,270,831 samples, 0.01%)</title><rect x="214.2" y="1589" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="217.18" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1989" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1999.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (25,138,202 samples, 0.03%)</title><rect x="522.8" y="1653" width="0.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="525.82" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1397" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1407.5" ></text>
</g>
<g >
<title>napi_complete_done (24,953,535 samples, 0.03%)</title><rect x="714.8" y="1301" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="717.81" y="1311.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1381" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="951.32" y="1391.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (743,227,870 samples, 0.89%)</title><rect x="137.8" y="1925" width="10.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="140.82" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (8,385,464 samples, 0.01%)</title><rect x="1121.0" y="1541" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1124.00" y="1551.5" ></text>
</g>
<g >
<title>sk_reset_timer (72,493,404 samples, 0.09%)</title><rect x="429.1" y="1525" width="1.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="432.06" y="1535.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (13,867,234 samples, 0.02%)</title><rect x="834.9" y="1621" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="837.91" y="1631.5" ></text>
</g>
<g >
<title>std::function&lt;void  (362,433,098 samples, 0.43%)</title><rect x="979.6" y="1765" width="5.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="982.56" y="1775.5" ></text>
</g>
<g >
<title>__strlen_avx2 (18,249,821 samples, 0.02%)</title><rect x="741.5" y="2021" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="744.52" y="2031.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (153,684,777 samples, 0.18%)</title><rect x="120.1" y="1461" width="2.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="123.13" y="1471.5" ></text>
</g>
<g >
<title>nf_conntrack_in (148,264,314 samples, 0.18%)</title><rect x="268.0" y="1445" width="2.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="271.02" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="389" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (7,859,247 samples, 0.01%)</title><rect x="552.3" y="1813" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="555.26" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,299,996 samples, 0.01%)</title><rect x="734.6" y="1509" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="737.60" y="1519.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (14,978,728 samples, 0.02%)</title><rect x="1090.8" y="1493" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1093.79" y="1503.5" ></text>
</g>
<g >
<title>std::operator!=&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (13,975,785 samples, 0.02%)</title><rect x="474.1" y="1749" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="477.05" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1877" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="757" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="767.5" ></text>
</g>
<g >
<title>selinux_inode_permission (43,517,793 samples, 0.05%)</title><rect x="216.3" y="1557" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="219.33" y="1567.5" ></text>
</g>
<g >
<title>release_sock (22,269,089 samples, 0.03%)</title><rect x="971.4" y="1637" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="974.39" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (514,422,707 samples, 0.62%)</title><rect x="29.6" y="1765" width="7.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="32.57" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;char*, void&gt; (117,023,232 samples, 0.14%)</title><rect x="227.2" y="1797" width="1.6" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="230.16" y="1807.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (7,797,383 samples, 0.01%)</title><rect x="552.7" y="1589" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="555.73" y="1599.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (7,165,999 samples, 0.01%)</title><rect x="246.3" y="1621" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="249.29" y="1631.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (18,759,990 samples, 0.02%)</title><rect x="1027.5" y="1541" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1030.49" y="1551.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (27,753,109 samples, 0.03%)</title><rect x="788.6" y="1765" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="791.57" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (11,453,136 samples, 0.01%)</title><rect x="180.1" y="1701" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="183.15" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (9,990,250 samples, 0.01%)</title><rect x="233.3" y="1541" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="236.30" y="1551.5" ></text>
</g>
<g >
<title>walk_component (80,908,915 samples, 0.10%)</title><rect x="806.4" y="1589" width="1.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="809.45" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (41,894,860 samples, 0.05%)</title><rect x="147.4" y="1845" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="150.37" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="341" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="351.5" ></text>
</g>
<g >
<title>handle_dots (31,817,475 samples, 0.04%)</title><rect x="1100.2" y="1573" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1103.22" y="1583.5" ></text>
</g>
<g >
<title>__strlen_avx2 (11,794,920 samples, 0.01%)</title><rect x="107.0" y="1781" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="109.95" y="1791.5" ></text>
</g>
<g >
<title>ip_finish_output (387,359,358 samples, 0.46%)</title><rect x="123.8" y="1477" width="5.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="126.82" y="1487.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (10,719,083 samples, 0.01%)</title><rect x="409.0" y="1669" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="412.00" y="1679.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (8,793,819 samples, 0.01%)</title><rect x="360.3" y="1445" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="363.26" y="1455.5" ></text>
</g>
<g >
<title>sock_def_readable (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1237" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1002.78" y="1247.5" ></text>
</g>
<g >
<title>napi_complete_done (7,437,251 samples, 0.01%)</title><rect x="69.2" y="1413" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="72.22" y="1423.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,943,763 samples, 0.01%)</title><rect x="421.2" y="1381" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="424.24" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (68,361,918 samples, 0.08%)</title><rect x="628.9" y="1749" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="631.93" y="1759.5" ></text>
</g>
<g >
<title>putname (23,431,733 samples, 0.03%)</title><rect x="364.5" y="1653" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="367.46" y="1663.5" ></text>
</g>
<g >
<title>selinux_ip_postroute_compat (27,802,058 samples, 0.03%)</title><rect x="719.5" y="1445" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="722.49" y="1455.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (7,186,545 samples, 0.01%)</title><rect x="150.5" y="2037" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="153.48" y="2047.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1109" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1002.78" y="1119.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (11,914,981 samples, 0.01%)</title><rect x="562.2" y="1381" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="565.25" y="1391.5" ></text>
</g>
<g >
<title>std::function&lt;void  (7,342,805 samples, 0.01%)</title><rect x="318.4" y="1781" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="321.38" y="1791.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (11,400,420 samples, 0.01%)</title><rect x="731.5" y="1781" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="734.52" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (9,755,743 samples, 0.01%)</title><rect x="210.2" y="1477" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="213.19" y="1487.5" ></text>
</g>
<g >
<title>newidle_balance (10,353,312 samples, 0.01%)</title><rect x="144.7" y="1733" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="147.72" y="1743.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (10,319,447 samples, 0.01%)</title><rect x="693.9" y="1685" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="696.90" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (13,494,969 samples, 0.02%)</title><rect x="516.6" y="1749" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="519.63" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (9,289,014 samples, 0.01%)</title><rect x="30.7" y="1701" width="0.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="33.70" y="1711.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (46,335,999 samples, 0.06%)</title><rect x="442.8" y="1749" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="445.76" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (13,959,268 samples, 0.02%)</title><rect x="256.1" y="1701" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="259.08" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7,236,966 samples, 0.01%)</title><rect x="380.8" y="1509" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="383.83" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_free (21,582,168 samples, 0.03%)</title><rect x="364.5" y="1637" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="367.48" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (7,831,649 samples, 0.01%)</title><rect x="668.3" y="1749" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="671.28" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (7,400,562 samples, 0.01%)</title><rect x="280.0" y="1381" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="282.98" y="1391.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (479,023,287 samples, 0.57%)</title><rect x="687.3" y="1797" width="6.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="690.33" y="1807.5" ></text>
</g>
<g >
<title>__mod_timer (50,558,304 samples, 0.06%)</title><rect x="279.8" y="1493" width="0.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="282.76" y="1503.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (28,026,455 samples, 0.03%)</title><rect x="1081.4" y="1765" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1084.36" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (26,715,558 samples, 0.03%)</title><rect x="941.2" y="1669" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="944.20" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1573" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="782.08" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (177,009,552 samples, 0.21%)</title><rect x="38.2" y="1765" width="2.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="41.16" y="1775.5" ></text>
</g>
<g >
<title>path_lookupat (234,221,466 samples, 0.28%)</title><rect x="804.6" y="1621" width="3.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="807.57" y="1631.5" ></text>
</g>
<g >
<title>inet_sendmsg (1,371,631,572 samples, 1.65%)</title><rect x="1146.6" y="1653" width="19.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1149.61" y="1663.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (884,157,271 samples, 1.06%)</title><rect x="1149.5" y="1557" width="12.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1152.54" y="1567.5" ></text>
</g>
<g >
<title>do_epoll_ctl (154,369,548 samples, 0.19%)</title><rect x="313.4" y="1605" width="2.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="316.43" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (7,821,638 samples, 0.01%)</title><rect x="956.9" y="1765" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="959.93" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (11,648,809 samples, 0.01%)</title><rect x="810.2" y="1765" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="813.19" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (13,343,354 samples, 0.02%)</title><rect x="608.6" y="1685" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="611.65" y="1695.5" ></text>
</g>
<g >
<title>putname (15,849,635 samples, 0.02%)</title><rect x="214.7" y="1653" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="217.67" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (29,593,044 samples, 0.04%)</title><rect x="619.7" y="1765" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="622.67" y="1775.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (15,460,464 samples, 0.02%)</title><rect x="141.2" y="1797" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="144.18" y="1807.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (37,773,764 samples, 0.05%)</title><rect x="725.0" y="1653" width="0.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="727.97" y="1663.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (13,741,186 samples, 0.02%)</title><rect x="1027.5" y="1525" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1030.51" y="1535.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (14,856,289 samples, 0.02%)</title><rect x="981.3" y="1621" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="984.31" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (9,526,627 samples, 0.01%)</title><rect x="848.9" y="1669" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="851.89" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (8,195,207 samples, 0.01%)</title><rect x="273.1" y="1125" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="276.10" y="1135.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (15,112,853 samples, 0.02%)</title><rect x="409.7" y="1781" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="412.71" y="1791.5" ></text>
</g>
<g >
<title>__fdget_pos (30,547,625 samples, 0.04%)</title><rect x="114.2" y="1717" width="0.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="117.24" y="1727.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (8,162,174 samples, 0.01%)</title><rect x="959.9" y="1781" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="962.88" y="1791.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,428,225 samples, 0.01%)</title><rect x="974.1" y="1525" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="977.10" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (7,486,159 samples, 0.01%)</title><rect x="906.9" y="1685" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="909.94" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_first_not_of (11,924,410 samples, 0.01%)</title><rect x="920.4" y="1765" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="923.44" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1685" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (12,007,260 samples, 0.01%)</title><rect x="985.0" y="1749" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="988.00" y="1759.5" ></text>
</g>
<g >
<title>__strlen_avx2 (7,574,061 samples, 0.01%)</title><rect x="468.2" y="1733" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="471.22" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9,326,641 samples, 0.01%)</title><rect x="943.2" y="1749" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="946.23" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (74,705,454 samples, 0.09%)</title><rect x="934.5" y="1733" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="937.52" y="1743.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (67,064,281 samples, 0.08%)</title><rect x="549.1" y="1781" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="552.09" y="1791.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (155,935,467 samples, 0.19%)</title><rect x="689.6" y="1621" width="2.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="692.56" y="1631.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,815,769 samples, 0.01%)</title><rect x="296.3" y="1653" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="299.31" y="1663.5" ></text>
</g>
<g >
<title>netvsc_poll (9,367,253 samples, 0.01%)</title><rect x="478.3" y="1557" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="481.26" y="1567.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (17,928,035 samples, 0.02%)</title><rect x="688.0" y="1653" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="691.05" y="1663.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (7,135,113 samples, 0.01%)</title><rect x="866.5" y="1557" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="869.47" y="1567.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (10,630,618 samples, 0.01%)</title><rect x="801.0" y="1717" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="803.96" y="1727.5" ></text>
</g>
<g >
<title>__memchr_avx2 (16,304,391 samples, 0.02%)</title><rect x="153.9" y="2053" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="156.87" y="2063.5" ></text>
</g>
<g >
<title>__strlen_avx2 (7,393,459 samples, 0.01%)</title><rect x="1034.8" y="2021" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1037.77" y="2031.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (11,628,825 samples, 0.01%)</title><rect x="905.0" y="1589" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="908.01" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,685,164 samples, 0.01%)</title><rect x="210.2" y="1557" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="213.19" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7,208,810 samples, 0.01%)</title><rect x="674.4" y="1301" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="677.37" y="1311.5" ></text>
</g>
<g >
<title>selinux_socket_sendmsg (19,427,879 samples, 0.02%)</title><rect x="1017.5" y="1637" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1020.51" y="1647.5" ></text>
</g>
<g >
<title>import_iovec (20,492,594 samples, 0.02%)</title><rect x="1167.4" y="1701" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1170.38" y="1711.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,964,144 samples, 0.01%)</title><rect x="16.6" y="1557" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="19.56" y="1567.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1381" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="295.80" y="1391.5" ></text>
</g>
<g >
<title>__check_object_size (17,194,120 samples, 0.02%)</title><rect x="1000.5" y="1605" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1003.46" y="1615.5" ></text>
</g>
<g >
<title>__secure_computing (7,381,411 samples, 0.01%)</title><rect x="210.0" y="1701" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="213.03" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14,337,555 samples, 0.02%)</title><rect x="609.7" y="1749" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="612.74" y="1759.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (4,925,467,124 samples, 5.91%)</title><rect x="601.6" y="1813" width="69.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="604.65" y="1823.5" >HttpCon..</text>
</g>
<g >
<title>__napi_poll (7,468,225 samples, 0.01%)</title><rect x="347.8" y="1653" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="350.82" y="1663.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (138,202,471 samples, 0.17%)</title><rect x="288.2" y="1813" width="1.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="291.16" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1445" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (12,180,482 samples, 0.01%)</title><rect x="141.2" y="1605" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="144.21" y="1615.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9,879,824 samples, 0.01%)</title><rect x="39.0" y="1701" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="41.95" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (20,871,830 samples, 0.03%)</title><rect x="1024.5" y="1605" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1027.45" y="1615.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (7,547,446 samples, 0.01%)</title><rect x="1024.0" y="1781" width="0.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1027.00" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1877" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1887.5" ></text>
</g>
<g >
<title>epoll_ctl (367,130,716 samples, 0.44%)</title><rect x="161.9" y="1685" width="5.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="164.93" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (8,002,776 samples, 0.01%)</title><rect x="964.3" y="1525" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="967.30" y="1535.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,398,550 samples, 0.01%)</title><rect x="265.4" y="1605" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="268.37" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (23,123,754 samples, 0.03%)</title><rect x="846.0" y="1701" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="849.03" y="1711.5" ></text>
</g>
<g >
<title>ip_list_rcv (11,943,763 samples, 0.01%)</title><rect x="421.2" y="1253" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="424.24" y="1263.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,925,385 samples, 0.01%)</title><rect x="1066.2" y="1685" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1069.17" y="1695.5" ></text>
</g>
<g >
<title>__napi_poll (8,814,896 samples, 0.01%)</title><rect x="1130.6" y="1493" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1133.63" y="1503.5" ></text>
</g>
<g >
<title>TimerManager::Tick (42,036,274 samples, 0.05%)</title><rect x="148.3" y="1925" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="151.34" y="1935.5" ></text>
</g>
<g >
<title>std::function&lt;void  (7,302,215 samples, 0.01%)</title><rect x="994.3" y="1797" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="997.35" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (48,741,394 samples, 0.06%)</title><rect x="206.5" y="1669" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="209.52" y="1679.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,708,042 samples, 0.01%)</title><rect x="131.2" y="1413" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="134.16" y="1423.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (20,305,181 samples, 0.02%)</title><rect x="81.3" y="1749" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="84.25" y="1759.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,754,268 samples, 0.01%)</title><rect x="34.7" y="1653" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="37.72" y="1663.5" ></text>
</g>
<g >
<title>do_epoll_wait (439,754,684 samples, 0.53%)</title><rect x="437.6" y="1829" width="6.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="440.56" y="1839.5" ></text>
</g>
<g >
<title>path_init (21,076,871 samples, 0.03%)</title><rect x="368.1" y="1605" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="371.07" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1509" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1519.5" ></text>
</g>
<g >
<title>[web-server] (8,302,391 samples, 0.01%)</title><rect x="208.0" y="1765" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="210.95" y="1775.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (27,958,950 samples, 0.03%)</title><rect x="741.1" y="2021" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="744.12" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (13,669,993 samples, 0.02%)</title><rect x="882.8" y="1893" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="885.82" y="1903.5" ></text>
</g>
<g >
<title>release_sock (31,713,344 samples, 0.04%)</title><rect x="90.2" y="1637" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="93.19" y="1647.5" ></text>
</g>
<g >
<title>do_syscall_64 (480,375,353 samples, 0.58%)</title><rect x="874.8" y="1877" width="6.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="877.78" y="1887.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3,009,640,178 samples, 3.61%)</title><rect x="243.5" y="1893" width="42.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="246.55" y="1903.5" >std:..</text>
</g>
<g >
<title>clear_bhb_loop (14,976,867 samples, 0.02%)</title><rect x="603.4" y="1653" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="606.41" y="1663.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (16,594,723 samples, 0.02%)</title><rect x="462.9" y="1589" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="465.94" y="1599.5" ></text>
</g>
<g >
<title>sock_poll (9,887,084 samples, 0.01%)</title><rect x="16.8" y="1573" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.78" y="1583.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (14,684,346 samples, 0.02%)</title><rect x="88.3" y="1605" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="91.32" y="1615.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (17,534,189 samples, 0.02%)</title><rect x="82.6" y="1605" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="85.63" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (394,831,604 samples, 0.47%)</title><rect x="769.5" y="1717" width="5.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="772.49" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (15,669,777 samples, 0.02%)</title><rect x="141.5" y="1621" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="144.53" y="1631.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (17,288,620 samples, 0.02%)</title><rect x="816.4" y="1781" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="819.38" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (82,898,328 samples, 0.10%)</title><rect x="659.6" y="1749" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="662.63" y="1759.5" ></text>
</g>
<g >
<title>rw_verify_area (47,136,783 samples, 0.06%)</title><rect x="1166.7" y="1685" width="0.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1169.69" y="1695.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (9,815,621 samples, 0.01%)</title><rect x="387.9" y="1621" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="390.90" y="1631.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,226,950 samples, 0.01%)</title><rect x="708.0" y="1573" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="710.98" y="1583.5" ></text>
</g>
<g >
<title>handle_softirqs (12,432,807 samples, 0.01%)</title><rect x="995.0" y="1733" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="997.96" y="1743.5" ></text>
</g>
<g >
<title>irq_exit_rcu (16,655,467 samples, 0.02%)</title><rect x="652.0" y="1669" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="654.98" y="1679.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*, char&gt; (21,604,609 samples, 0.03%)</title><rect x="51.6" y="1717" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="54.64" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="693" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="703.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1813" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1823.5" ></text>
</g>
<g >
<title>sk_reset_timer (93,507,905 samples, 0.11%)</title><rect x="867.2" y="1525" width="1.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="870.23" y="1535.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,433,348 samples, 0.01%)</title><rect x="1152.0" y="1365" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1155.03" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1381" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1391.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (42,765,284 samples, 0.05%)</title><rect x="590.0" y="1813" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="593.03" y="1823.5" ></text>
</g>
<g >
<title>security_file_permission (42,400,640 samples, 0.05%)</title><rect x="1166.7" y="1669" width="0.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1169.69" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1157" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1167.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (37,493,262 samples, 0.04%)</title><rect x="198.6" y="1765" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="201.58" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (10,160,732 samples, 0.01%)</title><rect x="1110.0" y="1797" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1113.03" y="1807.5" ></text>
</g>
<g >
<title>selinux_ip_postroute (27,404,387 samples, 0.03%)</title><rect x="1012.3" y="1461" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1015.34" y="1471.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (88,236,803 samples, 0.11%)</title><rect x="255.8" y="1781" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="258.83" y="1791.5" ></text>
</g>
<g >
<title>__napi_poll (15,586,895 samples, 0.02%)</title><rect x="552.7" y="1701" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="555.69" y="1711.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1125" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="951.32" y="1135.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7,086,065 samples, 0.01%)</title><rect x="206.1" y="1669" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="209.08" y="1679.5" ></text>
</g>
<g >
<title>std::function&lt;void  (66,083,075 samples, 0.08%)</title><rect x="609.0" y="1781" width="0.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="612.00" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (14,507,230 samples, 0.02%)</title><rect x="492.6" y="1765" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="495.62" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (9,860,719 samples, 0.01%)</title><rect x="1113.2" y="1509" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1116.24" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (19,151,247 samples, 0.02%)</title><rect x="323.4" y="1637" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="326.36" y="1647.5" ></text>
</g>
<g >
<title>inode_has_perm (25,070,313 samples, 0.03%)</title><rect x="88.2" y="1637" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="91.20" y="1647.5" ></text>
</g>
<g >
<title>handle_softirqs (10,107,971 samples, 0.01%)</title><rect x="69.2" y="1477" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="72.22" y="1487.5" ></text>
</g>
<g >
<title>netvsc_poll (9,725,984 samples, 0.01%)</title><rect x="1096.4" y="1493" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1099.44" y="1503.5" ></text>
</g>
<g >
<title>ip_list_rcv (14,599,937 samples, 0.02%)</title><rect x="380.8" y="1621" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="383.79" y="1631.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,856,527 samples, 0.01%)</title><rect x="541.2" y="1413" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="544.15" y="1423.5" ></text>
</g>
<g >
<title>ip_local_deliver (13,668,447 samples, 0.02%)</title><rect x="715.0" y="1205" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="717.97" y="1215.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (9,704,484 samples, 0.01%)</title><rect x="1024.5" y="1381" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1027.55" y="1391.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (132,765,732 samples, 0.16%)</title><rect x="736.4" y="1893" width="1.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="739.43" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="741" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="751.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (325,221,959 samples, 0.39%)</title><rect x="538.6" y="1717" width="4.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="541.56" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1845" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1855.5" ></text>
</g>
<g >
<title>avc_has_perm (23,655,626 samples, 0.03%)</title><rect x="88.2" y="1621" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="91.22" y="1631.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (165,165,681 samples, 0.20%)</title><rect x="939.4" y="1765" width="2.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="942.44" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1269" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1279.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (48,626,100 samples, 0.06%)</title><rect x="94.0" y="1669" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="96.98" y="1679.5" ></text>
</g>
<g >
<title>ep_poll_callback (8,745,319 samples, 0.01%)</title><rect x="427.4" y="997" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="430.41" y="1007.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (12,433,953 samples, 0.01%)</title><rect x="1177.7" y="1877" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1180.74" y="1887.5" ></text>
</g>
<g >
<title>getname_flags (210,261,627 samples, 0.25%)</title><rect x="945.6" y="1653" width="3.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="948.63" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="981" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="991.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1045" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1055.5" ></text>
</g>
<g >
<title>irq_exit_rcu (12,919,702 samples, 0.02%)</title><rect x="1115.2" y="1717" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1118.25" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,046,204 samples, 0.01%)</title><rect x="423.2" y="1253" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="426.16" y="1263.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (30,940,068 samples, 0.04%)</title><rect x="104.4" y="1669" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="107.44" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1445" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="951.32" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1477" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1487.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (9,316,489 samples, 0.01%)</title><rect x="789.0" y="1765" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="791.96" y="1775.5" ></text>
</g>
<g >
<title>__put_user_nocheck_4 (14,235,796 samples, 0.02%)</title><rect x="729.1" y="1829" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="732.13" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (8,580,254 samples, 0.01%)</title><rect x="598.6" y="2053" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="601.64" y="2063.5" ></text>
</g>
<g >
<title>clear_bhb_loop (9,946,402 samples, 0.01%)</title><rect x="13.7" y="1653" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="16.71" y="1663.5" ></text>
</g>
<g >
<title>handle_softirqs (33,593,794 samples, 0.04%)</title><rect x="293.1" y="1669" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="296.12" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="965" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="975.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="261" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="271.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (9,335,250 samples, 0.01%)</title><rect x="904.6" y="1685" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="907.64" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="389" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="399.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (18,343,553 samples, 0.02%)</title><rect x="89.7" y="1605" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="92.73" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (11,980,197 samples, 0.01%)</title><rect x="924.3" y="1765" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="927.34" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,685,164 samples, 0.01%)</title><rect x="210.2" y="1541" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="213.19" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (199,797,118 samples, 0.24%)</title><rect x="1045.2" y="1653" width="2.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1048.25" y="1663.5" ></text>
</g>
<g >
<title>__wake_up_sync (9,132,117 samples, 0.01%)</title><rect x="1024.2" y="1381" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1027.24" y="1391.5" ></text>
</g>
<g >
<title>ip_list_rcv (16,916,044 samples, 0.02%)</title><rect x="1024.1" y="1621" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1027.13" y="1631.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (14,164,363 samples, 0.02%)</title><rect x="796.7" y="1653" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="799.67" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (87,745,592 samples, 0.11%)</title><rect x="663.1" y="1765" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="666.13" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="549" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="559.5" ></text>
</g>
<g >
<title>vfs_statx (249,789,641 samples, 0.30%)</title><rect x="67.5" y="1653" width="3.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="70.54" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;char*&gt; (104,228,918 samples, 0.13%)</title><rect x="227.3" y="1765" width="1.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="230.27" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (7,115,937 samples, 0.01%)</title><rect x="859.1" y="1349" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="862.06" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (171,614,653 samples, 0.21%)</title><rect x="497.0" y="1749" width="2.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="500.03" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (28,976,568 samples, 0.03%)</title><rect x="1168.0" y="1797" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1170.98" y="1807.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (7,175,953 samples, 0.01%)</title><rect x="826.4" y="1605" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="829.40" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1013" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1023.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (8,465,226 samples, 0.01%)</title><rect x="712.0" y="1381" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="715.04" y="1391.5" ></text>
</g>
<g >
<title>napi_gro_receive (8,234,970 samples, 0.01%)</title><rect x="731.6" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="734.56" y="1647.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (39,661,188 samples, 0.05%)</title><rect x="872.9" y="1797" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="875.90" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="437" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="447.5" ></text>
</g>
<g >
<title>net_rx_action (11,934,288 samples, 0.01%)</title><rect x="307.1" y="1957" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="310.08" y="1967.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (28,014,150 samples, 0.03%)</title><rect x="1086.2" y="1717" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1089.20" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1589" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="517" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (548,238,948 samples, 0.66%)</title><rect x="1020.9" y="1877" width="7.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1023.94" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1461" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="925.16" y="1471.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (41,509,993 samples, 0.05%)</title><rect x="692.3" y="1669" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="695.32" y="1679.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (444,712,532 samples, 0.53%)</title><rect x="319.5" y="1765" width="6.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="322.50" y="1775.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (97,997,671 samples, 0.12%)</title><rect x="442.3" y="1797" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="445.32" y="1807.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,617,696 samples, 0.01%)</title><rect x="1144.3" y="1733" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1147.28" y="1743.5" ></text>
</g>
<g >
<title>__skb_clone (8,367,684 samples, 0.01%)</title><rect x="1013.2" y="1525" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1016.23" y="1535.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (40,950,594 samples, 0.05%)</title><rect x="1053.0" y="1733" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1056.01" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::clear (26,889,333 samples, 0.03%)</title><rect x="740.1" y="1925" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="743.08" y="1935.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,112,476 samples, 0.02%)</title><rect x="1093.1" y="1669" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1096.10" y="1679.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,776,220,633 samples, 11.73%)</title><rect x="895.4" y="2053" width="138.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="898.37" y="2063.5" >[libstdc++.so.6.0..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (81,295,013 samples, 0.10%)</title><rect x="1104.6" y="1765" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1107.57" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::_M_erase_at_end (48,364,521 samples, 0.06%)</title><rect x="590.0" y="1909" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="592.97" y="1919.5" ></text>
</g>
<g >
<title>import_iovec (28,529,924 samples, 0.03%)</title><rect x="1018.3" y="1701" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1021.33" y="1711.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (11,942,722 samples, 0.01%)</title><rect x="481.0" y="1701" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="484.05" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (42,376,263 samples, 0.05%)</title><rect x="489.5" y="1685" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="492.49" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (8,551,593 samples, 0.01%)</title><rect x="339.5" y="1733" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="342.54" y="1743.5" ></text>
</g>
<g >
<title>pick_next_task_fair (9,393,932 samples, 0.01%)</title><rect x="1028.0" y="1749" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1031.02" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (11,704,207 samples, 0.01%)</title><rect x="376.5" y="1765" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="379.50" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (23,105,387 samples, 0.03%)</title><rect x="985.3" y="1749" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="988.26" y="1759.5" ></text>
</g>
<g >
<title>copy_iovec_from_user (13,126,569 samples, 0.02%)</title><rect x="872.0" y="1685" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="875.01" y="1695.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (20,970,080 samples, 0.03%)</title><rect x="905.4" y="1765" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="908.42" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (57,115,320 samples, 0.07%)</title><rect x="54.6" y="1717" width="0.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="57.55" y="1727.5" ></text>
</g>
<g >
<title>__napi_poll (7,249,479 samples, 0.01%)</title><rect x="857.0" y="1317" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="859.98" y="1327.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (19,704,947 samples, 0.02%)</title><rect x="1007.5" y="1221" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1010.47" y="1231.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (16,609,603 samples, 0.02%)</title><rect x="878.2" y="1573" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="881.22" y="1583.5" ></text>
</g>
<g >
<title>handle_softirqs (13,169,734 samples, 0.02%)</title><rect x="526.7" y="1685" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="529.73" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1941" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (9,276,210 samples, 0.01%)</title><rect x="768.2" y="1765" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="771.23" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="639.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1621" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1631.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (22,225,725 samples, 0.03%)</title><rect x="1136.1" y="1781" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1139.05" y="1791.5" ></text>
</g>
<g >
<title>__napi_poll (11,471,970 samples, 0.01%)</title><rect x="606.3" y="1493" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="609.26" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="245" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (39,925,094 samples, 0.05%)</title><rect x="350.6" y="1685" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="353.63" y="1695.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (20,003,897 samples, 0.02%)</title><rect x="857.8" y="1397" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="860.76" y="1407.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,919,619 samples, 0.01%)</title><rect x="565.0" y="1189" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="568.01" y="1199.5" ></text>
</g>
<g >
<title>__x64_sys_writev (1,620,126,106 samples, 1.94%)</title><rect x="849.3" y="1749" width="22.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="852.31" y="1759.5" >_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (10,418,258 samples, 0.01%)</title><rect x="1041.9" y="2053" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1044.89" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="405" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="415.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (121,866,001 samples, 0.15%)</title><rect x="991.9" y="1781" width="1.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="994.92" y="1791.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (7,774,278 samples, 0.01%)</title><rect x="584.1" y="1749" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="587.06" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (103,389,564 samples, 0.12%)</title><rect x="990.5" y="1765" width="1.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="993.46" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1269" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1279.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (26,326,206 samples, 0.03%)</title><rect x="1051.0" y="1781" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1054.03" y="1791.5" ></text>
</g>
<g >
<title>handle_softirqs (21,127,548 samples, 0.03%)</title><rect x="387.3" y="1557" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="390.34" y="1567.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (150,721,896 samples, 0.18%)</title><rect x="856.1" y="1461" width="2.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="859.14" y="1471.5" ></text>
</g>
<g >
<title>copy_iovec_from_user (18,934,821 samples, 0.02%)</title><rect x="1167.4" y="1685" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1170.38" y="1695.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (109,901,924 samples, 0.13%)</title><rect x="1056.0" y="1685" width="1.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1058.96" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (7,871,799 samples, 0.01%)</title><rect x="45.2" y="1605" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="48.22" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (6,040,582,678 samples, 7.25%)</title><rect x="601.0" y="1877" width="85.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="603.98" y="1887.5" >std::_Func..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (8,247,930 samples, 0.01%)</title><rect x="1058.0" y="1701" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1061.04" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (57,417,525 samples, 0.07%)</title><rect x="407.2" y="1749" width="0.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="410.19" y="1759.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (82,790,372 samples, 0.10%)</title><rect x="721.4" y="1557" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="724.36" y="1567.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (8,173,927 samples, 0.01%)</title><rect x="28.4" y="1749" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="31.40" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (43,851,998 samples, 0.05%)</title><rect x="941.2" y="1717" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="944.15" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1157" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1167.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (9,621,800 samples, 0.01%)</title><rect x="877.9" y="1557" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="880.91" y="1567.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, 0ul&gt; (12,328,765 samples, 0.01%)</title><rect x="910.5" y="1637" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="913.45" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (12,753,042 samples, 0.02%)</title><rect x="971.5" y="1621" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="974.51" y="1631.5" ></text>
</g>
<g >
<title>sock_recvmsg (297,451,878 samples, 0.36%)</title><rect x="530.9" y="1685" width="4.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="533.86" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (46,173,313 samples, 0.06%)</title><rect x="321.6" y="1717" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="324.59" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="693" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (101,055,988 samples, 0.12%)</title><rect x="295.7" y="1861" width="1.5" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="298.74" y="1871.5" ></text>
</g>
<g >
<title>__do_softirq (16,518,285 samples, 0.02%)</title><rect x="89.8" y="1573" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="92.76" y="1583.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (15,755,331 samples, 0.02%)</title><rect x="950.6" y="1541" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="953.62" y="1551.5" ></text>
</g>
<g >
<title>__napi_poll (8,428,225 samples, 0.01%)</title><rect x="974.1" y="1445" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="977.10" y="1455.5" ></text>
</g>
<g >
<title>netvsc_poll (8,635,533 samples, 0.01%)</title><rect x="181.6" y="1557" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="184.59" y="1567.5" ></text>
</g>
<g >
<title>clear_bhb_loop (21,195,160 samples, 0.03%)</title><rect x="396.6" y="1653" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="399.59" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (388,394,824 samples, 0.47%)</title><rect x="161.8" y="1717" width="5.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="164.79" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (9,533,057 samples, 0.01%)</title><rect x="1075.1" y="1701" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1078.07" y="1711.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (35,241,062 samples, 0.04%)</title><rect x="797.0" y="1765" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="800.03" y="1775.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (40,476,375 samples, 0.05%)</title><rect x="941.8" y="1765" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="944.80" y="1775.5" ></text>
</g>
<g >
<title>HttpRouter::Route (1,311,060,291 samples, 1.57%)</title><rect x="793.8" y="1781" width="18.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="796.85" y="1791.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (26,505,495 samples, 0.03%)</title><rect x="60.5" y="1701" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="63.47" y="1711.5" ></text>
</g>
<g >
<title>clear_bhb_loop (12,853,270 samples, 0.02%)</title><rect x="162.8" y="1653" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="165.82" y="1663.5" ></text>
</g>
<g >
<title>do_epoll_wait (500,591,251 samples, 0.60%)</title><rect x="1021.4" y="1829" width="7.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1024.40" y="1839.5" ></text>
</g>
<g >
<title>handle_softirqs (8,457,169 samples, 0.01%)</title><rect x="784.4" y="1637" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="787.42" y="1647.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (52,644,048 samples, 0.06%)</title><rect x="238.3" y="1589" width="0.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="241.31" y="1599.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, char*, char*&gt; (8,576,389 samples, 0.01%)</title><rect x="498.2" y="1637" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="501.17" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (23,053,692 samples, 0.03%)</title><rect x="103.0" y="1765" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="106.04" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (22,933,215 samples, 0.03%)</title><rect x="210.1" y="1637" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="213.13" y="1647.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (8,194,633 samples, 0.01%)</title><rect x="129.0" y="1381" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="131.97" y="1391.5" ></text>
</g>
<g >
<title>nft_do_chain_ipv4 (62,046,237 samples, 0.07%)</title><rect x="562.9" y="1461" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="565.90" y="1471.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,846,957 samples, 0.01%)</title><rect x="964.3" y="1621" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="967.30" y="1631.5" ></text>
</g>
<g >
<title>_int_free (35,564,087 samples, 0.04%)</title><rect x="743.3" y="2037" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="746.35" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (24,132,818 samples, 0.03%)</title><rect x="19.1" y="1749" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="22.15" y="1759.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (9,788,060 samples, 0.01%)</title><rect x="963.1" y="1749" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="966.10" y="1759.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (158,853,029 samples, 0.19%)</title><rect x="716.4" y="1397" width="2.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="719.39" y="1407.5" ></text>
</g>
<g >
<title>__strlen_avx2 (10,950,749 samples, 0.01%)</title><rect x="888.7" y="2037" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="891.67" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (8,926,023 samples, 0.01%)</title><rect x="371.3" y="1765" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="374.26" y="1775.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,846,957 samples, 0.01%)</title><rect x="964.3" y="1605" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="967.30" y="1615.5" ></text>
</g>
<g >
<title>__seccomp_filter (8,525,203 samples, 0.01%)</title><rect x="834.9" y="1589" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="837.94" y="1599.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (10,772,622 samples, 0.01%)</title><rect x="491.7" y="1781" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="494.75" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (16,916,044 samples, 0.02%)</title><rect x="1024.1" y="1573" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1027.13" y="1583.5" ></text>
</g>
<g >
<title>operator delete (11,099,800 samples, 0.01%)</title><rect x="1103.9" y="1765" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1106.92" y="1775.5" ></text>
</g>
<g >
<title>malloc (112,189,664 samples, 0.13%)</title><rect x="1039.3" y="2053" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1042.27" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="245" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="255.5" ></text>
</g>
<g >
<title>sock_poll (14,455,337 samples, 0.02%)</title><rect x="901.9" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="904.94" y="1583.5" ></text>
</g>
<g >
<title>netvsc_poll (9,488,162 samples, 0.01%)</title><rect x="626.0" y="1557" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="628.98" y="1567.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (9,462,643,912 samples, 11.35%)</title><rect x="456.8" y="2005" width="134.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="459.84" y="2015.5" >std::thread::_In..</text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1925" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (16,657,906 samples, 0.02%)</title><rect x="141.5" y="1637" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="144.52" y="1647.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (8,869,780 samples, 0.01%)</title><rect x="444.8" y="1909" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="447.79" y="1919.5" ></text>
</g>
<g >
<title>memset_orig (87,081,979 samples, 0.10%)</title><rect x="64.7" y="1621" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="67.71" y="1631.5" ></text>
</g>
<g >
<title>__fget_light (41,315,861 samples, 0.05%)</title><rect x="261.4" y="1701" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="264.36" y="1711.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,844,246 samples, 0.01%)</title><rect x="523.0" y="1605" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="526.05" y="1615.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (9,987,431 samples, 0.01%)</title><rect x="815.0" y="1781" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="818.00" y="1791.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (8,882,179 samples, 0.01%)</title><rect x="1133.7" y="1701" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1136.71" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (6,011,536,845 samples, 7.21%)</title><rect x="11.7" y="1861" width="85.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="14.70" y="1871.5" >std::__inv..</text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (184,256,564 samples, 0.22%)</title><rect x="646.2" y="1765" width="2.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="649.24" y="1775.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (20,554,537 samples, 0.02%)</title><rect x="1034.0" y="53" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1037.02" y="63.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (294,120,736 samples, 0.35%)</title><rect x="13.5" y="1669" width="4.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.49" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="133" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="143.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="837" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="847.5" ></text>
</g>
<g >
<title>__siphash_unaligned (7,107,434 samples, 0.01%)</title><rect x="857.1" y="1429" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="860.08" y="1439.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (7,875,441 samples, 0.01%)</title><rect x="1026.8" y="1781" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1029.77" y="1791.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (2,897,735,727 samples, 3.48%)</title><rect x="686.9" y="1829" width="41.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="689.87" y="1839.5" >Htt..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (8,884,014 samples, 0.01%)</title><rect x="760.0" y="1749" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="762.98" y="1759.5" ></text>
</g>
<g >
<title>vfs_statx (201,642,873 samples, 0.24%)</title><rect x="510.1" y="1653" width="2.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="513.13" y="1663.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (11,628,825 samples, 0.01%)</title><rect x="905.0" y="1717" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="908.01" y="1727.5" ></text>
</g>
<g >
<title>std::function&lt;void  (331,466,503 samples, 0.40%)</title><rect x="833.4" y="1765" width="4.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="836.41" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (11,695,179 samples, 0.01%)</title><rect x="261.0" y="1669" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="263.97" y="1679.5" ></text>
</g>
<g >
<title>tcp_data_ready (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1413" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="295.80" y="1423.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (29,008,260 samples, 0.03%)</title><rect x="734.5" y="1749" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="737.53" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (9,814,191 samples, 0.01%)</title><rect x="227.0" y="1781" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="230.02" y="1791.5" ></text>
</g>
<g >
<title>selinux_parse_skb.constprop.0 (11,111,953 samples, 0.01%)</title><rect x="129.6" y="1429" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="132.56" y="1439.5" ></text>
</g>
<g >
<title>Channel::OnWrite (2,903,242,494 samples, 3.48%)</title><rect x="394.7" y="1909" width="41.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="397.67" y="1919.5" >Cha..</text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (8,046,277 samples, 0.01%)</title><rect x="163.3" y="1621" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="166.30" y="1631.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (11,189,761 samples, 0.01%)</title><rect x="355.6" y="1637" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="358.55" y="1647.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (8,175,998 samples, 0.01%)</title><rect x="1050.7" y="1621" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1053.69" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1717" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (16,668,329 samples, 0.02%)</title><rect x="901.7" y="1525" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="904.68" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="949" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="959.5" ></text>
</g>
<g >
<title>std::make_move_iterator&lt;char*&gt; (8,660,597 samples, 0.01%)</title><rect x="644.7" y="1701" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="647.73" y="1711.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (33,671,069 samples, 0.04%)</title><rect x="187.4" y="1749" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="190.44" y="1759.5" ></text>
</g>
<g >
<title>std::function&lt;void  (367,225,559 samples, 0.44%)</title><rect x="1127.7" y="1765" width="5.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1130.72" y="1775.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7,984,449 samples, 0.01%)</title><rect x="402.4" y="1749" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="405.37" y="1759.5" ></text>
</g>
<g >
<title>irq_exit_rcu (12,994,125 samples, 0.02%)</title><rect x="606.3" y="1557" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="609.26" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="229" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (80,618,591 samples, 0.10%)</title><rect x="1075.9" y="1701" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1078.90" y="1711.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (842,649,054 samples, 1.01%)</title><rect x="854.5" y="1557" width="12.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="857.54" y="1567.5" ></text>
</g>
<g >
<title>__napi_poll (8,033,129 samples, 0.01%)</title><rect x="1173.7" y="1701" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1176.72" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (7,115,298 samples, 0.01%)</title><rect x="851.8" y="1605" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="854.77" y="1615.5" ></text>
</g>
<g >
<title>std::function&lt;void  (8,010,118 samples, 0.01%)</title><rect x="759.5" y="1781" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="762.52" y="1791.5" ></text>
</g>
<g >
<title>__fget_light (29,629,579 samples, 0.04%)</title><rect x="996.6" y="1701" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="999.63" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (10,946,026 samples, 0.01%)</title><rect x="375.9" y="1781" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="378.91" y="1791.5" ></text>
</g>
<g >
<title>read (964,559,459 samples, 1.16%)</title><rect x="1112.8" y="1813" width="13.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1115.82" y="1823.5" ></text>
</g>
<g >
<title>napi_complete_done (16,509,995 samples, 0.02%)</title><rect x="503.3" y="1621" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="506.29" y="1631.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (10,976,852 samples, 0.01%)</title><rect x="407.5" y="1685" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="410.50" y="1695.5" ></text>
</g>
<g >
<title>nf_hook_slow (8,427,965 samples, 0.01%)</title><rect x="1012.8" y="1493" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1015.82" y="1503.5" ></text>
</g>
<g >
<title>std::mutex::lock (8,896,200 samples, 0.01%)</title><rect x="1031.9" y="1893" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1034.95" y="1903.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,046,277 samples, 0.01%)</title><rect x="163.3" y="1605" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="166.30" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2,831,990,746 samples, 3.40%)</title><rect x="537.4" y="1877" width="40.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="540.38" y="1887.5" >std..</text>
</g>
<g >
<title>entry_SYSCALL_64 (7,421,527 samples, 0.01%)</title><rect x="411.2" y="1797" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="414.17" y="1807.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (26,511,501 samples, 0.03%)</title><rect x="1175.8" y="1685" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1178.77" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (10,619,096 samples, 0.01%)</title><rect x="247.5" y="1589" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="250.52" y="1599.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (33,466,794 samples, 0.04%)</title><rect x="938.3" y="1717" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="941.31" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt;::operator (11,001,013 samples, 0.01%)</title><rect x="191.3" y="1717" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="194.33" y="1727.5" ></text>
</g>
<g >
<title>x64_sys_call (217,523,159 samples, 0.26%)</title><rect x="460.9" y="1637" width="3.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="463.95" y="1647.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (9,043,579 samples, 0.01%)</title><rect x="141.6" y="1509" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="144.61" y="1519.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (16,578,533 samples, 0.02%)</title><rect x="78.2" y="1781" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="81.16" y="1791.5" ></text>
</g>
<g >
<title>handle_dots (20,587,532 samples, 0.02%)</title><rect x="951.2" y="1573" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="954.20" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (20,317,784 samples, 0.02%)</title><rect x="1090.8" y="1589" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1093.77" y="1599.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (5,874,840,499 samples, 7.05%)</title><rect x="1043.5" y="1845" width="83.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1046.48" y="1855.5" >std::__in..</text>
</g>
<g >
<title>Channel::OnEvents (8,950,889,235 samples, 10.74%)</title><rect x="309.2" y="1925" width="126.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="312.21" y="1935.5" >Channel::OnEvents</text>
</g>
<g >
<title>epoll_wait (509,268,595 samples, 0.61%)</title><rect x="874.6" y="1909" width="7.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="877.57" y="1919.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1637" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="469.26" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7,589,194 samples, 0.01%)</title><rect x="89.8" y="1349" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="92.83" y="1359.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (14,117,763 samples, 0.02%)</title><rect x="139.0" y="1813" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="142.00" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,064,045 samples, 0.01%)</title><rect x="606.3" y="1365" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="609.26" y="1375.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (54,537,770 samples, 0.07%)</title><rect x="682.8" y="1669" width="0.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="685.85" y="1679.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1141" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="928.84" y="1151.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (40,424,488 samples, 0.05%)</title><rect x="211.8" y="1621" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="214.76" y="1631.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (9,022,322 samples, 0.01%)</title><rect x="584.4" y="1541" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="587.45" y="1551.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,734,143 samples, 0.01%)</title><rect x="848.9" y="1605" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="851.89" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="725" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="735.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9,241,773 samples, 0.01%)</title><rect x="672.4" y="1557" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="675.41" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver (13,121,803 samples, 0.02%)</title><rect x="731.9" y="1541" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="734.94" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="613" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="623.5" ></text>
</g>
<g >
<title>__alloc_skb (85,944,659 samples, 0.10%)</title><rect x="431.4" y="1589" width="1.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="434.35" y="1599.5" ></text>
</g>
<g >
<title>napi_complete_done (9,025,962 samples, 0.01%)</title><rect x="382.7" y="1621" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="385.71" y="1631.5" ></text>
</g>
<g >
<title>handle_softirqs (10,674,439 samples, 0.01%)</title><rect x="626.0" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="628.98" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (9,137,745 samples, 0.01%)</title><rect x="777.9" y="1589" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="780.94" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (7,238,679 samples, 0.01%)</title><rect x="1152.1" y="1141" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1155.05" y="1151.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (16,919,817 samples, 0.02%)</title><rect x="693.0" y="1669" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="696.02" y="1679.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (9,129,679 samples, 0.01%)</title><rect x="678.8" y="1605" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="681.79" y="1615.5" ></text>
</g>
<g >
<title>__GI___pthread_self (7,736,849 samples, 0.01%)</title><rect x="244.3" y="1749" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="247.32" y="1759.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (10,538,567 samples, 0.01%)</title><rect x="116.0" y="1589" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="119.02" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end (23,125,672 samples, 0.03%)</title><rect x="224.0" y="1781" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="227.00" y="1791.5" ></text>
</g>
<g >
<title>std::function&lt;void  (368,390,923 samples, 0.44%)</title><rect x="244.5" y="1765" width="5.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="247.53" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (12,191,963 samples, 0.01%)</title><rect x="843.2" y="1765" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="846.21" y="1775.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,776,215 samples, 0.01%)</title><rect x="34.5" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="37.54" y="1679.5" ></text>
</g>
<g >
<title>irq_exit_rcu (19,006,063 samples, 0.02%)</title><rect x="966.4" y="1717" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="969.44" y="1727.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (317,349,307 samples, 0.38%)</title><rect x="538.6" y="1701" width="4.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="541.61" y="1711.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,635,533 samples, 0.01%)</title><rect x="181.6" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="184.59" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,385,464 samples, 0.01%)</title><rect x="1121.0" y="1461" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1124.00" y="1471.5" ></text>
</g>
<g >
<title>__fget_light (11,381,028 samples, 0.01%)</title><rect x="982.4" y="1573" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="985.40" y="1583.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,733,348 samples, 0.01%)</title><rect x="655.1" y="1605" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="658.08" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (15,723,506 samples, 0.02%)</title><rect x="448.9" y="117" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.89" y="127.5" ></text>
</g>
<g >
<title>rndis_filter_receive (7,076,822 samples, 0.01%)</title><rect x="1012.0" y="1333" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1015.00" y="1343.5" ></text>
</g>
<g >
<title>ip_list_rcv (11,946,319 samples, 0.01%)</title><rect x="873.6" y="1733" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="876.64" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (36,656,872 samples, 0.04%)</title><rect x="434.3" y="1797" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="437.30" y="1807.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,330,791 samples, 0.01%)</title><rect x="478.3" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="481.26" y="1663.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (15,796,578 samples, 0.02%)</title><rect x="501.3" y="1653" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="504.26" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1925" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1935.5" ></text>
</g>
<g >
<title>__napi_poll (8,105,077 samples, 0.01%)</title><rect x="539.7" y="1525" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="542.70" y="1535.5" ></text>
</g>
<g >
<title>hv_ringbuffer_write (10,162,208 samples, 0.01%)</title><rect x="273.4" y="1285" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="276.40" y="1295.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char*, char*, char&gt; (35,462,790 samples, 0.04%)</title><rect x="227.6" y="1749" width="0.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="230.58" y="1759.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (23,859,062 samples, 0.03%)</title><rect x="1144.2" y="1765" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1147.24" y="1775.5" ></text>
</g>
<g >
<title>rep_movs_alternative (21,259,540 samples, 0.03%)</title><rect x="533.3" y="1557" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="536.34" y="1567.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (11,315,934 samples, 0.01%)</title><rect x="999.8" y="1317" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1002.78" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (16,860,214 samples, 0.02%)</title><rect x="110.6" y="1669" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="113.63" y="1679.5" ></text>
</g>
<g >
<title>avc_lookup (13,241,933 samples, 0.02%)</title><rect x="658.1" y="1525" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="661.13" y="1535.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (735,037,649 samples, 0.88%)</title><rect x="559.6" y="1525" width="10.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="562.62" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7,461,868 samples, 0.01%)</title><rect x="672.4" y="1509" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="675.43" y="1519.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (157,323,795 samples, 0.19%)</title><rect x="566.5" y="1381" width="2.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="569.53" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (56,328,041 samples, 0.07%)</title><rect x="764.2" y="1669" width="0.8" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="767.17" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (23,552,626 samples, 0.03%)</title><rect x="22.1" y="1733" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="25.09" y="1743.5" ></text>
</g>
<g >
<title>std::operator!=&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (13,390,845 samples, 0.02%)</title><rect x="1059.3" y="1749" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1062.29" y="1759.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,398,550 samples, 0.01%)</title><rect x="265.4" y="1573" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="268.37" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1701" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (30,147,107 samples, 0.04%)</title><rect x="19.6" y="1749" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="22.57" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1941" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1951.5" ></text>
</g>
<g >
<title>netvsc_poll (8,412,072 samples, 0.01%)</title><rect x="1077.1" y="1589" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1080.13" y="1599.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,735,606 samples, 0.01%)</title><rect x="296.3" y="1797" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="299.31" y="1807.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (60,732,407 samples, 0.07%)</title><rect x="1007.3" y="1413" width="0.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1010.30" y="1423.5" ></text>
</g>
<g >
<title>napi_complete_done (10,636,759 samples, 0.01%)</title><rect x="800.4" y="1573" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="803.44" y="1583.5" ></text>
</g>
<g >
<title>__secure_computing (18,451,687 samples, 0.02%)</title><rect x="526.9" y="1733" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="529.94" y="1743.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, char*&gt; (42,555,459 samples, 0.05%)</title><rect x="378.4" y="1685" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="381.42" y="1695.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (13,331,784 samples, 0.02%)</title><rect x="844.8" y="1701" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="847.82" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,066,616 samples, 0.01%)</title><rect x="442.9" y="1573" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="445.95" y="1583.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (43,851,998 samples, 0.05%)</title><rect x="941.2" y="1749" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="944.15" y="1759.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (32,787,058 samples, 0.04%)</title><rect x="891.8" y="2053" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="894.82" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1093" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1103.5" ></text>
</g>
<g >
<title>ip_local_deliver (12,322,232 samples, 0.01%)</title><rect x="231.7" y="1525" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="234.71" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1205" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1215.5" ></text>
</g>
<g >
<title>selinux_socket_recvmsg (21,968,874 samples, 0.03%)</title><rect x="683.6" y="1669" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="686.62" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (16,395,186 samples, 0.02%)</title><rect x="335.7" y="1765" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="338.69" y="1775.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,831,151 samples, 0.02%)</title><rect x="183.1" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="186.15" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (333,661,934 samples, 0.40%)</title><rect x="469.1" y="1733" width="4.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="472.11" y="1743.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (451,368,974 samples, 0.54%)</title><rect x="752.2" y="1781" width="6.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="755.19" y="1791.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (8,222,741 samples, 0.01%)</title><rect x="996.3" y="1749" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="999.27" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (13,999,372 samples, 0.02%)</title><rect x="260.0" y="1797" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="262.99" y="1807.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (56,789,908 samples, 0.07%)</title><rect x="53.7" y="1701" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="56.75" y="1711.5" ></text>
</g>
<g >
<title>napi_complete_done (13,323,911 samples, 0.02%)</title><rect x="901.7" y="1461" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="904.68" y="1471.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (27,740,667 samples, 0.03%)</title><rect x="290.2" y="1797" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="293.20" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (184,210,057 samples, 0.22%)</title><rect x="336.1" y="1765" width="2.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="339.09" y="1775.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (4,097,564,970 samples, 4.92%)</title><rect x="168.5" y="1797" width="58.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="171.54" y="1807.5" >HttpCo..</text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="773" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="783.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1893" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1903.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (35,056,777 samples, 0.04%)</title><rect x="316.2" y="1669" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="319.21" y="1679.5" ></text>
</g>
<g >
<title>HttpConn::Close (12,950,863 samples, 0.02%)</title><rect x="318.3" y="1797" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="321.30" y="1807.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (385,234,849 samples, 0.46%)</title><rect x="244.3" y="1781" width="5.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="247.32" y="1791.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (14,484,147 samples, 0.02%)</title><rect x="586.3" y="1909" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="589.29" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (9,526,479 samples, 0.01%)</title><rect x="1049.9" y="1701" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1052.94" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (7,733,348 samples, 0.01%)</title><rect x="655.1" y="1525" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="658.08" y="1535.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (166,687,299 samples, 0.20%)</title><rect x="470.0" y="1717" width="2.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="472.99" y="1727.5" ></text>
</g>
<g >
<title>napi_complete_done (10,516,382 samples, 0.01%)</title><rect x="847.9" y="1669" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="850.90" y="1679.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (10,509,260 samples, 0.01%)</title><rect x="559.4" y="1541" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="562.43" y="1551.5" ></text>
</g>
<g >
<title>do_writev (1,528,379,595 samples, 1.83%)</title><rect x="554.3" y="1733" width="21.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="557.32" y="1743.5" >d..</text>
</g>
<g >
<title>sysvec_hyperv_callback (7,342,622 samples, 0.01%)</title><rect x="855.1" y="1525" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="858.11" y="1535.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (47,450,042 samples, 0.06%)</title><rect x="239.9" y="1669" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="242.94" y="1679.5" ></text>
</g>
<g >
<title>selinux_inode_permission (9,439,955 samples, 0.01%)</title><rect x="69.5" y="1573" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="72.52" y="1583.5" ></text>
</g>
<g >
<title>netvsc_poll (9,836,229 samples, 0.01%)</title><rect x="84.9" y="1637" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="87.92" y="1647.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (4,596,000,473 samples, 5.52%)</title><rect x="458.9" y="1813" width="65.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="461.86" y="1823.5" >HttpCon..</text>
</g>
<g >
<title>__irq_exit_rcu (46,022,699 samples, 0.06%)</title><rect x="731.7" y="1749" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="734.68" y="1759.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (82,412,028 samples, 0.10%)</title><rect x="1121.4" y="1605" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1124.39" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (35,276,825 samples, 0.04%)</title><rect x="171.0" y="1733" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="174.04" y="1743.5" ></text>
</g>
<g >
<title>strncpy_from_user (85,115,325 samples, 0.10%)</title><rect x="66.0" y="1621" width="1.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="68.96" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_established (11,298,007 samples, 0.01%)</title><rect x="1024.5" y="1461" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1027.52" y="1471.5" ></text>
</g>
<g >
<title>nf_confirm (9,826,855 samples, 0.01%)</title><rect x="719.2" y="1461" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="722.21" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="229" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="239.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1781" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1791.5" ></text>
</g>
<g >
<title>irq_exit_rcu (46,022,699 samples, 0.06%)</title><rect x="731.7" y="1765" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="734.68" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (17,251,720 samples, 0.02%)</title><rect x="770.9" y="1685" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="773.88" y="1695.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (14,435,564 samples, 0.02%)</title><rect x="14.0" y="1573" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="17.03" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (663,767,522 samples, 0.80%)</title><rect x="820.5" y="1781" width="9.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="823.53" y="1791.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,656,876 samples, 0.01%)</title><rect x="772.4" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="775.38" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="181" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="191.5" ></text>
</g>
<g >
<title>selinux_inode_permission (47,090,225 samples, 0.06%)</title><rect x="1099.4" y="1557" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1102.38" y="1567.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (37,453,203 samples, 0.04%)</title><rect x="1156.6" y="1413" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1159.64" y="1423.5" ></text>
</g>
<g >
<title>__secure_computing (13,008,655 samples, 0.02%)</title><rect x="821.0" y="1733" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="823.97" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,170,394 samples, 0.01%)</title><rect x="985.7" y="1749" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="988.68" y="1759.5" ></text>
</g>
<g >
<title>__seccomp_filter (8,228,774 samples, 0.01%)</title><rect x="210.5" y="1669" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="213.54" y="1679.5" ></text>
</g>
<g >
<title>netvsc_poll (7,354,031 samples, 0.01%)</title><rect x="748.0" y="1925" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="751.02" y="1935.5" ></text>
</g>
<g >
<title>selinux_ip_postroute (7,273,846 samples, 0.01%)</title><rect x="427.9" y="1477" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="430.92" y="1487.5" ></text>
</g>
<g >
<title>std::mutex::lock (7,938,996 samples, 0.01%)</title><rect x="297.8" y="1893" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="300.79" y="1903.5" ></text>
</g>
<g >
<title>netvsc_poll (17,413,949 samples, 0.02%)</title><rect x="966.4" y="1637" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="969.44" y="1647.5" ></text>
</g>
<g >
<title>read (986,577,585 samples, 1.18%)</title><rect x="380.3" y="1813" width="14.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="383.35" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="661" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="671.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1781" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1791.5" ></text>
</g>
<g >
<title>operator new (8,631,569 samples, 0.01%)</title><rect x="471.0" y="1669" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="474.04" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (80,826,753 samples, 0.10%)</title><rect x="108.6" y="1765" width="1.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="111.59" y="1775.5" ></text>
</g>
<g >
<title>__x64_sys_writev (1,661,968,995 samples, 1.99%)</title><rect x="261.3" y="1749" width="23.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="264.29" y="1759.5" >_..</text>
</g>
<g >
<title>netvsc_poll (20,249,162 samples, 0.02%)</title><rect x="877.8" y="1685" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="880.79" y="1695.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char*, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (8,176,517 samples, 0.01%)</title><rect x="81.6" y="1733" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="84.56" y="1743.5" ></text>
</g>
<g >
<title>operator new (9,809,868 samples, 0.01%)</title><rect x="1188.7" y="2053" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1191.69" y="2063.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (271,754,515 samples, 0.33%)</title><rect x="42.5" y="1733" width="3.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="45.52" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="869" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="879.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, char*, char*&gt; (15,408,104 samples, 0.02%)</title><rect x="791.9" y="1637" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="794.94" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (8,925,385 samples, 0.01%)</title><rect x="1066.2" y="1541" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1069.17" y="1551.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (9,656,570 samples, 0.01%)</title><rect x="421.3" y="1221" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="424.27" y="1231.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (58,468,700 samples, 0.07%)</title><rect x="1125.6" y="1797" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1128.65" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (7,076,822 samples, 0.01%)</title><rect x="1012.0" y="1381" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1015.00" y="1391.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (84,813,712 samples, 0.10%)</title><rect x="146.8" y="1861" width="1.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="149.78" y="1871.5" ></text>
</g>
<g >
<title>netvsc_send (10,477,897 samples, 0.01%)</title><rect x="1008.2" y="1333" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1011.20" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1301" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1311.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (18,226,313 samples, 0.02%)</title><rect x="217.3" y="1557" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="220.29" y="1567.5" ></text>
</g>
<g >
<title>sock_def_readable (7,896,714 samples, 0.01%)</title><rect x="144.3" y="1381" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="147.31" y="1391.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (5,903,467,816 samples, 7.08%)</title><rect x="159.9" y="1877" width="83.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="162.86" y="1887.5" >std::_Fun..</text>
</g>
<g >
<title>__sk_dst_check (12,046,709 samples, 0.01%)</title><rect x="559.9" y="1509" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="562.90" y="1519.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (15,752,415 samples, 0.02%)</title><rect x="250.3" y="1733" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="253.25" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (10,107,971 samples, 0.01%)</title><rect x="69.2" y="1461" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="72.22" y="1471.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (30,974,541 samples, 0.04%)</title><rect x="1029.3" y="1893" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1032.26" y="1903.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (9,662,509,531 samples, 11.59%)</title><rect x="749.9" y="1957" width="136.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="752.91" y="1967.5" >EventLoopThread::..</text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (22,933,215 samples, 0.03%)</title><rect x="210.1" y="1701" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="213.13" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="773" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="783.5" ></text>
</g>
<g >
<title>___slab_alloc (11,023,983 samples, 0.01%)</title><rect x="724.6" y="1541" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="727.59" y="1551.5" ></text>
</g>
<g >
<title>__napi_poll (13,590,027 samples, 0.02%)</title><rect x="873.6" y="1813" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="876.64" y="1823.5" ></text>
</g>
<g >
<title>handle_softirqs (9,649,911 samples, 0.01%)</title><rect x="1143.2" y="1733" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1146.23" y="1743.5" ></text>
</g>
<g >
<title>do_syscall_64 (258,596,542 samples, 0.31%)</title><rect x="753.7" y="1653" width="3.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="756.74" y="1663.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (364,996,833 samples, 0.44%)</title><rect x="272.2" y="1429" width="5.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="275.17" y="1439.5" ></text>
</g>
<g >
<title>net_rx_action (9,447,309 samples, 0.01%)</title><rect x="224.2" y="1685" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="227.20" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (23,924,803 samples, 0.03%)</title><rect x="503.3" y="1637" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="506.29" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (13,768,503 samples, 0.02%)</title><rect x="482.2" y="1765" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="485.17" y="1775.5" ></text>
</g>
<g >
<title>irq_exit_rcu (14,012,890 samples, 0.02%)</title><rect x="524.7" y="1765" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="527.70" y="1775.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,491,874 samples, 0.02%)</title><rect x="208.2" y="1749" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="211.17" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (20,888,398 samples, 0.03%)</title><rect x="811.2" y="1749" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="814.21" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (18,189,963 samples, 0.02%)</title><rect x="1063.7" y="1685" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1066.68" y="1695.5" ></text>
</g>
<g >
<title>do_syscall_64 (702,906,659 samples, 0.84%)</title><rect x="382.5" y="1781" width="9.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="385.46" y="1791.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (25,758,579 samples, 0.03%)</title><rect x="1187.1" y="2053" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1190.09" y="2063.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (16,675,355 samples, 0.02%)</title><rect x="379.2" y="1717" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="382.16" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_established (12,235,863 samples, 0.01%)</title><rect x="213.2" y="1301" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="216.21" y="1311.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (16,807,709 samples, 0.02%)</title><rect x="382.7" y="1701" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="385.71" y="1711.5" ></text>
</g>
<g >
<title>avc_lookup (8,558,577 samples, 0.01%)</title><rect x="530.1" y="1589" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="533.10" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (13,560,544 samples, 0.02%)</title><rect x="1107.9" y="1781" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1110.94" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="149" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="159.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (8,175,998 samples, 0.01%)</title><rect x="1050.7" y="1701" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1053.69" y="1711.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,634,752 samples, 0.01%)</title><rect x="905.0" y="1541" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="908.03" y="1551.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (79,815,224 samples, 0.10%)</title><rect x="909.6" y="1685" width="1.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="912.61" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="469" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (108,942,426 samples, 0.13%)</title><rect x="402.5" y="1749" width="1.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="405.48" y="1759.5" ></text>
</g>
<g >
<title>tcp_data_ready (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1077" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="430.41" y="1087.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,879,824 samples, 0.01%)</title><rect x="39.0" y="1685" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="41.95" y="1695.5" ></text>
</g>
<g >
<title>Epoller::GetEventFd (12,355,287 samples, 0.01%)</title><rect x="436.2" y="1909" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="439.23" y="1919.5" ></text>
</g>
<g >
<title>_copy_from_user (10,003,995 samples, 0.01%)</title><rect x="17.4" y="1621" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="20.44" y="1631.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (9,349,514 samples, 0.01%)</title><rect x="397.4" y="1637" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="400.40" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (18,151,592 samples, 0.02%)</title><rect x="647.8" y="1701" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="650.80" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::push_back (19,923,987 samples, 0.02%)</title><rect x="1179.6" y="1909" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1182.55" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (7,130,009 samples, 0.01%)</title><rect x="838.8" y="1685" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="841.80" y="1695.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (46,408,909 samples, 0.06%)</title><rect x="643.2" y="1685" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="646.24" y="1695.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,519,736 samples, 0.01%)</title><rect x="157.4" y="2021" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="160.42" y="2031.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (17,158,153 samples, 0.02%)</title><rect x="867.6" y="1445" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="870.63" y="1455.5" ></text>
</g>
<g >
<title>netvsc_poll (9,663,935 samples, 0.01%)</title><rect x="752.9" y="1557" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="755.91" y="1567.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (24,221,201 samples, 0.03%)</title><rect x="249.9" y="1765" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="252.86" y="1775.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,656,876 samples, 0.01%)</title><rect x="772.4" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="775.38" y="1647.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (63,142,824 samples, 0.08%)</title><rect x="471.2" y="1685" width="0.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="474.16" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (37,288,782 samples, 0.04%)</title><rect x="59.0" y="1733" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="62.00" y="1743.5" ></text>
</g>
<g >
<title>selinux_socket_recvmsg (38,874,745 samples, 0.05%)</title><rect x="391.7" y="1653" width="0.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="394.70" y="1663.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,661,320 samples, 0.01%)</title><rect x="178.2" y="1749" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="181.23" y="1759.5" ></text>
</g>
<g >
<title>__napi_poll (10,231,219 samples, 0.01%)</title><rect x="538.8" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="541.77" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (7,064,650 samples, 0.01%)</title><rect x="901.7" y="1317" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="904.71" y="1327.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char*, char*, char&gt; (39,957,306 samples, 0.05%)</title><rect x="816.9" y="1749" width="0.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="819.91" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="725" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::empty (11,097,386 samples, 0.01%)</title><rect x="784.8" y="1765" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="787.81" y="1775.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (23,463,544 samples, 0.03%)</title><rect x="17.9" y="1669" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="20.95" y="1679.5" ></text>
</g>
<g >
<title>selinux_file_permission (110,975,439 samples, 0.13%)</title><rect x="87.4" y="1669" width="1.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="90.41" y="1679.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (50,999,780 samples, 0.06%)</title><rect x="219.1" y="1749" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="222.06" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (10,708,042 samples, 0.01%)</title><rect x="131.2" y="1381" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="134.16" y="1391.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,906,666 samples, 0.01%)</title><rect x="1052.5" y="1733" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1055.47" y="1743.5" ></text>
</g>
<g >
<title>HttpRouter::Route (1,270,964,158 samples, 1.53%)</title><rect x="499.9" y="1781" width="18.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="502.91" y="1791.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (15,916,135 samples, 0.02%)</title><rect x="496.1" y="1701" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="499.06" y="1711.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (205,327,077 samples, 0.25%)</title><rect x="487.4" y="1733" width="2.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="490.41" y="1743.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (9,965,320,676 samples, 11.96%)</title><rect x="158.9" y="1957" width="141.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="161.87" y="1967.5" >EventLoopThread::..</text>
</g>
<g >
<title>__memcpy (7,264,214 samples, 0.01%)</title><rect x="126.8" y="1349" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="129.76" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="981" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="991.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (58,036,108 samples, 0.07%)</title><rect x="1155.6" y="1397" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1158.56" y="1407.5" ></text>
</g>
<g >
<title>handle_softirqs (28,346,751 samples, 0.03%)</title><rect x="141.4" y="1733" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="144.40" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="421" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (15,575,158 samples, 0.02%)</title><rect x="256.7" y="1733" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="259.71" y="1743.5" ></text>
</g>
<g >
<title>epoll_ctl (310,843,439 samples, 0.37%)</title><rect x="980.0" y="1685" width="4.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="983.05" y="1695.5" ></text>
</g>
<g >
<title>do_syscall_64 (616,341,758 samples, 0.74%)</title><rect x="62.4" y="1733" width="8.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="65.39" y="1743.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (185,424,317 samples, 0.22%)</title><rect x="313.2" y="1621" width="2.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="316.18" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (508,282,666 samples, 0.61%)</title><rect x="29.7" y="1749" width="7.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="32.65" y="1759.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1605" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="747.77" y="1615.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (11,454,174 samples, 0.01%)</title><rect x="1130.6" y="1573" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1133.60" y="1583.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char*, char*&gt; (19,765,142 samples, 0.02%)</title><rect x="937.0" y="1637" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="940.03" y="1647.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (4,803,236,756 samples, 5.76%)</title><rect x="160.8" y="1813" width="68.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="163.80" y="1823.5" >HttpCon..</text>
</g>
<g >
<title>malloc (105,100,383 samples, 0.13%)</title><rect x="746.7" y="2053" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="749.69" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver (7,589,194 samples, 0.01%)</title><rect x="89.8" y="1365" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="92.83" y="1375.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (22,000,504 samples, 0.03%)</title><rect x="391.2" y="1621" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="394.16" y="1631.5" ></text>
</g>
<g >
<title>ip_list_rcv (10,574,210 samples, 0.01%)</title><rect x="1176.0" y="1525" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1178.96" y="1535.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (25,002,234 samples, 0.03%)</title><rect x="432.8" y="1653" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="435.77" y="1663.5" ></text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (9,779,055 samples, 0.01%)</title><rect x="49.9" y="1765" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="52.89" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (8,276,302 samples, 0.01%)</title><rect x="706.3" y="1541" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="709.34" y="1551.5" ></text>
</g>
<g >
<title>napi_complete_done (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1557" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="186.34" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1189" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1199.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (11,041,530 samples, 0.01%)</title><rect x="168.4" y="1621" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="171.38" y="1631.5" ></text>
</g>
<g >
<title>handle_softirqs (7,072,047 samples, 0.01%)</title><rect x="28.8" y="1701" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="31.79" y="1711.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (20,928,676 samples, 0.03%)</title><rect x="154.4" y="2053" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="157.37" y="2063.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (20,731,229 samples, 0.02%)</title><rect x="431.6" y="1541" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="434.61" y="1551.5" ></text>
</g>
<g >
<title>netvsc_poll (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1621" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="925.16" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="405" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="415.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="293" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_free (21,141,349 samples, 0.03%)</title><rect x="948.8" y="1637" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="951.75" y="1647.5" ></text>
</g>
<g >
<title>putname (29,510,471 samples, 0.04%)</title><rect x="948.6" y="1653" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="951.64" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_established (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1733" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="747.77" y="1743.5" ></text>
</g>
<g >
<title>validate_xmit_skb (15,126,399 samples, 0.02%)</title><rect x="1011.5" y="1381" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1014.51" y="1391.5" ></text>
</g>
<g >
<title>irq_exit_rcu (14,448,922 samples, 0.02%)</title><rect x="999.7" y="1573" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1002.74" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (102,763,243 samples, 0.12%)</title><rect x="736.6" y="1861" width="1.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="739.58" y="1871.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (11,876,987 samples, 0.01%)</title><rect x="1148.6" y="1605" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1151.61" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (10,982,302 samples, 0.01%)</title><rect x="405.6" y="1781" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="408.63" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::push_back (19,851,541 samples, 0.02%)</title><rect x="446.6" y="1909" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="449.62" y="1919.5" ></text>
</g>
<g >
<title>handle_softirqs (7,147,124 samples, 0.01%)</title><rect x="429.5" y="1397" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="432.49" y="1407.5" ></text>
</g>
<g >
<title>handle_softirqs (24,152,384 samples, 0.03%)</title><rect x="880.5" y="1669" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="883.53" y="1679.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (27,987,868 samples, 0.03%)</title><rect x="202.7" y="1717" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="205.66" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::push_back (12,182,055 samples, 0.01%)</title><rect x="884.5" y="1909" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="887.48" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,642,443,666 samples, 1.97%)</title><rect x="703.6" y="1781" width="23.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="706.55" y="1791.5" >d..</text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (15,274,516 samples, 0.02%)</title><rect x="430.3" y="1557" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="433.26" y="1567.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (14,365,676 samples, 0.02%)</title><rect x="674.3" y="1493" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="677.27" y="1503.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (10,863,375 samples, 0.01%)</title><rect x="89.8" y="1445" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="92.81" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="549" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="559.5" ></text>
</g>
<g >
<title>irq_exit_rcu (14,474,449 samples, 0.02%)</title><rect x="624.7" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="627.66" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="757" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="767.5" ></text>
</g>
<g >
<title>do_writev (1,660,245,499 samples, 1.99%)</title><rect x="261.3" y="1733" width="23.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="264.31" y="1743.5" >d..</text>
</g>
<g >
<title>std::_Hash_bytes (7,394,482 samples, 0.01%)</title><rect x="1089.1" y="1669" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1092.08" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (11,914,981 samples, 0.01%)</title><rect x="562.2" y="1333" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="565.25" y="1343.5" ></text>
</g>
<g >
<title>rw_verify_area (46,549,351 samples, 0.06%)</title><rect x="871.3" y="1685" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="874.25" y="1695.5" ></text>
</g>
<g >
<title>filename_lookup (244,471,533 samples, 0.29%)</title><rect x="804.4" y="1637" width="3.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="807.43" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_S_equals (10,733,626 samples, 0.01%)</title><rect x="110.4" y="1685" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="113.41" y="1695.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,050,396 samples, 0.01%)</title><rect x="583.4" y="1749" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="586.36" y="1759.5" ></text>
</g>
<g >
<title>__virt_addr_valid (27,383,291 samples, 0.03%)</title><rect x="509.0" y="1589" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="511.99" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+ (22,686,398 samples, 0.03%)</title><rect x="1060.1" y="1765" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1063.13" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (69,619,009 samples, 0.08%)</title><rect x="1088.2" y="1717" width="1.0" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1091.20" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (7,797,383 samples, 0.01%)</title><rect x="552.7" y="1525" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="555.73" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="213" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="223.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (9,430,487 samples, 0.01%)</title><rect x="326.0" y="1765" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="328.98" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1125" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1135.5" ></text>
</g>
<g >
<title>__napi_poll (11,986,312 samples, 0.01%)</title><rect x="1066.0" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1069.00" y="1583.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (15,527,649 samples, 0.02%)</title><rect x="1062.6" y="1701" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1065.64" y="1711.5" ></text>
</g>
<g >
<title>TimerManager::GetNextTick (15,000,191 samples, 0.02%)</title><rect x="138.0" y="1909" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="141.04" y="1919.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,714,784 samples, 0.01%)</title><rect x="571.6" y="1413" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="574.57" y="1423.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (8,800,250 samples, 0.01%)</title><rect x="1049.3" y="1653" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1052.30" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1397" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1407.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1589" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="782.08" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1125" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="533" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="543.5" ></text>
</g>
<g >
<title>HttpResponse::Clear (8,251,292 samples, 0.01%)</title><rect x="105.8" y="1781" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="108.85" y="1791.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,400,420 samples, 0.01%)</title><rect x="731.5" y="1765" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="734.52" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (8,852,089 samples, 0.01%)</title><rect x="693.5" y="1749" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="696.54" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (80,709,510 samples, 0.10%)</title><rect x="495.5" y="1733" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="498.46" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_v (10,379,380 samples, 0.01%)</title><rect x="356.3" y="1653" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="359.26" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7,797,383 samples, 0.01%)</title><rect x="552.7" y="1557" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="555.73" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (273,485,406 samples, 0.33%)</title><rect x="162.3" y="1669" width="3.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="165.31" y="1679.5" ></text>
</g>
<g >
<title>do_syscall_64 (719,715,953 samples, 0.86%)</title><rect x="674.0" y="1781" width="10.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="676.99" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="629" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="639.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1509" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1519.5" ></text>
</g>
<g >
<title>handle_softirqs (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1685" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="295.80" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (41,948,021 samples, 0.05%)</title><rect x="1027.4" y="1621" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1030.38" y="1631.5" ></text>
</g>
<g >
<title>handle_softirqs (16,784,169 samples, 0.02%)</title><rect x="410.9" y="1733" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="413.91" y="1743.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (15,553,323 samples, 0.02%)</title><rect x="13.2" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="16.22" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (17,380,902 samples, 0.02%)</title><rect x="647.6" y="1669" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="650.55" y="1679.5" ></text>
</g>
<g >
<title>operator delete (7,306,189 samples, 0.01%)</title><rect x="545.5" y="1669" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="548.52" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_lock (14,260,146 samples, 0.02%)</title><rect x="429.2" y="1477" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="432.20" y="1487.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (30,812,234 samples, 0.04%)</title><rect x="826.3" y="1621" width="0.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="829.26" y="1631.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1669" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="186.34" y="1679.5" ></text>
</g>
<g >
<title>clear_bhb_loop (9,242,077 samples, 0.01%)</title><rect x="553.5" y="1781" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="556.52" y="1791.5" ></text>
</g>
<g >
<title>handle_softirqs (8,046,277 samples, 0.01%)</title><rect x="163.3" y="1557" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="166.30" y="1567.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (18,941,124 samples, 0.02%)</title><rect x="1155.8" y="1173" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1158.78" y="1183.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (11,791,364 samples, 0.01%)</title><rect x="228.5" y="1749" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="231.47" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (7,401,675 samples, 0.01%)</title><rect x="146.3" y="1893" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="149.28" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (9,889,416 samples, 0.01%)</title><rect x="1142.2" y="1749" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.22" y="1759.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (9,802,517 samples, 0.01%)</title><rect x="572.1" y="1557" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="575.15" y="1567.5" ></text>
</g>
<g >
<title>__GI___pthread_self (7,201,834 samples, 0.01%)</title><rect x="602.2" y="1749" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="605.18" y="1759.5" ></text>
</g>
<g >
<title>selinux_parse_skb.constprop.0 (12,033,483 samples, 0.01%)</title><rect x="719.6" y="1429" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="722.60" y="1439.5" ></text>
</g>
<g >
<title>tcp_tso_segs (8,230,535 samples, 0.01%)</title><rect x="430.5" y="1557" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="433.47" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1973" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="517" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (729,598,501 samples, 0.88%)</title><rect x="966.0" y="1781" width="10.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="969.02" y="1791.5" ></text>
</g>
<g >
<title>napi_complete_done (8,419,001 samples, 0.01%)</title><rect x="307.1" y="1909" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="310.08" y="1919.5" ></text>
</g>
<g >
<title>__wake_up_sync (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1317" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="925.16" y="1327.5" ></text>
</g>
<g >
<title>tcp_release_cb (10,135,170 samples, 0.01%)</title><rect x="391.5" y="1637" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="394.48" y="1647.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (29,920,843 samples, 0.04%)</title><rect x="645.0" y="1717" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="648.05" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (48,115,817 samples, 0.06%)</title><rect x="324.3" y="1717" width="0.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="327.31" y="1727.5" ></text>
</g>
<g >
<title>__napi_poll (37,785,597 samples, 0.05%)</title><rect x="731.7" y="1701" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="734.73" y="1711.5" ></text>
</g>
<g >
<title>clear_bhb_loop (14,875,829 samples, 0.02%)</title><rect x="820.3" y="1781" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="823.31" y="1791.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (16,629,460 samples, 0.02%)</title><rect x="814.8" y="1781" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="817.77" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (9,070,310 samples, 0.01%)</title><rect x="1175.6" y="1573" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1178.57" y="1583.5" ></text>
</g>
<g >
<title>handle_softirqs (10,619,096 samples, 0.01%)</title><rect x="247.5" y="1525" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="250.52" y="1535.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,030,291 samples, 0.01%)</title><rect x="246.0" y="1621" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="248.98" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="437" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="447.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (330,530,837 samples, 0.40%)</title><rect x="321.1" y="1749" width="4.7" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="324.11" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (8,961,558 samples, 0.01%)</title><rect x="1140.9" y="1621" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1143.88" y="1631.5" ></text>
</g>
<g >
<title>sock_write_iter (1,407,201,242 samples, 1.69%)</title><rect x="115.3" y="1669" width="20.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="118.33" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1189" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1199.5" ></text>
</g>
<g >
<title>__fdget_pos (20,640,430 samples, 0.02%)</title><rect x="821.7" y="1717" width="0.3" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="824.75" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (9,630,822 samples, 0.01%)</title><rect x="456.5" y="2053" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="459.47" y="2063.5" ></text>
</g>
<g >
<title>handle_softirqs (20,249,162 samples, 0.02%)</title><rect x="877.8" y="1733" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="880.79" y="1743.5" ></text>
</g>
<g >
<title>__secure_computing (10,575,004 samples, 0.01%)</title><rect x="834.7" y="1621" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="837.74" y="1631.5" ></text>
</g>
<g >
<title>__fput (10,634,752 samples, 0.01%)</title><rect x="905.0" y="1477" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="908.03" y="1487.5" ></text>
</g>
<g >
<title>__napi_poll (7,733,348 samples, 0.01%)</title><rect x="655.1" y="1509" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="658.08" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (21,523,661 samples, 0.03%)</title><rect x="930.0" y="1765" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="933.00" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (31,109,552 samples, 0.04%)</title><rect x="255.3" y="1781" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="258.33" y="1791.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (36,192,280 samples, 0.04%)</title><rect x="351.4" y="1669" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="354.42" y="1679.5" ></text>
</g>
<g >
<title>__napi_poll (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1941" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="747.77" y="1951.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,190,934 samples, 0.01%)</title><rect x="925.8" y="1429" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="928.84" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node_ptr (37,060,935 samples, 0.04%)</title><rect x="403.1" y="1701" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="406.10" y="1711.5" ></text>
</g>
<g >
<title>clear_bhb_loop (20,218,294 samples, 0.02%)</title><rect x="84.3" y="1781" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="87.34" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="805" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="815.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2,918,260,168 samples, 3.50%)</title><rect x="832.3" y="1877" width="41.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="835.28" y="1887.5" >std..</text>
</g>
<g >
<title>__irq_exit_rcu (7,147,124 samples, 0.01%)</title><rect x="429.5" y="1413" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="432.49" y="1423.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (45,529,614 samples, 0.05%)</title><rect x="764.3" y="1653" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="767.28" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (14,145,326 samples, 0.02%)</title><rect x="475.0" y="1765" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="477.97" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (29,896,001 samples, 0.04%)</title><rect x="549.3" y="1701" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="552.33" y="1711.5" ></text>
</g>
<g >
<title>clear_bhb_loop (18,906,394 samples, 0.02%)</title><rect x="1114.7" y="1781" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1117.72" y="1791.5" ></text>
</g>
<g >
<title>do_writev (1,519,432,340 samples, 1.82%)</title><rect x="412.6" y="1733" width="21.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="415.63" y="1743.5" >d..</text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (46,022,699 samples, 0.06%)</title><rect x="731.7" y="1797" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="734.68" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (52,734,126 samples, 0.06%)</title><rect x="272.6" y="1349" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="275.55" y="1359.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (213,153,400 samples, 0.26%)</title><rect x="250.6" y="1797" width="3.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="253.58" y="1807.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (25,376,877 samples, 0.03%)</title><rect x="332.5" y="1669" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="335.51" y="1679.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (46,800,141 samples, 0.06%)</title><rect x="714.8" y="1397" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="717.76" y="1407.5" ></text>
</g>
<g >
<title>__strlen_avx2 (27,076,619 samples, 0.03%)</title><rect x="1035.9" y="2037" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1038.86" y="2047.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (28,109,597 samples, 0.03%)</title><rect x="941.2" y="1685" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="944.18" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (12,984,790 samples, 0.02%)</title><rect x="1007.9" y="1269" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1010.91" y="1279.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (206,477,816 samples, 0.25%)</title><rect x="1074.3" y="1717" width="3.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1077.33" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (18,589,089 samples, 0.02%)</title><rect x="521.6" y="1781" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="524.63" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (25,348,623 samples, 0.03%)</title><rect x="328.8" y="1701" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="331.77" y="1711.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (7,208,810 samples, 0.01%)</title><rect x="674.4" y="1397" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="677.37" y="1407.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1429" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="951.32" y="1439.5" ></text>
</g>
<g >
<title>epoll_wait (519,937,941 samples, 0.62%)</title><rect x="436.8" y="1909" width="7.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="439.82" y="1919.5" ></text>
</g>
<g >
<title>rndis_filter_receive (12,180,482 samples, 0.01%)</title><rect x="141.2" y="1669" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="144.21" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::clear (47,765,978 samples, 0.06%)</title><rect x="885.9" y="1925" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="888.88" y="1935.5" ></text>
</g>
<g >
<title>std::make_move_iterator&lt;char*&gt; (7,547,864 samples, 0.01%)</title><rect x="1082.8" y="1701" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1085.79" y="1711.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (81,111,319 samples, 0.10%)</title><rect x="389.6" y="1589" width="1.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="392.60" y="1599.5" ></text>
</g>
<g >
<title>selinux_xfrm_postroute_last (7,971,737 samples, 0.01%)</title><rect x="719.8" y="1429" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="722.77" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (8,224,117 samples, 0.01%)</title><rect x="637.6" y="1765" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="640.64" y="1775.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (35,769,511 samples, 0.04%)</title><rect x="442.9" y="1733" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="445.88" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="389" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="399.5" ></text>
</g>
<g >
<title>file_has_perm (21,330,802 samples, 0.03%)</title><rect x="235.0" y="1653" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="238.01" y="1663.5" ></text>
</g>
<g >
<title>[web-server] (23,760,556 samples, 0.03%)</title><rect x="1106.5" y="1781" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1109.49" y="1791.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (8,896,200 samples, 0.01%)</title><rect x="1031.9" y="1909" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1034.95" y="1919.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2,924,263,890 samples, 3.51%)</title><rect x="686.5" y="1893" width="41.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="689.54" y="1903.5" >std..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (9,133,676 samples, 0.01%)</title><rect x="801.0" y="1701" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="803.98" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (7,234,842 samples, 0.01%)</title><rect x="1054.9" y="1653" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1057.87" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (8,481,992 samples, 0.01%)</title><rect x="696.6" y="1781" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="699.62" y="1791.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (22,816,578 samples, 0.03%)</title><rect x="1084.8" y="1621" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1087.81" y="1631.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1,316,488,900 samples, 1.58%)</title><rect x="998.9" y="1637" width="18.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1001.87" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (8,039,093 samples, 0.01%)</title><rect x="851.3" y="1621" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="854.34" y="1631.5" ></text>
</g>
<g >
<title>epoll_ctl (13,363,624 samples, 0.02%)</title><rect x="521.0" y="1733" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="523.96" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (8,315,707 samples, 0.01%)</title><rect x="49.1" y="1765" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="52.13" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (21,782,455 samples, 0.03%)</title><rect x="228.1" y="1749" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="231.10" y="1759.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (14,606,620 samples, 0.02%)</title><rect x="828.5" y="1605" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="831.53" y="1615.5" ></text>
</g>
<g >
<title>vfs_fstatat (496,725,392 samples, 0.60%)</title><rect x="361.5" y="1669" width="7.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="364.48" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2,920,579,824 samples, 3.50%)</title><rect x="686.6" y="1877" width="41.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="689.57" y="1887.5" >std..</text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1445" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1455.5" ></text>
</g>
<g >
<title>rndis_filter_receive (23,724,445 samples, 0.03%)</title><rect x="731.9" y="1669" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="734.88" y="1679.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (11,335,324 samples, 0.01%)</title><rect x="90.4" y="1605" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="93.41" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="261" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="271.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,064,099,529 samples, 1.28%)</title><rect x="687.1" y="1813" width="15.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="690.10" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (26,505,495 samples, 0.03%)</title><rect x="60.5" y="1669" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="63.47" y="1679.5" ></text>
</g>
<g >
<title>handle_softirqs (8,844,246 samples, 0.01%)</title><rect x="523.0" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="526.05" y="1567.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*, std::shared_ptr&lt;Channel&gt; &gt; (29,454,783 samples, 0.04%)</title><rect x="1181.3" y="1893" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1184.34" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (309,031,627 samples, 0.37%)</title><rect x="753.1" y="1669" width="4.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="756.09" y="1679.5" ></text>
</g>
<g >
<title>__secure_computing (7,713,973 samples, 0.01%)</title><rect x="98.9" y="1621" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="101.91" y="1631.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (11,113,722 samples, 0.01%)</title><rect x="352.7" y="1717" width="0.1" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="355.66" y="1727.5" ></text>
</g>
<g >
<title>netvsc_poll (15,817,931 samples, 0.02%)</title><rect x="259.7" y="1685" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="262.72" y="1695.5" ></text>
</g>
<g >
<title>__napi_poll (22,920,676 samples, 0.03%)</title><rect x="440.1" y="1701" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="443.14" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (28,502,090 samples, 0.03%)</title><rect x="493.2" y="1765" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="496.15" y="1775.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (10,107,971 samples, 0.01%)</title><rect x="69.2" y="1525" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="72.22" y="1535.5" ></text>
</g>
<g >
<title>detach_if_pending (15,605,468 samples, 0.02%)</title><rect x="867.9" y="1477" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="870.90" y="1487.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (53,405,409 samples, 0.06%)</title><rect x="419.7" y="1429" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="422.68" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (15,666,417 samples, 0.02%)</title><rect x="633.4" y="1701" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="636.35" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (22,908,749 samples, 0.03%)</title><rect x="613.7" y="1701" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="616.73" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (8,552,409 samples, 0.01%)</title><rect x="320.7" y="1685" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="323.71" y="1695.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (13,239,931 samples, 0.02%)</title><rect x="506.6" y="1653" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="509.55" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="565" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (8,005,175 samples, 0.01%)</title><rect x="307.5" y="2053" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="310.53" y="2063.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (22,954,141 samples, 0.03%)</title><rect x="1135.6" y="1701" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1138.62" y="1711.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (20,915,652 samples, 0.03%)</title><rect x="1180.0" y="1909" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1182.96" y="1919.5" ></text>
</g>
<g >
<title>__strlen_avx2 (22,199,254 samples, 0.03%)</title><rect x="450.9" y="2037" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="453.87" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (11,785,662 samples, 0.01%)</title><rect x="865.1" y="1349" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="868.14" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::_M_erase_at_end (33,468,814 samples, 0.04%)</title><rect x="1033.1" y="1909" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1036.11" y="1919.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,844,246 samples, 0.01%)</title><rect x="523.0" y="1589" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="526.05" y="1599.5" ></text>
</g>
<g >
<title>selinux_inode_permission (55,057,177 samples, 0.07%)</title><rect x="68.7" y="1557" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="71.74" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (150,584,976 samples, 0.18%)</title><rect x="173.0" y="1701" width="2.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="176.03" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (8,613,235 samples, 0.01%)</title><rect x="1008.0" y="1109" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1010.97" y="1119.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (462,004,414 samples, 0.55%)</title><rect x="653.0" y="1685" width="6.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="656.03" y="1695.5" ></text>
</g>
<g >
<title>__sock_release (7,539,876 samples, 0.01%)</title><rect x="905.1" y="1445" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="908.07" y="1455.5" ></text>
</g>
<g >
<title>do_writev (1,616,836,540 samples, 1.94%)</title><rect x="849.4" y="1733" width="22.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="852.35" y="1743.5" >d..</text>
</g>
<g >
<title>EventLoop::ModChannel (517,169,110 samples, 0.62%)</title><rect x="897.6" y="1797" width="7.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="900.58" y="1807.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (3,907,578,752 samples, 4.69%)</title><rect x="905.2" y="1797" width="55.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="908.18" y="1807.5" >HttpC..</text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,385,901 samples, 0.01%)</title><rect x="1066.0" y="1525" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1069.03" y="1535.5" ></text>
</g>
<g >
<title>rep_movs_alternative (8,127,958 samples, 0.01%)</title><rect x="165.9" y="1605" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="168.92" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="901" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="911.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (31,384,078 samples, 0.04%)</title><rect x="442.9" y="1685" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="445.95" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (14,925,628 samples, 0.02%)</title><rect x="463.0" y="1477" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="465.96" y="1487.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (12,334,553 samples, 0.01%)</title><rect x="1054.8" y="1685" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1057.80" y="1695.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,075,256,474 samples, 1.29%)</title><rect x="395.3" y="1813" width="15.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="398.30" y="1823.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (30,255,273 samples, 0.04%)</title><rect x="440.1" y="1749" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="443.12" y="1759.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,988,022 samples, 0.01%)</title><rect x="611.9" y="1717" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="614.92" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::_M_erase_at_end (47,765,978 samples, 0.06%)</title><rect x="885.9" y="1909" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="888.88" y="1919.5" ></text>
</g>
<g >
<title>x64_sys_call (209,402,711 samples, 0.25%)</title><rect x="604.3" y="1637" width="3.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="607.34" y="1647.5" ></text>
</g>
<g >
<title>vmbus_next_request_id (19,727,486 samples, 0.02%)</title><rect x="128.3" y="1285" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="131.28" y="1295.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1749" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="469.26" y="1759.5" ></text>
</g>
<g >
<title>__napi_poll (11,544,469 samples, 0.01%)</title><rect x="384.3" y="1589" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="387.33" y="1599.5" ></text>
</g>
<g >
<title>vmbus_next_request_id (30,704,889 samples, 0.04%)</title><rect x="1010.9" y="1285" width="0.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1013.93" y="1295.5" ></text>
</g>
<g >
<title>netvsc_poll (9,755,903 samples, 0.01%)</title><rect x="857.9" y="1301" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="860.87" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1525" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (12,984,790 samples, 0.02%)</title><rect x="1007.9" y="1237" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1010.91" y="1247.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::_M_ptr (8,054,251 samples, 0.01%)</title><rect x="608.7" y="1653" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="611.72" y="1663.5" ></text>
</g>
<g >
<title>__GI___stat64 (7,477,486 samples, 0.01%)</title><rect x="809.7" y="1765" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="812.67" y="1775.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (21,177,425 samples, 0.03%)</title><rect x="259.6" y="1797" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="262.64" y="1807.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (10,682,296 samples, 0.01%)</title><rect x="118.0" y="1605" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="121.05" y="1615.5" ></text>
</g>
<g >
<title>handle_softirqs (9,177,283 samples, 0.01%)</title><rect x="413.9" y="1621" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="416.89" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (12,629,641 samples, 0.02%)</title><rect x="993.5" y="1733" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="996.47" y="1743.5" ></text>
</g>
<g >
<title>inode_security (21,522,385 samples, 0.03%)</title><rect x="823.9" y="1653" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="826.89" y="1663.5" ></text>
</g>
<g >
<title>__napi_poll (13,333,147 samples, 0.02%)</title><rect x="314.7" y="1493" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="317.74" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (10,297,499 samples, 0.01%)</title><rect x="1119.3" y="1621" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1122.26" y="1631.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (9,314,158 samples, 0.01%)</title><rect x="716.6" y="1349" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="719.58" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="309" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (13,067,194 samples, 0.02%)</title><rect x="446.7" y="1893" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="449.72" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (9,132,117 samples, 0.01%)</title><rect x="1024.2" y="1349" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1027.24" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (84,512,979 samples, 0.10%)</title><rect x="1088.1" y="1733" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1091.06" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (77,188,259 samples, 0.09%)</title><rect x="547.6" y="1781" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="550.58" y="1791.5" ></text>
</g>
<g >
<title>__napi_poll (34,499,184 samples, 0.04%)</title><rect x="1172.9" y="1701" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1175.87" y="1711.5" ></text>
</g>
<g >
<title>selinux_ip_postroute (23,156,463 samples, 0.03%)</title><rect x="427.5" y="1461" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="430.53" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (10,658,633 samples, 0.01%)</title><rect x="776.6" y="1765" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="779.57" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (10,516,382 samples, 0.01%)</title><rect x="847.9" y="1637" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="850.90" y="1647.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,733,348 samples, 0.01%)</title><rect x="655.1" y="1589" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="658.08" y="1599.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (12,379,689 samples, 0.01%)</title><rect x="751.6" y="1813" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="754.63" y="1823.5" ></text>
</g>
<g >
<title>x64_sys_call (143,904,051 samples, 0.17%)</title><rect x="397.5" y="1637" width="2.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="400.53" y="1647.5" ></text>
</g>
<g >
<title>set_root (10,316,696 samples, 0.01%)</title><rect x="367.8" y="1573" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="370.84" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (48,591,079 samples, 0.06%)</title><rect x="796.3" y="1733" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="799.34" y="1743.5" ></text>
</g>
<g >
<title>vfs_fstatat (450,119,673 samples, 0.54%)</title><rect x="653.2" y="1669" width="6.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="656.20" y="1679.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7,238,679 samples, 0.01%)</title><rect x="1152.1" y="1157" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1155.05" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (41,462,060 samples, 0.05%)</title><rect x="57.2" y="1749" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="60.22" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (12,652,713 samples, 0.02%)</title><rect x="815.8" y="1781" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="818.79" y="1791.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*, std::shared_ptr&lt;Channel&gt; &gt; (35,537,327 samples, 0.04%)</title><rect x="149.7" y="1893" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="152.71" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (46,249,785 samples, 0.06%)</title><rect x="205.3" y="1701" width="0.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="208.28" y="1711.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,846,290 samples, 0.01%)</title><rect x="137.5" y="1893" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="140.53" y="1903.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,475,104 samples, 0.01%)</title><rect x="1101.3" y="1573" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1104.30" y="1583.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,745,319 samples, 0.01%)</title><rect x="427.4" y="1397" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="430.41" y="1407.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (23,180,487 samples, 0.03%)</title><rect x="791.4" y="1653" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="794.35" y="1663.5" ></text>
</g>
<g >
<title>napi_complete_done (11,281,630 samples, 0.01%)</title><rect x="624.7" y="1541" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="627.71" y="1551.5" ></text>
</g>
<g >
<title>_copy_from_iter (49,334,246 samples, 0.06%)</title><rect x="1000.8" y="1605" width="0.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1003.76" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (17,534,189 samples, 0.02%)</title><rect x="82.6" y="1637" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="85.63" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (26,813,961 samples, 0.03%)</title><rect x="124.8" y="1157" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="127.78" y="1167.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (97,534,643 samples, 0.12%)</title><rect x="879.8" y="1813" width="1.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="882.81" y="1823.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,815,769 samples, 0.01%)</title><rect x="296.3" y="1669" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="299.31" y="1679.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (10,200,344 samples, 0.01%)</title><rect x="623.6" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="626.59" y="1663.5" ></text>
</g>
<g >
<title>napi_gro_receive (12,522,215 samples, 0.02%)</title><rect x="880.7" y="1573" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="883.68" y="1583.5" ></text>
</g>
<g >
<title>__napi_poll (16,807,709 samples, 0.02%)</title><rect x="382.7" y="1653" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="385.71" y="1663.5" ></text>
</g>
<g >
<title>__napi_poll (39,581,846 samples, 0.05%)</title><rect x="144.1" y="1637" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="147.08" y="1647.5" ></text>
</g>
<g >
<title>netvsc_poll (11,410,063 samples, 0.01%)</title><rect x="1093.1" y="1589" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1096.12" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (16,784,169 samples, 0.02%)</title><rect x="410.9" y="1717" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="413.91" y="1727.5" ></text>
</g>
<g >
<title>loopthread5 (10,284,057,773 samples, 12.34%)</title><rect x="749.7" y="2069" width="145.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="752.67" y="2079.5" >loopthread5</text>
</g>
<g >
<title>__tcp_transmit_skb (816,401,938 samples, 0.98%)</title><rect x="709.1" y="1557" width="11.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="712.14" y="1567.5" ></text>
</g>
<g >
<title>ip_list_rcv (7,437,251 samples, 0.01%)</title><rect x="69.2" y="1365" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="72.22" y="1375.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (10,690,229 samples, 0.01%)</title><rect x="817.6" y="1685" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="820.56" y="1695.5" ></text>
</g>
<g >
<title>clear_bhb_loop (20,406,565 samples, 0.02%)</title><rect x="965.7" y="1781" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="968.73" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (402,651,566 samples, 0.48%)</title><rect x="620.9" y="1717" width="5.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="623.86" y="1727.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1,032,227,773 samples, 1.24%)</title><rect x="708.5" y="1589" width="14.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="711.54" y="1599.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (7,393,064 samples, 0.01%)</title><rect x="843.6" y="1765" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="846.64" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1669" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1679.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (9,965,320,676 samples, 11.96%)</title><rect x="158.9" y="1973" width="141.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="161.87" y="1983.5" >std::__invoke_imp..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_begin (7,223,248 samples, 0.01%)</title><rect x="841.7" y="1733" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="844.65" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (22,517,894 samples, 0.03%)</title><rect x="1050.2" y="1733" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1053.19" y="1743.5" ></text>
</g>
<g >
<title>nf_hook_slow (211,680,511 samples, 0.25%)</title><rect x="1003.4" y="1477" width="3.0" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1006.42" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1429" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (14,707,682 samples, 0.02%)</title><rect x="515.7" y="1765" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="518.71" y="1775.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (142,758,627 samples, 0.17%)</title><rect x="250.6" y="1765" width="2.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="253.62" y="1775.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,062,985 samples, 0.01%)</title><rect x="35.8" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="38.79" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="2005" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="2015.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (56,582,504 samples, 0.07%)</title><rect x="477.6" y="1685" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="480.62" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (14,255,933 samples, 0.02%)</title><rect x="244.8" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="247.84" y="1599.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (9,177,283 samples, 0.01%)</title><rect x="413.9" y="1669" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="416.89" y="1679.5" ></text>
</g>
<g >
<title>epoll_ctl (394,434,664 samples, 0.47%)</title><rect x="602.9" y="1685" width="5.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="605.88" y="1695.5" ></text>
</g>
<g >
<title>__napi_poll (10,884,447 samples, 0.01%)</title><rect x="1115.2" y="1653" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1118.25" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="677" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="687.5" ></text>
</g>
<g >
<title>memcpy_orig (7,688,042 samples, 0.01%)</title><rect x="276.5" y="1285" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="279.47" y="1295.5" ></text>
</g>
<g >
<title>ip_list_rcv (18,759,990 samples, 0.02%)</title><rect x="1027.5" y="1557" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1030.49" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (8,287,569 samples, 0.01%)</title><rect x="894.4" y="2037" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="897.35" y="2047.5" ></text>
</g>
<g >
<title>lookup_fast (18,130,534 samples, 0.02%)</title><rect x="658.8" y="1573" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="661.76" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (31,542,201 samples, 0.04%)</title><rect x="550.6" y="1701" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="553.62" y="1711.5" ></text>
</g>
<g >
<title>__virt_addr_valid (11,626,753 samples, 0.01%)</title><rect x="827.1" y="1557" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="830.06" y="1567.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (32,559,305 samples, 0.04%)</title><rect x="890.0" y="2053" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="892.99" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="789" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="799.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (22,933,215 samples, 0.03%)</title><rect x="210.1" y="1653" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="213.13" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (7,457,279 samples, 0.01%)</title><rect x="1104.5" y="1765" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1107.46" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (11,940,922 samples, 0.01%)</title><rect x="758.3" y="1685" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="761.28" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10,699,475 samples, 0.01%)</title><rect x="387.4" y="1317" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="390.42" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (10,150,562 samples, 0.01%)</title><rect x="765.7" y="1701" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="768.74" y="1711.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,385,901 samples, 0.01%)</title><rect x="1066.0" y="1477" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1069.03" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (9,574,007 samples, 0.01%)</title><rect x="157.7" y="2053" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="160.68" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (52,477,259 samples, 0.06%)</title><rect x="484.6" y="1749" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="487.64" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7,864,524 samples, 0.01%)</title><rect x="948.3" y="1301" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="951.32" y="1311.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (85,150,764 samples, 0.10%)</title><rect x="281.7" y="1605" width="1.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="284.74" y="1615.5" ></text>
</g>
<g >
<title>netvsc_poll (7,250,509 samples, 0.01%)</title><rect x="668.4" y="1685" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="671.42" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (419,605,239 samples, 0.50%)</title><rect x="752.6" y="1749" width="5.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="755.56" y="1759.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;char*&gt;::move_iterator (7,532,144 samples, 0.01%)</title><rect x="1086.0" y="1685" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1089.01" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (36,246,841 samples, 0.04%)</title><rect x="727.0" y="1797" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="729.98" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1221" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1231.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,582,050 samples, 0.01%)</title><rect x="561.3" y="1365" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="564.33" y="1375.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (10,071,761 samples, 0.01%)</title><rect x="738.4" y="1845" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="741.41" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1317" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1327.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (28,667,792 samples, 0.03%)</title><rect x="401.8" y="1765" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="404.85" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (47,290,476 samples, 0.06%)</title><rect x="351.3" y="1701" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="354.29" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::_M_erase_at_end (31,792,278 samples, 0.04%)</title><rect x="1181.3" y="1909" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1184.34" y="1919.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (42,705,081 samples, 0.05%)</title><rect x="144.1" y="1685" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="147.08" y="1695.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;char*, char*, std::allocator&lt;char&gt; &gt; (21,937,656 samples, 0.03%)</title><rect x="379.1" y="1749" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="382.08" y="1759.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (20,803,673 samples, 0.02%)</title><rect x="62.9" y="1685" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="65.86" y="1695.5" ></text>
</g>
<g >
<title>netvsc_poll (15,586,895 samples, 0.02%)</title><rect x="552.7" y="1685" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="555.69" y="1695.5" ></text>
</g>
<g >
<title>__wake_up_common (7,613,446 samples, 0.01%)</title><rect x="292.8" y="1349" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="295.80" y="1359.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (10,156,722 samples, 0.01%)</title><rect x="746.0" y="1877" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="749.03" y="1887.5" ></text>
</g>
<g >
<title>__wake_up_common (7,283,500 samples, 0.01%)</title><rect x="144.4" y="1349" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="147.42" y="1359.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9,258,675 samples, 0.01%)</title><rect x="443.0" y="1493" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="445.97" y="1503.5" ></text>
</g>
<g >
<title>tcp_poll (9,850,488 samples, 0.01%)</title><rect x="463.5" y="1573" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="466.55" y="1583.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::find (107,177,841 samples, 0.13%)</title><rect x="586.7" y="1909" width="1.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="589.65" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1493" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1503.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (8,598,202 samples, 0.01%)</title><rect x="357.8" y="1477" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="360.78" y="1487.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (24,247,424 samples, 0.03%)</title><rect x="945.8" y="1621" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="948.76" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (11,402,495 samples, 0.01%)</title><rect x="481.7" y="1717" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="484.71" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (7,281,859 samples, 0.01%)</title><rect x="845.3" y="1733" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="848.31" y="1743.5" ></text>
</g>
<g >
<title>x64_sys_call (205,794,687 samples, 0.25%)</title><rect x="899.7" y="1637" width="2.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="902.70" y="1647.5" ></text>
</g>
<g >
<title>handle_softirqs (35,867,416 samples, 0.04%)</title><rect x="1172.9" y="1733" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1175.87" y="1743.5" ></text>
</g>
<g >
<title>std::mutex::lock (20,915,652 samples, 0.03%)</title><rect x="1180.0" y="1893" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1182.96" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (735,127,660 samples, 0.88%)</title><rect x="1091.4" y="1749" width="10.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1094.42" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (15,112,853 samples, 0.02%)</title><rect x="409.7" y="1797" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="412.71" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (14,058,781 samples, 0.02%)</title><rect x="82.6" y="1573" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="85.65" y="1583.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (8,932,829 samples, 0.01%)</title><rect x="46.2" y="1685" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="49.25" y="1695.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (4,683,626,195 samples, 5.62%)</title><rect x="751.8" y="1813" width="66.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="754.80" y="1823.5" >HttpCon..</text>
</g>
<g >
<title>EventLoop::ModChannel (18,699,360 samples, 0.02%)</title><rect x="401.5" y="1733" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="404.51" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1541" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1551.5" ></text>
</g>
<g >
<title>x64_sys_call (1,536,219,611 samples, 1.84%)</title><rect x="412.4" y="1765" width="21.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="415.44" y="1775.5" >x..</text>
</g>
<g >
<title>kmem_cache_alloc_node (28,275,615 samples, 0.03%)</title><rect x="1165.3" y="1573" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1168.29" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="181" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="191.5" ></text>
</g>
<g >
<title>EventLoop::IsInLoopThread (13,076,263 samples, 0.02%)</title><rect x="1044.4" y="1765" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1047.38" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (16,609,603 samples, 0.02%)</title><rect x="878.2" y="1605" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="881.22" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (16,694,806 samples, 0.02%)</title><rect x="1007.5" y="1157" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1010.47" y="1167.5" ></text>
</g>
<g >
<title>__GI___writev (1,774,956,461 samples, 2.13%)</title><rect x="112.2" y="1813" width="25.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="115.24" y="1823.5" >_..</text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (23,117,069 samples, 0.03%)</title><rect x="759.8" y="1765" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="762.80" y="1775.5" ></text>
</g>
<g >
<title>handle_softirqs (9,776,215 samples, 0.01%)</title><rect x="34.5" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="37.54" y="1615.5" ></text>
</g>
<g >
<title>__fget_light (18,868,041 samples, 0.02%)</title><rect x="821.7" y="1701" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="824.75" y="1711.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Epoller*, std::default_delete&lt;Epoller&gt; &gt; (9,939,473 samples, 0.01%)</title><rect x="1132.6" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1135.58" y="1647.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (22,428,117 samples, 0.03%)</title><rect x="734.6" y="1685" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="737.58" y="1695.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (28,066,078 samples, 0.03%)</title><rect x="1093.3" y="1701" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1096.28" y="1711.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::~shared_ptr (7,649,120 samples, 0.01%)</title><rect x="609.8" y="1685" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="612.80" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (30,138,581 samples, 0.04%)</title><rect x="357.7" y="1749" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="360.68" y="1759.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (69,231,943 samples, 0.08%)</title><rect x="1084.5" y="1701" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1087.53" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (8,175,998 samples, 0.01%)</title><rect x="1050.7" y="1589" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1053.69" y="1599.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char*, char*&gt; (54,984,751 samples, 0.07%)</title><rect x="378.3" y="1733" width="0.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="381.28" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (8,317,147 samples, 0.01%)</title><rect x="736.4" y="1877" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="739.43" y="1887.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (44,903,279 samples, 0.05%)</title><rect x="590.0" y="1877" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="593.00" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (15,723,506 samples, 0.02%)</title><rect x="448.9" y="101" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.89" y="111.5" ></text>
</g>
<g >
<title>netvsc_poll (9,640,164 samples, 0.01%)</title><rect x="1129.4" y="1509" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1132.35" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (8,925,385 samples, 0.01%)</title><rect x="1066.2" y="1525" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1069.17" y="1535.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;TimerManager::TimerNode,  (12,481,904 samples, 0.01%)</title><rect x="447.2" y="1893" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="450.25" y="1903.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (785,787,632 samples, 0.94%)</title><rect x="286.5" y="1925" width="11.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="289.45" y="1935.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1,263,882,523 samples, 1.52%)</title><rect x="116.7" y="1621" width="17.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="119.71" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (10,466,637 samples, 0.01%)</title><rect x="1105.9" y="1765" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1108.87" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (7,149,265 samples, 0.01%)</title><rect x="47.0" y="1749" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="50.04" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1493" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1503.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,060,119 samples, 0.01%)</title><rect x="925.8" y="1621" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="928.84" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (329,686,728 samples, 0.40%)</title><rect x="833.4" y="1749" width="4.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="836.43" y="1759.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (203,605,659 samples, 0.24%)</title><rect x="365.2" y="1605" width="2.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="368.19" y="1615.5" ></text>
</g>
<g >
<title>__virt_addr_valid (8,829,172 samples, 0.01%)</title><rect x="1148.1" y="1589" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1151.05" y="1599.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,284,877 samples, 0.02%)</title><rect x="1113.2" y="1765" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1116.19" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, char&gt; (36,516,102 samples, 0.04%)</title><rect x="937.6" y="1701" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="940.58" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (95,132,322 samples, 0.11%)</title><rect x="1140.4" y="1717" width="1.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1143.40" y="1727.5" ></text>
</g>
<g >
<title>__x64_sys_writev (8,940,086 samples, 0.01%)</title><rect x="1144.1" y="1765" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1147.06" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (14,365,676 samples, 0.02%)</title><rect x="674.3" y="1509" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="677.27" y="1519.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,062,985 samples, 0.01%)</title><rect x="35.8" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="38.79" y="1647.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (520,955,226 samples, 0.63%)</title><rect x="752.1" y="1797" width="7.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="755.08" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="581" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="591.5" ></text>
</g>
<g >
<title>handle_softirqs (19,006,063 samples, 0.02%)</title><rect x="966.4" y="1685" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="969.44" y="1695.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,919,702 samples, 0.02%)</title><rect x="1115.2" y="1701" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1118.25" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (46,397,164 samples, 0.06%)</title><rect x="26.1" y="1717" width="0.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="29.13" y="1727.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (8,298,854 samples, 0.01%)</title><rect x="606.1" y="1589" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="609.09" y="1599.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (11,178,803 samples, 0.01%)</title><rect x="366.7" y="1541" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="369.75" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1221" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1231.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (150,416,984 samples, 0.18%)</title><rect x="544.0" y="1765" width="2.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="546.99" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (28,453,619 samples, 0.03%)</title><rect x="1090.7" y="1669" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1093.74" y="1679.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (10,306,909 samples, 0.01%)</title><rect x="704.6" y="1669" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="707.61" y="1679.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (507,245,807 samples, 0.61%)</title><rect x="161.1" y="1797" width="7.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="164.08" y="1807.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (12,241,961 samples, 0.01%)</title><rect x="277.6" y="1461" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="280.55" y="1471.5" ></text>
</g>
<g >
<title>std::function&lt;void  (342,189,500 samples, 0.41%)</title><rect x="97.8" y="1765" width="4.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="100.78" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_M_next (23,564,440 samples, 0.03%)</title><rect x="103.8" y="1717" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="106.79" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::allocate (7,233,991 samples, 0.01%)</title><rect x="615.2" y="1669" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="618.17" y="1679.5" ></text>
</g>
<g >
<title>ip_finish_output (372,348,761 samples, 0.45%)</title><rect x="422.0" y="1477" width="5.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="424.97" y="1487.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (27,740,667 samples, 0.03%)</title><rect x="290.2" y="1749" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="293.20" y="1759.5" ></text>
</g>
<g >
<title>__do_softirq (35,495,784 samples, 0.04%)</title><rect x="422.8" y="1381" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="425.77" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (8,111,490 samples, 0.01%)</title><rect x="220.1" y="1765" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="223.15" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="69" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="79.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (14,484,147 samples, 0.02%)</title><rect x="586.3" y="1893" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="589.29" y="1903.5" ></text>
</g>
<g >
<title>hv_ringbuffer_write (7,991,799 samples, 0.01%)</title><rect x="478.3" y="1509" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="481.28" y="1519.5" ></text>
</g>
<g >
<title>handle_softirqs (11,735,606 samples, 0.01%)</title><rect x="296.3" y="1781" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="299.31" y="1791.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,468,225 samples, 0.01%)</title><rect x="347.8" y="1733" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="350.82" y="1743.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,247,196 samples, 0.02%)</title><rect x="397.0" y="1573" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="400.03" y="1583.5" ></text>
</g>
<g >
<title>nft_do_chain_ipv4 (49,851,699 samples, 0.06%)</title><rect x="122.7" y="1461" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="125.69" y="1471.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (843,417,193 samples, 1.01%)</title><rect x="503.0" y="1765" width="12.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="506.04" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (59,676,234 samples, 0.07%)</title><rect x="881.9" y="1893" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="884.90" y="1903.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (227,241,486 samples, 0.27%)</title><rect x="543.8" y="1797" width="3.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="546.84" y="1807.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,422,144 samples, 0.01%)</title><rect x="944.6" y="1525" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="947.60" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (7,443,671 samples, 0.01%)</title><rect x="1140.1" y="1749" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1143.09" y="1759.5" ></text>
</g>
<g >
<title>__napi_poll (11,094,995 samples, 0.01%)</title><rect x="971.1" y="1525" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="974.08" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1173" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1183.5" ></text>
</g>
<g >
<title>selinux_ip_postroute (22,812,445 samples, 0.03%)</title><rect x="277.7" y="1461" width="0.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="280.72" y="1471.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (30,299,309 samples, 0.04%)</title><rect x="1175.7" y="1717" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1178.74" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="469" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="479.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (35,052,619 samples, 0.04%)</title><rect x="237.8" y="1621" width="0.5" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="240.78" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (8,697,043 samples, 0.01%)</title><rect x="987.4" y="1669" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="990.41" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (68,955,137 samples, 0.08%)</title><rect x="684.3" y="1797" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="687.30" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (35,879,943 samples, 0.04%)</title><rect x="109.0" y="1701" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="111.96" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,959,936 samples, 0.02%)</title><rect x="189.7" y="1765" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="192.66" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (43,410,514 samples, 0.05%)</title><rect x="1024.1" y="1701" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1027.13" y="1711.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (13,169,734 samples, 0.02%)</title><rect x="526.7" y="1749" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="529.73" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="597" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (22,319,425 samples, 0.03%)</title><rect x="624.3" y="1669" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="627.35" y="1679.5" ></text>
</g>
<g >
<title>tcp_current_mss (27,123,492 samples, 0.03%)</title><rect x="430.9" y="1589" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="433.90" y="1599.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1,283,419,462 samples, 1.54%)</title><rect x="706.7" y="1621" width="18.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="709.74" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;char*, void&gt; (163,946,737 samples, 0.20%)</title><rect x="377.6" y="1797" width="2.3" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="380.59" y="1807.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (11,979,595 samples, 0.01%)</title><rect x="901.7" y="1397" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="904.68" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,721,688 samples, 0.02%)</title><rect x="196.9" y="1765" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="199.93" y="1775.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13,243,813 samples, 0.02%)</title><rect x="581.6" y="1765" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="584.62" y="1775.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (24,665,415 samples, 0.03%)</title><rect x="1058.3" y="1701" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1061.28" y="1711.5" ></text>
</g>
<g >
<title>__fget_light (20,521,767 samples, 0.02%)</title><rect x="540.9" y="1573" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="543.86" y="1583.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (89,626,785 samples, 0.11%)</title><rect x="723.6" y="1605" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="726.65" y="1615.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (30,732,227 samples, 0.04%)</title><rect x="356.7" y="1765" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="359.72" y="1775.5" ></text>
</g>
<g >
<title>__napi_poll (12,740,646 samples, 0.02%)</title><rect x="624.7" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="627.69" y="1583.5" ></text>
</g>
<g >
<title>handle_softirqs (13,333,147 samples, 0.02%)</title><rect x="314.7" y="1525" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="317.74" y="1535.5" ></text>
</g>
<g >
<title>selinux_socket_recvmsg (10,494,384 samples, 0.01%)</title><rect x="240.6" y="1669" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="243.61" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (122,760,871 samples, 0.15%)</title><rect x="694.3" y="1749" width="1.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="697.34" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1557" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1567.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (19,006,063 samples, 0.02%)</title><rect x="966.4" y="1733" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="969.44" y="1743.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;true, char*, char*&gt; (10,313,594 samples, 0.01%)</title><rect x="792.0" y="1621" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="794.99" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (7,064,715 samples, 0.01%)</title><rect x="761.8" y="1669" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="764.81" y="1679.5" ></text>
</g>
<g >
<title>handle_softirqs (11,400,420 samples, 0.01%)</title><rect x="731.5" y="1733" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="734.52" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (64,246,136 samples, 0.08%)</title><rect x="408.3" y="1733" width="0.9" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="411.31" y="1743.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (7,342,805 samples, 0.01%)</title><rect x="318.4" y="1749" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="321.38" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="453" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="463.5" ></text>
</g>
<g >
<title>nf_hook_slow (37,684,395 samples, 0.05%)</title><rect x="1160.8" y="1477" width="0.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1163.76" y="1487.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,073,398 samples, 0.01%)</title><rect x="777.9" y="1701" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="780.94" y="1711.5" ></text>
</g>
<g >
<title>__napi_poll (46,800,141 samples, 0.06%)</title><rect x="714.8" y="1333" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="717.76" y="1343.5" ></text>
</g>
<g >
<title>handle_softirqs (7,906,666 samples, 0.01%)</title><rect x="1052.5" y="1685" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1055.47" y="1695.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (7,751,139 samples, 0.01%)</title><rect x="501.4" y="1637" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="504.37" y="1647.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (68,090,435 samples, 0.08%)</title><rect x="952.6" y="1749" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="955.55" y="1759.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, char*&gt; (48,017,502 samples, 0.06%)</title><rect x="378.4" y="1701" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="381.38" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (8,400,319 samples, 0.01%)</title><rect x="642.8" y="1717" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="645.85" y="1727.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,330,791 samples, 0.01%)</title><rect x="478.3" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="481.26" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_established (10,699,475 samples, 0.01%)</title><rect x="387.4" y="1285" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="390.42" y="1295.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (44,382,524 samples, 0.05%)</title><rect x="762.8" y="1717" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="765.77" y="1727.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (22,356,207 samples, 0.03%)</title><rect x="390.8" y="1605" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="393.85" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (229,605,457 samples, 0.28%)</title><rect x="1181.9" y="2053" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1184.91" y="2063.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (12,578,582 samples, 0.02%)</title><rect x="962.8" y="1717" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="965.78" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (7,143,655 samples, 0.01%)</title><rect x="1120.0" y="1557" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1122.96" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (16,198,267 samples, 0.02%)</title><rect x="1182.0" y="1765" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.01" y="1775.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (13,022,214 samples, 0.02%)</title><rect x="880.7" y="1589" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="883.67" y="1599.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10,525,728 samples, 0.01%)</title><rect x="985.9" y="1749" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="988.91" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (35,167,500 samples, 0.04%)</title><rect x="374.8" y="1781" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="377.80" y="1791.5" ></text>
</g>
<g >
<title>__wake_up_common (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1653" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="747.77" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (7,639,103 samples, 0.01%)</title><rect x="23.0" y="1701" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="26.00" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="149" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="159.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,785,662 samples, 0.01%)</title><rect x="865.1" y="1381" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="868.14" y="1391.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (13,433,541 samples, 0.02%)</title><rect x="1051.2" y="1749" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1054.22" y="1759.5" ></text>
</g>
<g >
<title>handle_softirqs (11,986,312 samples, 0.01%)</title><rect x="1066.0" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1069.00" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (10,699,475 samples, 0.01%)</title><rect x="387.4" y="1429" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="390.42" y="1439.5" ></text>
</g>
<g >
<title>epoll_ctl (355,782,770 samples, 0.43%)</title><rect x="311.7" y="1685" width="5.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="314.67" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="69" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="79.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (9,037,798 samples, 0.01%)</title><rect x="511.4" y="1541" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="514.43" y="1551.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,490,211 samples, 0.01%)</title><rect x="396.3" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="399.27" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1237" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1247.5" ></text>
</g>
<g >
<title>avc_has_perm_noaudit (16,440,761 samples, 0.02%)</title><rect x="658.1" y="1541" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="661.09" y="1551.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (8,357,894 samples, 0.01%)</title><rect x="1086.6" y="1701" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1089.60" y="1711.5" ></text>
</g>
<g >
<title>__napi_poll (7,819,499 samples, 0.01%)</title><rect x="839.7" y="1605" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="842.66" y="1615.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (180,756,245 samples, 0.22%)</title><rect x="68.0" y="1605" width="2.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="70.98" y="1615.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (14,683,447 samples, 0.02%)</title><rect x="820.9" y="1749" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="823.94" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (16,940,149 samples, 0.02%)</title><rect x="985.3" y="1717" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="988.35" y="1727.5" ></text>
</g>
<g >
<title>malloc (87,011,696 samples, 0.10%)</title><rect x="1187.5" y="2053" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.45" y="2063.5" ></text>
</g>
<g >
<title>__napi_poll (12,390,735 samples, 0.01%)</title><rect x="13.2" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="16.24" y="1583.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,111,018 samples, 0.01%)</title><rect x="480.9" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="483.92" y="1679.5" ></text>
</g>
<g >
<title>nft_do_chain_ipv4 (58,392,007 samples, 0.07%)</title><rect x="712.6" y="1461" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="715.63" y="1471.5" ></text>
</g>
<g >
<title>std::function&lt;void  (13,151,656 samples, 0.02%)</title><rect x="905.0" y="1781" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="907.99" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (16,928,824 samples, 0.02%)</title><rect x="908.6" y="1685" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="911.58" y="1695.5" ></text>
</g>
<g >
<title>kmalloc_reserve (40,752,514 samples, 0.05%)</title><rect x="431.5" y="1573" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="434.50" y="1583.5" ></text>
</g>
<g >
<title>std::function&lt;void  (6,050,581,131 samples, 7.26%)</title><rect x="600.8" y="1893" width="85.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="603.84" y="1903.5" >std::funct..</text>
</g>
<g >
<title>inode_security (16,372,610 samples, 0.02%)</title><rect x="235.4" y="1653" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="238.36" y="1663.5" ></text>
</g>
<g >
<title>handle_softirqs (11,261,021 samples, 0.01%)</title><rect x="927.6" y="1621" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="930.63" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (12,233,990 samples, 0.01%)</title><rect x="775.3" y="1717" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="778.32" y="1727.5" ></text>
</g>
<g >
<title>sock_def_readable (9,147,153 samples, 0.01%)</title><rect x="922.2" y="1397" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="925.16" y="1407.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (33,996,052 samples, 0.04%)</title><rect x="981.0" y="1637" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="984.04" y="1647.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (18,824,609 samples, 0.02%)</title><rect x="54.1" y="1621" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="57.11" y="1631.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (17,715,927 samples, 0.02%)</title><rect x="256.4" y="1685" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="259.42" y="1695.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (10,042,507 samples, 0.01%)</title><rect x="581.7" y="1653" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="584.66" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (2,999,184,285 samples, 3.60%)</title><rect x="243.7" y="1845" width="42.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="246.67" y="1855.5" >std..</text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (35,950,620 samples, 0.04%)</title><rect x="299.2" y="1877" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="302.23" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (10,200,344 samples, 0.01%)</title><rect x="623.6" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="626.59" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (14,875,475 samples, 0.02%)</title><rect x="340.1" y="1717" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="343.11" y="1727.5" ></text>
</g>
<g >
<title>__secure_computing (9,362,747 samples, 0.01%)</title><rect x="674.6" y="1733" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="677.63" y="1743.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (7,378,040 samples, 0.01%)</title><rect x="845.9" y="1685" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="848.93" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (18,380,858 samples, 0.02%)</title><rect x="944.5" y="1701" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="947.52" y="1711.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (9,340,124 samples, 0.01%)</title><rect x="577.5" y="1909" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="580.48" y="1919.5" ></text>
</g>
<g >
<title>ip_list_rcv (8,930,668 samples, 0.01%)</title><rect x="244.9" y="1493" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="247.87" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="581" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="591.5" ></text>
</g>
<g >
<title>netvsc_poll (26,939,315 samples, 0.03%)</title><rect x="878.1" y="1685" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="881.08" y="1695.5" ></text>
</g>
<g >
<title>tcp_rcv_established (7,513,023 samples, 0.01%)</title><rect x="1175.6" y="1397" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1178.59" y="1407.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (46,800,141 samples, 0.06%)</title><rect x="714.8" y="1413" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="717.76" y="1423.5" ></text>
</g>
<g >
<title>__skb_flow_dissect (24,698,811 samples, 0.03%)</title><rect x="1156.8" y="1381" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1159.80" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (71,761,483 samples, 0.09%)</title><rect x="58.0" y="1733" width="1.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="60.95" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (458,390,746 samples, 0.55%)</title><rect x="620.5" y="1749" width="6.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="623.50" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (35,818,188 samples, 0.04%)</title><rect x="144.1" y="1589" width="0.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="147.11" y="1599.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char*&gt; (60,912,631 samples, 0.07%)</title><rect x="1084.6" y="1669" width="0.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1087.58" y="1679.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (31,537,042 samples, 0.04%)</title><rect x="498.7" y="1701" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="501.74" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (7,627,702 samples, 0.01%)</title><rect x="466.3" y="1669" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="469.26" y="1679.5" ></text>
</g>
<g >
<title>clear_bhb_loop (14,567,773 samples, 0.02%)</title><rect x="382.3" y="1781" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="385.26" y="1791.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7,339,219 samples, 0.01%)</title><rect x="581.7" y="1573" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="584.70" y="1583.5" ></text>
</g>
<g >
<title>__napi_poll (7,871,799 samples, 0.01%)</title><rect x="45.2" y="1589" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="48.22" y="1599.5" ></text>
</g>
<g >
<title>Channel::OnEvents (9,029,772,613 samples, 10.84%)</title><rect x="600.2" y="1925" width="127.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="603.22" y="1935.5" >Channel::OnEvents</text>
</g>
<g >
<title>__irq_exit_rcu (8,046,277 samples, 0.01%)</title><rect x="163.3" y="1573" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="166.30" y="1583.5" ></text>
</g>
<g >
<title>inode_has_perm (16,071,276 samples, 0.02%)</title><rect x="235.1" y="1637" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="238.08" y="1647.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (16,749,930 samples, 0.02%)</title><rect x="1170.8" y="1813" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1173.81" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (13,451,848 samples, 0.02%)</title><rect x="125.2" y="1237" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="128.20" y="1247.5" ></text>
</g>
<g >
<title>selinux_socket_recvmsg (13,016,847 samples, 0.02%)</title><rect x="1124.0" y="1669" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1127.02" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (37,486,546 samples, 0.04%)</title><rect x="699.1" y="1717" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="702.08" y="1727.5" ></text>
</g>
<g >
<title>validate_xmit_skb (13,166,269 samples, 0.02%)</title><rect x="864.9" y="1381" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="867.85" y="1391.5" ></text>
</g>
<g >
<title>__seccomp_filter (17,787,277 samples, 0.02%)</title><rect x="1093.4" y="1669" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1096.40" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (11,387,948 samples, 0.01%)</title><rect x="921.2" y="1765" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="924.16" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (25,104,825 samples, 0.03%)</title><rect x="317.9" y="1749" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="320.85" y="1759.5" ></text>
</g>
<g >
<title>_int_free (20,762,984 samples, 0.02%)</title><rect x="1037.8" y="2053" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1040.80" y="2063.5" ></text>
</g>
<g >
<title>napi_complete_done (7,539,401 samples, 0.01%)</title><rect x="1143.2" y="1669" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1146.23" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (63,846,169 samples, 0.08%)</title><rect x="39.2" y="1749" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="42.17" y="1759.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::deallocate (28,569,018 samples, 0.03%)</title><rect x="1135.1" y="1685" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1138.13" y="1695.5" ></text>
</g>
<g >
<title>tcp_recvmsg (331,461,965 samples, 0.40%)</title><rect x="386.9" y="1653" width="4.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="389.93" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,236,971 samples, 0.01%)</title><rect x="357.8" y="1525" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="360.76" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (11,515,890 samples, 0.01%)</title><rect x="742.3" y="2021" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="745.31" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="1605" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="1615.5" ></text>
</g>
<g >
<title>memset_orig (15,546,052 samples, 0.02%)</title><rect x="134.3" y="1573" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="137.34" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1237" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1247.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (345,323,864 samples, 0.41%)</title><rect x="979.8" y="1733" width="4.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="982.80" y="1743.5" ></text>
</g>
<g >
<title>HttpRequest::Clear (135,028,932 samples, 0.16%)</title><rect x="694.2" y="1781" width="1.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="697.17" y="1791.5" ></text>
</g>
<g >
<title>__sk_dst_check (9,227,375 samples, 0.01%)</title><rect x="267.4" y="1509" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="270.41" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (7,698,071 samples, 0.01%)</title><rect x="183.3" y="1605" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="186.34" y="1615.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (207,216,574 samples, 0.25%)</title><rect x="506.7" y="1637" width="3.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="509.74" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (28,883,037 samples, 0.03%)</title><rect x="647.4" y="1701" width="0.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="650.39" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9,321,818 samples, 0.01%)</title><rect x="551.5" y="1717" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="554.55" y="1727.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (13,587,905 samples, 0.02%)</title><rect x="533.8" y="1605" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="536.79" y="1615.5" ></text>
</g>
<g >
<title>nft_do_chain (44,916,363 samples, 0.05%)</title><rect x="712.8" y="1445" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="715.75" y="1455.5" ></text>
</g>
<g >
<title>TimerManager::GetNextTick (12,374,060 samples, 0.01%)</title><rect x="436.5" y="1909" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="439.50" y="1919.5" ></text>
</g>
<g >
<title>TimerManager::GetNextTick (9,363,341 samples, 0.01%)</title><rect x="286.7" y="1909" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="289.68" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="597" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="607.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,519,736 samples, 0.01%)</title><rect x="157.4" y="1989" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="160.42" y="1999.5" ></text>
</g>
<g >
<title>lock_sock_nested (19,898,867 samples, 0.02%)</title><rect x="1146.9" y="1621" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1149.85" y="1631.5" ></text>
</g>
<g >
<title>napi_complete_done (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1909" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="747.77" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;char*&gt; (129,058,868 samples, 0.15%)</title><rect x="669.5" y="1765" width="1.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="672.54" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="149" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (14,212,513 samples, 0.02%)</title><rect x="631.2" y="1749" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="634.15" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="709" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="719.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (9,241,766 samples, 0.01%)</title><rect x="1175.1" y="1781" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1178.07" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (382,101,355 samples, 0.46%)</title><rect x="1053.7" y="1733" width="5.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1056.67" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (12,303,244 samples, 0.01%)</title><rect x="764.4" y="1637" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="767.35" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="821" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="831.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (15,035,917 samples, 0.02%)</title><rect x="702.8" y="1797" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="705.82" y="1807.5" ></text>
</g>
<g >
<title>netvsc_poll (10,200,344 samples, 0.01%)</title><rect x="623.6" y="1557" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="626.59" y="1567.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,076,822 samples, 0.01%)</title><rect x="1012.0" y="1429" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1015.00" y="1439.5" ></text>
</g>
<g >
<title>__napi_poll (7,250,509 samples, 0.01%)</title><rect x="668.4" y="1701" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="671.42" y="1711.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::allocate (17,090,259 samples, 0.02%)</title><rect x="909.4" y="1685" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="912.37" y="1695.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (12,181,949 samples, 0.01%)</title><rect x="1014.2" y="1477" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1017.23" y="1487.5" ></text>
</g>
<g >
<title>net_rx_action (10,509,260 samples, 0.01%)</title><rect x="559.4" y="1461" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="562.43" y="1471.5" ></text>
</g>
<g >
<title>net_rx_action (7,131,118 samples, 0.01%)</title><rect x="779.1" y="1653" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="782.08" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1349" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1359.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (54,266,523 samples, 0.07%)</title><rect x="1007.4" y="1397" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1010.37" y="1407.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (7,646,368 samples, 0.01%)</title><rect x="517.7" y="1765" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="520.67" y="1775.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (148,405,049 samples, 0.18%)</title><rect x="510.4" y="1605" width="2.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="513.38" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="357" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="367.5" ></text>
</g>
<g >
<title>__strlen_avx2 (17,938,588 samples, 0.02%)</title><rect x="547.9" y="1765" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="550.94" y="1775.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (73,722,195 samples, 0.09%)</title><rect x="532.7" y="1621" width="1.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="535.67" y="1631.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7,757,952 samples, 0.01%)</title><rect x="944.6" y="1445" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="947.60" y="1455.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,249,479 samples, 0.01%)</title><rect x="857.0" y="1365" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="859.98" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (12,360,151 samples, 0.01%)</title><rect x="1068.2" y="1765" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1071.18" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (32,071,139 samples, 0.04%)</title><rect x="317.4" y="1765" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="320.36" y="1775.5" ></text>
</g>
<g >
<title>terminate_walk (8,598,504 samples, 0.01%)</title><rect x="807.8" y="1605" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="810.77" y="1615.5" ></text>
</g>
<g >
<title>schedule (79,904,226 samples, 0.10%)</title><rect x="442.6" y="1781" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="445.58" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="485" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="495.5" ></text>
</g>
<g >
<title>irq_exit_rcu (15,389,957 samples, 0.02%)</title><rect x="867.7" y="1429" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="870.65" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (8,595,590 samples, 0.01%)</title><rect x="199.3" y="1765" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="202.34" y="1775.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,160,300 samples, 0.01%)</title><rect x="33.3" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="36.32" y="1631.5" ></text>
</g>
<g >
<title>sock_poll (77,220,074 samples, 0.09%)</title><rect x="582.6" y="1797" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="585.62" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (11,336,231 samples, 0.01%)</title><rect x="521.0" y="1717" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="523.96" y="1727.5" ></text>
</g>
<g >
<title>clear_bhb_loop (20,137,894 samples, 0.02%)</title><rect x="231.0" y="1781" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="233.97" y="1791.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (9,442,229 samples, 0.01%)</title><rect x="1045.3" y="1637" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1048.27" y="1647.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,563,678 samples, 0.01%)</title><rect x="981.1" y="1573" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="984.15" y="1583.5" ></text>
</g>
<g >
<title>memset_orig (97,646,304 samples, 0.12%)</title><rect x="1095.2" y="1621" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1098.19" y="1631.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,111,018 samples, 0.01%)</title><rect x="480.9" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="483.92" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="917" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (31,053,483 samples, 0.04%)</title><rect x="494.0" y="1765" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="496.98" y="1775.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (10,919,619 samples, 0.01%)</title><rect x="565.0" y="1221" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="568.01" y="1231.5" ></text>
</g>
<g >
<title>_int_free (12,378,883 samples, 0.01%)</title><rect x="154.9" y="2053" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="157.93" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1749" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1759.5" ></text>
</g>
<g >
<title>handle_softirqs (24,472,219 samples, 0.03%)</title><rect x="231.6" y="1685" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="234.61" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (7,906,809 samples, 0.01%)</title><rect x="703.6" y="1669" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="706.63" y="1679.5" ></text>
</g>
<g >
<title>__fdget (23,150,659 samples, 0.03%)</title><rect x="755.7" y="1589" width="0.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="758.67" y="1599.5" ></text>
</g>
<g >
<title>napi_gro_receive (8,719,259 samples, 0.01%)</title><rect x="581.7" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="584.68" y="1647.5" ></text>
</g>
<g >
<title>std::copy&lt;char*, char*&gt; (30,324,575 samples, 0.04%)</title><rect x="522.8" y="1701" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="525.77" y="1711.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (539,166,271 samples, 0.65%)</title><rect x="786.1" y="1781" width="7.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="789.07" y="1791.5" ></text>
</g>
<g >
<title>__seccomp_filter (9,176,508 samples, 0.01%)</title><rect x="553.9" y="1717" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="556.88" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (8,428,225 samples, 0.01%)</title><rect x="974.1" y="1461" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="977.10" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (14,957,931 samples, 0.02%)</title><rect x="740.8" y="1573" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.83" y="1583.5" ></text>
</g>
<g >
<title>inet_sendmsg (1,329,219,767 samples, 1.60%)</title><rect x="998.7" y="1653" width="18.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1001.69" y="1663.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,648,638 samples, 0.01%)</title><rect x="857.2" y="1381" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="860.21" y="1391.5" ></text>
</g>
<g >
<title>handle_softirqs (10,627,597 samples, 0.01%)</title><rect x="1175.6" y="1669" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1178.57" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (693,220,595 samples, 0.83%)</title><rect x="525.4" y="1797" width="9.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="528.36" y="1807.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (4,670,854,290 samples, 5.60%)</title><rect x="897.2" y="1813" width="66.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="900.19" y="1823.5" >HttpCon..</text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1637" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1647.5" ></text>
</g>
<g >
<title>__sk_dst_check (13,400,457 samples, 0.02%)</title><rect x="1003.1" y="1509" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1006.06" y="1519.5" ></text>
</g>
<g >
<title>irq_exit_rcu (21,560,971 samples, 0.03%)</title><rect x="112.5" y="1765" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="115.50" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (31,553,071 samples, 0.04%)</title><rect x="1079.4" y="1765" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1082.40" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (26,177,163 samples, 0.03%)</title><rect x="1132.5" y="1669" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1135.50" y="1679.5" ></text>
</g>
<g >
<title>ep_done_scan (7,423,364 samples, 0.01%)</title><rect x="878.5" y="1813" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="881.49" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node_ptr (36,480,907 samples, 0.04%)</title><rect x="986.8" y="1701" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="989.76" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (127,927,689 samples, 0.15%)</title><rect x="763.5" y="1701" width="1.8" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="766.51" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::ModChannel (25,062,502 samples, 0.03%)</title><rect x="401.9" y="1733" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="404.90" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (41,655,408 samples, 0.05%)</title><rect x="108.9" y="1733" width="0.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="111.88" y="1743.5" ></text>
</g>
<g >
<title>std::chrono::operator&gt;&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (7,177,837 samples, 0.01%)</title><rect x="884.8" y="1909" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="887.77" y="1919.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (156,687,521 samples, 0.19%)</title><rect x="424.4" y="1397" width="2.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="427.43" y="1407.5" ></text>
</g>
<g >
<title>netvsc_select_queue (17,783,120 samples, 0.02%)</title><rect x="125.9" y="1397" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="128.92" y="1407.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (7,458,355 samples, 0.01%)</title><rect x="1032.1" y="1909" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1035.07" y="1919.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char*, char*&gt; (36,044,248 samples, 0.04%)</title><rect x="670.1" y="1653" width="0.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="673.09" y="1663.5" ></text>
</g>
<g >
<title>inet_sendmsg (1,381,169,018 samples, 1.66%)</title><rect x="851.2" y="1653" width="19.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="854.17" y="1663.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (34,125,839 samples, 0.04%)</title><rect x="503.2" y="1749" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="506.21" y="1759.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (8,781,843 samples, 0.01%)</title><rect x="520.0" y="1781" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="523.05" y="1791.5" ></text>
</g>
<g >
<title>netvsc_poll (7,751,435 samples, 0.01%)</title><rect x="754.0" y="1509" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="757.04" y="1519.5" ></text>
</g>
<g >
<title>TimerManager::Tick (38,742,196 samples, 0.05%)</title><rect x="588.5" y="1925" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="591.47" y="1935.5" ></text>
</g>
<g >
<title>x64_sys_call (628,460,312 samples, 0.75%)</title><rect x="383.5" y="1765" width="8.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="386.52" y="1775.5" ></text>
</g>
<g >
<title>lock_timer_base (26,399,127 samples, 0.03%)</title><rect x="1163.4" y="1477" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1166.38" y="1487.5" ></text>
</g>
<g >
<title>release_sock (27,415,615 samples, 0.03%)</title><rect x="1119.8" y="1637" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1122.77" y="1647.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (12,459,738 samples, 0.01%)</title><rect x="1093.7" y="1717" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1096.68" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (21,789,583 samples, 0.03%)</title><rect x="591.1" y="1941" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.08" y="1951.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (10,115,147 samples, 0.01%)</title><rect x="432.3" y="1557" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="435.26" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (24,972,098 samples, 0.03%)</title><rect x="440.1" y="1717" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="443.14" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (8,704,630 samples, 0.01%)</title><rect x="761.8" y="1685" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="764.81" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (80,928,801 samples, 0.10%)</title><rect x="331.8" y="1685" width="1.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="334.80" y="1695.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::find (127,096,600 samples, 0.15%)</title><rect x="295.5" y="1909" width="1.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="298.48" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9,258,675 samples, 0.01%)</title><rect x="443.0" y="1461" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="445.97" y="1471.5" ></text>
</g>
<g >
<title>[web-server] (7,414,930 samples, 0.01%)</title><rect x="254.5" y="1765" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="257.53" y="1775.5" ></text>
</g>
<g >
<title>memset_orig (10,839,240 samples, 0.01%)</title><rect x="1017.2" y="1573" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1020.17" y="1583.5" ></text>
</g>
<g >
<title>handle_softirqs (7,519,736 samples, 0.01%)</title><rect x="157.4" y="1973" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="160.42" y="1983.5" ></text>
</g>
<g >
<title>selinux_inode_permission (9,129,938 samples, 0.01%)</title><rect x="806.3" y="1573" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="809.25" y="1583.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (62,758,519 samples, 0.08%)</title><rect x="681.2" y="1589" width="0.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="684.20" y="1599.5" ></text>
</g>
<g >
<title>__napi_poll (12,180,482 samples, 0.01%)</title><rect x="141.2" y="1701" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="144.21" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::empty (8,652,648 samples, 0.01%)</title><rect x="105.7" y="1765" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="108.73" y="1775.5" ></text>
</g>
<g >
<title>napi_complete_done (10,490,926 samples, 0.01%)</title><rect x="734.6" y="1605" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="737.60" y="1615.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator++ (38,825,769 samples, 0.05%)</title><rect x="488.5" y="1701" width="0.6" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="491.52" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (7,242,960 samples, 0.01%)</title><rect x="491.1" y="1749" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="494.08" y="1759.5" ></text>
</g>
<g >
<title>__skb_flow_dissect (26,864,700 samples, 0.03%)</title><rect x="715.7" y="1381" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="718.70" y="1391.5" ></text>
</g>
<g >
<title>__napi_poll (19,460,331 samples, 0.02%)</title><rect x="62.9" y="1605" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="65.86" y="1615.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (16,416,147 samples, 0.02%)</title><rect x="822.7" y="1669" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="825.65" y="1679.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (13,840,716 samples, 0.02%)</title><rect x="1089.5" y="1653" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1092.53" y="1663.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (26,241,553 samples, 0.03%)</title><rect x="448.2" y="1781" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="451.17" y="1791.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::at (91,986,202 samples, 0.11%)</title><rect x="205.0" y="1749" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="208.02" y="1759.5" ></text>
</g>
<g >
<title>__x64_sys_read (592,761,893 samples, 0.71%)</title><rect x="1115.9" y="1749" width="8.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1118.92" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="213" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="223.5" ></text>
</g>
<g >
<title>selinux_socket_sendmsg (33,049,776 samples, 0.04%)</title><rect x="870.8" y="1637" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="873.76" y="1647.5" ></text>
</g>
<g >
<title>__napi_poll (8,075,743 samples, 0.01%)</title><rect x="236.4" y="1525" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="239.39" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (621,713,332 samples, 0.75%)</title><rect x="359.7" y="1733" width="8.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="362.71" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Channel,  (7,167,057 samples, 0.01%)</title><rect x="816.0" y="1797" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="819.03" y="1807.5" ></text>
</g>
<g >
<title>ksys_read (628,173,157 samples, 0.75%)</title><rect x="85.8" y="1733" width="8.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="88.85" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (24,067,006 samples, 0.03%)</title><rect x="1052.6" y="1749" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1055.61" y="1759.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (7,851,335 samples, 0.01%)</title><rect x="991.5" y="1717" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="994.53" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (42,880,669 samples, 0.05%)</title><rect x="354.3" y="1749" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="357.34" y="1759.5" ></text>
</g>
<g >
<title>[web-server] (19,349,254 samples, 0.02%)</title><rect x="373.5" y="1781" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="376.52" y="1791.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (54,432,047 samples, 0.07%)</title><rect x="808.9" y="1749" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="811.90" y="1759.5" ></text>
</g>
<g >
<title>__seccomp_filter (11,429,289 samples, 0.01%)</title><rect x="821.0" y="1717" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="823.97" y="1727.5" ></text>
</g>
<g >
<title>handle_softirqs (30,255,273 samples, 0.04%)</title><rect x="440.1" y="1733" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="443.12" y="1743.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (18,879,372 samples, 0.02%)</title><rect x="154.1" y="2053" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="157.10" y="2063.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (35,537,327 samples, 0.04%)</title><rect x="149.7" y="1877" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="152.71" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (22,487,913 samples, 0.03%)</title><rect x="1034.0" y="2005" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.99" y="2015.5" ></text>
</g>
<g >
<title>handle_softirqs (18,146,008 samples, 0.02%)</title><rect x="893.7" y="1973" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="896.65" y="1983.5" ></text>
</g>
<g >
<title>netlbl_enabled (8,698,798 samples, 0.01%)</title><rect x="562.7" y="1461" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="565.70" y="1471.5" ></text>
</g>
<g >
<title>rep_movs_alternative (7,436,926 samples, 0.01%)</title><rect x="836.8" y="1605" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="839.82" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (17,572,299 samples, 0.02%)</title><rect x="220.3" y="1765" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="223.26" y="1775.5" ></text>
</g>
<g >
<title>irq_exit_rcu (31,306,018 samples, 0.04%)</title><rect x="503.2" y="1717" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="506.24" y="1727.5" ></text>
</g>
<g >
<title>__skb_clone (10,518,303 samples, 0.01%)</title><rect x="278.6" y="1525" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="281.56" y="1535.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (8,175,998 samples, 0.01%)</title><rect x="1050.7" y="1637" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1053.69" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (17,951,234 samples, 0.02%)</title><rect x="448.9" y="1525" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="451.86" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (17,533,433 samples, 0.02%)</title><rect x="150.6" y="1253" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.63" y="1263.5" ></text>
</g>
<g >
<title>sock_close (7,539,876 samples, 0.01%)</title><rect x="905.1" y="1461" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="908.07" y="1471.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8,951,319 samples, 0.01%)</title><rect x="989.4" y="1765" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="992.43" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (10,112,787 samples, 0.01%)</title><rect x="123.0" y="1349" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="125.99" y="1359.5" ></text>
</g>
<g >
<title>file_has_perm (8,072,464 samples, 0.01%)</title><rect x="433.6" y="1637" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="436.65" y="1647.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (7,871,233 samples, 0.01%)</title><rect x="784.3" y="1701" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="787.30" y="1711.5" ></text>
</g>
<g >
<title>HttpResponse::Clear (8,193,589 samples, 0.01%)</title><rect x="930.9" y="1781" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="933.95" y="1791.5" ></text>
</g>
<g >
<title>netvsc_poll (7,661,320 samples, 0.01%)</title><rect x="178.2" y="1653" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="181.23" y="1663.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr (30,067,170 samples, 0.04%)</title><rect x="1177.1" y="1909" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1180.07" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (9,399,023 samples, 0.01%)</title><rect x="297.4" y="1845" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="300.45" y="1855.5" ></text>
</g>
<g >
<title>sock_read_iter (376,052,163 samples, 0.45%)</title><rect x="1118.9" y="1701" width="5.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1121.90" y="1711.5" ></text>
</g>
<g >
<title>ip_list_rcv (9,535,305 samples, 0.01%)</title><rect x="744.8" y="1861" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="747.77" y="1871.5" ></text>
</g>
<g >
<title>ksys_read (577,534,305 samples, 0.69%)</title><rect x="1116.1" y="1733" width="8.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1119.10" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end (7,321,527 samples, 0.01%)</title><rect x="76.9" y="1781" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="79.86" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (9,938,823,143 samples, 11.93%)</title><rect x="599.9" y="1973" width="140.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="602.90" y="1983.5" >std::__invoke_imp..</text>
</g>
<g >
<title>netvsc_poll (7,733,348 samples, 0.01%)</title><rect x="655.1" y="1493" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="658.08" y="1503.5" ></text>
</g>
<g >
<title>vfs_read (533,919,898 samples, 0.64%)</title><rect x="1116.7" y="1717" width="7.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1119.72" y="1727.5" ></text>
</g>
<g >
<title>netvsc_recv_callback (11,400,420 samples, 0.01%)</title><rect x="731.5" y="1653" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="734.52" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (7,671,405 samples, 0.01%)</title><rect x="224.2" y="1621" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="227.20" y="1631.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (14,588,046 samples, 0.02%)</title><rect x="397.0" y="1621" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="400.01" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (34,122,035 samples, 0.04%)</title><rect x="1030.9" y="1845" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1033.91" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (15,714,971 samples, 0.02%)</title><rect x="980.2" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="983.16" y="1599.5" ></text>
</g>
<g >
<title>rep_movs_alternative (31,173,620 samples, 0.04%)</title><rect x="827.4" y="1557" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="830.39" y="1567.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (25,796,688 samples, 0.03%)</title><rect x="734.6" y="1733" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="737.58" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (19,094,923 samples, 0.02%)</title><rect x="300.1" y="1461" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.09" y="1471.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (37,994,126 samples, 0.05%)</title><rect x="54.8" y="1669" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="57.77" y="1679.5" ></text>
</g>
<g >
<title>__schedule (79,904,226 samples, 0.10%)</title><rect x="442.6" y="1765" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="445.58" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (11,639,256 samples, 0.01%)</title><rect x="196.5" y="1765" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="199.50" y="1775.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (42,946,783 samples, 0.05%)</title><rect x="1117.2" y="1669" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1120.21" y="1679.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;Channel&gt;*, std::shared_ptr&lt;Channel&gt; &gt; (37,950,365 samples, 0.05%)</title><rect x="299.2" y="1893" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="302.20" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (15,568,802 samples, 0.02%)</title><rect x="256.1" y="1733" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="259.05" y="1743.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (9,060,119 samples, 0.01%)</title><rect x="925.8" y="1637" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="928.84" y="1647.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;char*&gt;, char*&gt; (13,213,055 samples, 0.02%)</title><rect x="379.2" y="1685" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="382.21" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;Channel&gt; &gt;::construct&lt;std::shared_ptr&lt;Channel&gt;, std::shared_ptr&lt;Channel&gt; const&amp;&gt; (10,909,771 samples, 0.01%)</title><rect x="884.5" y="1877" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="887.49" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="1573" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (9,180,456 samples, 0.01%)</title><rect x="1159.7" y="1269" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1162.69" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (12,209,253 samples, 0.01%)</title><rect x="252.3" y="1685" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="255.30" y="1695.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (206,919,967 samples, 0.25%)</title><rect x="1120.3" y="1637" width="3.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1123.34" y="1647.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;Channel&gt;*&gt; (25,038,227 samples, 0.03%)</title><rect x="740.1" y="1861" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="743.11" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9,896,815 samples, 0.01%)</title><rect x="1027.6" y="1461" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1030.56" y="1471.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (17,257,301 samples, 0.02%)</title><rect x="380.8" y="1637" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="383.75" y="1647.5" ></text>
</g>
<g >
<title>lookup_fast (18,226,313 samples, 0.02%)</title><rect x="217.3" y="1573" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="220.29" y="1583.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (7,714,784 samples, 0.01%)</title><rect x="571.6" y="1461" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="574.57" y="1471.5" ></text>
</g>
<g >
<title>__GI___pthread_enable_asynccancel (9,130,776 samples, 0.01%)</title><rect x="818.3" y="1813" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="821.25" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (16,338,102 samples, 0.02%)</title><rect x="886.9" y="469" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.88" y="479.5" ></text>
</g>
<g >
<title>__mod_timer (84,539,701 samples, 0.10%)</title><rect x="867.3" y="1493" width="1.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="870.31" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (8,075,743 samples, 0.01%)</title><rect x="236.4" y="1541" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="239.39" y="1551.5" ></text>
</g>
</g>
</svg>
