<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1766" onload="init(evt)" viewBox="0 0 1200 1766" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1766.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1749" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1749" > </text>
<g id="frames">
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (55,708,706 samples, 0.02%)</title><rect x="683.5" y="1349" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="686.46" y="1359.5" ></text>
</g>
<g >
<title>sock_close (203,192,057 samples, 0.08%)</title><rect x="832.9" y="1093" width="0.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="835.95" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (45,740,390 samples, 0.02%)</title><rect x="917.1" y="933" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="920.09" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (262,932,759 samples, 0.10%)</title><rect x="652.6" y="1029" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="655.62" y="1039.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (85,866,723 samples, 0.03%)</title><rect x="261.2" y="1397" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="264.21" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (218,603,391 samples, 0.08%)</title><rect x="635.7" y="901" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="638.66" y="911.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (29,013,696 samples, 0.01%)</title><rect x="1064.6" y="789" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1067.64" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (43,560,775 samples, 0.02%)</title><rect x="927.7" y="949" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="930.75" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (244,560,978 samples, 0.09%)</title><rect x="793.6" y="1029" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="796.65" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (23,162,380 samples, 0.01%)</title><rect x="556.9" y="965" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="975.5" ></text>
</g>
<g >
<title>[libc.so.6] (33,901,675 samples, 0.01%)</title><rect x="707.5" y="1653" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="710.45" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (194,985,087 samples, 0.07%)</title><rect x="205.4" y="1029" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.44" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (781,291,297 samples, 0.29%)</title><rect x="937.6" y="1045" width="3.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="940.57" y="1055.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (30,537,896 samples, 0.01%)</title><rect x="261.9" y="1237" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="264.91" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (86,707,881 samples, 0.03%)</title><rect x="400.7" y="1269" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="403.68" y="1279.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Channel, int&amp;&gt; (191,380,017 samples, 0.07%)</title><rect x="1160.2" y="1301" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1163.22" y="1311.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (76,370,600 samples, 0.03%)</title><rect x="1063.6" y="885" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1066.64" y="895.5" ></text>
</g>
<g >
<title>handle_mm_fault (38,907,690 samples, 0.01%)</title><rect x="128.7" y="1157" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="131.73" y="1167.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (107,445,805 samples, 0.04%)</title><rect x="687.6" y="1269" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="690.57" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (204,308,672 samples, 0.08%)</title><rect x="347.2" y="997" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.20" y="1007.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (24,636,112 samples, 0.01%)</title><rect x="125.5" y="725" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="128.50" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (31,189,741 samples, 0.01%)</title><rect x="1054.7" y="437" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.68" y="447.5" ></text>
</g>
<g >
<title>x64_sys_call (327,891,601 samples, 0.12%)</title><rect x="968.9" y="1349" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="971.91" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="549" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="559.5" ></text>
</g>
<g >
<title>dentry_free (29,743,441 samples, 0.01%)</title><rect x="1165.5" y="1301" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1168.49" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (31,317,796 samples, 0.01%)</title><rect x="399.3" y="1205" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="402.30" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (633,154,672 samples, 0.24%)</title><rect x="325.5" y="1077" width="2.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="328.53" y="1087.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (44,018,220 samples, 0.02%)</title><rect x="768.7" y="1269" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="771.72" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (31,713,627 samples, 0.01%)</title><rect x="478.1" y="1093" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="481.13" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (38,137,534 samples, 0.01%)</title><rect x="63.7" y="485" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.69" y="495.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (56,040,109 samples, 0.02%)</title><rect x="895.9" y="1045" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="898.88" y="1055.5" ></text>
</g>
<g >
<title>net_rx_action (32,422,226 samples, 0.01%)</title><rect x="161.5" y="1013" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="164.55" y="1023.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (139,325,992 samples, 0.05%)</title><rect x="543.0" y="1381" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="545.98" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (50,807,202 samples, 0.02%)</title><rect x="113.3" y="1045" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="116.31" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (47,338,289 samples, 0.02%)</title><rect x="824.1" y="661" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.05" y="671.5" ></text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (366,500,763 samples, 0.14%)</title><rect x="1053.8" y="1365" width="1.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1056.80" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (108,100,608 samples, 0.04%)</title><rect x="825.9" y="1365" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="828.85" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (50,716,671 samples, 0.02%)</title><rect x="911.6" y="789" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.61" y="799.5" ></text>
</g>
<g >
<title>do_user_addr_fault (84,942,918 samples, 0.03%)</title><rect x="411.3" y="1173" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="414.31" y="1183.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (59,058,556 samples, 0.02%)</title><rect x="294.3" y="1301" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="297.33" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,766,980,863 samples, 1.41%)</title><rect x="365.6" y="1253" width="16.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="368.55" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (210,885,563 samples, 0.08%)</title><rect x="640.9" y="933" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="643.94" y="943.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (78,512,519 samples, 0.03%)</title><rect x="980.2" y="1653" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="983.22" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (41,838,744 samples, 0.02%)</title><rect x="912.1" y="389" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.08" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (30,880,709 samples, 0.01%)</title><rect x="818.0" y="1061" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="821.02" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,711,614 samples, 0.02%)</title><rect x="966.3" y="741" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.30" y="751.5" ></text>
</g>
<g >
<title>handle_softirqs (41,220,123 samples, 0.02%)</title><rect x="727.0" y="1029" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="729.97" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,671,200,812 samples, 1.37%)</title><rect x="207.2" y="1109" width="16.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="210.22" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (30,439,271 samples, 0.01%)</title><rect x="118.4" y="533" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="121.37" y="543.5" ></text>
</g>
<g >
<title>osq_lock (45,095,621 samples, 0.02%)</title><rect x="121.9" y="1253" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="124.94" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (27,594,612 samples, 0.01%)</title><rect x="63.5" y="437" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.52" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,980,838 samples, 0.01%)</title><rect x="205.5" y="261" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.54" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (45,765,147 samples, 0.02%)</title><rect x="54.7" y="1077" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="57.74" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (774,635,857 samples, 0.29%)</title><rect x="795.8" y="1045" width="3.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="798.83" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (239,415,398 samples, 0.09%)</title><rect x="675.9" y="1077" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="678.92" y="1087.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (39,398,309 samples, 0.01%)</title><rect x="71.9" y="885" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="74.92" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,598,624,253 samples, 1.35%)</title><rect x="631.2" y="1109" width="15.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="634.21" y="1119.5" ></text>
</g>
<g >
<title>operator new[] (34,563,137 samples, 0.01%)</title><rect x="699.0" y="1653" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="701.98" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (48,071,520 samples, 0.02%)</title><rect x="1108.0" y="1285" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1111.03" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (37,953,212 samples, 0.01%)</title><rect x="1132.5" y="1653" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1135.49" y="1663.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (112,890,893 samples, 0.04%)</title><rect x="273.1" y="1669" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="276.08" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (28,069,782 samples, 0.01%)</title><rect x="728.8" y="1061" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="731.76" y="1071.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (76,696,708 samples, 0.03%)</title><rect x="1055.5" y="1381" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1058.47" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,594,612 samples, 0.01%)</title><rect x="63.5" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.52" y="463.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (26,636,782 samples, 0.01%)</title><rect x="1086.6" y="1061" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1089.62" y="1071.5" ></text>
</g>
<g >
<title>EventLoop::Loop (27,416,854,247 samples, 10.27%)</title><rect x="10.3" y="1573" width="121.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="13.29" y="1583.5" >EventLoop::Loop</text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (36,906,083 samples, 0.01%)</title><rect x="1105.2" y="1093" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1108.21" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (191,929,165 samples, 0.07%)</title><rect x="63.2" y="1029" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.17" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (30,411,568 samples, 0.01%)</title><rect x="778.6" y="933" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="781.63" y="943.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (192,150,360 samples, 0.07%)</title><rect x="498.1" y="853" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="501.05" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (34,697,125 samples, 0.01%)</title><rect x="1054.9" y="533" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.86" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (366,100,071 samples, 0.14%)</title><rect x="211.3" y="933" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="214.29" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (51,487,515 samples, 0.02%)</title><rect x="630.0" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.95" y="591.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (114,421,999 samples, 0.04%)</title><rect x="520.3" y="1045" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="523.26" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (27,733,929 samples, 0.01%)</title><rect x="963.5" y="1093" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="966.46" y="1103.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (64,781,200 samples, 0.02%)</title><rect x="646.2" y="981" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="649.19" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (71,555,228 samples, 0.03%)</title><rect x="400.7" y="1029" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.71" y="1039.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (94,956,431 samples, 0.04%)</title><rect x="1184.3" y="1157" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1187.35" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (27,208,391 samples, 0.01%)</title><rect x="633.0" y="949" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="635.97" y="959.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (28,317,208 samples, 0.01%)</title><rect x="191.3" y="1077" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="194.32" y="1087.5" ></text>
</g>
<g >
<title>__dynamic_cast (41,917,790 samples, 0.02%)</title><rect x="351.7" y="933" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="354.73" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (24,606,370 samples, 0.01%)</title><rect x="494.0" y="917" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="496.96" y="927.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (391,488,963 samples, 0.15%)</title><rect x="467.3" y="1061" width="1.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="470.30" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (65,219,613 samples, 0.02%)</title><rect x="578.7" y="1221" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="581.65" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (254,592,233 samples, 0.10%)</title><rect x="770.6" y="1189" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.56" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (40,971,929 samples, 0.02%)</title><rect x="196.2" y="1077" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="199.24" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (29,041,648 samples, 0.01%)</title><rect x="802.9" y="1061" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="805.89" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,904,592,742 samples, 1.46%)</title><rect x="81.9" y="1237" width="17.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="84.94" y="1247.5" ></text>
</g>
<g >
<title>__munmap (387,924,550 samples, 0.15%)</title><rect x="549.3" y="1189" width="1.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="552.31" y="1199.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (24,590,940 samples, 0.01%)</title><rect x="182.3" y="1045" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="185.34" y="1055.5" ></text>
</g>
<g >
<title>sch_direct_xmit (27,141,996 samples, 0.01%)</title><rect x="1117.9" y="821" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1120.87" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (23,355,389 samples, 0.01%)</title><rect x="63.5" y="389" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.52" y="399.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (123,733,947 samples, 0.05%)</title><rect x="546.4" y="1269" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="549.45" y="1279.5" ></text>
</g>
<g >
<title>ip_finish_output2 (70,980,824 samples, 0.03%)</title><rect x="835.7" y="1077" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="838.68" y="1087.5" ></text>
</g>
<g >
<title>__ep_remove (29,392,787 samples, 0.01%)</title><rect x="829.5" y="1205" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="832.45" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (48,585,233 samples, 0.02%)</title><rect x="912.1" y="485" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="915.07" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (2,043,589,493 samples, 0.77%)</title><rect x="933.0" y="1061" width="9.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="936.01" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (382,219,586 samples, 0.14%)</title><rect x="652.1" y="1045" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="655.09" y="1055.5" ></text>
</g>
<g >
<title>[web-server] (38,339,803 samples, 0.01%)</title><rect x="1075.6" y="1045" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1078.56" y="1055.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (66,390,434 samples, 0.02%)</title><rect x="503.3" y="949" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="506.26" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (50,023,890 samples, 0.02%)</title><rect x="205.5" y="757" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.50" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (51,165,530 samples, 0.02%)</title><rect x="579.2" y="1253" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="582.16" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,959,413,248 samples, 1.48%)</title><rect x="524.3" y="1205" width="17.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="527.26" y="1215.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (42,558,973 samples, 0.02%)</title><rect x="823.5" y="1285" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="826.54" y="1295.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (26,026,291 samples, 0.01%)</title><rect x="670.7" y="997" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="673.69" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (23,643,476 samples, 0.01%)</title><rect x="205.6" y="165" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.55" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (10,727,373,597 samples, 4.02%)</title><rect x="437.3" y="1253" width="47.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="440.33" y="1263.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,534,275 samples, 0.01%)</title><rect x="1054.9" y="517" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.86" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (68,118,055 samples, 0.03%)</title><rect x="684.0" y="1013" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="686.98" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (102,833,536 samples, 0.04%)</title><rect x="1013.2" y="1077" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1016.25" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (23,981,163 samples, 0.01%)</title><rect x="484.8" y="1221" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="487.84" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (234,693,466 samples, 0.09%)</title><rect x="392.7" y="1077" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="395.67" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (90,155,916 samples, 0.03%)</title><rect x="989.1" y="1669" width="0.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="992.09" y="1679.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (944,322,896 samples, 0.35%)</title><rect x="830.0" y="1381" width="4.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="832.99" y="1391.5" ></text>
</g>
<g >
<title>Channel::OnRead (25,592,613,456 samples, 9.58%)</title><rect x="10.3" y="1541" width="113.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="13.34" y="1551.5" >Channel::OnRead</text>
</g>
<g >
<title>HttpResponse::GetFileType (24,869,871 samples, 0.01%)</title><rect x="119.8" y="1381" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="122.79" y="1391.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (35,744,412 samples, 0.01%)</title><rect x="214.3" y="885" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="217.31" y="895.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (790,157,037 samples, 0.30%)</title><rect x="124.3" y="1237" width="3.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="127.35" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (32,418,806 samples, 0.01%)</title><rect x="961.2" y="1077" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="964.16" y="1087.5" ></text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (416,106,356 samples, 0.16%)</title><rect x="911.0" y="1365" width="1.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="913.95" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (41,912,163 samples, 0.02%)</title><rect x="1054.7" y="629" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.66" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (78,442,381 samples, 0.03%)</title><rect x="824.0" y="1013" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="827.01" y="1023.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;ProtocolHandler&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;ProtocolHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (128,385,134 samples, 0.05%)</title><rect x="1162.9" y="1397" width="0.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1165.95" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (49,807,662 samples, 0.02%)</title><rect x="238.9" y="1061" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="241.88" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (35,418,958 samples, 0.01%)</title><rect x="1052.0" y="1301" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1055.04" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (30,226,988 samples, 0.01%)</title><rect x="526.3" y="1093" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="529.31" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (48,544,951 samples, 0.02%)</title><rect x="1076.7" y="1045" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1079.67" y="1055.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (28,860,104 samples, 0.01%)</title><rect x="691.1" y="837" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="694.15" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (34,702,955 samples, 0.01%)</title><rect x="771.0" y="581" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.97" y="591.5" ></text>
</g>
<g >
<title>x64_sys_call (409,861,203 samples, 0.15%)</title><rect x="694.1" y="1397" width="1.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="697.08" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (30,906,892 samples, 0.01%)</title><rect x="543.7" y="1349" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="546.71" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,929,902,450 samples, 1.47%)</title><rect x="947.7" y="1285" width="17.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="950.70" y="1295.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (54,884,918 samples, 0.02%)</title><rect x="117.8" y="1333" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="120.80" y="1343.5" ></text>
</g>
<g >
<title>operator delete[] (53,985,725 samples, 0.02%)</title><rect x="140.1" y="1669" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="143.07" y="1679.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (143,379,818 samples, 0.05%)</title><rect x="341.8" y="1125" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="344.76" y="1135.5" ></text>
</g>
<g >
<title>tcp_recvmsg (49,963,255 samples, 0.02%)</title><rect x="123.1" y="1285" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="126.08" y="1295.5" ></text>
</g>
<g >
<title>irq_exit_rcu (27,655,008 samples, 0.01%)</title><rect x="425.7" y="1605" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="428.72" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (50,715,092 samples, 0.02%)</title><rect x="767.1" y="1125" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="770.06" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,422,044 samples, 0.02%)</title><rect x="911.6" y="661" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.62" y="671.5" ></text>
</g>
<g >
<title>std::function&lt;void  (45,513,940 samples, 0.02%)</title><rect x="1161.5" y="1317" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1164.47" y="1327.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (30,496,982 samples, 0.01%)</title><rect x="542.7" y="1173" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="545.73" y="1183.5" ></text>
</g>
<g >
<title>operator new (82,376,209 samples, 0.03%)</title><rect x="133.1" y="1653" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="136.11" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,628,851,574 samples, 3.98%)</title><rect x="720.8" y="1285" width="47.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="723.79" y="1295.5" >std:..</text>
</g>
<g >
<title>x64_sys_call (322,684,672 samples, 0.12%)</title><rect x="1115.3" y="1141" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1118.29" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::vector (31,981,956 samples, 0.01%)</title><rect x="770.3" y="1317" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="773.32" y="1327.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (34,833,109 samples, 0.01%)</title><rect x="967.9" y="1365" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="970.88" y="1375.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (49,036,626 samples, 0.02%)</title><rect x="1186.4" y="1589" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1189.42" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_begin (25,344,907 samples, 0.01%)</title><rect x="202.7" y="1269" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="205.70" y="1279.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (463,001,719 samples, 0.17%)</title><rect x="1040.3" y="1093" width="2.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1043.26" y="1103.5" ></text>
</g>
<g >
<title>sch_direct_xmit (28,556,579 samples, 0.01%)</title><rect x="833.5" y="821" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="836.46" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (23,228,151 samples, 0.01%)</title><rect x="1107.6" y="1333" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1110.60" y="1343.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (51,839,027 samples, 0.02%)</title><rect x="41.1" y="1013" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="44.08" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (586,584,303 samples, 0.22%)</title><rect x="231.8" y="1029" width="2.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="234.79" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (87,627,472 samples, 0.03%)</title><rect x="615.7" y="1077" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="618.70" y="1087.5" ></text>
</g>
<g >
<title>iput (51,425,302 samples, 0.02%)</title><rect x="832.7" y="1045" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="835.66" y="1055.5" ></text>
</g>
<g >
<title>__strxfrm_l (113,354,596 samples, 0.04%)</title><rect x="278.4" y="1669" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="281.41" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,689,828,354 samples, 4.00%)</title><rect x="437.5" y="1221" width="47.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="440.47" y="1231.5" >std:..</text>
</g>
<g >
<title>nf_hook_slow (28,466,151 samples, 0.01%)</title><rect x="975.4" y="885" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="978.37" y="895.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (333,031,376 samples, 0.12%)</title><rect x="49.6" y="1077" width="1.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="52.61" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (26,257,185 samples, 0.01%)</title><rect x="333.9" y="1061" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="336.87" y="1071.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (23,669,508 samples, 0.01%)</title><rect x="713.6" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="716.63" y="1663.5" ></text>
</g>
<g >
<title>netvsc_poll (32,194,895 samples, 0.01%)</title><rect x="303.1" y="981" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="306.10" y="991.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (29,260,173 samples, 0.01%)</title><rect x="1141.3" y="1429" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1144.34" y="1439.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (28,965,466 samples, 0.01%)</title><rect x="1116.0" y="949" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1118.96" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (38,850,952 samples, 0.01%)</title><rect x="347.5" y="629" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.54" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,568,332,903 samples, 1.34%)</title><rect x="631.3" y="1061" width="15.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="634.28" y="1071.5" ></text>
</g>
<g >
<title>rep_movs_alternative (97,958,682 samples, 0.04%)</title><rect x="1119.2" y="1221" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1122.23" y="1231.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (133,254,915 samples, 0.05%)</title><rect x="502.5" y="933" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="505.53" y="943.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (108,963,904 samples, 0.04%)</title><rect x="1053.0" y="1365" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1056.03" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (63,012,840 samples, 0.02%)</title><rect x="860.7" y="1205" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="863.72" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (44,220,503 samples, 0.02%)</title><rect x="1050.8" y="1125" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1053.80" y="1135.5" ></text>
</g>
<g >
<title>inet_csk_accept (755,602,226 samples, 0.28%)</title><rect x="1168.0" y="1333" width="3.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1171.00" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (133,735,512 samples, 0.05%)</title><rect x="134.2" y="1653" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="137.20" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,546,932,196 samples, 1.33%)</title><rect x="349.1" y="1045" width="15.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="352.07" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,654,046,625 samples, 1.37%)</title><rect x="348.9" y="1189" width="16.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="351.93" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (38,804,356 samples, 0.01%)</title><rect x="1002.9" y="1109" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1005.89" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,724,650 samples, 0.02%)</title><rect x="63.2" y="661" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.24" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (82,213,319 samples, 0.03%)</title><rect x="762.7" y="1093" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="765.72" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,625,078 samples, 0.01%)</title><rect x="1054.7" y="533" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.67" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (27,160,503 samples, 0.01%)</title><rect x="966.3" y="469" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="969.34" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (24,184,664 samples, 0.01%)</title><rect x="918.8" y="869" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="921.82" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (26,543,410 samples, 0.01%)</title><rect x="908.4" y="1221" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="911.38" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="437" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (651,785,047 samples, 0.24%)</title><rect x="310.0" y="1061" width="2.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="313.02" y="1071.5" ></text>
</g>
<g >
<title>__napi_poll (170,480,274 samples, 0.06%)</title><rect x="1184.3" y="1333" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1187.25" y="1343.5" ></text>
</g>
<g >
<title>d_instantiate (183,270,569 samples, 0.07%)</title><rect x="1176.8" y="1317" width="0.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1179.78" y="1327.5" ></text>
</g>
<g >
<title>std::priority_queue&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt;, TimerManager::TimerCmp&gt;::pop (33,537,207 samples, 0.01%)</title><rect x="979.4" y="1541" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="982.42" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (610,418,544 samples, 0.23%)</title><rect x="1080.5" y="1029" width="2.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1083.45" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::function&lt;void  (23,174,838 samples, 0.01%)</title><rect x="1157.6" y="1221" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1160.63" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (25,236,670 samples, 0.01%)</title><rect x="238.8" y="1061" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="241.77" y="1071.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (96,380,999 samples, 0.04%)</title><rect x="585.9" y="1077" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="588.93" y="1087.5" ></text>
</g>
<g >
<title>dput (71,955,753 samples, 0.03%)</title><rect x="126.5" y="1093" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="129.55" y="1103.5" ></text>
</g>
<g >
<title>HttpRequest::~HttpRequest (29,439,854 samples, 0.01%)</title><rect x="406.7" y="1189" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="409.75" y="1199.5" ></text>
</g>
<g >
<title>read (123,075,611 samples, 0.05%)</title><rect x="405.1" y="1445" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="408.13" y="1455.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (49,440,563 samples, 0.02%)</title><rect x="856.8" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="859.77" y="1631.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (26,741,766 samples, 0.01%)</title><rect x="555.1" y="1397" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="558.09" y="1407.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (44,712,511 samples, 0.02%)</title><rect x="219.4" y="901" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="222.36" y="911.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (58,616,387 samples, 0.02%)</title><rect x="1106.1" y="1109" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1109.06" y="1119.5" ></text>
</g>
<g >
<title>sock_read_iter (54,998,906 samples, 0.02%)</title><rect x="688.8" y="1333" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="691.76" y="1343.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (41,954,737 samples, 0.02%)</title><rect x="486.0" y="1317" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="488.96" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (40,577,588 samples, 0.02%)</title><rect x="401.2" y="1349" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="404.24" y="1359.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (28,738,555 samples, 0.01%)</title><rect x="461.8" y="981" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="464.77" y="991.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (27,894,930 samples, 0.01%)</title><rect x="644.2" y="949" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="647.23" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (40,078,620 samples, 0.02%)</title><rect x="206.0" y="517" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.97" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (44,389,000 samples, 0.02%)</title><rect x="488.4" y="517" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="491.37" y="527.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (47,381,205 samples, 0.02%)</title><rect x="682.0" y="1125" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="684.96" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (81,762,247 samples, 0.03%)</title><rect x="1108.5" y="1237" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1111.53" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (31,228,422 samples, 0.01%)</title><rect x="12.2" y="1109" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="15.22" y="1119.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (86,523,691 samples, 0.03%)</title><rect x="106.8" y="1061" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="109.76" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (103,817,631 samples, 0.04%)</title><rect x="205.8" y="757" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.75" y="767.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (35,027,138 samples, 0.01%)</title><rect x="405.4" y="1269" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="408.41" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,800,644,207 samples, 4.42%)</title><rect x="1055.8" y="1365" width="52.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1058.85" y="1375.5" >std::..</text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (58,941,080 samples, 0.02%)</title><rect x="787.4" y="965" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="790.38" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (41,041,036 samples, 0.02%)</title><rect x="1109.0" y="1365" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1112.04" y="1375.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (40,864,323 samples, 0.02%)</title><rect x="435.6" y="1045" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="438.62" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28,656,489 samples, 0.01%)</title><rect x="770.7" y="309" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.73" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (82,279,853 samples, 0.03%)</title><rect x="400.7" y="1141" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.70" y="1151.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (77,530,287 samples, 0.03%)</title><rect x="920.3" y="917" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="923.27" y="927.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (25,445,077,838 samples, 9.53%)</title><rect x="858.9" y="1477" width="112.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="861.90" y="1487.5" >std::__invoke..</text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (47,247,643 samples, 0.02%)</title><rect x="964.1" y="1125" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="967.13" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (27,463,478 samples, 0.01%)</title><rect x="1003.4" y="1237" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1006.41" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (32,855,781 samples, 0.01%)</title><rect x="837.2" y="1509" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="840.16" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (96,702,952 samples, 0.04%)</title><rect x="1054.6" y="805" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.64" y="815.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (24,181,343 samples, 0.01%)</title><rect x="671.3" y="1077" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="674.34" y="1087.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (31,419,045 samples, 0.01%)</title><rect x="325.3" y="1013" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="328.26" y="1023.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (411,812,360 samples, 0.15%)</title><rect x="976.7" y="1317" width="1.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="979.66" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (320,069,804 samples, 0.12%)</title><rect x="403.4" y="1333" width="1.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="406.37" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (48,410,893 samples, 0.02%)</title><rect x="63.2" y="725" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.22" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (33,008,543 samples, 0.01%)</title><rect x="720.4" y="1237" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="723.35" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (71,826,274 samples, 0.03%)</title><rect x="743.2" y="1013" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="746.23" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (48,534,914 samples, 0.02%)</title><rect x="626.8" y="1301" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="629.81" y="1311.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (22,720,363 samples, 0.01%)</title><rect x="326.5" y="1061" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="329.48" y="1071.5" ></text>
</g>
<g >
<title>do_writev (456,526,530 samples, 0.17%)</title><rect x="834.5" y="1365" width="2.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="837.51" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (81,698,009 samples, 0.03%)</title><rect x="824.0" y="1061" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.01" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,386,359,150 samples, 1.27%)</title><rect x="806.5" y="1109" width="15.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="809.51" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,823,338,928 samples, 4.05%)</title><rect x="437.3" y="1285" width="47.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="440.31" y="1295.5" >std:..</text>
</g>
<g >
<title>inet_accept (935,663,194 samples, 0.35%)</title><rect x="1167.6" y="1349" width="4.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1170.55" y="1359.5" ></text>
</g>
<g >
<title>vfs_read (87,334,693 samples, 0.03%)</title><rect x="264.4" y="1349" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="267.40" y="1359.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (108,454,991 samples, 0.04%)</title><rect x="1053.0" y="1349" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1056.03" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (87,407,555 samples, 0.03%)</title><rect x="55.3" y="1093" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="58.33" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (792,280,231 samples, 0.30%)</title><rect x="654.8" y="1045" width="3.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="657.84" y="1055.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (51,066,963 samples, 0.02%)</title><rect x="537.3" y="1061" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="540.25" y="1071.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (844,870,178 samples, 0.32%)</title><rect x="265.8" y="1285" width="3.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="268.81" y="1295.5" ></text>
</g>
<g >
<title>[web-server] (25,819,164 samples, 0.01%)</title><rect x="791.9" y="1045" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="794.88" y="1055.5" ></text>
</g>
<g >
<title>do_writev (434,924,620 samples, 0.16%)</title><rect x="552.8" y="1365" width="2.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="555.85" y="1375.5" ></text>
</g>
<g >
<title>[web-server] (27,637,056 samples, 0.01%)</title><rect x="492.4" y="933" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="495.42" y="943.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (49,766,144 samples, 0.02%)</title><rect x="719.0" y="1061" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="722.02" y="1071.5" ></text>
</g>
<g >
<title>release_sock (22,658,214 samples, 0.01%)</title><rect x="1171.9" y="1333" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1174.89" y="1343.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (28,834,206 samples, 0.01%)</title><rect x="209.6" y="933" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="212.57" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,794,228,248 samples, 1.42%)</title><rect x="1072.9" y="1189" width="16.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1075.86" y="1199.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (167,278,432 samples, 0.06%)</title><rect x="1042.7" y="1093" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1045.66" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (242,663,145 samples, 0.09%)</title><rect x="629.4" y="1157" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.36" y="1167.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (126,019,642 samples, 0.05%)</title><rect x="1066.1" y="917" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1069.15" y="927.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (102,653,814 samples, 0.04%)</title><rect x="769.3" y="1317" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="772.33" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,509,736 samples, 0.01%)</title><rect x="63.7" y="469" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.69" y="479.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="773" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="783.5" ></text>
</g>
<g >
<title>tcp_push (203,767,097 samples, 0.08%)</title><rect x="553.6" y="1237" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="556.65" y="1247.5" ></text>
</g>
<g >
<title>__napi_poll (35,220,996 samples, 0.01%)</title><rect x="691.1" y="901" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="694.14" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::emplace_back&lt;char&gt; (28,054,297 samples, 0.01%)</title><rect x="437.7" y="1125" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="440.68" y="1135.5" ></text>
</g>
<g >
<title>EventLoop::DelChannel (178,204,916 samples, 0.07%)</title><rect x="1113.7" y="1413" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1116.72" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (27,289,439 samples, 0.01%)</title><rect x="503.5" y="949" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="506.55" y="959.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (201,128,489 samples, 0.08%)</title><rect x="604.2" y="965" width="0.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="607.21" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (108,594,767 samples, 0.04%)</title><rect x="911.9" y="773" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.85" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (29,110,498 samples, 0.01%)</title><rect x="578.7" y="1125" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="581.75" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (125,445,844 samples, 0.05%)</title><rect x="590.3" y="1077" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="593.25" y="1087.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (80,064,944 samples, 0.03%)</title><rect x="685.4" y="1397" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="688.43" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (61,749,857 samples, 0.02%)</title><rect x="1001.8" y="1093" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1004.80" y="1103.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (40,828,824 samples, 0.02%)</title><rect x="19.2" y="1077" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="22.25" y="1087.5" ></text>
</g>
<g >
<title>x64_sys_call (288,538,427 samples, 0.11%)</title><rect x="125.0" y="1141" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="127.97" y="1151.5" ></text>
</g>
<g >
<title>__GI___libc_open (131,005,500 samples, 0.05%)</title><rect x="699.7" y="1669" width="0.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="702.73" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (58,143,656 samples, 0.02%)</title><rect x="1147.0" y="1429" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1150.01" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (103,851,076 samples, 0.04%)</title><rect x="118.3" y="1333" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="121.26" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (53,984,291 samples, 0.02%)</title><rect x="484.4" y="1141" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="487.39" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (73,005,915 samples, 0.03%)</title><rect x="400.7" y="1045" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="403.71" y="1055.5" ></text>
</g>
<g >
<title>osq_lock (65,943,365 samples, 0.02%)</title><rect x="1112.1" y="1253" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1115.08" y="1263.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (56,375,049 samples, 0.02%)</title><rect x="75.5" y="885" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="78.53" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (249,697,394 samples, 0.09%)</title><rect x="629.3" y="1205" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="632.35" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::operator= (29,267,205 samples, 0.01%)</title><rect x="206.5" y="1285" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="209.49" y="1295.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (135,399,064 samples, 0.05%)</title><rect x="375.9" y="1029" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="378.92" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (30,495,506 samples, 0.01%)</title><rect x="836.8" y="1429" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="839.85" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (44,843,520 samples, 0.02%)</title><rect x="336.6" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="339.59" y="1087.5" ></text>
</g>
<g >
<title>net_rx_action (24,934,780 samples, 0.01%)</title><rect x="993.6" y="1557" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="996.58" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (28,879,747 samples, 0.01%)</title><rect x="681.2" y="1093" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="684.22" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (41,465,972 samples, 0.02%)</title><rect x="767.5" y="1253" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="770.46" y="1263.5" ></text>
</g>
<g >
<title>loopthread4 (31,973,231,146 samples, 11.97%)</title><rect x="576.7" y="1701" width="141.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="579.69" y="1711.5" >loopthread4</text>
</g>
<g >
<title>netvsc_poll (34,199,249 samples, 0.01%)</title><rect x="292.4" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="295.45" y="1567.5" ></text>
</g>
<g >
<title>HttpConn::Close (1,142,632,913 samples, 0.43%)</title><rect x="829.1" y="1429" width="5.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="832.12" y="1439.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (35,381,461 samples, 0.01%)</title><rect x="70.8" y="933" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="73.75" y="943.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (27,324,194 samples, 0.01%)</title><rect x="117.9" y="1173" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="120.89" y="1183.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (124,993,229 samples, 0.05%)</title><rect x="1176.1" y="1285" width="0.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1179.14" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (214,833,103 samples, 0.08%)</title><rect x="529.5" y="1045" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="532.50" y="1055.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (38,159,849 samples, 0.01%)</title><rect x="1096.0" y="1077" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1098.98" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,651,938 samples, 0.01%)</title><rect x="684.0" y="453" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.05" y="463.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (312,524,252 samples, 0.12%)</title><rect x="1066.9" y="949" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1069.89" y="959.5" ></text>
</g>
<g >
<title>[unknown] (25,988,206 samples, 0.01%)</title><rect x="556.9" y="1429" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1439.5" ></text>
</g>
<g >
<title>__close (28,684,933 samples, 0.01%)</title><rect x="686.4" y="1397" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="689.43" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (179,674,887 samples, 0.07%)</title><rect x="748.5" y="1029" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="751.47" y="1039.5" ></text>
</g>
<g >
<title>x64_sys_call (42,669,705 samples, 0.02%)</title><rect x="859.0" y="1269" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="862.03" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (59,953,415 samples, 0.02%)</title><rect x="259.3" y="1381" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="262.30" y="1391.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (25,791,158 samples, 0.01%)</title><rect x="1170.6" y="1029" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1173.59" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (59,054,465 samples, 0.02%)</title><rect x="347.2" y="805" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.25" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (22,684,874 samples, 0.01%)</title><rect x="785.9" y="933" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="788.93" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (28,974,832 samples, 0.01%)</title><rect x="401.3" y="1333" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="404.28" y="1343.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::DelChannel (164,722,493 samples, 0.06%)</title><rect x="829.2" y="1333" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="832.16" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,675,447,028 samples, 2.87%)</title><rect x="1055.9" y="1269" width="33.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1058.88" y="1279.5" >st..</text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (56,421,683 samples, 0.02%)</title><rect x="154.8" y="1141" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="157.81" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (48,153,733 samples, 0.02%)</title><rect x="824.0" y="693" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="827.05" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (44,650,433 samples, 0.02%)</title><rect x="361.9" y="901" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="364.87" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_realloc_insert&lt;char&gt; (22,872,248 samples, 0.01%)</title><rect x="13.4" y="1109" width="0.1" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="16.42" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (24,085,586 samples, 0.01%)</title><rect x="889.8" y="1045" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="892.77" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,537,806,458 samples, 4.32%)</title><rect x="294.8" y="1365" width="51.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="297.81" y="1375.5" >std::..</text>
</g>
<g >
<title>__fdget_pos (84,941,838 samples, 0.03%)</title><rect x="1154.0" y="1157" width="0.3" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1156.97" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (65,221,614 samples, 0.02%)</title><rect x="543.2" y="965" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="546.19" y="975.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (23,175,092 samples, 0.01%)</title><rect x="267.0" y="725" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="270.03" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,711,533,038 samples, 1.39%)</title><rect x="913.3" y="1061" width="16.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="916.28" y="1071.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (24,371,003 samples, 0.01%)</title><rect x="708.8" y="1589" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="711.82" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (396,753,516 samples, 0.15%)</title><rect x="528.7" y="1077" width="1.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="531.73" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (58,501,203 samples, 0.02%)</title><rect x="654.4" y="1045" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="657.42" y="1055.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (120,496,523 samples, 0.05%)</title><rect x="113.0" y="1077" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="116.03" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (35,139,012 samples, 0.01%)</title><rect x="347.3" y="437" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.29" y="447.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (64,204,574 samples, 0.02%)</title><rect x="90.8" y="933" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="93.85" y="943.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (258,526,094 samples, 0.10%)</title><rect x="1034.3" y="1045" width="1.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1037.26" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (47,216,582 samples, 0.02%)</title><rect x="52.4" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="55.40" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (51,856,405 samples, 0.02%)</title><rect x="400.7" y="741" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.74" y="751.5" ></text>
</g>
<g >
<title>handle_softirqs (31,860,092 samples, 0.01%)</title><rect x="432.9" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="435.88" y="1615.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (31,523,170 samples, 0.01%)</title><rect x="365.1" y="1029" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="368.13" y="1039.5" ></text>
</g>
<g >
<title>std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, TimerManager::TimerCmp&gt; (31,197,816 samples, 0.01%)</title><rect x="272.8" y="1525" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="275.78" y="1535.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (30,125,027 samples, 0.01%)</title><rect x="61.3" y="1253" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="64.26" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (75,968,454 samples, 0.03%)</title><rect x="1108.6" y="1141" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.55" y="1151.5" ></text>
</g>
<g >
<title>netvsc_poll (29,171,319 samples, 0.01%)</title><rect x="585.6" y="981" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="588.58" y="991.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (26,028,370 samples, 0.01%)</title><rect x="954.0" y="1077" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="956.97" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (30,284,709 samples, 0.01%)</title><rect x="400.2" y="1157" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="403.24" y="1167.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (32,013,922 samples, 0.01%)</title><rect x="941.1" y="1029" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="944.14" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (69,190,696 samples, 0.03%)</title><rect x="736.5" y="1013" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="739.48" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,069,101 samples, 0.01%)</title><rect x="487.9" y="421" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.94" y="431.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (341,041,558 samples, 0.13%)</title><rect x="262.4" y="1317" width="1.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="265.39" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_writev (445,944,989 samples, 0.17%)</title><rect x="1118.9" y="1381" width="1.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1121.87" y="1391.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (363,952,893 samples, 0.14%)</title><rect x="603.9" y="981" width="1.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="606.90" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (232,121,570 samples, 0.09%)</title><rect x="69.5" y="917" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="72.50" y="927.5" ></text>
</g>
<g >
<title>ip_queue_xmit (146,786,838 samples, 0.05%)</title><rect x="694.9" y="1173" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="697.87" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (747,964,277 samples, 0.28%)</title><rect x="637.6" y="933" width="3.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="640.64" y="943.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (25,381,873,436 samples, 9.51%)</title><rect x="576.9" y="1477" width="112.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="579.92" y="1487.5" >std::__invoke..</text>
</g>
<g >
<title>evict (36,098,419 samples, 0.01%)</title><rect x="126.7" y="1029" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="129.68" y="1039.5" ></text>
</g>
<g >
<title>do_writev (469,913,989 samples, 0.18%)</title><rect x="410.9" y="1365" width="2.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="413.89" y="1375.5" ></text>
</g>
<g >
<title>___slab_alloc (28,653,269 samples, 0.01%)</title><rect x="1174.1" y="1253" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1177.13" y="1263.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (32,401,270 samples, 0.01%)</title><rect x="267.0" y="981" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="270.00" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (197,419,527 samples, 0.07%)</title><rect x="770.6" y="949" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.64" y="959.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (23,690,362 samples, 0.01%)</title><rect x="70.6" y="933" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="73.65" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (31,891,271 samples, 0.01%)</title><rect x="365.1" y="1045" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="368.13" y="1055.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, std::_Bind&lt;void  (8,119,715,478 samples, 3.04%)</title><rect x="1143.9" y="1557" width="35.9" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1146.89" y="1567.5" >std..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (25,717,445 samples, 0.01%)</title><rect x="213.7" y="917" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="216.70" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (57,586,638 samples, 0.02%)</title><rect x="213.6" y="933" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="216.56" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (223,062,104 samples, 0.08%)</title><rect x="234.4" y="1045" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="237.40" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (22,908,039 samples, 0.01%)</title><rect x="930.1" y="1061" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="933.11" y="1071.5" ></text>
</g>
<g >
<title>_int_free (203,191,378 samples, 0.08%)</title><rect x="569.8" y="1685" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="572.82" y="1695.5" ></text>
</g>
<g >
<title>__vm_munmap (320,157,662 samples, 0.12%)</title><rect x="1115.3" y="1109" width="1.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1118.30" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (453,213,162 samples, 0.17%)</title><rect x="838.2" y="1669" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.23" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (24,893,406 samples, 0.01%)</title><rect x="662.4" y="1061" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="665.45" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (53,864,021 samples, 0.02%)</title><rect x="926.4" y="901" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="929.40" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (22,792,144 samples, 0.01%)</title><rect x="626.8" y="1237" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="629.85" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (46,574,580 samples, 0.02%)</title><rect x="1093.5" y="1077" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1096.55" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (76,014,121 samples, 0.03%)</title><rect x="859.6" y="1157" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="862.63" y="1167.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (45,867,755 samples, 0.02%)</title><rect x="409.2" y="1061" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="412.19" y="1071.5" ></text>
</g>
<g >
<title>Channel::OnRead (25,659,639,310 samples, 9.61%)</title><rect x="434.7" y="1541" width="113.4" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="437.67" y="1551.5" >Channel::OnRead</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,221,614 samples, 0.02%)</title><rect x="543.2" y="997" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="546.19" y="1007.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (34,535,629 samples, 0.01%)</title><rect x="551.9" y="837" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="554.94" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (2,024,207,269 samples, 0.76%)</title><rect x="650.4" y="1061" width="9.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="653.44" y="1071.5" ></text>
</g>
<g >
<title>evict (46,877,809 samples, 0.02%)</title><rect x="974.9" y="1029" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="977.91" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,764,685,354 samples, 1.41%)</title><rect x="772.3" y="1253" width="16.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="775.34" y="1263.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (22,817,115 samples, 0.01%)</title><rect x="200.9" y="1141" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="203.88" y="1151.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (114,048,248 samples, 0.04%)</title><rect x="30.5" y="1077" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="33.51" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (465,705,805 samples, 0.17%)</title><rect x="1001.6" y="1285" width="2.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1004.57" y="1295.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (84,463,011 samples, 0.03%)</title><rect x="231.3" y="1029" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="234.33" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (24,004,958 samples, 0.01%)</title><rect x="1054.7" y="325" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.69" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*&gt; (34,097,343 samples, 0.01%)</title><rect x="42.1" y="1045" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="45.14" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (45,693,048 samples, 0.02%)</title><rect x="626.1" y="1173" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="629.09" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (26,249,370 samples, 0.01%)</title><rect x="71.5" y="933" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="74.50" y="943.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (178,950,267 samples, 0.07%)</title><rect x="327.2" y="1029" width="0.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="330.21" y="1039.5" ></text>
</g>
<g >
<title>__napi_poll (26,927,064 samples, 0.01%)</title><rect x="1148.9" y="1285" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1151.89" y="1295.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (71,099,613 samples, 0.03%)</title><rect x="818.4" y="1061" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="821.44" y="1071.5" ></text>
</g>
<g >
<title>HttpRouter::Route (616,608,500 samples, 0.23%)</title><rect x="544.5" y="1413" width="2.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="547.47" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,601,103,330 samples, 1.35%)</title><rect x="349.0" y="1141" width="15.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="352.01" y="1151.5" ></text>
</g>
<g >
<title>do_filp_open (73,693,781 samples, 0.03%)</title><rect x="699.8" y="1573" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="702.82" y="1583.5" ></text>
</g>
<g >
<title>getname_flags (34,392,297 samples, 0.01%)</title><rect x="1110.5" y="1285" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1113.48" y="1295.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (174,214,406 samples, 0.07%)</title><rect x="639.4" y="853" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="642.40" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (37,353,516 samples, 0.01%)</title><rect x="629.8" y="629" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.77" y="639.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (55,954,977 samples, 0.02%)</title><rect x="1141.3" y="1653" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1144.30" y="1663.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (47,805,943 samples, 0.02%)</title><rect x="1088.7" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1091.71" y="1087.5" ></text>
</g>
<g >
<title>ip_finish_output (81,464,748 samples, 0.03%)</title><rect x="271.1" y="1109" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="274.08" y="1119.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (179,350,448 samples, 0.07%)</title><rect x="899.7" y="1093" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="902.74" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (85,017,636 samples, 0.03%)</title><rect x="400.7" y="1237" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="403.69" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (51,704,304 samples, 0.02%)</title><rect x="838.6" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (3,178,359,239 samples, 1.19%)</title><rect x="979.7" y="1685" width="14.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="982.74" y="1695.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (36,677,892 samples, 0.01%)</title><rect x="973.1" y="1045" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="976.15" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (127,035,561 samples, 0.05%)</title><rect x="154.8" y="1253" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="157.77" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (46,800,359 samples, 0.02%)</title><rect x="63.2" y="709" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.23" y="719.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (42,695,281 samples, 0.02%)</title><rect x="628.4" y="1141" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="631.37" y="1151.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (28,511,301 samples, 0.01%)</title><rect x="113.6" y="1093" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="116.59" y="1103.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (192,031,193 samples, 0.07%)</title><rect x="37.8" y="965" width="0.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="40.79" y="975.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (319,421,287 samples, 0.12%)</title><rect x="924.5" y="949" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="927.53" y="959.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (121,276,341 samples, 0.05%)</title><rect x="943.9" y="1045" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="946.91" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (28,597,267 samples, 0.01%)</title><rect x="578.7" y="1109" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="581.75" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,380,746 samples, 0.01%)</title><rect x="400.8" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.77" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (33,044,943 samples, 0.01%)</title><rect x="1054.9" y="485" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.86" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,296,744,207 samples, 1.23%)</title><rect x="789.7" y="1077" width="14.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="792.66" y="1087.5" ></text>
</g>
<g >
<title>irq_exit_rcu (35,208,278 samples, 0.01%)</title><rect x="303.1" y="1061" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="306.09" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (27,014,763 samples, 0.01%)</title><rect x="812.6" y="1077" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="815.59" y="1087.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (47,716,321 samples, 0.02%)</title><rect x="1020.9" y="1077" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1023.94" y="1087.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (78,887,373 samples, 0.03%)</title><rect x="533.7" y="965" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="536.72" y="975.5" ></text>
</g>
<g >
<title>__napi_poll (40,866,683 samples, 0.02%)</title><rect x="973.7" y="901" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="976.69" y="911.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (71,064,436 samples, 0.03%)</title><rect x="64.4" y="1381" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="67.43" y="1391.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (25,098,738,362 samples, 9.40%)</title><rect x="718.1" y="1477" width="110.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="721.14" y="1487.5" >std::__invoke..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (24,184,065 samples, 0.01%)</title><rect x="1039.8" y="1013" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1042.79" y="1023.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (30,286,990 samples, 0.01%)</title><rect x="181.2" y="965" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="184.15" y="975.5" ></text>
</g>
<g >
<title>[unknown] (23,162,380 samples, 0.01%)</title><rect x="556.9" y="997" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1007.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (23,801,232 samples, 0.01%)</title><rect x="636.2" y="853" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="639.19" y="863.5" ></text>
</g>
<g >
<title>__ip_local_out (55,811,939 samples, 0.02%)</title><rect x="270.8" y="1125" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="273.83" y="1135.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (156,674,461 samples, 0.06%)</title><rect x="835.4" y="1157" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="838.36" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (34,645,634 samples, 0.01%)</title><rect x="758.2" y="1045" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="761.16" y="1055.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (660,916,723 samples, 0.25%)</title><rect x="461.1" y="1029" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="464.14" y="1039.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (30,906,479 samples, 0.01%)</title><rect x="29.3" y="1077" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="32.33" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (831,506,198 samples, 0.31%)</title><rect x="265.9" y="1237" width="3.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="268.86" y="1247.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (199,143,742 samples, 0.07%)</title><rect x="476.0" y="1093" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="479.02" y="1103.5" ></text>
</g>
<g >
<title>Channel::OnRead (25,345,638,959 samples, 9.49%)</title><rect x="152.9" y="1541" width="112.0" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="155.86" y="1551.5" >Channel::OnRead</text>
</g>
<g >
<title>ip_sublist_rcv (26,803,106 samples, 0.01%)</title><rect x="727.0" y="901" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="729.98" y="911.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (8,109,732,475 samples, 3.04%)</title><rect x="1143.9" y="1525" width="35.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1146.92" y="1535.5" >std..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,491,314,568 samples, 1.31%)</title><rect x="1073.2" y="1093" width="15.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1076.18" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (26,042,391 samples, 0.01%)</title><rect x="384.3" y="1093" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="387.30" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_close (300,741,077 samples, 0.11%)</title><rect x="409.1" y="1141" width="1.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="412.05" y="1151.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (33,689,322 samples, 0.01%)</title><rect x="909.6" y="1269" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="912.63" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::vector (37,974,497 samples, 0.01%)</title><rect x="346.9" y="1317" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="349.90" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (26,806,841 samples, 0.01%)</title><rect x="909.2" y="1285" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="912.20" y="1295.5" ></text>
</g>
<g >
<title>operator delete (63,674,834 samples, 0.02%)</title><rect x="139.8" y="1669" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="142.79" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (410,275,990 samples, 0.15%)</title><rect x="62.6" y="1349" width="1.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="65.59" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (86,612,361 samples, 0.03%)</title><rect x="1108.5" y="1269" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1111.51" y="1279.5" ></text>
</g>
<g >
<title>do_sys_openat2 (102,748,729 samples, 0.04%)</title><rect x="699.8" y="1589" width="0.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="702.81" y="1599.5" ></text>
</g>
<g >
<title>x64_sys_call (84,667,488 samples, 0.03%)</title><rect x="544.9" y="1349" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="547.94" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4,041,282,077 samples, 1.51%)</title><rect x="524.2" y="1269" width="17.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="527.19" y="1279.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (114,177,495 samples, 0.04%)</title><rect x="961.3" y="1077" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="964.30" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,728,099,238 samples, 1.40%)</title><rect x="772.3" y="1205" width="16.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="775.34" y="1215.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_destroy (24,230,248 samples, 0.01%)</title><rect x="486.8" y="1077" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="489.76" y="1087.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (30,483,904 samples, 0.01%)</title><rect x="446.4" y="1077" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="449.45" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (31,284,150 samples, 0.01%)</title><rect x="437.7" y="1141" width="0.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="440.66" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (26,013,549 samples, 0.01%)</title><rect x="962.2" y="1093" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="965.23" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (33,778,715 samples, 0.01%)</title><rect x="239.1" y="1061" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="242.10" y="1071.5" ></text>
</g>
<g >
<title>__ep_remove (30,554,685 samples, 0.01%)</title><rect x="689.4" y="1205" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="692.40" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (24,834,172 samples, 0.01%)</title><rect x="348.6" y="1333" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="351.62" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (185,501,971 samples, 0.07%)</title><rect x="629.5" y="933" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.46" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (28,693,407 samples, 0.01%)</title><rect x="663.0" y="1045" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="666.02" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,591,372,282 samples, 3.59%)</title><rect x="156.7" y="1125" width="42.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="159.72" y="1135.5" >std..</text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (23,670,671 samples, 0.01%)</title><rect x="506.5" y="997" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="509.49" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (32,577,547 samples, 0.01%)</title><rect x="1062.3" y="933" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1065.33" y="943.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (236,768,811 samples, 0.09%)</title><rect x="1023.6" y="1061" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1026.60" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,747,890,313 samples, 1.40%)</title><rect x="241.4" y="1141" width="16.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="244.44" y="1151.5" ></text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (111,047,956 samples, 0.04%)</title><rect x="554.9" y="1557" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="557.87" y="1567.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (25,444,062,964 samples, 9.53%)</title><rect x="858.9" y="1461" width="112.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="861.91" y="1471.5" >HttpConn::Htt..</text>
</g>
<g >
<title>do_syscall_64 (353,281,280 samples, 0.13%)</title><rect x="262.3" y="1365" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="265.35" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (24,578,080 samples, 0.01%)</title><rect x="1107.1" y="1141" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1110.06" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,524,381,087 samples, 1.32%)</title><rect x="100.0" y="1109" width="15.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="103.03" y="1119.5" ></text>
</g>
<g >
<title>tcp_recvmsg (41,694,898 samples, 0.02%)</title><rect x="547.7" y="1285" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="550.71" y="1295.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (225,130,417 samples, 0.08%)</title><rect x="340.8" y="1125" width="1.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="343.76" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (88,254,240 samples, 0.03%)</title><rect x="435.5" y="1221" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="438.50" y="1231.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (67,692,723 samples, 0.03%)</title><rect x="486.6" y="1221" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="489.62" y="1231.5" ></text>
</g>
<g >
<title>irq_exit_rcu (30,911,045 samples, 0.01%)</title><rect x="867.7" y="1061" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="870.73" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (25,582,035 samples, 0.01%)</title><rect x="528.1" y="1077" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="531.07" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,882,059,963 samples, 1.45%)</title><rect x="489.5" y="1205" width="17.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.49" y="1215.5" ></text>
</g>
<g >
<title>__stpncpy_avx2 (328,443,575 samples, 0.12%)</title><rect x="848.2" y="1653" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="851.21" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (591,199,782 samples, 0.22%)</title><rect x="1063.2" y="917" width="2.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1066.19" y="927.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (25,631,567 samples, 0.01%)</title><rect x="769.6" y="1093" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="772.58" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (801,892,939 samples, 0.30%)</title><rect x="954.8" y="1077" width="3.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="957.78" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,877,465,160 samples, 1.45%)</title><rect x="524.4" y="1157" width="17.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="527.38" y="1167.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (34,170,187 samples, 0.01%)</title><rect x="320.2" y="1045" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="323.19" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (33,244,373 samples, 0.01%)</title><rect x="522.0" y="1061" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="525.05" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (28,069,782 samples, 0.01%)</title><rect x="728.8" y="1045" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="731.76" y="1055.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_whichbit (22,653,898 samples, 0.01%)</title><rect x="483.0" y="1093" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="485.98" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (40,415,345 samples, 0.02%)</title><rect x="63.7" y="533" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.68" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (66,394,382 samples, 0.02%)</title><rect x="719.0" y="1125" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="721.96" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (32,017,300 samples, 0.01%)</title><rect x="807.9" y="1093" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="810.89" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::assign (33,310,676 samples, 0.01%)</title><rect x="911.1" y="1317" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="914.06" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (1,762,438,357 samples, 0.66%)</title><rect x="458.4" y="1061" width="7.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="461.40" y="1071.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (75,531,110 samples, 0.03%)</title><rect x="113.7" y="1093" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="116.71" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (22,815,982 samples, 0.01%)</title><rect x="629.5" y="325" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.54" y="335.5" ></text>
</g>
<g >
<title>[unknown] (452,658,997 samples, 0.17%)</title><rect x="980.2" y="1669" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="983.22" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (44,737,506 samples, 0.02%)</title><rect x="912.1" y="405" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="915.08" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (602,972,864 samples, 0.23%)</title><rect x="779.4" y="917" width="2.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="782.41" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (46,864,659 samples, 0.02%)</title><rect x="629.5" y="741" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.50" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,462,144,555 samples, 4.29%)</title><rect x="153.4" y="1381" width="50.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="156.43" y="1391.5" >std::..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (76,100,266 samples, 0.03%)</title><rect x="940.6" y="997" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="943.62" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (50,327,570 samples, 0.02%)</title><rect x="1072.3" y="1141" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1075.32" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,644,565 samples, 0.01%)</title><rect x="1054.7" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.67" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (38,601,470 samples, 0.01%)</title><rect x="191.9" y="1061" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="194.91" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (54,330,205 samples, 0.02%)</title><rect x="223.7" y="1173" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="226.70" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,147,776 samples, 0.01%)</title><rect x="205.8" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.80" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,850,434,111 samples, 1.44%)</title><rect x="506.9" y="1205" width="17.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="509.87" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (27,015,820 samples, 0.01%)</title><rect x="243.2" y="1093" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="246.17" y="1103.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (24,436,213,920 samples, 9.15%)</title><rect x="859.4" y="1413" width="107.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="862.36" y="1423.5" >HttpRequest::..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (4,001,229,366 samples, 1.50%)</title><rect x="665.2" y="1285" width="17.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="668.16" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (55,482,901 samples, 0.02%)</title><rect x="771.1" y="661" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="774.14" y="671.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (236,051,516 samples, 0.09%)</title><rect x="549.7" y="1077" width="1.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="552.65" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (194,820,534 samples, 0.07%)</title><rect x="487.8" y="1029" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.84" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::_M_default_initialize (25,022,967 samples, 0.01%)</title><rect x="629.2" y="1301" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="632.18" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (24,206,978 samples, 0.01%)</title><rect x="556.9" y="1173" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (34,430,137 samples, 0.01%)</title><rect x="543.3" y="565" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="546.25" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,927,787 samples, 0.04%)</title><rect x="488.2" y="757" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="491.18" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1,064,226,985 samples, 0.40%)</title><rect x="590.8" y="1077" width="4.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="593.81" y="1087.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (117,618,013 samples, 0.04%)</title><rect x="784.7" y="933" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="787.73" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (38,077,267 samples, 0.01%)</title><rect x="400.8" y="565" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="403.76" y="575.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (45,525,485 samples, 0.02%)</title><rect x="203.6" y="1333" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="206.57" y="1343.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (211,125,695 samples, 0.08%)</title><rect x="674.2" y="1013" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="677.16" y="1023.5" ></text>
</g>
<g >
<title>napi_complete_done (22,933,106 samples, 0.01%)</title><rect x="991.5" y="1509" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="994.55" y="1519.5" ></text>
</g>
<g >
<title>nf_hook_slow (50,407,904 samples, 0.02%)</title><rect x="270.8" y="1109" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="273.84" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (51,803,396 samples, 0.02%)</title><rect x="908.0" y="1173" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="910.95" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::~_BracketMatcher (26,075,043 samples, 0.01%)</title><rect x="342.8" y="1157" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="345.82" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,767,983,792 samples, 1.41%)</title><rect x="1072.9" y="1141" width="16.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1075.88" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (150,855,023 samples, 0.06%)</title><rect x="597.3" y="1077" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="600.33" y="1087.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (72,879,003 samples, 0.03%)</title><rect x="1110.0" y="1397" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1112.99" y="1407.5" ></text>
</g>
<g >
<title>netvsc_poll (64,686,800 samples, 0.02%)</title><rect x="1170.6" y="1189" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1173.56" y="1199.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (30,245,630 samples, 0.01%)</title><rect x="1053.3" y="1109" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1056.30" y="1119.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (33,500,371 samples, 0.01%)</title><rect x="413.7" y="1509" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="416.75" y="1519.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long, std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; (25,069,579 samples, 0.01%)</title><rect x="346.9" y="1285" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="349.92" y="1295.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (96,967,302 samples, 0.04%)</title><rect x="1184.3" y="1189" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1187.34" y="1199.5" ></text>
</g>
<g >
<title>thp_get_unmapped_area (25,824,497 samples, 0.01%)</title><rect x="121.1" y="1253" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="124.09" y="1263.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (52,321,652 samples, 0.02%)</title><rect x="1066.4" y="885" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1069.35" y="895.5" ></text>
</g>
<g >
<title>__GI___writev (483,294,350 samples, 0.18%)</title><rect x="128.2" y="1445" width="2.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="131.18" y="1455.5" ></text>
</g>
<g >
<title>inet_recvmsg (51,944,997 samples, 0.02%)</title><rect x="828.7" y="1301" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="831.69" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,725,016 samples, 0.02%)</title><rect x="1054.4" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.40" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (47,324,473 samples, 0.02%)</title><rect x="1072.3" y="1109" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1075.32" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (46,734,045 samples, 0.02%)</title><rect x="684.5" y="1381" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="687.47" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (309,388,541 samples, 0.12%)</title><rect x="770.5" y="1333" width="1.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="773.46" y="1343.5" ></text>
</g>
<g >
<title>nf_conntrack_in (29,083,959 samples, 0.01%)</title><rect x="977.5" y="1077" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="980.48" y="1087.5" ></text>
</g>
<g >
<title>sock_close (179,515,967 samples, 0.07%)</title><rect x="551.5" y="1093" width="0.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="554.54" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (249,064,610 samples, 0.09%)</title><rect x="347.1" y="1125" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.15" y="1135.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (264,541,253 samples, 0.10%)</title><rect x="1041.1" y="1061" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1044.10" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (56,709,365 samples, 0.02%)</title><rect x="683.5" y="1381" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="686.46" y="1391.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::DelChannel (177,587,654 samples, 0.07%)</title><rect x="405.8" y="1349" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="408.80" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,311,178,727 samples, 4.24%)</title><rect x="1001.6" y="1301" width="50.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1004.57" y="1311.5" >std::..</text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (35,905,896 samples, 0.01%)</title><rect x="66.6" y="949" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="69.62" y="959.5" ></text>
</g>
<g >
<title>[web-server] (30,313,633 samples, 0.01%)</title><rect x="668.1" y="1077" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="671.06" y="1087.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (67,246,583 samples, 0.03%)</title><rect x="925.6" y="917" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="928.58" y="927.5" ></text>
</g>
<g >
<title>__napi_poll (35,711,844 samples, 0.01%)</title><rect x="1182.2" y="1397" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1185.18" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,346,057,039 samples, 1.25%)</title><rect x="207.6" y="981" width="14.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="210.63" y="991.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (48,978,737 samples, 0.02%)</title><rect x="627.6" y="1317" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="630.63" y="1327.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (29,776,233 samples, 0.01%)</title><rect x="223.8" y="1029" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="226.77" y="1039.5" ></text>
</g>
<g >
<title>__strlen_avx2 (186,428,969 samples, 0.07%)</title><rect x="136.2" y="1669" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="139.15" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (59,711,143 samples, 0.02%)</title><rect x="1022.3" y="1061" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1025.27" y="1071.5" ></text>
</g>
<g >
<title>epoll_ctl (75,945,777 samples, 0.03%)</title><rect x="689.3" y="1301" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="692.30" y="1311.5" ></text>
</g>
<g >
<title>perf_iterate_sb (28,508,980 samples, 0.01%)</title><rect x="687.2" y="1237" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="690.24" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (28,435,820 samples, 0.01%)</title><rect x="661.2" y="1045" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="664.22" y="1055.5" ></text>
</g>
<g >
<title>epoll_ctl (68,029,218 samples, 0.03%)</title><rect x="294.3" y="1317" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="297.32" y="1327.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (123,836,579 samples, 0.05%)</title><rect x="61.8" y="1317" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="64.77" y="1327.5" ></text>
</g>
<g >
<title>do_sys_openat2 (107,344,786 samples, 0.04%)</title><rect x="134.3" y="1589" width="0.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="137.30" y="1599.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (41,183,798 samples, 0.02%)</title><rect x="973.7" y="949" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="976.69" y="959.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (229,014,502 samples, 0.09%)</title><rect x="43.1" y="1045" width="1.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="46.07" y="1055.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (238,054,900 samples, 0.09%)</title><rect x="677.5" y="1077" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="680.55" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (50,449,782 samples, 0.02%)</title><rect x="228.1" y="1045" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="231.13" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (23,180,180 samples, 0.01%)</title><rect x="485.5" y="1301" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="488.54" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (29,080,171 samples, 0.01%)</title><rect x="1098.1" y="1013" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1101.07" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (57,532,910 samples, 0.02%)</title><rect x="924.0" y="885" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="926.97" y="895.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (38,451,637 samples, 0.01%)</title><rect x="812.1" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="815.11" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,727,899 samples, 0.01%)</title><rect x="347.6" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.56" y="463.5" ></text>
</g>
<g >
<title>_int_free (393,365,249 samples, 0.15%)</title><rect x="843.3" y="1669" width="1.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="846.32" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,883,794,164 samples, 1.45%)</title><rect x="913.1" y="1205" width="17.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="916.12" y="1215.5" ></text>
</g>
<g >
<title>Channel::OnEvents (8,148,244,072 samples, 3.05%)</title><rect x="1143.8" y="1621" width="36.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1146.78" y="1631.5" >Cha..</text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (23,790,838 samples, 0.01%)</title><rect x="834.2" y="1413" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="837.25" y="1423.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (91,065,672 samples, 0.03%)</title><rect x="1080.9" y="997" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1083.93" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (246,856,750 samples, 0.09%)</title><rect x="1060.4" y="917" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1063.39" y="927.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (28,902,243 samples, 0.01%)</title><rect x="321.2" y="981" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="324.22" y="991.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (91,286,960 samples, 0.03%)</title><rect x="125.4" y="1045" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="128.39" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,961,507 samples, 0.01%)</title><rect x="1054.4" y="293" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.43" y="303.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (90,715,024 samples, 0.03%)</title><rect x="398.3" y="1125" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="401.30" y="1135.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;,  (38,484,396 samples, 0.01%)</title><rect x="486.0" y="1285" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="488.97" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (28,888,191 samples, 0.01%)</title><rect x="1086.0" y="1045" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1088.95" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,067,049 samples, 0.02%)</title><rect x="684.0" y="741" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.02" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (91,580,168 samples, 0.03%)</title><rect x="824.0" y="1125" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.00" y="1135.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (37,774,604 samples, 0.01%)</title><rect x="706.3" y="1637" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="709.27" y="1647.5" ></text>
</g>
<g >
<title>nf_conntrack_in (24,114,820 samples, 0.01%)</title><rect x="411.9" y="1077" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="414.89" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (78,379,215 samples, 0.03%)</title><rect x="938.7" y="997" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="941.70" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (190,479,943 samples, 0.07%)</title><rect x="487.9" y="981" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.85" y="991.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (75,984,449 samples, 0.03%)</title><rect x="821.7" y="1125" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="824.69" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (131,341,821 samples, 0.05%)</title><rect x="154.2" y="1237" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="157.16" y="1247.5" ></text>
</g>
<g >
<title>__sys_setsockopt (268,371,595 samples, 0.10%)</title><rect x="1145.8" y="1365" width="1.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1148.75" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (46,157,261 samples, 0.02%)</title><rect x="436.5" y="1141" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="439.51" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (37,986,236 samples, 0.01%)</title><rect x="912.1" y="309" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="915.09" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (86,252,313 samples, 0.03%)</title><rect x="966.3" y="1205" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="969.25" y="1215.5" ></text>
</g>
<g >
<title>EventLoop::DelChannel (150,831,817 samples, 0.06%)</title><rect x="123.5" y="1317" width="0.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="126.54" y="1327.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (24,124,205 samples, 0.01%)</title><rect x="464.2" y="1045" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="467.22" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (65,295,367 samples, 0.02%)</title><rect x="309.4" y="1061" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="312.41" y="1071.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (148,028,460 samples, 0.06%)</title><rect x="57.6" y="1125" width="0.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="60.60" y="1135.5" ></text>
</g>
<g >
<title>inode_doinit_with_dentry (85,372,700 samples, 0.03%)</title><rect x="1177.2" y="1269" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1180.17" y="1279.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (70,056,804 samples, 0.03%)</title><rect x="295.1" y="1061" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="298.09" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (25,747,068 samples, 0.01%)</title><rect x="783.7" y="917" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="786.72" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (51,271,797 samples, 0.02%)</title><rect x="259.9" y="949" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.87" y="959.5" ></text>
</g>
<g >
<title>malloc (619,255,456 samples, 0.23%)</title><rect x="996.6" y="1685" width="2.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="999.57" y="1695.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (45,250,640 samples, 0.02%)</title><rect x="550.7" y="1077" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="553.73" y="1087.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (27,208,287,959 samples, 10.19%)</title><rect x="576.8" y="1589" width="120.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="579.81" y="1599.5" >EventLoopThrea..</text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,653,367,945 samples, 4.36%)</title><rect x="1001.5" y="1365" width="51.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1004.51" y="1375.5" >std::..</text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (49,557,259 samples, 0.02%)</title><rect x="386.1" y="1077" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="389.13" y="1087.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (67,934,216 samples, 0.03%)</title><rect x="331.6" y="1045" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="334.59" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (36,574,906 samples, 0.01%)</title><rect x="1054.4" y="405" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.43" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (98,514,146 samples, 0.04%)</title><rect x="629.8" y="709" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.76" y="719.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (34,972,460 samples, 0.01%)</title><rect x="542.7" y="1205" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="545.72" y="1215.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (326,535,205 samples, 0.12%)</title><rect x="826.6" y="1317" width="1.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="829.60" y="1327.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (23,941,159 samples, 0.01%)</title><rect x="727.0" y="885" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="729.98" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (597,873,750 samples, 0.22%)</title><rect x="26.5" y="1045" width="2.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="29.50" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (10,580,535,466 samples, 3.96%)</title><rect x="861.5" y="1253" width="46.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="864.52" y="1263.5" >std:..</text>
</g>
<g >
<title>alloc_empty_file (263,939,781 samples, 0.10%)</title><rect x="1174.7" y="1301" width="1.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1177.74" y="1311.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (285,841,894 samples, 0.11%)</title><rect x="898.1" y="1061" width="1.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="901.13" y="1071.5" ></text>
</g>
<g >
<title>TimerManager::DelTimer (26,631,812 samples, 0.01%)</title><rect x="123.5" y="1301" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="126.54" y="1311.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::construct&lt;HttpConn, int&amp;, sockaddr_in&amp;, std::shared_ptr&lt;EventLoop&gt;&amp;, int&amp;, Server::HandlerNewConn (2,259,065,358 samples, 0.85%)</title><rect x="1151.9" y="1349" width="10.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1154.88" y="1359.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (11,837,383,029 samples, 4.43%)</title><rect x="348.8" y="1397" width="52.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="351.85" y="1407.5" >HttpR..</text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (294,073,369 samples, 0.11%)</title><rect x="177.4" y="1045" width="1.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="180.39" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (76,249,992 samples, 0.03%)</title><rect x="460.0" y="1013" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="463.02" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (104,758,856 samples, 0.04%)</title><rect x="164.8" y="1077" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="167.79" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (81,415,830 samples, 0.03%)</title><rect x="197.5" y="1093" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="200.47" y="1103.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (117,910,281 samples, 0.04%)</title><rect x="1021.1" y="1077" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1024.15" y="1087.5" ></text>
</g>
<g >
<title>__vm_munmap (308,332,640 samples, 0.12%)</title><rect x="407.4" y="1109" width="1.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="410.38" y="1119.5" ></text>
</g>
<g >
<title>__napi_poll (28,098,133 samples, 0.01%)</title><rect x="1116.0" y="901" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1118.96" y="911.5" ></text>
</g>
<g >
<title>handle_softirqs (75,066,728 samples, 0.03%)</title><rect x="1170.6" y="1237" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1173.56" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (75,702,926 samples, 0.03%)</title><rect x="1043.4" y="1093" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1046.40" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (90,352,681 samples, 0.03%)</title><rect x="620.8" y="1077" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="623.76" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (24,958,633 samples, 0.01%)</title><rect x="912.1" y="165" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="915.12" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (119,171,559 samples, 0.04%)</title><rect x="699.7" y="1653" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="702.74" y="1663.5" ></text>
</g>
<g >
<title>__sock_release (191,856,232 samples, 0.07%)</title><rect x="409.5" y="1077" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="412.45" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (69,036,099 samples, 0.03%)</title><rect x="966.3" y="1061" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.28" y="1071.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (24,790,852 samples, 0.01%)</title><rect x="1055.6" y="1349" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1058.60" y="1359.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (48,815,035 samples, 0.02%)</title><rect x="960.5" y="1061" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="963.49" y="1071.5" ></text>
</g>
<g >
<title>netvsc_poll (26,179,387 samples, 0.01%)</title><rect x="1148.9" y="1269" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1151.90" y="1279.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (148,731,232 samples, 0.06%)</title><rect x="316.6" y="1045" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="319.65" y="1055.5" ></text>
</g>
<g >
<title>tcp_recvmsg (44,440,672 samples, 0.02%)</title><rect x="405.4" y="1285" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="408.36" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Executor (41,896,841 samples, 0.02%)</title><rect x="346.9" y="1333" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="349.88" y="1343.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (35,452,966 samples, 0.01%)</title><rect x="412.3" y="1013" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="415.26" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (109,951,647 samples, 0.04%)</title><rect x="1150.1" y="1429" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1153.07" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (51,728,278 samples, 0.02%)</title><rect x="911.6" y="821" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="914.61" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (83,464,149 samples, 0.03%)</title><rect x="543.2" y="1173" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="546.16" y="1183.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,547,764,715 samples, 4.32%)</title><rect x="294.8" y="1381" width="51.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="297.81" y="1391.5" >std::..</text>
</g>
<g >
<title>ip_list_rcv (27,387,958 samples, 0.01%)</title><rect x="856.8" y="1493" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="859.79" y="1503.5" ></text>
</g>
<g >
<title>__GI___writev (523,101,259 samples, 0.20%)</title><rect x="410.7" y="1445" width="2.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="413.74" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (38,871,237 samples, 0.01%)</title><rect x="1088.0" y="1061" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1090.98" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,146,220 samples, 0.01%)</title><rect x="205.8" y="565" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.79" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (2,025,986,452 samples, 0.76%)</title><rect x="384.8" y="1093" width="8.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="387.75" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (761,492,316 samples, 0.29%)</title><rect x="496.3" y="933" width="3.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="499.34" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,095,042 samples, 0.01%)</title><rect x="259.9" y="405" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.92" y="415.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (23,968,129 samples, 0.01%)</title><rect x="270.5" y="1157" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="273.53" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,003,421 samples, 0.01%)</title><rect x="629.5" y="453" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.53" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (102,968,391 samples, 0.04%)</title><rect x="400.7" y="1301" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="403.67" y="1311.5" ></text>
</g>
<g >
<title>sch_direct_xmit (42,012,909 samples, 0.02%)</title><rect x="554.1" y="1045" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="557.10" y="1055.5" ></text>
</g>
<g >
<title>__dynamic_cast (125,222,208 samples, 0.05%)</title><rect x="729.3" y="1077" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="732.26" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::vector (22,925,469 samples, 0.01%)</title><rect x="1053.9" y="1285" width="0.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1056.88" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,136,396 samples, 0.02%)</title><rect x="966.3" y="709" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.31" y="719.5" ></text>
</g>
<g >
<title>do_epoll_ctl (35,806,701 samples, 0.01%)</title><rect x="696.2" y="1381" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="699.20" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (659,146,569 samples, 0.25%)</title><rect x="874.3" y="1061" width="3.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="877.35" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,745,548 samples, 0.01%)</title><rect x="400.8" y="517" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.77" y="527.5" ></text>
</g>
<g >
<title>malloc (94,105,412 samples, 0.04%)</title><rect x="698.2" y="1653" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="701.17" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (386,746,164 samples, 0.14%)</title><rect x="934.7" y="1045" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="937.71" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_openat (105,271,972 samples, 0.04%)</title><rect x="982.3" y="1605" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="985.28" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,692,542,595 samples, 2.88%)</title><rect x="1055.9" y="1285" width="34.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1058.88" y="1295.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,696,806 samples, 0.04%)</title><rect x="488.2" y="821" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.17" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_openat (102,755,281 samples, 0.04%)</title><rect x="1124.7" y="1605" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1127.70" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,925,649,077 samples, 1.47%)</title><rect x="241.2" y="1253" width="17.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="244.20" y="1263.5" ></text>
</g>
<g >
<title>tcp_recvmsg (49,876,918 samples, 0.02%)</title><rect x="828.7" y="1285" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="831.70" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (31,145,627 samples, 0.01%)</title><rect x="1143.0" y="1573" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.99" y="1583.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (62,399,540 samples, 0.02%)</title><rect x="112.4" y="1061" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="115.45" y="1071.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::construct&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt; &gt; (24,942,105 samples, 0.01%)</title><rect x="577.8" y="1029" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="580.78" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_begin (25,597,814 samples, 0.01%)</title><rect x="60.4" y="1269" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="63.41" y="1279.5" ></text>
</g>
<g >
<title>evict (138,219,299 samples, 0.05%)</title><rect x="1165.7" y="1269" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1168.71" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_less_val (37,674,035 samples, 0.01%)</title><rect x="866.4" y="1093" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="869.37" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (10,487,133,130 samples, 3.93%)</title><rect x="579.6" y="1189" width="46.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="582.63" y="1199.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28,392,561 samples, 0.01%)</title><rect x="488.4" y="261" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="491.39" y="271.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (155,289,341 samples, 0.06%)</title><rect x="139.1" y="1669" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="142.10" y="1679.5" ></text>
</g>
<g >
<title>do_user_addr_fault (87,971,875 samples, 0.03%)</title><rect x="553.2" y="1173" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="556.22" y="1183.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (30,883,042 samples, 0.01%)</title><rect x="501.1" y="933" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="504.07" y="943.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (28,687,732 samples, 0.01%)</title><rect x="816.4" y="1061" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="819.35" y="1071.5" ></text>
</g>
<g >
<title>do_epoll_wait (26,247,953 samples, 0.01%)</title><rect x="130.9" y="1461" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="133.89" y="1471.5" ></text>
</g>
<g >
<title>std::priority_queue&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt;, TimerManager::TimerCmp&gt;::pop (34,199,310 samples, 0.01%)</title><rect x="837.4" y="1541" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="840.38" y="1551.5" ></text>
</g>
<g >
<title>operator new (74,779,802 samples, 0.03%)</title><rect x="274.6" y="1653" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="277.55" y="1663.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (161,197,302 samples, 0.06%)</title><rect x="1113.7" y="1365" width="0.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1116.75" y="1375.5" ></text>
</g>
<g >
<title>x64_sys_call (117,692,067 samples, 0.04%)</title><rect x="134.3" y="1621" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="137.26" y="1631.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,195,040,153 samples, 0.45%)</title><rect x="829.1" y="1445" width="5.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="832.10" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (52,372,809 samples, 0.02%)</title><rect x="978.8" y="1445" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="981.82" y="1455.5" ></text>
</g>
<g >
<title>x64_sys_call (23,081,993 samples, 0.01%)</title><rect x="555.4" y="1493" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="558.40" y="1503.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (63,672,168 samples, 0.02%)</title><rect x="489.1" y="1381" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="492.14" y="1391.5" ></text>
</g>
<g >
<title>do_epoll_ctl (30,903,430 samples, 0.01%)</title><rect x="130.6" y="1381" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="133.56" y="1391.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (27,717,262 samples, 0.01%)</title><rect x="261.7" y="1269" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="264.74" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (42,001,282 samples, 0.02%)</title><rect x="1054.8" y="677" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.84" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (22,918,187 samples, 0.01%)</title><rect x="347.6" y="325" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.57" y="335.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (83,934,324 samples, 0.03%)</title><rect x="928.6" y="981" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="931.63" y="991.5" ></text>
</g>
<g >
<title>EventLoop::DelChannel (194,334,373 samples, 0.07%)</title><rect x="405.8" y="1413" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="408.77" y="1423.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (35,324,557 samples, 0.01%)</title><rect x="654.2" y="1045" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="657.22" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (86,728,773 samples, 0.03%)</title><rect x="48.3" y="1029" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="51.32" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,978,697 samples, 0.01%)</title><rect x="543.3" y="613" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.25" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (31,216,985 samples, 0.01%)</title><rect x="720.8" y="1221" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="723.85" y="1231.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (210,589,494 samples, 0.08%)</title><rect x="498.0" y="869" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="500.97" y="879.5" ></text>
</g>
<g >
<title>[unknown] (3,203,042,447 samples, 1.20%)</title><rect x="837.7" y="1685" width="14.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.66" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,902,268 samples, 0.01%)</title><rect x="259.9" y="741" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.89" y="751.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (24,790,514 samples, 0.01%)</title><rect x="138.9" y="1637" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="141.95" y="1647.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (86,544,506 samples, 0.03%)</title><rect x="868.1" y="1077" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="871.07" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+= (22,718,418 samples, 0.01%)</title><rect x="94.5" y="997" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="97.55" y="1007.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (31,540,371 samples, 0.01%)</title><rect x="410.6" y="1429" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="413.55" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (92,204,623 samples, 0.03%)</title><rect x="1054.6" y="773" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.64" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (59,054,465 samples, 0.02%)</title><rect x="347.2" y="821" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="350.25" y="831.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (159,135,320 samples, 0.06%)</title><rect x="56.9" y="1109" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="59.89" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (32,380,746 samples, 0.01%)</title><rect x="400.8" y="469" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="403.77" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (37,343,332 samples, 0.01%)</title><rect x="1054.9" y="597" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.86" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (46,961,359 samples, 0.02%)</title><rect x="55.1" y="1077" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="58.11" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (72,898,748 samples, 0.03%)</title><rect x="1156.3" y="1237" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1159.28" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (27,171,077 samples, 0.01%)</title><rect x="88.7" y="1045" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="91.72" y="1055.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (22,724,418 samples, 0.01%)</title><rect x="44.5" y="1093" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="47.52" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (46,113,437 samples, 0.02%)</title><rect x="911.6" y="709" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.62" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,829,528,087 samples, 1.43%)</title><rect x="224.2" y="1253" width="16.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="227.15" y="1263.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (28,240,952 samples, 0.01%)</title><rect x="893.0" y="1093" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="896.03" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (193,606,020 samples, 0.07%)</title><rect x="353.5" y="901" width="0.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="356.49" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (55,726,568 samples, 0.02%)</title><rect x="966.3" y="917" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.29" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (35,418,628 samples, 0.01%)</title><rect x="775.9" y="933" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="778.93" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,819,434,218 samples, 1.43%)</title><rect x="506.9" y="1157" width="16.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="509.94" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (78,847,386 samples, 0.03%)</title><rect x="406.0" y="1269" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="408.97" y="1279.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (225,729,086 samples, 0.08%)</title><rect x="533.4" y="1029" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="536.36" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,667,319 samples, 0.02%)</title><rect x="629.9" y="629" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.94" y="639.5" ></text>
</g>
<g >
<title>__d_alloc (164,367,264 samples, 0.06%)</title><rect x="1176.0" y="1301" width="0.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1178.98" y="1311.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (35,475,848 samples, 0.01%)</title><rect x="486.7" y="1109" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="489.72" y="1119.5" ></text>
</g>
<g >
<title>netvsc_poll (29,601,028 samples, 0.01%)</title><rect x="867.7" y="981" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="870.74" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (254,679,146 samples, 0.10%)</title><rect x="228.9" y="1029" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="231.87" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,685,040,458 samples, 2.88%)</title><rect x="207.1" y="1269" width="34.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="210.12" y="1279.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (26,147,776 samples, 0.01%)</title><rect x="205.8" y="485" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.80" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (171,509,711 samples, 0.06%)</title><rect x="891.6" y="1029" width="0.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="894.61" y="1039.5" ></text>
</g>
<g >
<title>epoll_ctl (65,450,133 samples, 0.02%)</title><rect x="153.0" y="1317" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="155.96" y="1327.5" ></text>
</g>
<g >
<title>path_lookupat (32,979,108 samples, 0.01%)</title><rect x="545.1" y="1253" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="548.12" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (65,580,340 samples, 0.02%)</title><rect x="12.1" y="1221" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="15.14" y="1231.5" ></text>
</g>
<g >
<title>std::mutex::lock (38,837,825 samples, 0.01%)</title><rect x="1157.0" y="1237" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1160.04" y="1247.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (138,585,139 samples, 0.05%)</title><rect x="500.0" y="917" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="503.04" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (52,663,375 samples, 0.02%)</title><rect x="802.2" y="1013" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="805.22" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (27,209,954 samples, 0.01%)</title><rect x="962.9" y="1077" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="965.91" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (70,781,528 samples, 0.03%)</title><rect x="295.6" y="1173" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="298.63" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (46,728,262 samples, 0.02%)</title><rect x="630.0" y="437" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.96" y="447.5" ></text>
</g>
<g >
<title>security_d_instantiate (114,089,313 samples, 0.04%)</title><rect x="1177.0" y="1301" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1180.04" y="1311.5" ></text>
</g>
<g >
<title>getname_flags (30,239,607 samples, 0.01%)</title><rect x="120.3" y="1285" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="123.31" y="1295.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (25,524,555 samples, 0.01%)</title><rect x="171.4" y="1077" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="174.38" y="1087.5" ></text>
</g>
<g >
<title>dput (72,267,287 samples, 0.03%)</title><rect x="409.1" y="1093" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="412.10" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (41,750,350 samples, 0.02%)</title><rect x="488.4" y="453" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="491.37" y="463.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (24,667,612 samples, 0.01%)</title><rect x="925.5" y="901" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="928.47" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (51,695,129 samples, 0.02%)</title><rect x="543.2" y="853" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.22" y="863.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::AddChannel (102,804,297 samples, 0.04%)</title><rect x="413.1" y="1493" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="416.07" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,671,960,469 samples, 1.38%)</title><rect x="65.0" y="1029" width="16.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="67.97" y="1039.5" ></text>
</g>
<g >
<title>sock_recvmsg (49,993,033 samples, 0.02%)</title><rect x="547.7" y="1317" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="550.71" y="1327.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (60,187,742 samples, 0.02%)</title><rect x="1102.8" y="1061" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1105.76" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (100,941,214 samples, 0.04%)</title><rect x="1063.5" y="901" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1066.53" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (47,013,770 samples, 0.02%)</title><rect x="223.7" y="1109" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="226.70" y="1119.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (105,181,720 samples, 0.04%)</title><rect x="628.2" y="1349" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="631.17" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (47,242,708 samples, 0.02%)</title><rect x="911.6" y="757" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.61" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (47,347,803 samples, 0.02%)</title><rect x="629.5" y="757" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.50" y="767.5" ></text>
</g>
<g >
<title>__strlen_avx2 (216,795,753 samples, 0.08%)</title><rect x="991.7" y="1653" width="1.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="994.70" y="1663.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (78,370,751 samples, 0.03%)</title><rect x="787.3" y="981" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="790.30" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (45,235,832 samples, 0.02%)</title><rect x="259.9" y="869" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="262.89" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,584,317,758 samples, 1.34%)</title><rect x="631.3" y="1077" width="15.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="634.27" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (36,090,562 samples, 0.01%)</title><rect x="771.2" y="373" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="774.18" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (180,331,960 samples, 0.07%)</title><rect x="63.2" y="917" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.19" y="927.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (72,405,717 samples, 0.03%)</title><rect x="785.4" y="949" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="788.36" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (263,280,283 samples, 0.10%)</title><rect x="205.3" y="1269" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="208.30" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (10,453,998,426 samples, 3.91%)</title><rect x="13.2" y="1189" width="46.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="16.20" y="1199.5" >std:..</text>
</g>
<g >
<title>vm_unmapped_area (22,730,493 samples, 0.01%)</title><rect x="1111.2" y="1221" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1114.25" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,937,766 samples, 0.01%)</title><rect x="206.0" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.97" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (28,634,751 samples, 0.01%)</title><rect x="255.9" y="1093" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="258.93" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,757,392 samples, 0.03%)</title><rect x="118.3" y="1253" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.27" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,591,013,552 samples, 1.34%)</title><rect x="772.5" y="1077" width="15.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="775.46" y="1087.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (51,330,928 samples, 0.02%)</title><rect x="660.8" y="1013" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="663.80" y="1023.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (28,362,285 samples, 0.01%)</title><rect x="406.7" y="1157" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="409.75" y="1167.5" ></text>
</g>
<g >
<title>inet_sendmsg (409,896,420 samples, 0.15%)</title><rect x="411.1" y="1285" width="1.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="414.05" y="1295.5" ></text>
</g>
<g >
<title>__dynamic_cast (80,191,527 samples, 0.03%)</title><rect x="277.1" y="1637" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="280.14" y="1647.5" ></text>
</g>
<g >
<title>security_inode_free (43,013,011 samples, 0.02%)</title><rect x="1166.0" y="1221" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1168.98" y="1231.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (26,473,396 samples, 0.01%)</title><rect x="1114.8" y="1173" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1117.79" y="1183.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (109,921,256 samples, 0.04%)</title><rect x="738.1" y="1077" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="741.09" y="1087.5" ></text>
</g>
<g >
<title>do_epoll_ctl (56,227,465 samples, 0.02%)</title><rect x="548.4" y="1221" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="551.41" y="1231.5" ></text>
</g>
<g >
<title>get_unmapped_area (35,639,957 samples, 0.01%)</title><rect x="1111.2" y="1269" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1114.21" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (41,287,961 samples, 0.02%)</title><rect x="488.4" y="437" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="491.37" y="447.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,132,605,989 samples, 0.42%)</title><rect x="971.4" y="1445" width="5.0" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="974.38" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (105,506,354 samples, 0.04%)</title><rect x="104.6" y="1013" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="107.56" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (55,585,578 samples, 0.02%)</title><rect x="1050.8" y="1189" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1053.77" y="1199.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (336,596,088 samples, 0.13%)</title><rect x="1040.8" y="1077" width="1.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1043.79" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (42,065,339 samples, 0.02%)</title><rect x="63.2" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.24" y="623.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (227,333,201 samples, 0.09%)</title><rect x="814.4" y="1029" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="817.44" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (74,744,511 samples, 0.03%)</title><rect x="259.8" y="1189" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.83" y="1199.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (70,012,750 samples, 0.03%)</title><rect x="407.9" y="1029" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="410.93" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (54,215,763 samples, 0.02%)</title><rect x="719.0" y="1093" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="722.01" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (46,513,462 samples, 0.02%)</title><rect x="951.2" y="1077" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="954.23" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (123,527,131 samples, 0.05%)</title><rect x="558.6" y="1653" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="561.65" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,231,242,056 samples, 4.21%)</title><rect x="11.0" y="1317" width="49.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.97" y="1327.5" >std::..</text>
</g>
<g >
<title>vfs_fstatat (88,892,581 samples, 0.03%)</title><rect x="261.7" y="1301" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="264.73" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+= (41,554,015 samples, 0.02%)</title><rect x="190.2" y="1029" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="193.23" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,934,128,155 samples, 1.47%)</title><rect x="913.1" y="1253" width="17.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="916.12" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,715,172,123 samples, 1.39%)</title><rect x="806.0" y="1157" width="16.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="809.01" y="1167.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (660,627,861 samples, 0.25%)</title><rect x="1182.6" y="1509" width="2.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1185.60" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (26,703,658 samples, 0.01%)</title><rect x="684.1" y="309" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="687.06" y="319.5" ></text>
</g>
<g >
<title>malloc (91,580,445 samples, 0.03%)</title><rect x="132.7" y="1653" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="135.70" y="1663.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (63,859,473 samples, 0.02%)</title><rect x="550.1" y="1029" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="553.11" y="1039.5" ></text>
</g>
<g >
<title>ip_output (49,532,126 samples, 0.02%)</title><rect x="975.5" y="901" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="978.51" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (336,619,327 samples, 0.13%)</title><rect x="888.3" y="1045" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="891.28" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,599,119,979 samples, 4.34%)</title><rect x="1001.5" y="1349" width="51.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1004.53" y="1359.5" >std::..</text>
</g>
<g >
<title>_copy_from_iter (120,162,384 samples, 0.04%)</title><rect x="270.2" y="1237" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="273.15" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (37,243,661 samples, 0.01%)</title><rect x="63.5" y="661" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="66.49" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (58,407,117 samples, 0.02%)</title><rect x="119.5" y="1397" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="122.46" y="1407.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (23,015,878 samples, 0.01%)</title><rect x="266.6" y="1045" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="269.58" y="1055.5" ></text>
</g>
<g >
<title>malloc (93,629,674 samples, 0.04%)</title><rect x="415.2" y="1653" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="418.16" y="1663.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (31,253,641 samples, 0.01%)</title><rect x="468.7" y="1045" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="471.68" y="1055.5" ></text>
</g>
<g >
<title>[web-server] (28,148,596 samples, 0.01%)</title><rect x="650.8" y="1045" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="653.76" y="1055.5" ></text>
</g>
<g >
<title>HttpResponse::SetHeader (26,782,882 samples, 0.01%)</title><rect x="544.6" y="1381" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="547.62" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (476,480,575 samples, 0.18%)</title><rect x="697.6" y="1669" width="2.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="700.62" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (82,167,329 samples, 0.03%)</title><rect x="769.4" y="1285" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="772.40" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (124,314,564 samples, 0.05%)</title><rect x="1099.7" y="1045" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1102.69" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (68,742,024 samples, 0.03%)</title><rect x="718.9" y="1157" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="721.95" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,697,645,485 samples, 2.88%)</title><rect x="631.1" y="1285" width="34.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="634.14" y="1295.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,949,652 samples, 0.01%)</title><rect x="911.9" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.90" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (29,712,169 samples, 0.01%)</title><rect x="774.3" y="949" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="777.31" y="959.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (29,494,665 samples, 0.01%)</title><rect x="1024.8" y="1061" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1027.76" y="1071.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (63,707,159 samples, 0.02%)</title><rect x="641.5" y="885" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="644.49" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (31,966,111 samples, 0.01%)</title><rect x="804.1" y="1061" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="807.09" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (25,078,875 samples, 0.01%)</title><rect x="397.5" y="1093" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="400.53" y="1103.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (25,223,146,514 samples, 9.45%)</title><rect x="294.2" y="1509" width="111.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="297.22" y="1519.5" >std::_Functio..</text>
</g>
<g >
<title>std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (28,516,629 samples, 0.01%)</title><rect x="1053.6" y="1381" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1056.63" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (35,090,918 samples, 0.01%)</title><rect x="927.9" y="949" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="930.94" y="959.5" ></text>
</g>
<g >
<title>[unknown] (66,893,815 samples, 0.03%)</title><rect x="576.0" y="1669" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="579.04" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (34,701,634 samples, 0.01%)</title><rect x="1009.9" y="1013" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1012.90" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (23,180,354 samples, 0.01%)</title><rect x="362.5" y="949" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="365.48" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (28,350,417 samples, 0.01%)</title><rect x="361.5" y="933" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="364.48" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (110,668,610 samples, 0.04%)</title><rect x="770.9" y="789" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.94" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (98,322,259 samples, 0.04%)</title><rect x="911.9" y="709" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.88" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (47,782,650 samples, 0.02%)</title><rect x="1058.1" y="949" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1061.14" y="959.5" ></text>
</g>
<g >
<title>[unknown] (61,837,235 samples, 0.02%)</title><rect x="152.1" y="1669" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="155.07" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (72,571,652 samples, 0.03%)</title><rect x="876.8" y="1013" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="879.80" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,453,611 samples, 0.01%)</title><rect x="966.3" y="645" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.32" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,916,735 samples, 0.01%)</title><rect x="771.2" y="213" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="774.21" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (782,617,572 samples, 0.29%)</title><rect x="372.2" y="1045" width="3.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="375.16" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (27,718,738 samples, 0.01%)</title><rect x="540.5" y="1093" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="543.49" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1,054,880,039 samples, 0.40%)</title><rect x="1015.2" y="1077" width="4.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1018.15" y="1087.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (25,185,827,669 samples, 9.43%)</title><rect x="152.9" y="1445" width="111.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="155.91" y="1455.5" >HttpConn::Han..</text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (22,760,427 samples, 0.01%)</title><rect x="1163.9" y="1445" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1166.92" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (749,566,660 samples, 0.28%)</title><rect x="71.6" y="933" width="3.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="74.62" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (39,935,211 samples, 0.01%)</title><rect x="347.3" y="517" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.29" y="527.5" ></text>
</g>
<g >
<title>__secure_computing (26,592,717 samples, 0.01%)</title><rect x="1149.1" y="1365" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1152.06" y="1375.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (45,150,263 samples, 0.02%)</title><rect x="140.9" y="1637" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="143.95" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (42,437,967 samples, 0.02%)</title><rect x="733.5" y="1061" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="736.50" y="1071.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (51,181,506 samples, 0.02%)</title><rect x="1141.3" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1144.31" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (81,969,581 samples, 0.03%)</title><rect x="11.5" y="1189" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="14.50" y="1199.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (107,365,842 samples, 0.04%)</title><rect x="345.8" y="1349" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="348.84" y="1359.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (44,025,348 samples, 0.02%)</title><rect x="1153.6" y="1205" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1156.58" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,559,279,500 samples, 2.83%)</title><rect x="772.3" y="1269" width="33.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="775.34" y="1279.5" >st..</text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (74,626,076 samples, 0.03%)</title><rect x="641.4" y="901" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="644.44" y="911.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (52,006,154 samples, 0.02%)</title><rect x="39.7" y="1045" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="42.65" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (115,511,638 samples, 0.04%)</title><rect x="499.1" y="901" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="502.13" y="911.5" ></text>
</g>
<g >
<title>epoll_ctl (64,084,641 samples, 0.02%)</title><rect x="978.8" y="1461" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="981.81" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (194,514,961 samples, 0.07%)</title><rect x="494.4" y="901" width="0.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="497.37" y="911.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (26,981,212 samples, 0.01%)</title><rect x="856.8" y="1477" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="859.79" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,597,518 samples, 0.01%)</title><rect x="911.7" y="213" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.65" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (60,744,265 samples, 0.02%)</title><rect x="1114.0" y="1237" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1116.97" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (47,148,075 samples, 0.02%)</title><rect x="347.3" y="597" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.28" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,137,612 samples, 0.01%)</title><rect x="1108.6" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.62" y="591.5" ></text>
</g>
<g >
<title>ip_finish_output2 (49,979,998 samples, 0.02%)</title><rect x="693.0" y="853" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="696.02" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (31,837,068 samples, 0.01%)</title><rect x="491.4" y="949" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="494.43" y="959.5" ></text>
</g>
<g >
<title>[unknown] (52,085,129 samples, 0.02%)</title><rect x="565.0" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="567.96" y="1663.5" ></text>
</g>
<g >
<title>ip_finish_output (70,738,410 samples, 0.03%)</title><rect x="1120.0" y="1109" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1123.04" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (91,786,737 samples, 0.03%)</title><rect x="259.8" y="1333" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="262.81" y="1343.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (95,825,345 samples, 0.04%)</title><rect x="204.2" y="1285" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="207.16" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (32,158,777 samples, 0.01%)</title><rect x="206.0" y="309" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.98" y="319.5" ></text>
</g>
<g >
<title>EventLoop::DelChannel (160,790,832 samples, 0.06%)</title><rect x="265.0" y="1317" width="0.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="267.96" y="1327.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (42,889,852 samples, 0.02%)</title><rect x="637.1" y="933" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="640.06" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,974,119 samples, 0.01%)</title><rect x="911.9" y="677" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.88" y="687.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (29,260,173 samples, 0.01%)</title><rect x="1141.3" y="1413" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1144.34" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (75,560,934 samples, 0.03%)</title><rect x="295.1" y="1093" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="298.08" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (28,377,687 samples, 0.01%)</title><rect x="371.0" y="981" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="373.96" y="991.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (126,685,659 samples, 0.05%)</title><rect x="538.2" y="1077" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="541.15" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (45,743,239 samples, 0.02%)</title><rect x="437.1" y="1253" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="440.07" y="1263.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (26,132,395 samples, 0.01%)</title><rect x="267.0" y="837" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="270.02" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (51,409,221 samples, 0.02%)</title><rect x="1108.6" y="789" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1111.60" y="799.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (42,442,755 samples, 0.02%)</title><rect x="271.2" y="1029" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="274.24" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (102,367,246 samples, 0.04%)</title><rect x="356.5" y="901" width="0.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="359.50" y="911.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (110,153,952 samples, 0.04%)</title><rect x="1110.4" y="1317" width="0.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1113.43" y="1327.5" ></text>
</g>
<g >
<title>ip_local_out (150,604,145 samples, 0.06%)</title><rect x="977.4" y="1141" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="980.44" y="1151.5" ></text>
</g>
<g >
<title>__fput (297,910,465 samples, 0.11%)</title><rect x="1165.3" y="1349" width="1.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1168.33" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (39,471,383 samples, 0.01%)</title><rect x="771.2" y="405" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="774.18" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,674,638,674 samples, 1.38%)</title><rect x="631.2" y="1189" width="16.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="634.15" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,892,559,352 samples, 1.46%)</title><rect x="647.9" y="1253" width="17.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="650.85" y="1263.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (194,763,223 samples, 0.07%)</title><rect x="134.8" y="1637" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="137.83" y="1647.5" ></text>
</g>
<g >
<title>filename_lookup (42,856,343 samples, 0.02%)</title><rect x="261.9" y="1269" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="264.89" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (68,085,897 samples, 0.03%)</title><rect x="719.0" y="1141" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="721.95" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (58,628,729 samples, 0.02%)</title><rect x="487.9" y="821" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="490.90" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (47,335,061 samples, 0.02%)</title><rect x="63.7" y="613" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.67" y="623.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (24,552,717 samples, 0.01%)</title><rect x="973.7" y="757" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="976.72" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,854,012 samples, 0.02%)</title><rect x="347.3" y="661" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.28" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (28,491,189 samples, 0.01%)</title><rect x="610.6" y="1045" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="613.62" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (149,615,585 samples, 0.06%)</title><rect x="740.5" y="1045" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="743.51" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,858,037 samples, 0.01%)</title><rect x="347.8" y="149" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.78" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (55,550,509 samples, 0.02%)</title><rect x="488.4" y="645" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="491.36" y="655.5" ></text>
</g>
<g >
<title>__stpncpy_avx2 (314,832,761 samples, 0.12%)</title><rect x="1132.7" y="1653" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1135.66" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (27,375,143 samples, 0.01%)</title><rect x="670.9" y="1013" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="673.87" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (29,987,453 samples, 0.01%)</title><rect x="316.3" y="1061" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="319.31" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (26,556,175 samples, 0.01%)</title><rect x="261.3" y="1349" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="264.35" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,198,794 samples, 0.01%)</title><rect x="63.5" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.52" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::construct&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt; &gt; (23,750,328 samples, 0.01%)</title><rect x="719.1" y="1029" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="722.09" y="1039.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (60,356,426 samples, 0.02%)</title><rect x="814.9" y="949" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="817.89" y="959.5" ></text>
</g>
<g >
<title>kmem_cache_free (111,124,787 samples, 0.04%)</title><rect x="1168.6" y="1317" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1171.59" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (192,379,004 samples, 0.07%)</title><rect x="911.6" y="1013" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.57" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (40,698,586 samples, 0.02%)</title><rect x="785.9" y="949" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="788.86" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (43,151,600 samples, 0.02%)</title><rect x="118.4" y="805" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="121.36" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (45,705,768 samples, 0.02%)</title><rect x="103.3" y="1077" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="106.30" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (244,940,878 samples, 0.09%)</title><rect x="251.7" y="1077" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="254.74" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (29,098,082 samples, 0.01%)</title><rect x="182.0" y="1045" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="184.98" y="1055.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (167,826,930 samples, 0.06%)</title><rect x="520.0" y="1061" width="0.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="523.04" y="1071.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (23,325,841 samples, 0.01%)</title><rect x="802.5" y="1061" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="805.48" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,768,132 samples, 0.01%)</title><rect x="966.3" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.33" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (33,323,759 samples, 0.01%)</title><rect x="487.9" y="485" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="490.94" y="495.5" ></text>
</g>
<g >
<title>irq_exit_rcu (41,082,218 samples, 0.02%)</title><rect x="831.4" y="965" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="834.42" y="975.5" ></text>
</g>
<g >
<title>ip_finish_output (50,373,982 samples, 0.02%)</title><rect x="693.0" y="885" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="696.02" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,198,805 samples, 0.01%)</title><rect x="488.2" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.22" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (35,711,343 samples, 0.01%)</title><rect x="115.3" y="1093" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="118.29" y="1103.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (324,839,544 samples, 0.12%)</title><rect x="518.5" y="1061" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="521.55" y="1071.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (61,865,387 samples, 0.02%)</title><rect x="124.7" y="1125" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="127.69" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (32,367,328 samples, 0.01%)</title><rect x="685.6" y="1349" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="688.56" y="1359.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (27,882,987 samples, 0.01%)</title><rect x="351.2" y="933" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="354.21" y="943.5" ></text>
</g>
<g >
<title>do_writev (454,922,168 samples, 0.17%)</title><rect x="976.6" y="1365" width="2.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="979.55" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,698,242,187 samples, 1.38%)</title><rect x="65.0" y="1077" width="16.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="67.95" y="1087.5" ></text>
</g>
<g >
<title>inet_getname (57,890,210 samples, 0.02%)</title><rect x="1171.7" y="1349" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1174.75" y="1359.5" ></text>
</g>
<g >
<title>napi_complete_done (125,175,953 samples, 0.05%)</title><rect x="1184.3" y="1301" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1187.27" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (56,699,851 samples, 0.02%)</title><rect x="435.6" y="1109" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="438.58" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (42,664,898 samples, 0.02%)</title><rect x="400.8" y="613" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.75" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (29,168,584 samples, 0.01%)</title><rect x="1052.5" y="1253" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1055.51" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (25,349,335 samples, 0.01%)</title><rect x="344.8" y="1285" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="347.78" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (23,420,047 samples, 0.01%)</title><rect x="911.9" y="469" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.91" y="479.5" ></text>
</g>
<g >
<title>dput (82,865,598 samples, 0.03%)</title><rect x="692.3" y="1093" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="695.26" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (91,791,444 samples, 0.03%)</title><rect x="739.4" y="1077" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="742.43" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (61,880,008 samples, 0.02%)</title><rect x="154.8" y="1189" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="157.80" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (22,811,471 samples, 0.01%)</title><rect x="1054.7" y="277" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.70" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (831,113,535 samples, 0.31%)</title><rect x="124.3" y="1397" width="3.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="127.28" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (24,339,106 samples, 0.01%)</title><rect x="202.7" y="1253" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="205.71" y="1263.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (58,791,326 samples, 0.02%)</title><rect x="549.4" y="1141" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="552.38" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (32,192,472 samples, 0.01%)</title><rect x="944.9" y="1061" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="947.87" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (30,812,333 samples, 0.01%)</title><rect x="395.4" y="1077" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="398.42" y="1087.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (118,247,316 samples, 0.04%)</title><rect x="204.1" y="1349" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="207.09" y="1359.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (27,387,958 samples, 0.01%)</title><rect x="856.8" y="1525" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="859.79" y="1535.5" ></text>
</g>
<g >
<title>ip_list_rcv (120,664,777 samples, 0.05%)</title><rect x="1184.3" y="1253" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1187.29" y="1263.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (31,998,312 samples, 0.01%)</title><rect x="186.5" y="1045" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="189.51" y="1055.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (24,519,845 samples, 0.01%)</title><rect x="394.8" y="1045" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="397.83" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (25,858,037 samples, 0.01%)</title><rect x="347.8" y="165" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.78" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (48,071,520 samples, 0.02%)</title><rect x="1108.0" y="1269" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1111.03" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (289,960,360 samples, 0.11%)</title><rect x="487.7" y="1317" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="490.71" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock (23,416,013 samples, 0.01%)</title><rect x="276.1" y="1541" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="279.06" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (109,364,367 samples, 0.04%)</title><rect x="824.0" y="1333" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="826.95" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_eliminate_dummy (28,413,419 samples, 0.01%)</title><rect x="485.4" y="1333" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="488.39" y="1343.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::erase (35,297,020 samples, 0.01%)</title><rect x="972.0" y="1301" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="975.00" y="1311.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::DelChannel (156,623,404 samples, 0.06%)</title><rect x="123.5" y="1349" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="126.52" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (110,588,275 samples, 0.04%)</title><rect x="347.5" y="789" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.53" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (810,396,199 samples, 0.30%)</title><rect x="389.1" y="1077" width="3.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="392.09" y="1087.5" ></text>
</g>
<g >
<title>do_epoll_ctl (53,418,729 samples, 0.02%)</title><rect x="123.7" y="1221" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="126.75" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (48,670,037 samples, 0.02%)</title><rect x="900.7" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="903.68" y="1087.5" ></text>
</g>
<g >
<title>EventLoop::QueueInLoop (1,187,725,060 samples, 0.44%)</title><rect x="1152.9" y="1269" width="5.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1155.85" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,747,250,711 samples, 1.40%)</title><rect x="648.1" y="1125" width="16.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="651.06" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (99,867,637 samples, 0.04%)</title><rect x="771.0" y="709" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.95" y="719.5" ></text>
</g>
<g >
<title>HttpResponse::GetFileType (25,893,351 samples, 0.01%)</title><rect x="1110.0" y="1381" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1113.00" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,879,891 samples, 0.02%)</title><rect x="347.7" y="549" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.74" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (35,778,690 samples, 0.01%)</title><rect x="456.9" y="1061" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="459.86" y="1071.5" ></text>
</g>
<g >
<title>net_rx_action (36,408,582 samples, 0.01%)</title><rect x="1182.2" y="1413" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1185.18" y="1423.5" ></text>
</g>
<g >
<title>nf_conntrack_in (26,484,549 samples, 0.01%)</title><rect x="270.9" y="1077" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="273.85" y="1087.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (75,703,323 samples, 0.03%)</title><rect x="42.0" y="1061" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="44.98" y="1071.5" ></text>
</g>
<g >
<title>net_rx_action (26,798,985 samples, 0.01%)</title><rect x="425.7" y="1557" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="428.72" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_begin (23,816,386 samples, 0.01%)</title><rect x="626.8" y="1269" width="0.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="629.85" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (39,751,029 samples, 0.01%)</title><rect x="1002.9" y="1125" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1005.88" y="1135.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (27,823,768 samples, 0.01%)</title><rect x="217.3" y="917" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="220.32" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (135,490,608 samples, 0.05%)</title><rect x="140.3" y="1669" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="143.35" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,876,935 samples, 0.02%)</title><rect x="205.5" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.49" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (233,903,050 samples, 0.09%)</title><rect x="63.1" y="1141" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.10" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_Compiler (22,915,326 samples, 0.01%)</title><rect x="1052.8" y="1349" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1055.82" y="1359.5" ></text>
</g>
<g >
<title>net_rx_action (38,257,254 samples, 0.01%)</title><rect x="125.5" y="917" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="128.49" y="927.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt (120,447,902 samples, 0.05%)</title><rect x="1146.1" y="1301" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1149.09" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (119,906,221 samples, 0.04%)</title><rect x="770.9" y="821" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.93" y="831.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_M_getword (40,855,288 samples, 0.02%)</title><rect x="482.2" y="1093" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="485.20" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (29,529,507 samples, 0.01%)</title><rect x="681.0" y="1093" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="683.99" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (196,403,037 samples, 0.07%)</title><rect x="770.6" y="917" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.64" y="927.5" ></text>
</g>
<g >
<title>ip_list_rcv (31,037,993 samples, 0.01%)</title><rect x="973.7" y="821" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="976.71" y="831.5" ></text>
</g>
<g >
<title>[unknown] (25,698,801 samples, 0.01%)</title><rect x="838.6" y="1541" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1551.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (33,339,955 samples, 0.01%)</title><rect x="835.4" y="1093" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="838.40" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,111,868 samples, 0.01%)</title><rect x="205.5" y="453" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.53" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (355,676,926 samples, 0.13%)</title><rect x="333.7" y="1077" width="1.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="336.66" y="1087.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (90,216,581 samples, 0.03%)</title><rect x="1170.5" y="1301" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1173.53" y="1311.5" ></text>
</g>
<g >
<title>unmap_page_range (27,502,729 samples, 0.01%)</title><rect x="1116.2" y="1013" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1119.20" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (10,150,083,466 samples, 3.80%)</title><rect x="580.1" y="1141" width="44.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="583.07" y="1151.5" >std:..</text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (83,243,011 samples, 0.03%)</title><rect x="442.4" y="1093" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="445.36" y="1103.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (162,386,572 samples, 0.06%)</title><rect x="393.0" y="1061" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="395.99" y="1071.5" ></text>
</g>
<g >
<title>__napi_poll (29,660,140 samples, 0.01%)</title><rect x="267.0" y="901" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="270.01" y="911.5" ></text>
</g>
<g >
<title>nf_hook_slow (45,432,548 samples, 0.02%)</title><rect x="553.7" y="1109" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="556.75" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (54,719,156 samples, 0.02%)</title><rect x="153.0" y="1301" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="155.97" y="1311.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (249,247,839 samples, 0.09%)</title><rect x="939.1" y="1013" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="942.12" y="1023.5" ></text>
</g>
<g >
<title>do_iter_write (442,598,015 samples, 0.17%)</title><rect x="411.0" y="1333" width="2.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="414.00" y="1343.5" ></text>
</g>
<g >
<title>perf_iterate_sb (24,573,756 samples, 0.01%)</title><rect x="1111.7" y="1237" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1114.73" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,709,918,801 samples, 1.39%)</title><rect x="382.5" y="1141" width="16.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="385.53" y="1151.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (97,072,191 samples, 0.04%)</title><rect x="389.3" y="1061" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="392.32" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_end (82,204,538 samples, 0.03%)</title><rect x="1001.7" y="1189" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1004.73" y="1199.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (361,017,059 samples, 0.14%)</title><rect x="493.7" y="933" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="496.66" y="943.5" ></text>
</g>
<g >
<title>x64_sys_call (347,032,882 samples, 0.13%)</title><rect x="262.4" y="1349" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="265.38" y="1359.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (24,528,097 samples, 0.01%)</title><rect x="704.3" y="1653" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="707.26" y="1663.5" ></text>
</g>
<g >
<title>vfs_statx (60,387,140 samples, 0.02%)</title><rect x="968.4" y="1285" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="971.41" y="1295.5" ></text>
</g>
<g >
<title>____fput (27,841,095 samples, 0.01%)</title><rect x="407.2" y="1093" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="410.20" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (27,939,540 samples, 0.01%)</title><rect x="964.8" y="1205" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="967.77" y="1215.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (33,125,228 samples, 0.01%)</title><rect x="831.0" y="1045" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="833.96" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,338,289 samples, 0.02%)</title><rect x="824.1" y="677" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.05" y="687.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,534,714,467 samples, 0.57%)</title><rect x="548.1" y="1509" width="6.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="551.07" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,022,758 samples, 0.02%)</title><rect x="488.4" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.37" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (10,212,847,903 samples, 3.82%)</title><rect x="13.5" y="1157" width="45.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="16.53" y="1167.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (24,155,672 samples, 0.01%)</title><rect x="87.5" y="981" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="90.49" y="991.5" ></text>
</g>
<g >
<title>[unknown] (26,353,759 samples, 0.01%)</title><rect x="869.4" y="1045" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="872.36" y="1055.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (27,770,927 samples, 0.01%)</title><rect x="788.6" y="1029" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="791.64" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (23,601,727 samples, 0.01%)</title><rect x="767.9" y="1237" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="770.86" y="1247.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (128,769,781 samples, 0.05%)</title><rect x="250.2" y="981" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="253.23" y="991.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (191,205,130 samples, 0.07%)</title><rect x="939.4" y="965" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="942.36" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (109,459,044 samples, 0.04%)</title><rect x="446.9" y="1077" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="449.88" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_any_matcher_ecma&lt;false, false&gt; (32,324,202 samples, 0.01%)</title><rect x="11.6" y="1141" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="14.63" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (74,061,617 samples, 0.03%)</title><rect x="336.5" y="1093" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="339.47" y="1103.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (30,091,795 samples, 0.01%)</title><rect x="506.5" y="1029" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="509.46" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::emplace_back&lt;char&gt; (23,355,870 samples, 0.01%)</title><rect x="297.3" y="1125" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="300.30" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,840,299,292 samples, 1.44%)</title><rect x="64.8" y="1221" width="17.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="67.83" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (74,398,984 samples, 0.03%)</title><rect x="154.8" y="1205" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="157.80" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (23,565,728 samples, 0.01%)</title><rect x="497.5" y="869" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="500.54" y="879.5" ></text>
</g>
<g >
<title>__fput (32,005,168 samples, 0.01%)</title><rect x="124.7" y="1077" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="127.75" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (24,673,874 samples, 0.01%)</title><rect x="363.1" y="933" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="366.10" y="943.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (25,552,651 samples, 0.01%)</title><rect x="292.5" y="1477" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="295.46" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (35,229,951 samples, 0.01%)</title><rect x="645.6" y="949" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="648.60" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (565,175,917 samples, 0.21%)</title><rect x="168.8" y="1045" width="2.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="171.76" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (67,829,886 samples, 0.03%)</title><rect x="883.9" y="1013" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="886.87" y="1023.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (58,809,926 samples, 0.02%)</title><rect x="345.2" y="1317" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="348.22" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Channel&gt;::construct&lt;Channel, int&amp;&gt; (31,605,595 samples, 0.01%)</title><rect x="1160.6" y="1189" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1163.60" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (71,226,150 samples, 0.03%)</title><rect x="35.7" y="1013" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="38.66" y="1023.5" ></text>
</g>
<g >
<title>__vm_munmap (305,893,848 samples, 0.11%)</title><rect x="690.6" y="1109" width="1.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="693.58" y="1119.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (36,227,372 samples, 0.01%)</title><rect x="691.1" y="981" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="694.13" y="991.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_destroy (28,613,746 samples, 0.01%)</title><rect x="628.4" y="1077" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="631.41" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (77,911,079 samples, 0.03%)</title><rect x="390.3" y="1029" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="393.30" y="1039.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::DelChannel (159,860,266 samples, 0.06%)</title><rect x="1113.8" y="1333" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1116.75" y="1343.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (189,589,004 samples, 0.07%)</title><rect x="661.1" y="1061" width="0.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="664.13" y="1071.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (26,060,877 samples, 0.01%)</title><rect x="292.5" y="1509" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="295.45" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (26,733,283 samples, 0.01%)</title><rect x="663.3" y="1061" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="666.27" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (53,003,729 samples, 0.02%)</title><rect x="58.8" y="1157" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="61.84" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (46,943,209 samples, 0.02%)</title><rect x="202.7" y="1285" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="205.65" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (98,595,461 samples, 0.04%)</title><rect x="261.7" y="1333" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="264.69" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (147,959,814 samples, 0.06%)</title><rect x="1045.0" y="1093" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1047.98" y="1103.5" ></text>
</g>
<g >
<title>__fput_sync (262,551,266 samples, 0.10%)</title><rect x="126.5" y="1125" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="129.53" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (195,011,091 samples, 0.07%)</title><rect x="529.6" y="1029" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="532.59" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (23,949,652 samples, 0.01%)</title><rect x="911.9" y="517" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="914.90" y="527.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (72,411,109 samples, 0.03%)</title><rect x="452.3" y="997" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="455.31" y="1007.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (23,161,235 samples, 0.01%)</title><rect x="542.8" y="1109" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="545.76" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (120,108,671 samples, 0.04%)</title><rect x="435.9" y="1221" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="438.92" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (46,060,450 samples, 0.02%)</title><rect x="487.9" y="645" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="490.92" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (34,430,316 samples, 0.01%)</title><rect x="824.5" y="1365" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="827.54" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (50,969,260 samples, 0.02%)</title><rect x="1105.0" y="1093" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1107.98" y="1103.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (49,471,137 samples, 0.02%)</title><rect x="259.3" y="1285" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="262.34" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,743,125,409 samples, 1.40%)</title><rect x="913.2" y="1109" width="16.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="916.21" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (48,812,997 samples, 0.02%)</title><rect x="63.2" y="741" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.22" y="751.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (75,066,728 samples, 0.03%)</title><rect x="1170.6" y="1269" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1173.56" y="1279.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,369,714,639 samples, 10.25%)</title><rect x="858.8" y="1653" width="120.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="861.80" y="1663.5" >std::thread::_I..</text>
</g>
<g >
<title>HttpConn::HandleWrite (1,089,983,421 samples, 0.41%)</title><rect x="689.1" y="1445" width="4.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="692.13" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (135,174,564 samples, 0.05%)</title><rect x="1108.4" y="1349" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1111.36" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (50,976,960 samples, 0.02%)</title><rect x="961.6" y="1045" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="964.57" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (39,599,047 samples, 0.01%)</title><rect x="25.9" y="1061" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="28.91" y="1071.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (22,675,408 samples, 0.01%)</title><rect x="229.6" y="965" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="232.56" y="975.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (168,638,434 samples, 0.06%)</title><rect x="1039.2" y="1061" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1042.19" y="1071.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (30,078,410 samples, 0.01%)</title><rect x="830.1" y="1157" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="833.11" y="1167.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (222,171,864 samples, 0.08%)</title><rect x="883.6" y="1029" width="1.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="886.62" y="1039.5" ></text>
</g>
<g >
<title>[libc.so.6] (39,044,724 samples, 0.01%)</title><rect x="283.7" y="1653" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="286.65" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (193,481,073 samples, 0.07%)</title><rect x="205.4" y="997" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.44" y="1007.5" ></text>
</g>
<g >
<title>do_sock_setsockopt (220,881,558 samples, 0.08%)</title><rect x="1145.8" y="1349" width="1.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1148.80" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,834,836,803 samples, 1.44%)</title><rect x="647.9" y="1189" width="17.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="650.93" y="1199.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (22,666,544 samples, 0.01%)</title><rect x="1083.0" y="981" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1085.96" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (27,138,327 samples, 0.01%)</title><rect x="1105.4" y="1093" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1108.37" y="1103.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (335,462,796 samples, 0.13%)</title><rect x="1111.2" y="1301" width="1.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1114.18" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (45,044,623 samples, 0.02%)</title><rect x="1155.5" y="1125" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1158.49" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (171,267,835 samples, 0.06%)</title><rect x="1130.5" y="1669" width="0.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1133.53" y="1679.5" ></text>
</g>
<g >
<title>iput (51,882,838 samples, 0.02%)</title><rect x="268.2" y="1045" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="271.21" y="1055.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (83,429,846 samples, 0.03%)</title><rect x="249.4" y="1029" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="252.44" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (442,221,843 samples, 0.17%)</title><rect x="859.5" y="1285" width="2.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="862.53" y="1295.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (77,846,409 samples, 0.03%)</title><rect x="967.8" y="1397" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="970.77" y="1407.5" ></text>
</g>
<g >
<title>do_epoll_ctl (55,115,891 samples, 0.02%)</title><rect x="265.2" y="1221" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="268.18" y="1231.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_whichword (25,653,931 samples, 0.01%)</title><rect x="624.0" y="1077" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="626.98" y="1087.5" ></text>
</g>
<g >
<title>_raw_spin_lock (38,479,958 samples, 0.01%)</title><rect x="1178.2" y="1333" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1181.24" y="1343.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::DelChannel (140,166,071 samples, 0.05%)</title><rect x="689.2" y="1349" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="692.18" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (31,257,437 samples, 0.01%)</title><rect x="367.6" y="1061" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="370.56" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,744,655,061 samples, 1.40%)</title><rect x="631.1" y="1221" width="16.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="634.15" y="1231.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (54,496,805 samples, 0.02%)</title><rect x="153.8" y="1045" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="156.80" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (24,557,806 samples, 0.01%)</title><rect x="946.0" y="1061" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="948.95" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (37,485,796 samples, 0.01%)</title><rect x="259.4" y="1157" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="262.38" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (70,648,559 samples, 0.03%)</title><rect x="486.6" y="1237" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="489.62" y="1247.5" ></text>
</g>
<g >
<title>__strxfrm_l (114,593,270 samples, 0.04%)</title><rect x="984.9" y="1669" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="987.91" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,403,395 samples, 0.01%)</title><rect x="118.4" y="485" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.38" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (200,552,803 samples, 0.08%)</title><rect x="246.3" y="1029" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="249.25" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (98,342,071 samples, 0.04%)</title><rect x="824.0" y="1205" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="826.98" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (29,011,171 samples, 0.01%)</title><rect x="488.4" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="491.39" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (58,128,122 samples, 0.02%)</title><rect x="871.6" y="1077" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="874.55" y="1087.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (25,336,756,430 samples, 9.49%)</title><rect x="152.9" y="1461" width="112.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="155.89" y="1471.5" >HttpConn::Htt..</text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (168,693,687 samples, 0.06%)</title><rect x="961.1" y="1093" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="964.08" y="1103.5" ></text>
</g>
<g >
<title>sock_recvmsg (63,115,169 samples, 0.02%)</title><rect x="123.1" y="1317" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="126.07" y="1327.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (103,408,113 samples, 0.04%)</title><rect x="551.7" y="965" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="554.71" y="975.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (34,414,148 samples, 0.01%)</title><rect x="400.2" y="1205" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="403.23" y="1215.5" ></text>
</g>
<g >
<title>sch_direct_xmit (44,194,091 samples, 0.02%)</title><rect x="977.8" y="1045" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="980.84" y="1055.5" ></text>
</g>
<g >
<title>__strlen_avx2 (173,432,317 samples, 0.06%)</title><rect x="418.6" y="1669" width="0.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="421.55" y="1679.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (43,536,926 samples, 0.02%)</title><rect x="247.7" y="1077" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="250.65" y="1087.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (151,035,299 samples, 0.06%)</title><rect x="833.1" y="997" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="836.10" y="1007.5" ></text>
</g>
<g >
<title>std::function&lt;void  (169,017,620 samples, 0.06%)</title><rect x="829.1" y="1381" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="832.15" y="1391.5" ></text>
</g>
<g >
<title>_int_malloc (35,170,428 samples, 0.01%)</title><rect x="146.7" y="1685" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="149.70" y="1695.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (41,112,814 samples, 0.02%)</title><rect x="203.6" y="1301" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="206.59" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (28,466,807 samples, 0.01%)</title><rect x="319.0" y="1029" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="322.04" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (32,298,183 samples, 0.01%)</title><rect x="254.3" y="1029" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="257.29" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (75,968,454 samples, 0.03%)</title><rect x="1108.6" y="1157" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1111.55" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (31,206,613 samples, 0.01%)</title><rect x="925.7" y="885" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="928.73" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_Scanner (22,943,460 samples, 0.01%)</title><rect x="627.5" y="1333" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="630.48" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (72,767,140 samples, 0.03%)</title><rect x="910.3" y="1237" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="913.26" y="1247.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (61,545,343 samples, 0.02%)</title><rect x="804.6" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="807.57" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (59,625,290 samples, 0.02%)</title><rect x="259.8" y="1077" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="262.85" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (206,308,078 samples, 0.08%)</title><rect x="770.6" y="1029" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.63" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,318,136 samples, 0.01%)</title><rect x="629.8" y="677" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.76" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (111,584,078 samples, 0.04%)</title><rect x="699.2" y="1653" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="702.21" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (83,504,360 samples, 0.03%)</title><rect x="824.0" y="1109" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.00" y="1119.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (29,466,995 samples, 0.01%)</title><rect x="1163.4" y="1365" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1166.38" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (55,633,047 samples, 0.02%)</title><rect x="223.7" y="1189" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="226.69" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (123,270,859 samples, 0.05%)</title><rect x="1001.6" y="1237" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1004.59" y="1247.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (25,892,630 samples, 0.01%)</title><rect x="457.9" y="1045" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="460.91" y="1055.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (29,690,164 samples, 0.01%)</title><rect x="276.0" y="1573" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="279.04" y="1583.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (68,316,643 samples, 0.03%)</title><rect x="1001.1" y="1333" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1004.06" y="1343.5" ></text>
</g>
<g >
<title>operator delete (42,314,286 samples, 0.02%)</title><rect x="892.2" y="1013" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="895.19" y="1023.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (44,134,540 samples, 0.02%)</title><rect x="395.0" y="1045" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="398.01" y="1055.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (30,356,228 samples, 0.01%)</title><rect x="910.4" y="1093" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="913.38" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,047,248 samples, 0.01%)</title><rect x="1054.4" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.43" y="511.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (39,849,967 samples, 0.01%)</title><rect x="346.1" y="1125" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="349.08" y="1135.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (79,993,800 samples, 0.03%)</title><rect x="497.4" y="885" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="500.44" y="895.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (120,762,800 samples, 0.05%)</title><rect x="825.8" y="1397" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="828.82" y="1407.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (35,889,685 samples, 0.01%)</title><rect x="1012.8" y="1077" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1015.81" y="1087.5" ></text>
</g>
<g >
<title>x64_sys_call (322,277,720 samples, 0.12%)</title><rect x="121.0" y="1349" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="124.03" y="1359.5" ></text>
</g>
<g >
<title>napi_complete_done (23,736,544 samples, 0.01%)</title><rect x="303.1" y="965" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="306.10" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (116,446,649 samples, 0.04%)</title><rect x="347.5" y="805" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.52" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (121,810,516 samples, 0.05%)</title><rect x="24.0" y="1077" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="27.02" y="1087.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (358,833,103 samples, 0.13%)</title><rect x="146.9" y="1685" width="1.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="149.86" y="1695.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (25,095,831 samples, 0.01%)</title><rect x="969.0" y="1237" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="971.98" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,849,022,636 samples, 4.44%)</title><rect x="631.1" y="1381" width="52.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="634.10" y="1391.5" >std::..</text>
</g>
<g >
<title>down_write_killable (124,250,470 samples, 0.05%)</title><rect x="546.4" y="1285" width="0.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="549.45" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,421,021,103 samples, 4.28%)</title><rect x="577.5" y="1349" width="50.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="580.46" y="1359.5" >std::..</text>
</g>
<g >
<title>__tcp_transmit_skb (101,954,957 samples, 0.04%)</title><rect x="692.9" y="965" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="695.85" y="975.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="725" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="735.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (97,246,422 samples, 0.04%)</title><rect x="237.4" y="1029" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="240.42" y="1039.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (67,064,920 samples, 0.03%)</title><rect x="859.0" y="1365" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="861.98" y="1375.5" ></text>
</g>
<g >
<title>vfs_fstatat (100,061,225 samples, 0.04%)</title><rect x="120.3" y="1301" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="123.31" y="1311.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (93,361,300 samples, 0.03%)</title><rect x="834.8" y="1205" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="837.85" y="1215.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (23,032,536 samples, 0.01%)</title><rect x="453.6" y="1077" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="456.59" y="1087.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (99,897,996 samples, 0.04%)</title><rect x="628.2" y="1317" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="631.18" y="1327.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (25,875,828 samples, 0.01%)</title><rect x="42.6" y="1061" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="45.59" y="1071.5" ></text>
</g>
<g >
<title>release_sock (70,134,091 samples, 0.03%)</title><rect x="1171.0" y="1317" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1173.97" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (37,137,612 samples, 0.01%)</title><rect x="1108.6" y="565" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1111.62" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,661,094,363 samples, 4.37%)</title><rect x="1001.5" y="1381" width="51.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1004.50" y="1391.5" >std::..</text>
</g>
<g >
<title>__dev_queue_xmit (45,498,015 samples, 0.02%)</title><rect x="127.3" y="837" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="130.26" y="847.5" ></text>
</g>
<g >
<title>unmap_vmas (27,501,370 samples, 0.01%)</title><rect x="267.3" y="1045" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="270.29" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (630,520,070 samples, 0.24%)</title><rect x="920.7" y="917" width="2.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="923.69" y="927.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (24,774,338 samples, 0.01%)</title><rect x="119.2" y="1349" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="122.18" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (209,601,180 samples, 0.08%)</title><rect x="629.4" y="1061" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.41" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (27,919,895 samples, 0.01%)</title><rect x="361.2" y="885" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="364.16" y="895.5" ></text>
</g>
<g >
<title>netvsc_poll (47,057,115 samples, 0.02%)</title><rect x="856.8" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="859.78" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,397,064 samples, 0.02%)</title><rect x="347.3" y="725" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.27" y="735.5" ></text>
</g>
<g >
<title>ip_finish_output (75,985,329 samples, 0.03%)</title><rect x="129.4" y="1109" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="132.43" y="1119.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::function&lt;void  (41,844,502 samples, 0.02%)</title><rect x="1157.9" y="1189" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1160.87" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,979,440 samples, 0.02%)</title><rect x="770.7" y="725" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.67" y="735.5" ></text>
</g>
<g >
<title>__close (27,707,229 samples, 0.01%)</title><rect x="120.8" y="1397" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="123.82" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (57,245,430 samples, 0.02%)</title><rect x="815.9" y="1029" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="818.92" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (202,466,727 samples, 0.08%)</title><rect x="205.4" y="1045" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.43" y="1055.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (24,229,524 samples, 0.01%)</title><rect x="267.0" y="789" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="270.02" y="799.5" ></text>
</g>
<g >
<title>ip_finish_output (73,594,731 samples, 0.03%)</title><rect x="835.7" y="1109" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="838.67" y="1119.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (59,262,315 samples, 0.02%)</title><rect x="180.8" y="933" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="183.78" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,137,534 samples, 0.01%)</title><rect x="63.7" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.69" y="511.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (37,656,521 samples, 0.01%)</title><rect x="778.2" y="933" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="781.18" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (2,184,792,738 samples, 0.82%)</title><rect x="598.4" y="1077" width="9.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="601.38" y="1087.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (25,216,211 samples, 0.01%)</title><rect x="1160.9" y="1237" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1163.89" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,182,421 samples, 0.02%)</title><rect x="1054.4" y="725" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.40" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (29,486,100 samples, 0.01%)</title><rect x="436.6" y="1109" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="439.58" y="1119.5" ></text>
</g>
<g >
<title>Channel::OnRead (25,397,614,824 samples, 9.51%)</title><rect x="576.9" y="1541" width="112.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="579.85" y="1551.5" >Channel::OnRead</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_add_char (49,590,318 samples, 0.02%)</title><rect x="721.2" y="1157" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="724.17" y="1167.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (81,233,950 samples, 0.03%)</title><rect x="1098.0" y="1029" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1100.97" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (207,402,923 samples, 0.08%)</title><rect x="1094.8" y="1029" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1097.79" y="1039.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (226,759,741 samples, 0.08%)</title><rect x="921.6" y="885" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="924.61" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (24,285,271 samples, 0.01%)</title><rect x="102.9" y="1077" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="105.93" y="1087.5" ></text>
</g>
<g >
<title>TimerManager::DelTimer (28,214,328 samples, 0.01%)</title><rect x="265.0" y="1301" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="267.97" y="1311.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (43,624,331 samples, 0.02%)</title><rect x="575.1" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="578.07" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (221,557,392 samples, 0.08%)</title><rect x="770.6" y="1077" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.60" y="1087.5" ></text>
</g>
<g >
<title>handle_softirqs (32,951,586 samples, 0.01%)</title><rect x="19.3" y="1029" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="22.26" y="1039.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_maskbit (49,077,170 samples, 0.02%)</title><rect x="482.9" y="1109" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="485.87" y="1119.5" ></text>
</g>
<g >
<title>sock_read_iter (52,714,393 samples, 0.02%)</title><rect x="405.3" y="1333" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="408.35" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (93,436,148 samples, 0.03%)</title><rect x="63.5" y="693" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.49" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_read (80,810,937 samples, 0.03%)</title><rect x="547.6" y="1381" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="550.57" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (60,433,695 samples, 0.02%)</title><rect x="591.8" y="1061" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="594.76" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (33,461,853 samples, 0.01%)</title><rect x="112.6" y="1029" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="115.56" y="1039.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (109,348,771 samples, 0.04%)</title><rect x="472.7" y="1045" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="475.65" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (244,986,173 samples, 0.09%)</title><rect x="487.8" y="1237" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="490.77" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,643,476 samples, 0.01%)</title><rect x="205.6" y="181" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.55" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (93,881,466 samples, 0.04%)</title><rect x="918.2" y="869" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="921.22" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (60,170,459 samples, 0.02%)</title><rect x="812.3" y="1077" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="815.33" y="1087.5" ></text>
</g>
<g >
<title>x64_sys_call (89,639,776 samples, 0.03%)</title><rect x="688.6" y="1397" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="691.61" y="1407.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (26,540,020 samples, 0.01%)</title><rect x="667.0" y="1093" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="670.05" y="1103.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (225,634,457 samples, 0.08%)</title><rect x="623.2" y="1125" width="1.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="626.20" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (128,545,941 samples, 0.05%)</title><rect x="306.4" y="1077" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="309.41" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (30,199,503 samples, 0.01%)</title><rect x="1072.4" y="1045" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1075.39" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (78,322,532 samples, 0.03%)</title><rect x="622.3" y="1093" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="625.27" y="1103.5" ></text>
</g>
<g >
<title>osq_lock (33,695,298 samples, 0.01%)</title><rect x="267.6" y="1061" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="270.58" y="1071.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (176,437,097 samples, 0.07%)</title><rect x="467.9" y="1029" width="0.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="470.90" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (25,933,203 samples, 0.01%)</title><rect x="539.3" y="1093" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="542.30" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (196,549,646 samples, 0.07%)</title><rect x="63.2" y="1061" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.16" y="1071.5" ></text>
</g>
<g >
<title>__destroy_inode (23,344,533 samples, 0.01%)</title><rect x="1117.2" y="997" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1120.21" y="1007.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (715,982,597 samples, 0.27%)</title><rect x="1174.5" y="1333" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1177.53" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (43,335,350 samples, 0.02%)</title><rect x="627.3" y="1333" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="630.26" y="1343.5" ></text>
</g>
<g >
<title>TimerManager::Tick (50,400,323 samples, 0.02%)</title><rect x="555.6" y="1557" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="558.59" y="1567.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (70,994,357 samples, 0.03%)</title><rect x="1036.8" y="1077" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1039.80" y="1087.5" ></text>
</g>
<g >
<title>x64_sys_call (109,531,192 samples, 0.04%)</title><rect x="685.9" y="1349" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="688.91" y="1359.5" ></text>
</g>
<g >
<title>evict (46,199,512 samples, 0.02%)</title><rect x="832.7" y="1029" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="835.67" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (27,776,617 samples, 0.01%)</title><rect x="488.2" y="549" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="491.22" y="559.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (50,853,395 samples, 0.02%)</title><rect x="1102.5" y="1061" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1105.54" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (31,891,271 samples, 0.01%)</title><rect x="365.1" y="1061" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="368.13" y="1071.5" ></text>
</g>
<g >
<title>HttpConn::~HttpConn (523,379,083 samples, 0.20%)</title><rect x="972.3" y="1205" width="2.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="975.35" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (102,591,637 samples, 0.04%)</title><rect x="871.8" y="1077" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="874.81" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,548,177,566 samples, 1.33%)</title><rect x="349.1" y="1061" width="15.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="352.06" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (66,568,607 samples, 0.02%)</title><rect x="719.4" y="1173" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="722.44" y="1183.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (24,418,291 samples, 0.01%)</title><rect x="512.4" y="981" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="515.43" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,316,301,293 samples, 1.24%)</title><rect x="631.5" y="981" width="14.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="634.53" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (31,625,537 samples, 0.01%)</title><rect x="205.5" y="357" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.54" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (94,229,073 samples, 0.04%)</title><rect x="1113.1" y="1413" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1116.11" y="1423.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (164,236,804 samples, 0.06%)</title><rect x="90.6" y="965" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="93.63" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,733,588,621 samples, 1.40%)</title><rect x="489.6" y="1093" width="16.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.62" y="1103.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (30,239,607 samples, 0.01%)</title><rect x="120.3" y="1269" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="123.31" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (27,367,986 samples, 0.01%)</title><rect x="76.7" y="917" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="79.70" y="927.5" ></text>
</g>
<g >
<title>HttpConn::~HttpConn (489,952,138 samples, 0.18%)</title><rect x="406.7" y="1205" width="2.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="409.74" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,960,159,577 samples, 1.48%)</title><rect x="99.4" y="1173" width="17.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="102.36" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (42,065,339 samples, 0.02%)</title><rect x="63.2" y="597" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.24" y="607.5" ></text>
</g>
<g >
<title>std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, TimerManager::TimerCmp&gt; (34,345,891 samples, 0.01%)</title><rect x="1121.7" y="1525" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1124.73" y="1535.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::function&lt;void  (31,814,937 samples, 0.01%)</title><rect x="1157.9" y="1157" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1160.90" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (28,935,142 samples, 0.01%)</title><rect x="684.0" y="389" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="687.05" y="399.5" ></text>
</g>
<g >
<title>ip_finish_output2 (44,121,396 samples, 0.02%)</title><rect x="833.4" y="853" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="836.40" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,911,512,236 samples, 1.46%)</title><rect x="489.5" y="1237" width="17.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.49" y="1247.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (89,282,976 samples, 0.03%)</title><rect x="257.3" y="1125" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="260.32" y="1135.5" ></text>
</g>
<g >
<title>x64_sys_call (27,503,148 samples, 0.01%)</title><rect x="413.3" y="1413" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="416.29" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (43,111,778 samples, 0.02%)</title><rect x="1092.1" y="1093" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1095.11" y="1103.5" ></text>
</g>
<g >
<title>perf_event_mmap (56,922,526 samples, 0.02%)</title><rect x="969.3" y="1253" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="972.34" y="1263.5" ></text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (124,079,514 samples, 0.05%)</title><rect x="272.0" y="1557" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="275.01" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (51,728,278 samples, 0.02%)</title><rect x="911.6" y="805" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.61" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (107,880,910 samples, 0.04%)</title><rect x="640.4" y="901" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="643.39" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,181,624 samples, 0.01%)</title><rect x="1054.4" y="341" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.43" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (47,060,595 samples, 0.02%)</title><rect x="770.7" y="597" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.69" y="607.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (29,866,362 samples, 0.01%)</title><rect x="919.2" y="933" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="922.22" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (172,229,868 samples, 0.06%)</title><rect x="69.7" y="885" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="72.75" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (271,572,523 samples, 0.10%)</title><rect x="347.1" y="1285" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.08" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="309" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="319.5" ></text>
</g>
<g >
<title>std::function&lt;void  (42,982,141 samples, 0.02%)</title><rect x="1152.2" y="1285" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1155.20" y="1295.5" ></text>
</g>
<g >
<title>do_epoll_ctl (25,779,476 samples, 0.01%)</title><rect x="836.9" y="1381" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="839.86" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,548,619 samples, 0.01%)</title><rect x="1054.7" y="341" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.69" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_realloc_insert&lt;char&gt; (23,479,025 samples, 0.01%)</title><rect x="437.7" y="1109" width="0.1" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="440.69" y="1119.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::erase (28,603,029 samples, 0.01%)</title><rect x="1114.3" y="1301" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1117.31" y="1311.5" ></text>
</g>
<g >
<title>epoll_ctl (43,446,306 samples, 0.02%)</title><rect x="413.3" y="1461" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="416.25" y="1471.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (881,906,821 samples, 0.33%)</title><rect x="469.5" y="1093" width="3.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="472.49" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (29,521,299 samples, 0.01%)</title><rect x="1070.1" y="933" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1073.07" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (112,996,103 samples, 0.04%)</title><rect x="63.5" y="821" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.46" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (26,139,764 samples, 0.01%)</title><rect x="1054.7" y="357" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.69" y="367.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (34,082,773 samples, 0.01%)</title><rect x="554.1" y="1029" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="557.11" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (44,477,234 samples, 0.02%)</title><rect x="788.6" y="1157" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="791.59" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (633,332,976 samples, 0.24%)</title><rect x="389.8" y="1061" width="2.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="392.84" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,728,905,035 samples, 1.40%)</title><rect x="1090.2" y="1141" width="16.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1093.15" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,523,817 samples, 0.02%)</title><rect x="63.2" y="805" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.22" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (90,391,837 samples, 0.03%)</title><rect x="767.0" y="1205" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="769.95" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,081,659 samples, 0.02%)</title><rect x="684.0" y="821" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.01" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,220,204,256 samples, 1.21%)</title><rect x="631.8" y="965" width="14.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="634.79" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_State&lt;char&gt; &gt;::construct&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt; &gt; (30,465,680 samples, 0.01%)</title><rect x="153.9" y="1013" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="156.86" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (52,513,730 samples, 0.02%)</title><rect x="96.9" y="1061" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="99.93" y="1071.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_destroy (26,050,668 samples, 0.01%)</title><rect x="910.4" y="1077" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="913.39" y="1087.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (24,313,816 samples, 0.01%)</title><rect x="1078.6" y="1045" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1081.63" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,896,430,311 samples, 1.46%)</title><rect x="489.5" y="1221" width="17.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.49" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,825,427,328 samples, 1.43%)</title><rect x="224.2" y="1237" width="16.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="227.16" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (38,937,766 samples, 0.01%)</title><rect x="206.0" y="437" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.97" y="447.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (46,996,619 samples, 0.02%)</title><rect x="272.6" y="1557" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="275.56" y="1567.5" ></text>
</g>
<g >
<title>operator delete[] (55,024,044 samples, 0.02%)</title><rect x="845.9" y="1669" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="848.94" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,851,582,118 samples, 1.44%)</title><rect x="207.1" y="1253" width="17.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="210.12" y="1263.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (59,574,399 samples, 0.02%)</title><rect x="359.4" y="885" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="362.39" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,875,808 samples, 0.01%)</title><rect x="118.4" y="517" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.38" y="527.5" ></text>
</g>
<g >
<title>[unknown] (25,698,801 samples, 0.01%)</title><rect x="838.6" y="1509" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (25,246,741 samples, 0.01%)</title><rect x="626.5" y="1221" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="629.48" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,191,164 samples, 0.02%)</title><rect x="205.5" y="837" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.48" y="847.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (86,692,987 samples, 0.03%)</title><rect x="1086.2" y="1029" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1089.21" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (28,200,604 samples, 0.01%)</title><rect x="1061.2" y="869" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1064.20" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (101,526,103 samples, 0.04%)</title><rect x="63.5" y="725" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.48" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (49,410,674 samples, 0.02%)</title><rect x="771.2" y="613" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="774.16" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,914,110,390 samples, 1.47%)</title><rect x="913.1" y="1237" width="17.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="916.12" y="1247.5" ></text>
</g>
<g >
<title>__munmap (407,089,480 samples, 0.15%)</title><rect x="266.1" y="1189" width="1.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="269.08" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,723,635,771 samples, 1.39%)</title><rect x="207.1" y="1173" width="16.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="210.14" y="1183.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (146,730,833 samples, 0.05%)</title><rect x="517.7" y="1029" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="520.69" y="1039.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (28,113,282 samples, 0.01%)</title><rect x="578.7" y="1093" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="581.75" y="1103.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (69,424,028 samples, 0.03%)</title><rect x="1001.1" y="1365" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1004.06" y="1375.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (206,063,527 samples, 0.08%)</title><rect x="357.1" y="885" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="360.10" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (587,860,378 samples, 0.22%)</title><rect x="592.9" y="1045" width="2.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="595.87" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (77,404,906 samples, 0.03%)</title><rect x="75.4" y="901" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="78.44" y="911.5" ></text>
</g>
<g >
<title>Channel::OnRead (25,104,127,436 samples, 9.40%)</title><rect x="718.1" y="1541" width="110.9" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="721.12" y="1551.5" >Channel::OnRead</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (129,146,747 samples, 0.05%)</title><rect x="378.4" y="1045" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="381.37" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (368,623,949 samples, 0.14%)</title><rect x="86.1" y="1045" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="89.10" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (67,542,165 samples, 0.03%)</title><rect x="312.5" y="1013" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="315.46" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (33,166,872 samples, 0.01%)</title><rect x="629.8" y="597" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.77" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (43,623,826 samples, 0.02%)</title><rect x="385.9" y="1077" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="388.94" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (23,713,793 samples, 0.01%)</title><rect x="535.0" y="1013" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="537.96" y="1023.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (186,819,778 samples, 0.07%)</title><rect x="1184.2" y="1381" width="0.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1187.20" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,456,956,079 samples, 4.29%)</title><rect x="772.3" y="1301" width="50.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="775.33" y="1311.5" >std::..</text>
</g>
<g >
<title>__dentry_kill (71,852,344 samples, 0.03%)</title><rect x="1117.1" y="1077" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1120.05" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (37,867,158 samples, 0.01%)</title><rect x="12.5" y="1237" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="15.47" y="1247.5" ></text>
</g>
<g >
<title>irq_exit_rcu (187,584,044 samples, 0.07%)</title><rect x="1184.2" y="1397" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1187.19" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (33,929,282 samples, 0.01%)</title><rect x="945.1" y="1061" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="948.10" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (107,568,908 samples, 0.04%)</title><rect x="685.9" y="1333" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="688.91" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (35,025,958 samples, 0.01%)</title><rect x="786.7" y="949" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="789.67" y="959.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (34,591,091 samples, 0.01%)</title><rect x="406.4" y="1269" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="409.42" y="1279.5" ></text>
</g>
<g >
<title>EventLoop::AddChannel (102,189,685 samples, 0.04%)</title><rect x="413.1" y="1477" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="416.07" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,124,611 samples, 0.01%)</title><rect x="206.0" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.98" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,235,457,338 samples, 1.21%)</title><rect x="207.9" y="965" width="14.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="210.92" y="975.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::erase (35,308,431 samples, 0.01%)</title><rect x="406.4" y="1301" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="409.42" y="1311.5" ></text>
</g>
<g >
<title>epoll_ctl (54,934,820 samples, 0.02%)</title><rect x="272.2" y="1461" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="275.17" y="1471.5" ></text>
</g>
<g >
<title>__dynamic_cast (73,935,026 samples, 0.03%)</title><rect x="418.2" y="1637" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="421.15" y="1647.5" ></text>
</g>
<g >
<title>ip_queue_xmit (159,230,832 samples, 0.06%)</title><rect x="411.8" y="1173" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="414.84" y="1183.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (41,741,075 samples, 0.02%)</title><rect x="859.0" y="1253" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="862.04" y="1263.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (83,384,085 samples, 0.03%)</title><rect x="443.8" y="1077" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="446.84" y="1087.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (23,121,680 samples, 0.01%)</title><rect x="1111.7" y="1221" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1114.74" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (29,342,909 samples, 0.01%)</title><rect x="442.6" y="1077" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="445.59" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (785,802,685 samples, 0.29%)</title><rect x="248.3" y="1077" width="3.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="251.26" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (23,570,751 samples, 0.01%)</title><rect x="642.7" y="917" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="645.66" y="927.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_maskbit (23,776,480 samples, 0.01%)</title><rect x="664.3" y="1077" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="667.34" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (5,677,293,251 samples, 2.13%)</title><rect x="1010.7" y="1093" width="25.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1013.70" y="1103.5" >s..</text>
</g>
<g >
<title>ksys_read (93,699,788 samples, 0.04%)</title><rect x="970.8" y="1365" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="973.85" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (47,013,770 samples, 0.02%)</title><rect x="223.7" y="1125" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="226.70" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (36,992,084 samples, 0.01%)</title><rect x="526.4" y="1093" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="529.44" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (54,493,899 samples, 0.02%)</title><rect x="860.7" y="1189" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="863.72" y="1199.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (76,101,761 samples, 0.03%)</title><rect x="294.3" y="1365" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="297.31" y="1375.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,059,464,734 samples, 10.13%)</title><rect x="718.1" y="1653" width="119.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="721.08" y="1663.5" >std::thread::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,371,747 samples, 0.02%)</title><rect x="770.7" y="661" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.68" y="671.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (27,155,722 samples, 0.01%)</title><rect x="970.1" y="1253" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="973.08" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,308,391,364 samples, 1.24%)</title><rect x="1164.2" y="1445" width="14.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1167.19" y="1455.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (119,825,286 samples, 0.04%)</title><rect x="923.8" y="917" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="926.82" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (32,053,984 samples, 0.01%)</title><rect x="824.1" y="437" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="827.08" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (32,817,649 samples, 0.01%)</title><rect x="912.1" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="915.09" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,937,766 samples, 0.01%)</title><rect x="206.0" y="469" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.97" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (92,046,175 samples, 0.03%)</title><rect x="61.9" y="1253" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="64.90" y="1263.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (59,124,188 samples, 0.02%)</title><rect x="206.8" y="1381" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="209.80" y="1391.5" ></text>
</g>
<g >
<title>operator delete (65,259,313 samples, 0.02%)</title><rect x="281.3" y="1669" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="284.27" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (118,039,243 samples, 0.04%)</title><rect x="1143.0" y="1653" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.99" y="1663.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (70,558,792 samples, 0.03%)</title><rect x="1098.9" y="965" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1101.86" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (58,236,988 samples, 0.02%)</title><rect x="958.0" y="1029" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="961.01" y="1039.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (372,966,257 samples, 0.14%)</title><rect x="694.2" y="1317" width="1.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="697.19" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (633,487,244 samples, 0.24%)</title><rect x="184.1" y="1077" width="2.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="187.06" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,385,578,847 samples, 1.27%)</title><rect x="913.7" y="981" width="14.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="916.67" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,461,284 samples, 0.01%)</title><rect x="1054.5" y="133" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.45" y="143.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (209,275,206 samples, 0.08%)</title><rect x="73.2" y="869" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="76.21" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (95,094,073 samples, 0.04%)</title><rect x="1045.6" y="1093" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1048.63" y="1103.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (202,524,036 samples, 0.08%)</title><rect x="331.9" y="1061" width="0.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="334.92" y="1071.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (65,379,382 samples, 0.02%)</title><rect x="62.0" y="1205" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="64.97" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (36,827,782 samples, 0.01%)</title><rect x="1059.6" y="933" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1062.55" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (173,033,274 samples, 0.06%)</title><rect x="1054.3" y="1013" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.34" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,661,450,370 samples, 1.37%)</title><rect x="1056.0" y="1141" width="16.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1058.97" y="1151.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (49,249,202 samples, 0.02%)</title><rect x="678.4" y="1045" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="681.38" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (55,105,056 samples, 0.02%)</title><rect x="720.0" y="1157" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="722.96" y="1167.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (42,697,885 samples, 0.02%)</title><rect x="1182.2" y="1477" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1185.16" y="1487.5" ></text>
</g>
<g >
<title>x64_sys_call (34,187,099 samples, 0.01%)</title><rect x="130.6" y="1413" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="133.56" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,737,541 samples, 0.01%)</title><rect x="488.2" y="677" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.20" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (30,515,931 samples, 0.01%)</title><rect x="630.0" y="229" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.99" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (380,997,909 samples, 0.14%)</title><rect x="917.3" y="933" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="920.29" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (5,510,377,519 samples, 2.06%)</title><rect x="304.0" y="1093" width="24.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="306.98" y="1103.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (180,363,862 samples, 0.07%)</title><rect x="487.9" y="885" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="490.87" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (73,512,473 samples, 0.03%)</title><rect x="400.7" y="1061" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.70" y="1071.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (53,858,596 samples, 0.02%)</title><rect x="607.5" y="1013" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="610.48" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (58,133,198 samples, 0.02%)</title><rect x="400.7" y="853" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.73" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (119,298,616 samples, 0.04%)</title><rect x="911.8" y="837" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.83" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (256,320,399 samples, 0.10%)</title><rect x="347.1" y="1221" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.13" y="1231.5" ></text>
</g>
<g >
<title>[web-server] (31,972,185 samples, 0.01%)</title><rect x="725.1" y="1093" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="728.08" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (76,160,789 samples, 0.03%)</title><rect x="12.1" y="1237" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="15.13" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (41,717,444 samples, 0.02%)</title><rect x="400.8" y="597" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="403.75" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (62,169,679 samples, 0.02%)</title><rect x="966.3" y="933" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="969.29" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (560,808,582 samples, 0.21%)</title><rect x="310.4" y="1045" width="2.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="313.36" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (57,888,632 samples, 0.02%)</title><rect x="879.5" y="1061" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="882.49" y="1071.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (69,424,028 samples, 0.03%)</title><rect x="1001.1" y="1349" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1004.06" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,894,457,609 samples, 1.46%)</title><rect x="506.9" y="1237" width="17.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="509.86" y="1247.5" ></text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (432,086,533 samples, 0.16%)</title><rect x="204.9" y="1365" width="1.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="207.86" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,173,582,548 samples, 1.19%)</title><rect x="773.1" y="965" width="14.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="776.06" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (31,043,056 samples, 0.01%)</title><rect x="84.0" y="1061" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="87.01" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (49,622,318 samples, 0.02%)</title><rect x="791.3" y="1061" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="794.30" y="1071.5" ></text>
</g>
<g >
<title>mas_store_gfp (33,201,264 samples, 0.01%)</title><rect x="549.7" y="1061" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="552.74" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (23,903,447 samples, 0.01%)</title><rect x="259.9" y="341" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="262.93" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,143,127 samples, 0.09%)</title><rect x="770.6" y="1141" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.56" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (45,463,827 samples, 0.02%)</title><rect x="771.2" y="533" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="774.17" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,450,451 samples, 0.01%)</title><rect x="1108.6" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.62" y="623.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (29,206,988 samples, 0.01%)</title><rect x="1145.8" y="1333" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1148.84" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (60,822,550 samples, 0.02%)</title><rect x="543.2" y="933" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="546.19" y="943.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (61,857,519 samples, 0.02%)</title><rect x="1164.8" y="1413" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1167.76" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32,774,865 samples, 0.01%)</title><rect x="130.9" y="1525" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="133.87" y="1535.5" ></text>
</g>
<g >
<title>_copy_from_iter (115,838,616 samples, 0.04%)</title><rect x="1119.2" y="1237" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1122.15" y="1247.5" ></text>
</g>
<g >
<title>__handle_mm_fault (32,585,376 samples, 0.01%)</title><rect x="411.4" y="1141" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="414.37" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (24,339,384 samples, 0.01%)</title><rect x="512.5" y="981" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="515.54" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (27,283,275 samples, 0.01%)</title><rect x="206.0" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.98" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,584,511,792 samples, 3.59%)</title><rect x="722.0" y="1125" width="42.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="725.00" y="1135.5" >std..</text>
</g>
<g >
<title>hyperv_flush_tlb_multi (62,088,830 samples, 0.02%)</title><rect x="831.4" y="1013" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="834.36" y="1023.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;ProtocolHandler&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;ProtocolHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (130,047,641 samples, 0.05%)</title><rect x="1162.9" y="1413" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1165.94" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,166,872 samples, 0.01%)</title><rect x="629.8" y="565" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.77" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,130,301 samples, 0.01%)</title><rect x="205.8" y="677" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.77" y="687.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (228,315,222 samples, 0.09%)</title><rect x="1064.0" y="901" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1067.04" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (74,427,030 samples, 0.03%)</title><rect x="895.0" y="1061" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="897.99" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (36,721,256 samples, 0.01%)</title><rect x="119.9" y="1349" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="122.91" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (111,838,320 samples, 0.04%)</title><rect x="825.8" y="1381" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="828.84" y="1391.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (69,818,979 samples, 0.03%)</title><rect x="412.1" y="1061" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="415.15" y="1071.5" ></text>
</g>
<g >
<title>mas_store_gfp (40,133,030 samples, 0.02%)</title><rect x="407.5" y="1061" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="410.52" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (50,750,161 samples, 0.02%)</title><rect x="296.2" y="1173" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="299.17" y="1183.5" ></text>
</g>
<g >
<title>hyperv_flush_tlb_multi (57,699,128 samples, 0.02%)</title><rect x="125.4" y="1013" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="128.44" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (28,149,387 samples, 0.01%)</title><rect x="50.2" y="1045" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="53.23" y="1055.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (57,493,628 samples, 0.02%)</title><rect x="407.1" y="1141" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="410.12" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (52,523,817 samples, 0.02%)</title><rect x="63.2" y="789" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.22" y="799.5" ></text>
</g>
<g >
<title>tcp_send_fin (145,150,768 samples, 0.05%)</title><rect x="551.6" y="1013" width="0.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="554.62" y="1023.5" ></text>
</g>
<g >
<title>ip_finish_output (41,737,065 samples, 0.02%)</title><rect x="975.5" y="885" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="978.51" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (190,644,282 samples, 0.07%)</title><rect x="911.6" y="965" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.57" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,987,013 samples, 0.02%)</title><rect x="543.2" y="677" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.25" y="687.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (80,098,173 samples, 0.03%)</title><rect x="496.6" y="917" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.58" y="927.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (149,319,621 samples, 0.06%)</title><rect x="966.1" y="1349" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="969.08" y="1359.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (299,191,324 samples, 0.11%)</title><rect x="318.9" y="1045" width="1.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="321.87" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (37,073,859 samples, 0.01%)</title><rect x="930.1" y="1077" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="933.05" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (30,094,259 samples, 0.01%)</title><rect x="629.5" y="469" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.53" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (27,412,966,371 samples, 10.27%)</title><rect x="1000.9" y="1605" width="121.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1003.91" y="1615.5" >std::__invoke_i..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (109,292,159 samples, 0.04%)</title><rect x="578.6" y="1253" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="581.64" y="1263.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long, std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; (29,729,531 samples, 0.01%)</title><rect x="911.3" y="1285" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="914.25" y="1295.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (85,167,987 samples, 0.03%)</title><rect x="955.0" y="1061" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="958.02" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (30,094,259 samples, 0.01%)</title><rect x="629.5" y="485" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.53" y="495.5" ></text>
</g>
<g >
<title>_int_free (351,788,554 samples, 0.13%)</title><rect x="1127.7" y="1669" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1130.72" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (50,774,301 samples, 0.02%)</title><rect x="902.1" y="1077" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="905.14" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (269,903,120 samples, 0.10%)</title><rect x="511.5" y="1029" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="514.49" y="1039.5" ></text>
</g>
<g >
<title>alloc_inode (366,327,938 samples, 0.14%)</title><rect x="1172.8" y="1317" width="1.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1175.79" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (29,962,066 samples, 0.01%)</title><rect x="395.1" y="1029" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="398.07" y="1039.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (25,224,426 samples, 0.01%)</title><rect x="125.5" y="757" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="128.50" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (60,076,934 samples, 0.02%)</title><rect x="118.3" y="997" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="121.33" y="1007.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (27,691,308 samples, 0.01%)</title><rect x="830.3" y="1173" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="833.28" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (49,156,590 samples, 0.02%)</title><rect x="578.7" y="1157" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="581.67" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,496,028 samples, 0.01%)</title><rect x="824.1" y="341" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="827.09" y="351.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (64,561,549 samples, 0.02%)</title><rect x="617.7" y="1093" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="620.66" y="1103.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (33,887,763 samples, 0.01%)</title><rect x="1170.6" y="1157" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1173.57" y="1167.5" ></text>
</g>
<g >
<title>filename_lookup (51,947,408 samples, 0.02%)</title><rect x="120.5" y="1269" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="123.48" y="1279.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (62,596,061 samples, 0.02%)</title><rect x="899.5" y="1093" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="902.46" y="1103.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (53,698,504 samples, 0.02%)</title><rect x="542.7" y="1349" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="545.65" y="1359.5" ></text>
</g>
<g >
<title>mmap_region (143,985,429 samples, 0.05%)</title><rect x="262.6" y="1269" width="0.7" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="265.64" y="1279.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (1,643,197,903 samples, 0.62%)</title><rect x="1113.6" y="1493" width="7.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1116.64" y="1503.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (32,938,684 samples, 0.01%)</title><rect x="515.1" y="981" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="518.10" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (46,099,847 samples, 0.02%)</title><rect x="1108.6" y="725" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1111.61" y="735.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (71,308,959 samples, 0.03%)</title><rect x="453.8" y="1077" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="456.82" y="1087.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (140,507,061 samples, 0.05%)</title><rect x="689.2" y="1365" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="692.18" y="1375.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::erase (35,211,706 samples, 0.01%)</title><rect x="829.7" y="1301" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="832.72" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (182,802,942 samples, 0.07%)</title><rect x="911.6" y="901" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.59" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (35,485,385 samples, 0.01%)</title><rect x="94.8" y="997" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="97.79" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,645,675,793 samples, 1.37%)</title><rect x="224.4" y="1109" width="16.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="227.38" y="1119.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (25,102,979,893 samples, 9.40%)</title><rect x="718.1" y="1509" width="110.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="721.12" y="1519.5" >std::_Functio..</text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;ProtocolHandler&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;ProtocolHandler&gt; &gt; &gt; &gt;::operator[] (158,054,984 samples, 0.06%)</title><rect x="1162.9" y="1445" width="0.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1165.85" y="1455.5" ></text>
</g>
<g >
<title>irq_exit_rcu (28,165,606 samples, 0.01%)</title><rect x="1148.9" y="1349" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1151.89" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (2,177,657,052 samples, 0.82%)</title><rect x="174.4" y="1077" width="9.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="177.43" y="1087.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (699,966,975 samples, 0.26%)</title><rect x="329.7" y="1077" width="3.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="332.72" y="1087.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_maskbit (45,778,337 samples, 0.02%)</title><rect x="765.6" y="1109" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="768.63" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,672,553 samples, 0.01%)</title><rect x="629.8" y="613" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.77" y="623.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (58,883,218 samples, 0.02%)</title><rect x="346.0" y="1189" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="349.01" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="357" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="367.5" ></text>
</g>
<g >
<title>__fcntl64_nocancel_adjusted (807,963,367 samples, 0.30%)</title><rect x="1147.6" y="1445" width="3.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1150.60" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (168,116,414 samples, 0.06%)</title><rect x="63.2" y="853" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.22" y="863.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (236,663,844 samples, 0.09%)</title><rect x="800.7" y="1045" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="803.65" y="1055.5" ></text>
</g>
<g >
<title>HttpRequest::HttpRequest (57,131,878 samples, 0.02%)</title><rect x="1158.7" y="1301" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1161.74" y="1311.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (35,788,259 samples, 0.01%)</title><rect x="1009.9" y="1045" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1012.90" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,389,569 samples, 0.01%)</title><rect x="400.8" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.77" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (98,249,827 samples, 0.04%)</title><rect x="1108.5" y="1333" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1111.50" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (63,181,380 samples, 0.02%)</title><rect x="344.8" y="1333" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="347.77" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (24,806,195 samples, 0.01%)</title><rect x="1054.9" y="309" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.88" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,430,137 samples, 0.01%)</title><rect x="543.3" y="581" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.25" y="591.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (40,097,061 samples, 0.02%)</title><rect x="39.0" y="981" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="42.02" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (83,227,011 samples, 0.03%)</title><rect x="345.9" y="1269" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="348.94" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (23,246,407 samples, 0.01%)</title><rect x="437.3" y="1221" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="440.34" y="1231.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (25,310,529 samples, 0.01%)</title><rect x="263.0" y="1221" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="266.00" y="1231.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (25,658,669,161 samples, 9.61%)</title><rect x="434.7" y="1509" width="113.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="437.67" y="1519.5" >std::_Function..</text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (830,229,510 samples, 0.31%)</title><rect x="124.3" y="1381" width="3.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="127.29" y="1391.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (36,360,532 samples, 0.01%)</title><rect x="932.8" y="1045" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="935.82" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_eliminate_dummy (30,028,209 samples, 0.01%)</title><rect x="60.6" y="1333" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="63.64" y="1343.5" ></text>
</g>
<g >
<title>HttpResponse::~HttpResponse (29,666,417 samples, 0.01%)</title><rect x="549.2" y="1189" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="552.18" y="1199.5" ></text>
</g>
<g >
<title>_copy_from_iter (118,137,592 samples, 0.04%)</title><rect x="834.7" y="1237" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="837.74" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (46,035,459 samples, 0.02%)</title><rect x="933.9" y="1045" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="936.93" y="1055.5" ></text>
</g>
<g >
<title>operator new (65,848,085 samples, 0.02%)</title><rect x="981.2" y="1653" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="984.20" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,410,866,238 samples, 4.27%)</title><rect x="859.5" y="1349" width="50.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="862.46" y="1359.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,883,223 samples, 0.01%)</title><rect x="966.3" y="517" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.33" y="527.5" ></text>
</g>
<g >
<title>malloc (45,655,889 samples, 0.02%)</title><rect x="319.8" y="1013" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="322.82" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (46,773,427 samples, 0.02%)</title><rect x="1108.0" y="1253" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1111.04" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,916,994,350 samples, 4.46%)</title><rect x="489.5" y="1317" width="52.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.48" y="1327.5" >std::..</text>
</g>
<g >
<title>__napi_poll (64,997,632 samples, 0.02%)</title><rect x="1170.6" y="1205" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1173.56" y="1215.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (215,363,083 samples, 0.08%)</title><rect x="814.5" y="1013" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="817.48" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (26,164,618 samples, 0.01%)</title><rect x="1068.1" y="885" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1071.07" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (172,568,624 samples, 0.06%)</title><rect x="1054.3" y="997" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.34" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (25,650,395 samples, 0.01%)</title><rect x="1104.9" y="1093" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1107.87" y="1103.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (69,604,955 samples, 0.03%)</title><rect x="718.2" y="1413" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="721.20" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,304,762 samples, 0.01%)</title><rect x="259.9" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.90" y="623.5" ></text>
</g>
<g >
<title>ip_list_rcv (26,153,828 samples, 0.01%)</title><rect x="151.0" y="1493" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="154.04" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (919,457,601 samples, 0.34%)</title><rect x="283.0" y="1669" width="4.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="285.97" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (32,592,193 samples, 0.01%)</title><rect x="40.5" y="1029" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="43.48" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (78,924,955 samples, 0.03%)</title><rect x="779.0" y="917" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="781.96" y="927.5" ></text>
</g>
<g >
<title>operator new (43,047,423 samples, 0.02%)</title><rect x="178.5" y="1013" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="181.50" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (109,986,978 samples, 0.04%)</title><rect x="347.5" y="757" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.53" y="767.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (42,697,885 samples, 0.02%)</title><rect x="1182.2" y="1493" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1185.16" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (28,417,463 samples, 0.01%)</title><rect x="213.8" y="933" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="216.81" y="943.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (42,057,990 samples, 0.02%)</title><rect x="125.5" y="981" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="128.47" y="991.5" ></text>
</g>
<g >
<title>[libc.so.6] (34,779,861 samples, 0.01%)</title><rect x="990.1" y="1653" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="993.08" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (27,307,967 samples, 0.01%)</title><rect x="246.9" y="1013" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="249.87" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (46,897,864 samples, 0.02%)</title><rect x="243.5" y="1093" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="246.54" y="1103.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (63,160,635 samples, 0.02%)</title><rect x="240.2" y="1093" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="243.16" y="1103.5" ></text>
</g>
<g >
<title>__mmap (359,974,597 samples, 0.13%)</title><rect x="826.5" y="1397" width="1.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="829.49" y="1407.5" ></text>
</g>
<g >
<title>getname_flags (24,722,227 samples, 0.01%)</title><rect x="402.7" y="1285" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="405.70" y="1295.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (168,292,453 samples, 0.06%)</title><rect x="982.8" y="1637" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="985.80" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (282,172,745 samples, 0.11%)</title><rect x="63.0" y="1317" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="66.04" y="1327.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (25,846,738 samples, 0.01%)</title><rect x="967.2" y="1349" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="970.16" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,208,326 samples, 0.04%)</title><rect x="629.7" y="741" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.75" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (47,608,432 samples, 0.02%)</title><rect x="118.8" y="1381" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="121.82" y="1391.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (655,890,537 samples, 0.25%)</title><rect x="45.8" y="1077" width="2.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="48.84" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_less_val (44,469,947 samples, 0.02%)</title><rect x="725.7" y="1093" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="728.72" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (80,536,524 samples, 0.03%)</title><rect x="1001.7" y="1157" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1004.73" y="1167.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (25,438,212,124 samples, 9.53%)</title><rect x="10.4" y="1445" width="112.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="13.38" y="1455.5" >HttpConn::Han..</text>
</g>
<g >
<title>__strxfrm_l (236,442,303 samples, 0.09%)</title><rect x="426.8" y="1653" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="429.77" y="1663.5" ></text>
</g>
<g >
<title>dput (75,155,838 samples, 0.03%)</title><rect x="1117.1" y="1093" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1120.05" y="1103.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (24,795,308 samples, 0.01%)</title><rect x="1111.2" y="1237" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1114.24" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (36,114,029 samples, 0.01%)</title><rect x="256.8" y="1093" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="259.83" y="1103.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (37,570,441 samples, 0.01%)</title><rect x="825.6" y="1365" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="828.57" y="1375.5" ></text>
</g>
<g >
<title>netvsc_poll (40,019,987 samples, 0.01%)</title><rect x="973.7" y="885" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="976.69" y="895.5" ></text>
</g>
<g >
<title>task_work_run (37,530,761 samples, 0.01%)</title><rect x="407.2" y="1109" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="410.20" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (205,259,328 samples, 0.08%)</title><rect x="487.8" y="1077" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="490.83" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (94,915,991 samples, 0.04%)</title><rect x="63.5" y="709" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.49" y="719.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (62,701,529 samples, 0.02%)</title><rect x="345.2" y="1333" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="348.21" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (26,651,128 samples, 0.01%)</title><rect x="803.8" y="1061" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="806.84" y="1071.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (27,878,399 samples, 0.01%)</title><rect x="1095.2" y="997" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1098.23" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (63,804,963 samples, 0.02%)</title><rect x="178.0" y="1013" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="180.97" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (66,877,008 samples, 0.03%)</title><rect x="824.0" y="901" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="827.02" y="911.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (36,725,391 samples, 0.01%)</title><rect x="408.0" y="981" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="411.03" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (29,749,368 samples, 0.01%)</title><rect x="345.3" y="1237" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="348.29" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (355,786,707 samples, 0.13%)</title><rect x="545.5" y="1365" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="548.54" y="1375.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (29,067,046 samples, 0.01%)</title><rect x="75.1" y="917" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="78.07" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (56,621,008 samples, 0.02%)</title><rect x="487.9" y="789" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="490.90" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (22,872,965 samples, 0.01%)</title><rect x="256.2" y="1093" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="259.21" y="1103.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (155,376,299 samples, 0.06%)</title><rect x="77.5" y="949" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="80.50" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,779,039,779 samples, 1.42%)</title><rect x="631.1" y="1253" width="16.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="634.14" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (32,408,943 samples, 0.01%)</title><rect x="142.1" y="1653" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="145.13" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (25,698,801 samples, 0.01%)</title><rect x="838.6" y="1557" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1567.5" ></text>
</g>
<g >
<title>malloc (94,930,410 samples, 0.04%)</title><rect x="980.8" y="1653" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="983.78" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,658,248 samples, 0.02%)</title><rect x="543.2" y="821" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.22" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,694,988,621 samples, 1.38%)</title><rect x="489.7" y="1029" width="16.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="492.69" y="1039.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (179,586,503 samples, 0.07%)</title><rect x="751.1" y="1029" width="0.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="754.09" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (77,657,727 samples, 0.03%)</title><rect x="217.7" y="901" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="220.72" y="911.5" ></text>
</g>
<g >
<title>__napi_poll (23,302,839 samples, 0.01%)</title><rect x="285.0" y="1541" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="288.05" y="1551.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (28,409,962 samples, 0.01%)</title><rect x="627.7" y="1237" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="630.68" y="1247.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (47,333,898 samples, 0.02%)</title><rect x="1187.4" y="1621" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1190.38" y="1631.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (869,206,643 samples, 0.33%)</title><rect x="1114.6" y="1301" width="3.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1117.61" y="1311.5" ></text>
</g>
<g >
<title>loopthread5 (31,839,143,267 samples, 11.92%)</title><rect x="718.0" y="1701" width="140.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="720.98" y="1711.5" >loopthread5</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,008,448 samples, 0.09%)</title><rect x="205.4" y="1189" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.36" y="1199.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (1,610,430,253 samples, 0.60%)</title><rect x="264.9" y="1461" width="7.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="267.89" y="1471.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (25,590,070,539 samples, 9.58%)</title><rect x="10.3" y="1509" width="113.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.34" y="1519.5" >std::_Functio..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (97,145,447 samples, 0.04%)</title><rect x="59.4" y="1205" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="62.44" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (120,549,884 samples, 0.05%)</title><rect x="347.5" y="837" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.51" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (56,100,155 samples, 0.02%)</title><rect x="346.0" y="1157" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="349.02" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (1,952,661,115 samples, 0.73%)</title><rect x="791.6" y="1061" width="8.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="794.55" y="1071.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (87,674,995 samples, 0.03%)</title><rect x="520.4" y="1029" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="523.37" y="1039.5" ></text>
</g>
<g >
<title>path_openat (65,396,148 samples, 0.02%)</title><rect x="1124.7" y="1557" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1127.73" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (434,662,948 samples, 0.16%)</title><rect x="694.0" y="1429" width="1.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="696.99" y="1439.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (30,325,413 samples, 0.01%)</title><rect x="967.1" y="1365" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="970.14" y="1375.5" ></text>
</g>
<g >
<title>operator delete (35,245,153 samples, 0.01%)</title><rect x="43.9" y="1013" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="46.93" y="1023.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (158,824,200 samples, 0.06%)</title><rect x="764.6" y="1109" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="767.58" y="1119.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (81,875,350 samples, 0.03%)</title><rect x="825.0" y="1413" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="828.00" y="1423.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (163,241,205 samples, 0.06%)</title><rect x="1181.4" y="1493" width="0.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1184.43" y="1503.5" ></text>
</g>
<g >
<title>[web-server] (34,990,966 samples, 0.01%)</title><rect x="102.2" y="1077" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="105.16" y="1087.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (23,624,752 samples, 0.01%)</title><rect x="81.6" y="1013" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="84.58" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (183,015,983 samples, 0.07%)</title><rect x="487.9" y="933" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="490.86" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (139,262,072 samples, 0.05%)</title><rect x="375.0" y="1013" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="377.95" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (23,162,380 samples, 0.01%)</title><rect x="556.9" y="853" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="863.5" ></text>
</g>
<g >
<title>__sys_accept4 (2,662,710,146 samples, 1.00%)</title><rect x="1166.9" y="1381" width="11.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1169.92" y="1391.5" ></text>
</g>
<g >
<title>x64_sys_call (29,307,273 samples, 0.01%)</title><rect x="130.9" y="1493" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="133.88" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_realloc_insert&lt;char&gt; (28,848,292 samples, 0.01%)</title><rect x="579.8" y="1109" width="0.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="582.83" y="1119.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (89,293,153 samples, 0.03%)</title><rect x="910.2" y="1285" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="913.21" y="1295.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (29,474,586 samples, 0.01%)</title><rect x="313.0" y="1077" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="315.99" y="1087.5" ></text>
</g>
<g >
<title>ip_output (89,336,586 samples, 0.03%)</title><rect x="271.1" y="1125" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="274.07" y="1135.5" ></text>
</g>
<g >
<title>vfs_writev (454,070,731 samples, 0.17%)</title><rect x="411.0" y="1349" width="2.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="413.96" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (713,019,797 samples, 0.27%)</title><rect x="1016.7" y="1061" width="3.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1019.66" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (27,503,148 samples, 0.01%)</title><rect x="413.3" y="1397" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="416.29" y="1407.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (60,045,179 samples, 0.02%)</title><rect x="769.5" y="1221" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="772.47" y="1231.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (45,991,689 samples, 0.02%)</title><rect x="119.1" y="1397" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="122.09" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (83,515,058 samples, 0.03%)</title><rect x="777.2" y="869" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="780.19" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (34,679,687 samples, 0.01%)</title><rect x="53.5" y="1093" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="56.45" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (87,661,815 samples, 0.03%)</title><rect x="859.6" y="1205" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="862.61" y="1215.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (218,736,261 samples, 0.08%)</title><rect x="956.6" y="1013" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="959.58" y="1023.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (33,187,736 samples, 0.01%)</title><rect x="887.1" y="965" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="890.08" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (28,128,887 samples, 0.01%)</title><rect x="861.5" y="1221" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="864.54" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,736,535,037 samples, 3.65%)</title><rect x="1004.8" y="1125" width="43.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1007.79" y="1135.5" >std:..</text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (28,645,786 samples, 0.01%)</title><rect x="823.6" y="1173" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="826.57" y="1183.5" ></text>
</g>
<g >
<title>HttpConn::Close (1,040,967,848 samples, 0.39%)</title><rect x="689.2" y="1429" width="4.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="692.16" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (382,948,184 samples, 0.14%)</title><rect x="1076.9" y="1045" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1079.89" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (97,247,200 samples, 0.04%)</title><rect x="229.2" y="981" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="232.23" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (22,718,777 samples, 0.01%)</title><rect x="369.0" y="1045" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="372.02" y="1055.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (40,559,152 samples, 0.02%)</title><rect x="486.0" y="1301" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="488.97" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_add_char (40,087,422 samples, 0.02%)</title><rect x="156.0" y="1157" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="158.99" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (253,731,030 samples, 0.10%)</title><rect x="982.8" y="1653" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="985.79" y="1663.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (25,487,735 samples, 0.01%)</title><rect x="411.9" y="1093" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="414.88" y="1103.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (27,562,582 samples, 0.01%)</title><rect x="798.0" y="901" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="801.04" y="911.5" ></text>
</g>
<g >
<title>[web-server] (94,491,494 samples, 0.04%)</title><rect x="304.8" y="1077" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="307.84" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (28,518,595 samples, 0.01%)</title><rect x="556.8" y="1589" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (31,314,211 samples, 0.01%)</title><rect x="237.1" y="1045" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="240.14" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (164,645,523 samples, 0.06%)</title><rect x="1054.4" y="933" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.36" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,599,651,604 samples, 1.35%)</title><rect x="349.0" y="1125" width="15.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="352.01" y="1135.5" ></text>
</g>
<g >
<title>ip_list_rcv (31,000,287 samples, 0.01%)</title><rect x="125.5" y="821" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="128.49" y="831.5" ></text>
</g>
<g >
<title>napi_complete_done (33,887,763 samples, 0.01%)</title><rect x="1170.6" y="1173" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1173.57" y="1183.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (43,550,351 samples, 0.02%)</title><rect x="209.5" y="949" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="212.50" y="959.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long, std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; (27,034,051 samples, 0.01%)</title><rect x="487.6" y="1285" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="490.55" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (51,406,388 samples, 0.02%)</title><rect x="118.3" y="869" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="121.34" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (41,313,204 samples, 0.02%)</title><rect x="510.5" y="1045" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="513.47" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (25,431,807 samples, 0.01%)</title><rect x="95.2" y="1045" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="98.17" y="1055.5" ></text>
</g>
<g >
<title>HttpConn::Close (1,059,784,550 samples, 0.40%)</title><rect x="264.9" y="1429" width="4.7" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="267.93" y="1439.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (55,692,176 samples, 0.02%)</title><rect x="248.6" y="1045" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="251.56" y="1055.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (31,174,260 samples, 0.01%)</title><rect x="1040.0" y="1077" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1043.02" y="1087.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (24,564,184,972 samples, 9.20%)</title><rect x="10.8" y="1413" width="108.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.79" y="1423.5" >HttpRequest::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (28,007,729 samples, 0.01%)</title><rect x="63.5" y="485" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.52" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (32,401,680 samples, 0.01%)</title><rect x="949.9" y="1093" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="952.86" y="1103.5" ></text>
</g>
<g >
<title>tcp_close (168,803,692 samples, 0.06%)</title><rect x="975.2" y="1045" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="978.21" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (196,930,109 samples, 0.07%)</title><rect x="629.4" y="997" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.43" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (41,248,827 samples, 0.02%)</title><rect x="527.9" y="1077" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="530.89" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,720,356 samples, 0.01%)</title><rect x="1108.6" y="517" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.63" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (77,852,274 samples, 0.03%)</title><rect x="584.5" y="1093" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="587.52" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (109,364,367 samples, 0.04%)</title><rect x="824.0" y="1301" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="826.95" y="1311.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (110,309,070 samples, 0.04%)</title><rect x="661.5" y="1029" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="664.46" y="1039.5" ></text>
</g>
<g >
<title>net_rx_action (24,292,887 samples, 0.01%)</title><rect x="996.4" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="999.43" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (59,537,029 samples, 0.02%)</title><rect x="118.3" y="981" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.33" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (47,608,728 samples, 0.02%)</title><rect x="771.2" y="565" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="774.16" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,198,805 samples, 0.01%)</title><rect x="488.2" y="469" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="491.22" y="479.5" ></text>
</g>
<g >
<title>__napi_poll (27,432,738 samples, 0.01%)</title><rect x="999.1" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1002.14" y="1583.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (863,241,346 samples, 0.32%)</title><rect x="972.3" y="1253" width="3.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="975.30" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (32,473,321 samples, 0.01%)</title><rect x="1016.5" y="1061" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1019.52" y="1071.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (31,969,726 samples, 0.01%)</title><rect x="720.0" y="1093" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="723.05" y="1103.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (134,453,441 samples, 0.05%)</title><rect x="939.5" y="949" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="942.50" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (83,403,258 samples, 0.03%)</title><rect x="486.6" y="1253" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="489.57" y="1263.5" ></text>
</g>
<g >
<title>[web-server] (26,475,472 samples, 0.01%)</title><rect x="385.1" y="1077" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="388.09" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (102,458,204 samples, 0.04%)</title><rect x="683.9" y="1317" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="686.94" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (46,166,728 samples, 0.02%)</title><rect x="912.1" y="437" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="915.07" y="447.5" ></text>
</g>
<g >
<title>[unknown] (24,929,266 samples, 0.01%)</title><rect x="838.6" y="1477" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1487.5" ></text>
</g>
<g >
<title>do_epoll_ctl (58,374,386 samples, 0.02%)</title><rect x="1114.0" y="1221" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1116.97" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (83,203,506 samples, 0.03%)</title><rect x="400.7" y="1189" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.70" y="1199.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (27,267,892 samples, 0.01%)</title><rect x="968.5" y="1237" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="971.45" y="1247.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (52,943,867 samples, 0.02%)</title><rect x="400.2" y="1349" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="403.16" y="1359.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (26,698,788 samples, 0.01%)</title><rect x="379.0" y="1061" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="381.95" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (179,020,513 samples, 0.07%)</title><rect x="86.9" y="997" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="89.93" y="1007.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (40,353,912 samples, 0.02%)</title><rect x="824.8" y="1381" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="827.76" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (24,449,873 samples, 0.01%)</title><rect x="413.6" y="1509" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="416.57" y="1519.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (170,543,938 samples, 0.06%)</title><rect x="411.8" y="1189" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="414.80" y="1199.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (368,893,377 samples, 0.14%)</title><rect x="885.7" y="981" width="1.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="888.74" y="991.5" ></text>
</g>
<g >
<title>osq_lock (44,935,167 samples, 0.02%)</title><rect x="404.3" y="1253" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="407.26" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (37,906,748 samples, 0.01%)</title><rect x="718.3" y="1253" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="721.27" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (76,411,412 samples, 0.03%)</title><rect x="824.0" y="981" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.01" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (85,815,109 samples, 0.03%)</title><rect x="442.7" y="1093" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="445.73" y="1103.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (23,681,717 samples, 0.01%)</title><rect x="992.5" y="1637" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="995.54" y="1647.5" ></text>
</g>
<g >
<title>_int_free (195,326,808 samples, 0.07%)</title><rect x="428.0" y="1685" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="431.02" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (10,353,128,134 samples, 3.88%)</title><rect x="437.8" y="1157" width="45.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="440.80" y="1167.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,813,107,775 samples, 1.43%)</title><rect x="507.0" y="1141" width="16.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="509.95" y="1151.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (53,133,401 samples, 0.02%)</title><rect x="541.1" y="1125" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="544.13" y="1135.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (28,879,424 samples, 0.01%)</title><rect x="794.9" y="1045" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="797.90" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,166,872 samples, 0.01%)</title><rect x="629.8" y="581" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.77" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (56,385,007 samples, 0.02%)</title><rect x="307.2" y="1077" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="310.21" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (53,332,461 samples, 0.02%)</title><rect x="119.5" y="1381" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="122.48" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (26,925,880 samples, 0.01%)</title><rect x="1102.9" y="1029" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1105.89" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (53,815,738 samples, 0.02%)</title><rect x="760.8" y="1077" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="763.81" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (45,823,786 samples, 0.02%)</title><rect x="85.7" y="1045" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="88.71" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,890,367,214 samples, 1.46%)</title><rect x="647.9" y="1237" width="17.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="650.86" y="1247.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (99,906,226 samples, 0.04%)</title><rect x="72.6" y="901" width="0.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="75.57" y="911.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (49,320,097 samples, 0.02%)</title><rect x="519.7" y="1013" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="522.70" y="1023.5" ></text>
</g>
<g >
<title>vfs_writev (441,768,774 samples, 0.17%)</title><rect x="270.0" y="1349" width="1.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="272.98" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (97,876,076 samples, 0.04%)</title><rect x="295.5" y="1205" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="298.52" y="1215.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (65,658,211 samples, 0.02%)</title><rect x="1184.5" y="1141" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1187.48" y="1151.5" ></text>
</g>
<g >
<title>__dentry_kill (81,450,659 samples, 0.03%)</title><rect x="974.8" y="1077" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="977.78" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (239,837,882 samples, 0.09%)</title><rect x="92.2" y="1045" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="95.24" y="1055.5" ></text>
</g>
<g >
<title>netvsc_xmit (24,455,843 samples, 0.01%)</title><rect x="409.9" y="773" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="412.88" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (88,704,127 samples, 0.03%)</title><rect x="1108.5" y="1285" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.51" y="1295.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (63,253,811 samples, 0.02%)</title><rect x="691.1" y="1029" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="694.06" y="1039.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (27,579,801 samples, 0.01%)</title><rect x="996.4" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="999.43" y="1663.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (598,815,506 samples, 0.22%)</title><rect x="36.8" y="1029" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.75" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (49,959,963 samples, 0.02%)</title><rect x="437.1" y="1269" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="440.06" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (55,658,748 samples, 0.02%)</title><rect x="1013.9" y="1077" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1016.93" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,947,386,500 samples, 1.48%)</title><rect x="524.3" y="1173" width="17.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="527.28" y="1183.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (122,277,714 samples, 0.05%)</title><rect x="756.0" y="1045" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="759.00" y="1055.5" ></text>
</g>
<g >
<title>ip_queue_xmit (97,024,966 samples, 0.04%)</title><rect x="127.1" y="949" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="130.08" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,872,221,339 samples, 1.45%)</title><rect x="241.3" y="1189" width="17.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="244.27" y="1199.5" ></text>
</g>
<g >
<title>__close (37,410,873 samples, 0.01%)</title><rect x="403.1" y="1397" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="406.13" y="1407.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (93,540,928 samples, 0.04%)</title><rect x="535.7" y="1045" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="538.66" y="1055.5" ></text>
</g>
<g >
<title>___slab_alloc (63,878,423 samples, 0.02%)</title><rect x="1176.3" y="1253" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1179.33" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (24,606,398 samples, 0.01%)</title><rect x="684.1" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="687.06" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_realloc_insert&lt;char&gt; (26,175,538 samples, 0.01%)</title><rect x="1004.1" y="1109" width="0.1" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1007.06" y="1119.5" ></text>
</g>
<g >
<title>std::function&lt;void  (158,206,758 samples, 0.06%)</title><rect x="123.5" y="1381" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="126.52" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (24,206,978 samples, 0.01%)</title><rect x="556.9" y="1157" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (105,041,958 samples, 0.04%)</title><rect x="771.0" y="725" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.95" y="735.5" ></text>
</g>
<g >
<title>[unknown] (23,162,380 samples, 0.01%)</title><rect x="556.9" y="917" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (71,023,801 samples, 0.03%)</title><rect x="400.7" y="965" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="403.71" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (251,644,384 samples, 0.09%)</title><rect x="917.9" y="917" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="920.86" y="927.5" ></text>
</g>
<g >
<title>[unknown] (70,112,450 samples, 0.03%)</title><rect x="857.9" y="1669" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="860.90" y="1679.5" ></text>
</g>
<g >
<title>sock_alloc_file (757,070,165 samples, 0.28%)</title><rect x="1174.5" y="1349" width="3.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1177.49" y="1359.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (609,913,118 samples, 0.23%)</title><rect x="179.1" y="1029" width="2.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="182.10" y="1039.5" ></text>
</g>
<g >
<title>sock_recvmsg (51,118,604 samples, 0.02%)</title><rect x="405.4" y="1317" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="408.35" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (49,786,490 samples, 0.02%)</title><rect x="760.4" y="1093" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="763.44" y="1103.5" ></text>
</g>
<g >
<title>inet_release (172,500,229 samples, 0.06%)</title><rect x="551.5" y="1061" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="554.55" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,577,790,071 samples, 1.34%)</title><rect x="349.0" y="1093" width="15.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="352.02" y="1103.5" ></text>
</g>
<g >
<title>do_vmi_munmap (263,564,538 samples, 0.10%)</title><rect x="1115.3" y="1093" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1118.31" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (34,392,378 samples, 0.01%)</title><rect x="81.5" y="1093" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="84.54" y="1103.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (336,522,753 samples, 0.13%)</title><rect x="192.1" y="1077" width="1.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="195.12" y="1087.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (73,297,307 samples, 0.03%)</title><rect x="1086.7" y="1061" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1089.74" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,802,663 samples, 0.01%)</title><rect x="206.0" y="213" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.98" y="223.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (27,059,464,734 samples, 10.13%)</title><rect x="718.1" y="1589" width="119.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="721.08" y="1599.5" >EventLoopThrea..</text>
</g>
<g >
<title>__secure_computing (26,397,937 samples, 0.01%)</title><rect x="1164.9" y="1381" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1167.92" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,981,676 samples, 0.02%)</title><rect x="771.1" y="629" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="774.15" y="639.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (26,176,174 samples, 0.01%)</title><rect x="484.5" y="1077" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="487.49" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (113,052,319 samples, 0.04%)</title><rect x="153.6" y="1205" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="156.63" y="1215.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (54,660,820 samples, 0.02%)</title><rect x="683.5" y="1333" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="686.47" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (43,223,307 samples, 0.02%)</title><rect x="908.0" y="1125" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="910.97" y="1135.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (40,672,147 samples, 0.02%)</title><rect x="303.1" y="1093" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="306.07" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (31,075,738 samples, 0.01%)</title><rect x="346.4" y="1381" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="349.42" y="1391.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (30,544,093 samples, 0.01%)</title><rect x="1118.6" y="1429" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1121.55" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,621,017,036 samples, 1.36%)</title><rect x="348.9" y="1157" width="16.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="351.93" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (78,442,381 samples, 0.03%)</title><rect x="824.0" y="1029" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.01" y="1039.5" ></text>
</g>
<g >
<title>thp_get_unmapped_area (28,243,148 samples, 0.01%)</title><rect x="826.7" y="1253" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="829.66" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (175,099,097 samples, 0.07%)</title><rect x="205.5" y="869" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.48" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (28,390,313 samples, 0.01%)</title><rect x="347.8" y="229" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.77" y="239.5" ></text>
</g>
<g >
<title>do_iter_write (437,163,252 samples, 0.16%)</title><rect x="834.6" y="1333" width="1.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="837.58" y="1343.5" ></text>
</g>
<g >
<title>tcp_write_xmit (215,156,077 samples, 0.08%)</title><rect x="411.8" y="1205" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="414.78" y="1215.5" ></text>
</g>
<g >
<title>tcp_close (170,743,658 samples, 0.06%)</title><rect x="126.9" y="1045" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="129.92" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (269,181,101 samples, 0.10%)</title><rect x="559.2" y="1653" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="562.24" y="1663.5" ></text>
</g>
<g >
<title>osq_lock (48,507,296 samples, 0.02%)</title><rect x="687.6" y="1253" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="690.61" y="1263.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (47,852,934 samples, 0.02%)</title><rect x="655.2" y="997" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="658.17" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,283,275 samples, 0.01%)</title><rect x="206.0" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.98" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (85,896,330 samples, 0.03%)</title><rect x="628.2" y="1285" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="631.24" y="1295.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (949,443,673 samples, 0.36%)</title><rect x="328.8" y="1093" width="4.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="331.80" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (79,631,703 samples, 0.03%)</title><rect x="621.2" y="1093" width="0.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="624.18" y="1103.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (200,760,407 samples, 0.08%)</title><rect x="1064.1" y="869" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1067.14" y="879.5" ></text>
</g>
<g >
<title>unmap_vmas (28,915,296 samples, 0.01%)</title><rect x="408.3" y="1045" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="411.33" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (805,650,259 samples, 0.30%)</title><rect x="531.6" y="1077" width="3.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="534.59" y="1087.5" ></text>
</g>
<g >
<title>x64_sys_call (311,218,439 samples, 0.12%)</title><rect x="690.6" y="1141" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="693.56" y="1151.5" ></text>
</g>
<g >
<title>inet_sendmsg (398,064,264 samples, 0.15%)</title><rect x="976.7" y="1285" width="1.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="979.69" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,878,796,303 samples, 1.45%)</title><rect x="382.3" y="1253" width="17.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="385.31" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (82,372,003 samples, 0.03%)</title><rect x="302.7" y="1093" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="305.71" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (52,870,998 samples, 0.02%)</title><rect x="908.4" y="1253" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="911.37" y="1263.5" ></text>
</g>
<g >
<title>__strxfrm_l (124,207,972 samples, 0.05%)</title><rect x="842.8" y="1669" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="845.77" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (25,343,465,643 samples, 9.49%)</title><rect x="152.9" y="1509" width="112.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="155.86" y="1519.5" >std::_Functio..</text>
</g>
<g >
<title>__vm_munmap (286,663,912 samples, 0.11%)</title><rect x="125.0" y="1109" width="1.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="127.97" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (39,260,856 samples, 0.01%)</title><rect x="118.4" y="693" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="121.36" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,439,271 samples, 0.01%)</title><rect x="118.4" y="549" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.37" y="559.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="325" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (28,193,512 samples, 0.01%)</title><rect x="210.6" y="933" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="213.64" y="943.5" ></text>
</g>
<g >
<title>napi_complete_done (34,617,602 samples, 0.01%)</title><rect x="1141.3" y="1541" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1144.32" y="1551.5" ></text>
</g>
<g >
<title>irq_exit_rcu (23,408,189 samples, 0.01%)</title><rect x="1155.7" y="1077" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1158.70" y="1087.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (24,211,108 samples, 0.01%)</title><rect x="259.4" y="1093" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="262.43" y="1103.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (34,314,671 samples, 0.01%)</title><rect x="829.7" y="1269" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="832.72" y="1279.5" ></text>
</g>
<g >
<title>path_lookupat (40,088,996 samples, 0.02%)</title><rect x="402.8" y="1253" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="405.85" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (307,716,336 samples, 0.12%)</title><rect x="205.3" y="1301" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="208.27" y="1311.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (24,877,253 samples, 0.01%)</title><rect x="552.6" y="1429" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="555.56" y="1439.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (40,292,037 samples, 0.02%)</title><rect x="1182.2" y="1445" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1185.17" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (31,501,990 samples, 0.01%)</title><rect x="634.6" y="933" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="637.64" y="943.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (34,188,908 samples, 0.01%)</title><rect x="243.6" y="1077" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="246.60" y="1087.5" ></text>
</g>
<g >
<title>netvsc_xmit (26,780,926 samples, 0.01%)</title><rect x="129.6" y="997" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="132.60" y="1007.5" ></text>
</g>
<g >
<title>__stpncpy_avx2 (319,438,670 samples, 0.12%)</title><rect x="142.3" y="1653" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="145.27" y="1663.5" ></text>
</g>
<g >
<title>do_syscall_64 (628,807,054 samples, 0.24%)</title><rect x="1153.5" y="1221" width="2.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1156.48" y="1231.5" ></text>
</g>
<g >
<title>unmap_single_vma (24,007,106 samples, 0.01%)</title><rect x="550.5" y="1029" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="553.50" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (76,648,488 samples, 0.03%)</title><rect x="866.6" y="1093" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="869.60" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (77,255,754 samples, 0.03%)</title><rect x="153.7" y="1093" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="156.73" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (139,623,423 samples, 0.05%)</title><rect x="295.5" y="1237" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="298.50" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (174,612,197 samples, 0.07%)</title><rect x="63.2" y="885" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.21" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (182,633,602 samples, 0.07%)</title><rect x="183.1" y="1029" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="186.09" y="1039.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (87,596,356 samples, 0.03%)</title><rect x="132.1" y="1653" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="135.05" y="1663.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (345,250,229 samples, 0.13%)</title><rect x="545.6" y="1317" width="1.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="548.58" y="1327.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (66,479,935 samples, 0.02%)</title><rect x="877.6" y="1077" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="880.59" y="1087.5" ></text>
</g>
<g >
<title>__napi_poll (29,171,319 samples, 0.01%)</title><rect x="585.6" y="997" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="588.58" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (91,504,821 samples, 0.03%)</title><rect x="1046.1" y="1093" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1049.05" y="1103.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (79,525,055 samples, 0.03%)</title><rect x="1106.0" y="1125" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1108.97" y="1135.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (331,870,840 samples, 0.12%)</title><rect x="570.9" y="1685" width="1.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="573.90" y="1695.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (23,005,687 samples, 0.01%)</title><rect x="578.8" y="1061" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="581.77" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (57,289,644 samples, 0.02%)</title><rect x="95.6" y="1013" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="98.60" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (579,909,786 samples, 0.22%)</title><rect x="450.9" y="1045" width="2.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="453.87" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (32,202,916 samples, 0.01%)</title><rect x="260.3" y="1349" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="263.34" y="1359.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (65,759,942 samples, 0.02%)</title><rect x="799.8" y="1013" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="802.79" y="1023.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (65,796,749 samples, 0.02%)</title><rect x="62.0" y="1221" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="64.97" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (593,022,718 samples, 0.22%)</title><rect x="72.3" y="917" width="2.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="75.28" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (87,466,088 samples, 0.03%)</title><rect x="684.0" y="1125" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="686.96" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (10,276,855,193 samples, 3.85%)</title><rect x="297.4" y="1157" width="45.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="300.40" y="1167.5" >std:..</text>
</g>
<g >
<title>TimerManager::Tick (40,886,736 samples, 0.02%)</title><rect x="413.7" y="1557" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="416.74" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,912,767 samples, 0.01%)</title><rect x="63.7" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.71" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (909,279,749 samples, 0.34%)</title><rect x="830.0" y="1269" width="4.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="833.03" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (121,188,844 samples, 0.05%)</title><rect x="629.7" y="837" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.72" y="847.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (65,586,640 samples, 0.02%)</title><rect x="391.2" y="965" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="394.17" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (68,287,874 samples, 0.03%)</title><rect x="829.4" y="1269" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="832.36" y="1279.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long, std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; (22,853,617 samples, 0.01%)</title><rect x="1054.0" y="1285" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1057.04" y="1295.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (22,997,940 samples, 0.01%)</title><rect x="187.1" y="1093" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="190.10" y="1103.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (23,559,549 samples, 0.01%)</title><rect x="359.5" y="869" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="362.49" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (34,414,640 samples, 0.01%)</title><rect x="770.7" y="485" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.72" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (87,972,376 samples, 0.03%)</title><rect x="966.2" y="1237" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="969.25" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_accept (2,687,176,278 samples, 1.01%)</title><rect x="1166.9" y="1397" width="11.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1169.89" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (43,246,910 samples, 0.02%)</title><rect x="85.9" y="1045" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="88.91" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,311,814,715 samples, 4.24%)</title><rect x="435.4" y="1333" width="50.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="438.39" y="1343.5" >std::..</text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (27,166,576 samples, 0.01%)</title><rect x="1074.9" y="1061" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1077.87" y="1071.5" ></text>
</g>
<g >
<title>__fput (290,784,718 samples, 0.11%)</title><rect x="268.1" y="1109" width="1.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="271.09" y="1119.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,035,304,154 samples, 0.39%)</title><rect x="548.1" y="1445" width="4.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="551.12" y="1455.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (42,036,357 samples, 0.02%)</title><rect x="264.6" y="1269" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="267.58" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (45,739,688 samples, 0.02%)</title><rect x="647.4" y="1173" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="650.40" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_fill_assign (30,798,000 samples, 0.01%)</title><rect x="204.9" y="1301" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="207.95" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (31,881,626 samples, 0.01%)</title><rect x="400.8" y="437" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="403.77" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long, std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; (28,086,236 samples, 0.01%)</title><rect x="62.9" y="1285" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="65.89" y="1295.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (46,541,889 samples, 0.02%)</title><rect x="693.0" y="837" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="696.03" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,722,846,988 samples, 1.39%)</title><rect x="489.7" y="1077" width="16.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="492.66" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (48,317,009 samples, 0.02%)</title><rect x="478.5" y="1077" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="481.53" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (24,685,474 samples, 0.01%)</title><rect x="612.1" y="1061" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="615.06" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (47,300,570 samples, 0.02%)</title><rect x="651.9" y="1045" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="654.88" y="1055.5" ></text>
</g>
<g >
<title>evict (39,832,666 samples, 0.01%)</title><rect x="551.3" y="1029" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="554.31" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::~_Executor (25,631,066 samples, 0.01%)</title><rect x="206.6" y="1333" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="209.64" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (35,065,835 samples, 0.01%)</title><rect x="792.8" y="1045" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="795.75" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (69,249,524 samples, 0.03%)</title><rect x="1108.6" y="1061" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.56" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_add_char (37,442,050 samples, 0.01%)</title><rect x="1004.0" y="1157" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1007.02" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (145,694,390 samples, 0.05%)</title><rect x="433.2" y="1685" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="436.20" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (22,699,988 samples, 0.01%)</title><rect x="63.7" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.72" y="287.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (29,900,590 samples, 0.01%)</title><rect x="1148.9" y="1365" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1151.88" y="1375.5" ></text>
</g>
<g >
<title>_copy_from_iter (102,138,486 samples, 0.04%)</title><rect x="694.3" y="1237" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="697.31" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,418,233 samples, 0.01%)</title><rect x="629.8" y="533" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.78" y="543.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_destroy (23,289,604 samples, 0.01%)</title><rect x="204.4" y="1077" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="207.41" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::assign (36,288,657 samples, 0.01%)</title><rect x="629.0" y="1317" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="631.95" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,392,561 samples, 0.01%)</title><rect x="488.4" y="245" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.39" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (51,947,778 samples, 0.02%)</title><rect x="296.7" y="1253" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="299.70" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (229,191,811 samples, 0.09%)</title><rect x="941.0" y="1045" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="944.02" y="1055.5" ></text>
</g>
<g >
<title>irq_exit_rcu (49,440,563 samples, 0.02%)</title><rect x="856.8" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="859.77" y="1647.5" ></text>
</g>
<g >
<title>__x64_sys_read (85,840,538 samples, 0.03%)</title><rect x="688.6" y="1381" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="691.63" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (88,412,262 samples, 0.03%)</title><rect x="160.5" y="1093" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="163.48" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (44,422,044 samples, 0.02%)</title><rect x="911.6" y="645" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.62" y="655.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (251,773,816 samples, 0.09%)</title><rect x="1115.3" y="1077" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1118.32" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25,453,292 samples, 0.01%)</title><rect x="413.6" y="1525" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="416.56" y="1535.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,059,464,734 samples, 10.13%)</title><rect x="718.1" y="1637" width="119.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="721.08" y="1647.5" >std::thread::_..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (89,337,271 samples, 0.03%)</title><rect x="859.6" y="1221" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="862.60" y="1231.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (34,608,573 samples, 0.01%)</title><rect x="407.5" y="1045" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="410.54" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (26,557,933 samples, 0.01%)</title><rect x="363.3" y="949" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="366.34" y="959.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (25,970,060 samples, 0.01%)</title><rect x="61.3" y="1237" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="64.28" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (27,821,902 samples, 0.01%)</title><rect x="770.7" y="277" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.74" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (25,138,108 samples, 0.01%)</title><rect x="770.7" y="197" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.74" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,343,332 samples, 0.01%)</title><rect x="1054.9" y="581" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.86" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (39,203,777 samples, 0.01%)</title><rect x="955.1" y="1029" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="958.15" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (50,434,859 samples, 0.02%)</title><rect x="786.3" y="949" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="789.29" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (31,872,035 samples, 0.01%)</title><rect x="630.0" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.99" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (23,101,481 samples, 0.01%)</title><rect x="474.3" y="1061" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="477.28" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (71,528,975 samples, 0.03%)</title><rect x="296.1" y="1221" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="299.15" y="1231.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (29,241,950 samples, 0.01%)</title><rect x="993.6" y="1621" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="996.57" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (43,922,583 samples, 0.02%)</title><rect x="245.0" y="1077" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="248.01" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (71,394,997 samples, 0.03%)</title><rect x="684.0" y="1045" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="686.97" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (85,565,225 samples, 0.03%)</title><rect x="46.7" y="1061" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="49.71" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (77,666,561 samples, 0.03%)</title><rect x="816.7" y="1045" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="819.74" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (42,257,189 samples, 0.02%)</title><rect x="771.2" y="469" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="774.18" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (185,427,072 samples, 0.07%)</title><rect x="1054.3" y="1093" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.31" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (41,940,017 samples, 0.02%)</title><rect x="11.6" y="1157" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="14.61" y="1167.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (160,466,746 samples, 0.06%)</title><rect x="599.2" y="1045" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="602.16" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (89,342,800 samples, 0.03%)</title><rect x="189.2" y="1061" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="192.19" y="1071.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::AddChannel (117,715,644 samples, 0.04%)</title><rect x="978.6" y="1509" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="981.63" y="1519.5" ></text>
</g>
<g >
<title>netvsc_poll (29,200,734 samples, 0.01%)</title><rect x="1147.7" y="1317" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1150.69" y="1327.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (196,493,739 samples, 0.07%)</title><rect x="1184.2" y="1413" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1187.16" y="1423.5" ></text>
</g>
<g >
<title>_int_malloc (47,354,755 samples, 0.02%)</title><rect x="288.1" y="1685" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="291.12" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (38,538,331 samples, 0.01%)</title><rect x="1009.9" y="1093" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1012.89" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (31,689,160 samples, 0.01%)</title><rect x="236.2" y="1029" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="239.19" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (62,259,192 samples, 0.02%)</title><rect x="234.1" y="997" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="237.07" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62,316,848 samples, 0.02%)</title><rect x="1108.6" y="949" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.58" y="959.5" ></text>
</g>
<g >
<title>net_rx_action (41,697,556 samples, 0.02%)</title><rect x="151.0" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="154.02" y="1599.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (42,966,540 samples, 0.02%)</title><rect x="716.3" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="719.28" y="1663.5" ></text>
</g>
<g >
<title>__napi_poll (31,864,168 samples, 0.01%)</title><rect x="161.6" y="997" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="164.55" y="1007.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (31,306,638 samples, 0.01%)</title><rect x="688.8" y="1269" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="691.84" y="1279.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (81,700,788 samples, 0.03%)</title><rect x="77.8" y="917" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="80.80" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (25,706,171 samples, 0.01%)</title><rect x="97.6" y="1061" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="100.60" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (191,929,165 samples, 0.07%)</title><rect x="63.2" y="1013" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.17" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (37,774,604 samples, 0.01%)</title><rect x="706.3" y="1653" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="709.27" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (50,419,984 samples, 0.02%)</title><rect x="720.5" y="1269" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="723.54" y="1279.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (36,582,742 samples, 0.01%)</title><rect x="892.4" y="1045" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="895.37" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,836,146 samples, 0.01%)</title><rect x="543.3" y="421" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="546.26" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (51,889,063 samples, 0.02%)</title><rect x="296.2" y="1189" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="299.17" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (29,860,161 samples, 0.01%)</title><rect x="48.6" y="1013" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="51.56" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (1,724,862,585 samples, 0.65%)</title><rect x="176.4" y="1061" width="7.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="179.37" y="1071.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (403,353,294 samples, 0.15%)</title><rect x="1114.9" y="1173" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1117.95" y="1183.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (36,527,332 samples, 0.01%)</title><rect x="323.0" y="981" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="325.99" y="991.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (866,290,332 samples, 0.32%)</title><rect x="265.8" y="1381" width="3.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="268.78" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (71,820,700 samples, 0.03%)</title><rect x="798.9" y="997" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="801.89" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (93,267,070 samples, 0.03%)</title><rect x="683.9" y="1285" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="686.94" y="1295.5" ></text>
</g>
<g >
<title>handle_softirqs (30,871,071 samples, 0.01%)</title><rect x="585.6" y="1029" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="588.58" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,656,489 samples, 0.01%)</title><rect x="770.7" y="341" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.73" y="351.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (48,814,999 samples, 0.02%)</title><rect x="364.2" y="981" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="367.17" y="991.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (23,736,544 samples, 0.01%)</title><rect x="303.1" y="933" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="306.10" y="943.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (95,741,449 samples, 0.04%)</title><rect x="1020.5" y="1077" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1023.52" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (120,328,175 samples, 0.05%)</title><rect x="798.7" y="1013" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="801.68" y="1023.5" ></text>
</g>
<g >
<title>__napi_poll (29,200,734 samples, 0.01%)</title><rect x="1147.7" y="1333" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1150.69" y="1343.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (42,595,862 samples, 0.02%)</title><rect x="346.1" y="1141" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="349.08" y="1151.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator=&lt;HttpConn&gt; (44,723,526 samples, 0.02%)</title><rect x="1162.5" y="1445" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1165.49" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,820,697,975 samples, 2.93%)</title><rect x="913.1" y="1285" width="34.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="916.12" y="1295.5" >st..</text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (26,068,673 samples, 0.01%)</title><rect x="458.2" y="1061" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="461.21" y="1071.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (42,678,002 samples, 0.02%)</title><rect x="76.9" y="917" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="79.94" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,752,942 samples, 0.01%)</title><rect x="1108.6" y="341" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1111.63" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (193,187,360 samples, 0.07%)</title><rect x="487.8" y="1013" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="490.85" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (34,175,183 samples, 0.01%)</title><rect x="13.4" y="1141" width="0.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="16.38" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (68,061,744 samples, 0.03%)</title><rect x="534.8" y="1029" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="537.81" y="1039.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (68,617,471 samples, 0.03%)</title><rect x="257.4" y="1109" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="260.41" y="1119.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (74,529,154 samples, 0.03%)</title><rect x="273.6" y="1653" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="276.58" y="1663.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (36,990,088 samples, 0.01%)</title><rect x="965.8" y="1221" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="968.80" y="1231.5" ></text>
</g>
<g >
<title>__dentry_kill (75,306,166 samples, 0.03%)</title><rect x="268.1" y="1077" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="271.11" y="1087.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, long, std::shared_ptr&lt;TimerManager::TimerNode&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (31,424,710 samples, 0.01%)</title><rect x="555.6" y="1493" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="558.63" y="1503.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (38,109,333 samples, 0.01%)</title><rect x="198.3" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="201.34" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_any_matcher_ecma&lt;false, false&gt; (25,162,215 samples, 0.01%)</title><rect x="578.2" y="1141" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="581.19" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (217,947,111 samples, 0.08%)</title><rect x="347.2" y="1093" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.18" y="1103.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (44,270,301 samples, 0.02%)</title><rect x="204.4" y="1141" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="207.36" y="1151.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (38,451,239 samples, 0.01%)</title><rect x="543.9" y="1397" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="546.89" y="1407.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (31,973,753 samples, 0.01%)</title><rect x="97.0" y="1045" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="100.01" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,619,402,975 samples, 1.36%)</title><rect x="631.2" y="1125" width="16.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="634.21" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (53,667,319 samples, 0.02%)</title><rect x="629.9" y="613" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.94" y="623.5" ></text>
</g>
<g >
<title>read (147,407,636 samples, 0.06%)</title><rect x="828.4" y="1445" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="831.39" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (34,116,457 samples, 0.01%)</title><rect x="78.8" y="949" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="81.84" y="959.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (237,710,141 samples, 0.09%)</title><rect x="1102.0" y="1077" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1104.98" y="1087.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (170,269,862 samples, 0.06%)</title><rect x="357.2" y="853" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="360.23" y="863.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (23,112,073 samples, 0.01%)</title><rect x="459.8" y="1013" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="462.85" y="1023.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (1,552,167,670 samples, 0.58%)</title><rect x="689.1" y="1461" width="6.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="692.10" y="1471.5" ></text>
</g>
<g >
<title>tcp_recvmsg (44,612,854 samples, 0.02%)</title><rect x="688.8" y="1285" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="691.79" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,352,106 samples, 0.02%)</title><rect x="347.3" y="533" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.29" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (29,884,036 samples, 0.01%)</title><rect x="436.6" y="1125" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="439.57" y="1135.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (47,499,978 samples, 0.02%)</title><rect x="1182.9" y="1461" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1185.88" y="1471.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (37,168,934 samples, 0.01%)</title><rect x="628.4" y="1109" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="631.39" y="1119.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (32,234,185 samples, 0.01%)</title><rect x="769.6" y="1109" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="772.57" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (120,009,078 samples, 0.04%)</title><rect x="867.9" y="1093" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="870.92" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (49,073,726 samples, 0.02%)</title><rect x="259.3" y="1269" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="262.34" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (147,090,341 samples, 0.06%)</title><rect x="161.7" y="1093" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="164.72" y="1103.5" ></text>
</g>
<g >
<title>HttpRequest::~HttpRequest (22,760,082 samples, 0.01%)</title><rect x="690.0" y="1189" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="692.96" y="1199.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (31,205,232 samples, 0.01%)</title><rect x="1174.1" y="1269" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1177.13" y="1279.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (87,347,645 samples, 0.03%)</title><rect x="90.0" y="997" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="93.00" y="1007.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (31,850,169 samples, 0.01%)</title><rect x="973.7" y="837" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="976.71" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (29,205,932 samples, 0.01%)</title><rect x="379.4" y="1061" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="382.41" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,573,432 samples, 0.02%)</title><rect x="488.4" y="629" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.36" y="639.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (42,660,597 samples, 0.02%)</title><rect x="831.4" y="997" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="834.41" y="1007.5" ></text>
</g>
<g >
<title>vfs_fstatat (91,367,043 samples, 0.03%)</title><rect x="968.3" y="1301" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="971.27" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (39,661,583 samples, 0.01%)</title><rect x="363.0" y="949" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="366.04" y="959.5" ></text>
</g>
<g >
<title>std::function&lt;void  (25,104,127,436 samples, 9.40%)</title><rect x="718.1" y="1525" width="110.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="721.12" y="1535.5" >std::function..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,853,095,948 samples, 2.94%)</title><rect x="489.5" y="1285" width="34.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.48" y="1295.5" >st..</text>
</g>
<g >
<title>do_syscall_64 (73,667,330 samples, 0.03%)</title><rect x="548.3" y="1269" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="551.34" y="1279.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (83,852,594 samples, 0.03%)</title><rect x="119.4" y="1413" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="122.35" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (61,585,448 samples, 0.02%)</title><rect x="1044.7" y="1093" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1047.70" y="1103.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (28,505,575 samples, 0.01%)</title><rect x="535.3" y="1061" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="538.27" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (35,012,250 samples, 0.01%)</title><rect x="809.2" y="1077" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="812.25" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (32,889,886 samples, 0.01%)</title><rect x="860.8" y="1109" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="863.80" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (30,581,458 samples, 0.01%)</title><rect x="487.1" y="1381" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="490.07" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (204,882,446 samples, 0.08%)</title><rect x="347.2" y="1013" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.20" y="1023.5" ></text>
</g>
<g >
<title>irq_exit_rcu (31,027,564 samples, 0.01%)</title><rect x="443.5" y="1061" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="446.48" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (1,847,452,409 samples, 0.69%)</title><rect x="774.8" y="949" width="8.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="777.82" y="959.5" ></text>
</g>
<g >
<title>__strxfrm_l (106,815,736 samples, 0.04%)</title><rect x="1127.2" y="1669" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1130.25" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (72,475,823 samples, 0.03%)</title><rect x="259.8" y="1141" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.83" y="1151.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (76,424,031 samples, 0.03%)</title><rect x="1071.0" y="981" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1073.97" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (220,795,104 samples, 0.08%)</title><rect x="177.7" y="1029" width="1.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="180.71" y="1039.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (169,476,017 samples, 0.06%)</title><rect x="643.5" y="949" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="646.48" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (34,941,423 samples, 0.01%)</title><rect x="1054.7" y="549" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.67" y="559.5" ></text>
</g>
<g >
<title>netvsc_poll (30,314,824 samples, 0.01%)</title><rect x="991.5" y="1525" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="994.55" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (51,666,582 samples, 0.02%)</title><rect x="487.9" y="757" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="490.90" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (32,151,228 samples, 0.01%)</title><rect x="222.1" y="949" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="225.07" y="959.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_whichbit (23,478,048 samples, 0.01%)</title><rect x="58.1" y="1093" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.11" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,813,190,577 samples, 1.43%)</title><rect x="930.6" y="1189" width="16.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="933.56" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (26,196,389 samples, 0.01%)</title><rect x="471.5" y="1045" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="474.47" y="1055.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (99,714,182 samples, 0.04%)</title><rect x="345.9" y="1301" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="348.87" y="1311.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (25,851,401 samples, 0.01%)</title><rect x="830.3" y="1157" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="833.29" y="1167.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (392,813,688 samples, 0.15%)</title><rect x="128.4" y="1317" width="1.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="131.41" y="1327.5" ></text>
</g>
<g >
<title>unmap_region.constprop.0 (149,960,139 samples, 0.06%)</title><rect x="266.7" y="1061" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="269.75" y="1071.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (91,378,944 samples, 0.03%)</title><rect x="313.5" y="1077" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="316.50" y="1087.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (74,280,648 samples, 0.03%)</title><rect x="613.9" y="1045" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="616.93" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (24,206,978 samples, 0.01%)</title><rect x="556.9" y="1301" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (42,234,197 samples, 0.02%)</title><rect x="1108.6" y="709" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.61" y="719.5" ></text>
</g>
<g >
<title>do_dentry_open (30,599,276 samples, 0.01%)</title><rect x="134.5" y="1525" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="137.51" y="1535.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (23,413,962 samples, 0.01%)</title><rect x="647.4" y="1029" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="650.45" y="1039.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (81,550,855 samples, 0.03%)</title><rect x="361.7" y="917" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="364.72" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,449,155 samples, 0.01%)</title><rect x="347.6" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.56" y="383.5" ></text>
</g>
<g >
<title>malloc (137,574,950 samples, 0.05%)</title><rect x="1188.8" y="1685" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.83" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::assign (33,892,126 samples, 0.01%)</title><rect x="487.3" y="1317" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="490.32" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (52,049,282 samples, 0.02%)</title><rect x="520.5" y="1013" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="523.52" y="1023.5" ></text>
</g>
<g >
<title>netvsc_xmit (39,382,602 samples, 0.01%)</title><rect x="271.2" y="997" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="274.24" y="1007.5" ></text>
</g>
<g >
<title>[web-server] (82,731,549 samples, 0.03%)</title><rect x="445.2" y="1077" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="448.18" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (31,418,646 samples, 0.01%)</title><rect x="347.3" y="357" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.30" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (55,092,353 samples, 0.02%)</title><rect x="531.9" y="1045" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="534.88" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (47,597,994 samples, 0.02%)</title><rect x="400.8" y="693" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="403.75" y="703.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (173,841,090 samples, 0.07%)</title><rect x="609.6" y="1029" width="0.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="612.63" y="1039.5" ></text>
</g>
<g >
<title>vfs_writev (395,869,317 samples, 0.15%)</title><rect x="694.1" y="1349" width="1.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="697.14" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,473,728,258 samples, 1.30%)</title><rect x="349.2" y="1013" width="15.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="352.18" y="1023.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (27,152,932 samples, 0.01%)</title><rect x="936.6" y="1045" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="939.59" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (29,256,736 samples, 0.01%)</title><rect x="579.0" y="1237" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="581.98" y="1247.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (30,153,134 samples, 0.01%)</title><rect x="129.2" y="1093" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="132.22" y="1103.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (30,629,245 samples, 0.01%)</title><rect x="1186.5" y="1573" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1189.47" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,680,780,185 samples, 1.38%)</title><rect x="1055.9" y="1157" width="16.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1058.89" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (232,776,584 samples, 0.09%)</title><rect x="670.1" y="1045" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="673.15" y="1055.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (182,327,645 samples, 0.07%)</title><rect x="1098.6" y="997" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1101.63" y="1007.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (25,449,949 samples, 0.01%)</title><rect x="689.7" y="1269" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="692.66" y="1279.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (31,598,500 samples, 0.01%)</title><rect x="372.5" y="997" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="375.53" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,725,236,717 samples, 4.39%)</title><rect x="631.1" y="1333" width="51.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="634.13" y="1343.5" >std::..</text>
</g>
<g >
<title>ip_sublist_rcv (32,572,958 samples, 0.01%)</title><rect x="1170.6" y="1109" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1173.57" y="1119.5" ></text>
</g>
<g >
<title>do_syscall_64 (116,434,619 samples, 0.04%)</title><rect x="699.8" y="1637" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="702.75" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (98,706,634 samples, 0.04%)</title><rect x="824.0" y="1221" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="826.98" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (58,867,445 samples, 0.02%)</title><rect x="912.0" y="645" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="915.05" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,917,743,412 samples, 4.46%)</title><rect x="489.5" y="1333" width="52.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="492.48" y="1343.5" >std::..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (26,605,704 samples, 0.01%)</title><rect x="645.3" y="933" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="648.33" y="943.5" ></text>
</g>
<g >
<title>std::function&lt;void  (77,394,471 samples, 0.03%)</title><rect x="294.3" y="1397" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="297.30" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,572,471,173 samples, 1.34%)</title><rect x="772.5" y="1045" width="15.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="775.46" y="1055.5" ></text>
</g>
<g >
<title>__dynamic_cast (39,440,503 samples, 0.01%)</title><rect x="1092.8" y="1077" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1095.81" y="1087.5" ></text>
</g>
<g >
<title>EventLoop::IsInLoopThread (42,450,347 samples, 0.02%)</title><rect x="1152.7" y="1269" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1155.66" y="1279.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (64,532,968 samples, 0.02%)</title><rect x="1180.7" y="1541" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1183.70" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (42,670,228 samples, 0.02%)</title><rect x="1050.1" y="1157" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1053.09" y="1167.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (27,131,157 samples, 0.01%)</title><rect x="741.5" y="1061" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="744.51" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (38,862,858 samples, 0.01%)</title><rect x="526.1" y="1093" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="529.14" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,882,591 samples, 0.01%)</title><rect x="63.7" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.71" y="335.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (65,120,936 samples, 0.02%)</title><rect x="311.7" y="997" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="314.72" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,701,217,473 samples, 4.38%)</title><rect x="207.1" y="1333" width="51.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="210.11" y="1343.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,795,183,050 samples, 1.42%)</title><rect x="930.6" y="1173" width="16.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="933.57" y="1183.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (29,335,461 samples, 0.01%)</title><rect x="513.0" y="1045" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="515.96" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,111,371,019 samples, 4.16%)</title><rect x="153.5" y="1301" width="49.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="156.52" y="1311.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (41,475,122 samples, 0.02%)</title><rect x="1109.0" y="1381" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1112.04" y="1391.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (74,558,050 samples, 0.03%)</title><rect x="782.5" y="901" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="785.53" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,198,805 samples, 0.01%)</title><rect x="488.2" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.22" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (791,708,024 samples, 0.30%)</title><rect x="1096.8" y="1077" width="3.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1099.78" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (259,714,053 samples, 0.10%)</title><rect x="629.3" y="1269" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="632.32" y="1279.5" ></text>
</g>
<g >
<title>mas_store_gfp (34,514,488 samples, 0.01%)</title><rect x="125.1" y="1061" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="128.07" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (284,542,676 samples, 0.11%)</title><rect x="911.4" y="1301" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="914.42" y="1311.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (29,232,837 samples, 0.01%)</title><rect x="694.9" y="1093" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="697.92" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (205,240,508 samples, 0.08%)</title><rect x="770.6" y="997" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.63" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (74,700,671 samples, 0.03%)</title><rect x="1113.9" y="1285" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1116.91" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,492,211,291 samples, 3.93%)</title><rect x="297.1" y="1205" width="46.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="300.14" y="1215.5" >std:..</text>
</g>
<g >
<title>__ip_queue_xmit (97,222,724 samples, 0.04%)</title><rect x="1117.6" y="933" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1120.62" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (45,351,477 samples, 0.02%)</title><rect x="28.2" y="1013" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="31.22" y="1023.5" ></text>
</g>
<g >
<title>web-server (10,640,160,911 samples, 3.98%)</title><rect x="1143.0" y="1701" width="47.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1145.98" y="1711.5" >web-..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (254,175,627 samples, 0.10%)</title><rect x="616.5" y="1061" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="619.47" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,477,358,452 samples, 1.30%)</title><rect x="631.4" y="997" width="15.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="634.38" y="1007.5" ></text>
</g>
<g >
<title>x64_sys_call (109,766,399 samples, 0.04%)</title><rect x="558.7" y="1621" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="561.71" y="1631.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (416,441,440 samples, 0.16%)</title><rect x="62.6" y="1381" width="1.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="65.57" y="1391.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (59,405,323 samples, 0.02%)</title><rect x="259.3" y="1365" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="262.30" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,053,984 samples, 0.01%)</title><rect x="824.1" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.08" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (47,109,616 samples, 0.02%)</title><rect x="487.9" y="677" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="490.92" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (157,240,440 samples, 0.06%)</title><rect x="1054.4" y="869" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.38" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,324,073 samples, 0.02%)</title><rect x="118.3" y="853" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.34" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (45,109,901 samples, 0.02%)</title><rect x="528.3" y="1077" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="531.31" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (108,375,054 samples, 0.04%)</title><rect x="981.7" y="1653" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="984.72" y="1663.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (185,018,868 samples, 0.07%)</title><rect x="755.8" y="1061" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="758.75" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (33,961,507 samples, 0.01%)</title><rect x="1054.4" y="277" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.43" y="287.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (27,212,497,324 samples, 10.19%)</title><rect x="152.8" y="1589" width="120.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="155.81" y="1599.5" >EventLoopThrea..</text>
</g>
<g >
<title>EventLoop::DelChannel (152,298,775 samples, 0.06%)</title><rect x="1113.8" y="1317" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1116.76" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,170,629 samples, 0.01%)</title><rect x="770.7" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.71" y="591.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (71,583,691 samples, 0.03%)</title><rect x="1000.1" y="1653" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1003.12" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,799,805 samples, 0.01%)</title><rect x="771.0" y="645" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.96" y="655.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (56,727,652 samples, 0.02%)</title><rect x="804.8" y="1093" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="807.84" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_openat (115,798,267 samples, 0.04%)</title><rect x="134.3" y="1605" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="137.27" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (26,792,274 samples, 0.01%)</title><rect x="556.9" y="1541" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (23,171,281 samples, 0.01%)</title><rect x="838.6" y="1317" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,937,519 samples, 0.01%)</title><rect x="347.3" y="181" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.32" y="191.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (36,607,249 samples, 0.01%)</title><rect x="585.6" y="1077" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="588.57" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (30,729,821 samples, 0.01%)</title><rect x="413.3" y="1429" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="416.27" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (2,072,310,336 samples, 0.78%)</title><rect x="509.2" y="1061" width="9.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="512.18" y="1071.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (34,841,577 samples, 0.01%)</title><rect x="1032.5" y="1013" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1035.47" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,747,219,812 samples, 1.40%)</title><rect x="224.2" y="1141" width="16.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="227.24" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::emplace_back&lt;char&gt; (37,352,230 samples, 0.01%)</title><rect x="579.8" y="1125" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="582.81" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (26,563,257 samples, 0.01%)</title><rect x="380.6" y="1061" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="383.58" y="1071.5" ></text>
</g>
<g >
<title>do_epoll_ctl (29,003,883 samples, 0.01%)</title><rect x="1121.2" y="1381" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1124.15" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (10,616,784,626 samples, 3.98%)</title><rect x="13.0" y="1253" width="46.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="15.98" y="1263.5" >std:..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (30,075,719 samples, 0.01%)</title><rect x="396.8" y="1093" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="399.76" y="1103.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char*&gt; (23,354,540 samples, 0.01%)</title><rect x="322.8" y="965" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="325.81" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (111,209,528 samples, 0.04%)</title><rect x="589.8" y="1077" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="592.76" y="1087.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (24,106,074 samples, 0.01%)</title><rect x="678.2" y="1045" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="681.17" y="1055.5" ></text>
</g>
<g >
<title>ip_queue_xmit (104,839,533 samples, 0.04%)</title><rect x="833.2" y="949" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="836.17" y="959.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (143,307,419 samples, 0.05%)</title><rect x="553.7" y="1157" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="556.73" y="1167.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (72,594,561 samples, 0.03%)</title><rect x="363.8" y="981" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="366.85" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,635,723,669 samples, 3.98%)</title><rect x="155.6" y="1285" width="47.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="158.62" y="1295.5" >std:..</text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (106,997,853 samples, 0.04%)</title><rect x="532.7" y="1045" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="535.72" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,170,629 samples, 0.01%)</title><rect x="770.7" y="533" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.71" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (27,915,120 samples, 0.01%)</title><rect x="720.6" y="1237" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="723.56" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (24,089,139 samples, 0.01%)</title><rect x="838.6" y="1381" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1391.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (70,171,020 samples, 0.03%)</title><rect x="577.0" y="1413" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="579.98" y="1423.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (25,797,879 samples, 0.01%)</title><rect x="835.9" y="1029" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="838.85" y="1039.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (230,402,759 samples, 0.09%)</title><rect x="235.9" y="1045" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="238.91" y="1055.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (48,211,378 samples, 0.02%)</title><rect x="627.6" y="1301" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="630.63" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (1,066,677,514 samples, 0.40%)</title><rect x="1181.0" y="1541" width="4.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1184.05" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,159,735 samples, 0.01%)</title><rect x="824.1" y="517" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.07" y="527.5" ></text>
</g>
<g >
<title>do_writev (433,428,286 samples, 0.16%)</title><rect x="128.3" y="1365" width="1.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="131.30" y="1375.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (33,169,283 samples, 0.01%)</title><rect x="181.5" y="981" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="184.47" y="991.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (24,091,674 samples, 0.01%)</title><rect x="683.2" y="1317" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="686.21" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (65,614,088 samples, 0.02%)</title><rect x="675.6" y="1029" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="678.58" y="1039.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (8,082,516,674 samples, 3.03%)</title><rect x="1144.0" y="1477" width="35.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1146.99" y="1487.5" >std..</text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (53,122,611 samples, 0.02%)</title><rect x="498.4" y="805" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="501.38" y="815.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (244,352,582 samples, 0.09%)</title><rect x="497.8" y="901" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="500.84" y="911.5" ></text>
</g>
<g >
<title>[unknown] (29,480,915 samples, 0.01%)</title><rect x="556.8" y="1621" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (29,800,361 samples, 0.01%)</title><rect x="909.2" y="1317" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="912.20" y="1327.5" ></text>
</g>
<g >
<title>__tcp_close (162,239,414 samples, 0.06%)</title><rect x="126.9" y="1029" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="129.92" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (29,651,938 samples, 0.01%)</title><rect x="684.0" y="421" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="687.05" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (38,032,645 samples, 0.01%)</title><rect x="1108.6" y="597" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1111.62" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (84,489,812 samples, 0.03%)</title><rect x="486.6" y="1269" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="489.56" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (68,859,446 samples, 0.03%)</title><rect x="1142.3" y="1669" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.30" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,781,555,786 samples, 1.42%)</title><rect x="805.9" y="1173" width="16.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="808.91" y="1183.5" ></text>
</g>
<g >
<title>__ip_finish_output (49,979,998 samples, 0.02%)</title><rect x="693.0" y="869" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="696.02" y="879.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (218,075,266 samples, 0.08%)</title><rect x="797.5" y="981" width="1.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="800.49" y="991.5" ></text>
</g>
<g >
<title>unmap_vmas (40,593,917 samples, 0.02%)</title><rect x="831.7" y="1045" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="834.73" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (66,442,170 samples, 0.02%)</title><rect x="1099.9" y="1029" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1102.94" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,635,527,825 samples, 1.36%)</title><rect x="631.2" y="1157" width="16.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="634.15" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (180,022,802 samples, 0.07%)</title><rect x="347.2" y="853" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.25" y="863.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (1,553,292,290 samples, 0.58%)</title><rect x="689.1" y="1493" width="6.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="692.10" y="1503.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Channel,  (164,053,319 samples, 0.06%)</title><rect x="1160.3" y="1253" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1163.32" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (28,756,911 samples, 0.01%)</title><rect x="513.6" y="1045" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="516.64" y="1055.5" ></text>
</g>
<g >
<title>selinux_file_permission (59,869,998 samples, 0.02%)</title><rect x="1155.9" y="1109" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1158.91" y="1119.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (499,755,128 samples, 0.19%)</title><rect x="756.9" y="1093" width="2.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="759.86" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (615,033,848 samples, 0.23%)</title><rect x="1097.5" y="1061" width="2.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1100.54" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (88,251,563 samples, 0.03%)</title><rect x="577.6" y="1221" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="580.61" y="1231.5" ></text>
</g>
<g >
<title>EventLoop::AddChannel (114,365,461 samples, 0.04%)</title><rect x="1120.9" y="1477" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1123.94" y="1487.5" ></text>
</g>
<g >
<title>irq_exit_rcu (35,788,259 samples, 0.01%)</title><rect x="1009.9" y="1061" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1012.90" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (151,292,632 samples, 0.06%)</title><rect x="50.4" y="1045" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="53.35" y="1055.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (26,328,668 samples, 0.01%)</title><rect x="117.6" y="1333" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="120.57" y="1343.5" ></text>
</g>
<g >
<title>sock_close (181,859,053 samples, 0.07%)</title><rect x="975.2" y="1093" width="0.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="978.19" y="1103.5" ></text>
</g>
<g >
<title>unmap_region.constprop.0 (161,788,651 samples, 0.06%)</title><rect x="831.2" y="1061" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="834.19" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (22,747,154 samples, 0.01%)</title><rect x="1001.6" y="1221" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1004.59" y="1231.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (39,509,040 samples, 0.01%)</title><rect x="463.6" y="981" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="466.60" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (49,507,946 samples, 0.02%)</title><rect x="63.2" y="757" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.22" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (31,048,324 samples, 0.01%)</title><rect x="396.9" y="1093" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="399.90" y="1103.5" ></text>
</g>
<g >
<title>__ip_finish_output (42,154,527 samples, 0.02%)</title><rect x="1117.8" y="869" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1120.80" y="879.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (51,603,027 samples, 0.02%)</title><rect x="11.2" y="1061" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="14.18" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (53,205,320 samples, 0.02%)</title><rect x="909.2" y="1333" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="912.19" y="1343.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (24,827,105 samples, 0.01%)</title><rect x="907.6" y="1157" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="910.58" y="1167.5" ></text>
</g>
<g >
<title>do_sys_openat2 (108,060,250 samples, 0.04%)</title><rect x="275.7" y="1589" width="0.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="278.74" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (54,291,588 samples, 0.02%)</title><rect x="401.9" y="1397" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="404.90" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,700,534,874 samples, 1.39%)</title><rect x="365.6" y="1173" width="16.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="368.61" y="1183.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::DelChannel (167,391,598 samples, 0.06%)</title><rect x="829.2" y="1349" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="832.15" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (561,202,159 samples, 0.21%)</title><rect x="874.7" y="1045" width="2.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="877.74" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,209,444 samples, 0.01%)</title><rect x="771.2" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="774.19" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (38,532,585 samples, 0.01%)</title><rect x="204.4" y="1109" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="207.37" y="1119.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (847,306,941 samples, 0.32%)</title><rect x="265.8" y="1317" width="3.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="268.80" y="1327.5" ></text>
</g>
<g >
<title>path_lookupat (50,387,795 samples, 0.02%)</title><rect x="120.5" y="1253" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="123.48" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (299,381,814 samples, 0.11%)</title><rect x="347.1" y="1317" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="350.07" y="1327.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (272,278,682 samples, 0.10%)</title><rect x="973.0" y="1077" width="1.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="976.01" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (512,476,882 samples, 0.19%)</title><rect x="310.6" y="1029" width="2.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="313.58" y="1039.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (61,715,767 samples, 0.02%)</title><rect x="737.2" y="1077" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="740.24" y="1087.5" ></text>
</g>
<g >
<title>__ip_local_out (36,240,706 samples, 0.01%)</title><rect x="1117.6" y="901" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1120.63" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_resize (34,462,787 samples, 0.01%)</title><rect x="204.9" y="1333" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="207.94" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_begin (28,057,701 samples, 0.01%)</title><rect x="1051.6" y="1269" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1054.62" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (64,545,134 samples, 0.02%)</title><rect x="966.3" y="997" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="969.28" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (336,317,241 samples, 0.13%)</title><rect x="830.8" y="1125" width="1.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="833.80" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (51,508,882 samples, 0.02%)</title><rect x="1013.7" y="1077" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1016.70" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (66,195,834 samples, 0.02%)</title><rect x="543.2" y="1013" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="546.19" y="1023.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (60,989,405 samples, 0.02%)</title><rect x="190.1" y="1045" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="193.15" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (95,636,840 samples, 0.04%)</title><rect x="896.5" y="1029" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="899.48" y="1039.5" ></text>
</g>
<g >
<title>operator new[] (37,684,249 samples, 0.01%)</title><rect x="1123.9" y="1653" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1126.85" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (38,613,021 samples, 0.01%)</title><rect x="450.2" y="1061" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="453.22" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (85,896,330 samples, 0.03%)</title><rect x="628.2" y="1269" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="631.24" y="1279.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (353,196,631 samples, 0.13%)</title><rect x="474.1" y="1077" width="1.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="477.10" y="1087.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (231,206,459 samples, 0.09%)</title><rect x="373.7" y="1013" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="376.73" y="1023.5" ></text>
</g>
<g >
<title>__fput (283,754,404 samples, 0.11%)</title><rect x="409.1" y="1109" width="1.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="412.06" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,941,544 samples, 0.01%)</title><rect x="1108.6" y="485" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.63" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (315,095,923 samples, 0.12%)</title><rect x="266.4" y="1125" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="269.45" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (85,781,267 samples, 0.03%)</title><rect x="757.1" y="1077" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="760.10" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (40,865,331 samples, 0.02%)</title><rect x="1121.1" y="1445" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1124.11" y="1455.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (62,022,056 samples, 0.02%)</title><rect x="377.8" y="1029" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="380.79" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (10,206,400,628 samples, 3.82%)</title><rect x="862.0" y="1157" width="45.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="865.04" y="1167.5" >std:..</text>
</g>
<g >
<title>__ip_finish_output (46,868,935 samples, 0.02%)</title><rect x="268.9" y="869" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="271.91" y="879.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (114,684,296 samples, 0.04%)</title><rect x="219.9" y="933" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="222.88" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,770,596,154 samples, 1.41%)</title><rect x="913.2" y="1141" width="16.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="916.20" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (35,961,876 samples, 0.01%)</title><rect x="79.4" y="949" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="82.44" y="959.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (151,777,505 samples, 0.06%)</title><rect x="332.1" y="1045" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="335.11" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (26,492,342 samples, 0.01%)</title><rect x="255.7" y="1093" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="258.72" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (69,653,585 samples, 0.03%)</title><rect x="966.3" y="1077" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="969.28" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,471,330 samples, 0.01%)</title><rect x="630.0" y="133" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="633.01" y="143.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (25,404,640 samples, 0.01%)</title><rect x="1110.1" y="1365" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1113.12" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (25,058,178 samples, 0.01%)</title><rect x="673.7" y="1013" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="676.68" y="1023.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (27,736,327 samples, 0.01%)</title><rect x="965.8" y="1141" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="968.84" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (29,223,917 samples, 0.01%)</title><rect x="915.0" y="949" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="918.01" y="959.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (27,868,488 samples, 0.01%)</title><rect x="1072.4" y="1013" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1075.39" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (24,610,436 samples, 0.01%)</title><rect x="767.9" y="1253" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="770.85" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (30,058,664 samples, 0.01%)</title><rect x="784.6" y="933" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="787.59" y="943.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (175,465,817 samples, 0.07%)</title><rect x="378.2" y="1061" width="0.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="381.18" y="1071.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (76,905,424 samples, 0.03%)</title><rect x="967.4" y="1413" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="970.36" y="1423.5" ></text>
</g>
<g >
<title>__ip_local_out (53,368,132 samples, 0.02%)</title><rect x="411.9" y="1125" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="414.87" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (30,853,249 samples, 0.01%)</title><rect x="1085.6" y="997" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1088.61" y="1007.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (71,146,557 samples, 0.03%)</title><rect x="519.6" y="1029" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="522.61" y="1039.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (916,500,844 samples, 0.34%)</title><rect x="830.0" y="1333" width="4.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="833.01" y="1343.5" ></text>
</g>
<g >
<title>x64_sys_call (84,739,437 samples, 0.03%)</title><rect x="1113.2" y="1397" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1116.15" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (42,071,909 samples, 0.02%)</title><rect x="966.8" y="1381" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="969.81" y="1391.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (228,753,350 samples, 0.09%)</title><rect x="601.7" y="1029" width="1.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="604.68" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (29,974,377 samples, 0.01%)</title><rect x="636.5" y="869" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="639.45" y="879.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (51,020,270 samples, 0.02%)</title><rect x="768.7" y="1317" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="771.69" y="1327.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::AddChannel (102,804,297 samples, 0.04%)</title><rect x="413.1" y="1509" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="416.07" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,516,420 samples, 0.01%)</title><rect x="1108.6" y="453" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.63" y="463.5" ></text>
</g>
<g >
<title>do_vmi_munmap (237,381,398 samples, 0.09%)</title><rect x="125.0" y="1093" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="127.97" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (27,636,038 samples, 0.01%)</title><rect x="911.9" y="581" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.89" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (25,611,329 samples, 0.01%)</title><rect x="205.8" y="437" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.80" y="447.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (170,061,009 samples, 0.06%)</title><rect x="1165.6" y="1301" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1168.62" y="1311.5" ></text>
</g>
<g >
<title>nf_hook_slow (29,455,577 samples, 0.01%)</title><rect x="409.7" y="885" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="412.66" y="895.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (80,069,445 samples, 0.03%)</title><rect x="1042.3" y="1093" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1045.30" y="1103.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (29,816,108 samples, 0.01%)</title><rect x="972.5" y="1173" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="975.46" y="1183.5" ></text>
</g>
<g >
<title>sock_read_iter (51,704,749 samples, 0.02%)</title><rect x="547.7" y="1333" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="550.70" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (42,089,890 samples, 0.02%)</title><rect x="154.9" y="1125" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="157.87" y="1135.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Channel, std::allocator&lt;Channel&gt;,  (68,404,926 samples, 0.03%)</title><rect x="1160.4" y="1221" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1163.44" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,577,417 samples, 0.01%)</title><rect x="259.9" y="709" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.89" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,410,875 samples, 0.01%)</title><rect x="770.7" y="453" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.72" y="463.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (36,670,173 samples, 0.01%)</title><rect x="131.1" y="1509" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="134.12" y="1519.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (83,227,011 samples, 0.03%)</title><rect x="345.9" y="1285" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="348.94" y="1295.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (40,295,426 samples, 0.02%)</title><rect x="627.7" y="1269" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="630.65" y="1279.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (27,412,966,371 samples, 10.27%)</title><rect x="1000.9" y="1669" width="121.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1003.91" y="1679.5" >std::thread::_S..</text>
</g>
<g >
<title>x64_sys_call (45,195,133 samples, 0.02%)</title><rect x="434.9" y="1269" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="437.86" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,511,798,498 samples, 3.94%)</title><rect x="155.8" y="1221" width="46.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="158.78" y="1231.5" >std:..</text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (913,589,163 samples, 0.34%)</title><rect x="44.9" y="1093" width="4.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="47.89" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (39,643,050 samples, 0.01%)</title><rect x="509.0" y="1061" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="511.98" y="1071.5" ></text>
</g>
<g >
<title>__tcp_close (173,973,791 samples, 0.07%)</title><rect x="1117.5" y="1029" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1120.45" y="1039.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (319,704,700 samples, 0.12%)</title><rect x="121.0" y="1317" width="1.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="124.03" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="821" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="831.5" ></text>
</g>
<g >
<title>irq_exit_rcu (30,871,071 samples, 0.01%)</title><rect x="585.6" y="1061" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="588.58" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (78,852,832 samples, 0.03%)</title><rect x="601.9" y="1013" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="604.94" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (116,678,422 samples, 0.04%)</title><rect x="828.4" y="1429" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="831.44" y="1439.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (62,520,218 samples, 0.02%)</title><rect x="217.8" y="885" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="220.79" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,221,614 samples, 0.02%)</title><rect x="543.2" y="981" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.19" y="991.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (66,837,897 samples, 0.03%)</title><rect x="751.4" y="1013" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="754.41" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (40,144,176 samples, 0.02%)</title><rect x="615.9" y="1061" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="618.90" y="1071.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (167,773,278 samples, 0.06%)</title><rect x="886.2" y="949" width="0.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="889.24" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,692,846,294 samples, 1.38%)</title><rect x="207.2" y="1141" width="16.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="210.21" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (48,219,818 samples, 0.02%)</title><rect x="259.3" y="1253" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="262.34" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (72,356,852 samples, 0.03%)</title><rect x="435.5" y="1141" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="438.52" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (631,057,575 samples, 0.24%)</title><rect x="466.2" y="1077" width="2.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="469.24" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,418,646 samples, 0.01%)</title><rect x="347.3" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.30" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (26,543,793 samples, 0.01%)</title><rect x="680.5" y="1093" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="683.52" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (87,561,257 samples, 0.03%)</title><rect x="860.7" y="1237" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="863.70" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (48,075,532 samples, 0.02%)</title><rect x="919.7" y="933" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="922.67" y="943.5" ></text>
</g>
<g >
<title>__handle_mm_fault (27,967,365 samples, 0.01%)</title><rect x="128.7" y="1141" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="131.73" y="1151.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (31,183,627 samples, 0.01%)</title><rect x="120.5" y="1237" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="123.53" y="1247.5" ></text>
</g>
<g >
<title>__fput_sync (305,049,273 samples, 0.11%)</title><rect x="832.5" y="1125" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="835.53" y="1135.5" ></text>
</g>
<g >
<title>x64_sys_call (100,107,897 samples, 0.04%)</title><rect x="261.7" y="1349" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="264.69" y="1359.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (64,221,420 samples, 0.02%)</title><rect x="98.0" y="1077" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="101.01" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (52,249,567 samples, 0.02%)</title><rect x="223.7" y="1157" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="226.70" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::operator= (23,447,237 samples, 0.01%)</title><rect x="771.7" y="1285" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="774.71" y="1295.5" ></text>
</g>
<g >
<title>__destroy_inode (22,924,069 samples, 0.01%)</title><rect x="126.7" y="997" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="129.70" y="1007.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (39,234,672 samples, 0.01%)</title><rect x="909.6" y="1301" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="912.62" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (28,269,937 samples, 0.01%)</title><rect x="696.5" y="1509" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="699.53" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (39,139,933 samples, 0.01%)</title><rect x="118.8" y="1349" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="121.84" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (35,305,421 samples, 0.01%)</title><rect x="332.6" y="1013" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="335.59" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (295,643,369 samples, 0.11%)</title><rect x="1025.9" y="1045" width="1.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1028.92" y="1055.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::construct&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt; &gt; (31,910,953 samples, 0.01%)</title><rect x="295.2" y="1029" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="298.19" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (34,207,233 samples, 0.01%)</title><rect x="13.0" y="1221" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="16.00" y="1231.5" ></text>
</g>
<g >
<title>__ep_remove (24,808,332 samples, 0.01%)</title><rect x="123.8" y="1205" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="126.78" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (122,872,783 samples, 0.05%)</title><rect x="770.9" y="837" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.92" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (28,270,384 samples, 0.01%)</title><rect x="362.7" y="949" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="365.68" y="959.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (202,630,106 samples, 0.08%)</title><rect x="553.6" y="1221" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="556.65" y="1231.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (75,714,262 samples, 0.03%)</title><rect x="393.2" y="1029" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="396.22" y="1039.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (39,185,591 samples, 0.01%)</title><rect x="303.1" y="1077" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="306.08" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (63,605,281 samples, 0.02%)</title><rect x="1108.6" y="1013" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1111.57" y="1023.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (328,172,262 samples, 0.12%)</title><rect x="686.7" y="1301" width="1.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="689.69" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (139,243,409 samples, 0.05%)</title><rect x="727.2" y="1093" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="730.20" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (42,043,797 samples, 0.02%)</title><rect x="792.9" y="1045" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="795.91" y="1055.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (131,332,287 samples, 0.05%)</title><rect x="127.0" y="997" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="130.03" y="1007.5" ></text>
</g>
<g >
<title>EventLoop::DelChannel (136,332,242 samples, 0.05%)</title><rect x="689.2" y="1317" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="692.18" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,088,549 samples, 0.01%)</title><rect x="347.3" y="213" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.31" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (25,813,006 samples, 0.01%)</title><rect x="392.4" y="1013" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="395.43" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (76,525,041 samples, 0.03%)</title><rect x="234.9" y="1013" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="237.93" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (42,954,016 samples, 0.02%)</title><rect x="1043.5" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1046.52" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (631,519,706 samples, 0.24%)</title><rect x="673.1" y="1061" width="2.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="676.11" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,886,894,755 samples, 1.46%)</title><rect x="947.7" y="1237" width="17.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="950.72" y="1247.5" ></text>
</g>
<g >
<title>napi_complete_done (27,079,476 samples, 0.01%)</title><rect x="1009.9" y="965" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1012.91" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (34,915,300 samples, 0.01%)</title><rect x="531.4" y="1077" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="534.44" y="1087.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (129,204,002 samples, 0.05%)</title><rect x="780.6" y="837" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="783.62" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28,007,729 samples, 0.01%)</title><rect x="63.5" y="469" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.52" y="479.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (216,191,869 samples, 0.08%)</title><rect x="270.7" y="1221" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="273.72" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (25,418,466 samples, 0.01%)</title><rect x="400.8" y="357" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="403.78" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (123,108,136 samples, 0.05%)</title><rect x="435.9" y="1237" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="438.91" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,854,340 samples, 0.01%)</title><rect x="347.6" y="341" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.57" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (2,102,827,263 samples, 0.79%)</title><rect x="526.9" y="1093" width="9.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="529.91" y="1103.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (25,468,027 samples, 0.01%)</title><rect x="943.2" y="1013" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="946.19" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (52,239,747 samples, 0.02%)</title><rect x="526.7" y="1093" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="529.66" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (55,400,239 samples, 0.02%)</title><rect x="770.7" y="757" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.67" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (41,289,561 samples, 0.02%)</title><rect x="344.3" y="1301" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="347.34" y="1311.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (384,423,644 samples, 0.14%)</title><rect x="270.1" y="1253" width="1.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="273.11" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (46,334,644 samples, 0.02%)</title><rect x="621.3" y="1077" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="624.31" y="1087.5" ></text>
</g>
<g >
<title>down_write_killable (49,509,308 samples, 0.02%)</title><rect x="691.7" y="1093" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="694.71" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (57,071,057 samples, 0.02%)</title><rect x="589.5" y="1077" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="592.51" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (24,385,186 samples, 0.01%)</title><rect x="259.9" y="357" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="262.93" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,604,624,240 samples, 1.35%)</title><rect x="1056.0" y="1061" width="16.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1059.05" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (217,911,325 samples, 0.08%)</title><rect x="770.6" y="1045" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.61" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (30,190,842 samples, 0.01%)</title><rect x="669.7" y="1061" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="672.74" y="1071.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (188,595,517 samples, 0.07%)</title><rect x="232.8" y="981" width="0.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="235.76" y="991.5" ></text>
</g>
<g >
<title>epoll_ctl (53,708,648 samples, 0.02%)</title><rect x="130.5" y="1461" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="133.51" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,611,151 samples, 0.01%)</title><rect x="63.7" y="357" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.71" y="367.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (192,352,045 samples, 0.07%)</title><rect x="250.1" y="997" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="253.09" y="1007.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (30,437,130 samples, 0.01%)</title><rect x="830.1" y="1173" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="833.11" y="1183.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (52,477,519 samples, 0.02%)</title><rect x="61.2" y="1317" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="64.21" y="1327.5" ></text>
</g>
<g >
<title>read (135,395,368 samples, 0.05%)</title><rect x="547.5" y="1445" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="550.45" y="1455.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (225,972,198 samples, 0.08%)</title><rect x="674.1" y="1029" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="677.12" y="1039.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (31,000,287 samples, 0.01%)</title><rect x="125.5" y="805" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="128.49" y="815.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (30,721,018 samples, 0.01%)</title><rect x="599.9" y="1045" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="602.87" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,170,031 samples, 0.01%)</title><rect x="1054.7" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.67" y="511.5" ></text>
</g>
<g >
<title>[unknown] (23,162,380 samples, 0.01%)</title><rect x="556.9" y="1013" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (191,870,483 samples, 0.07%)</title><rect x="770.7" y="885" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.66" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::vector (38,801,454 samples, 0.01%)</title><rect x="911.2" y="1317" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="914.24" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (786,842,216 samples, 0.29%)</title><rect x="920.0" y="933" width="3.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="923.01" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,301,746 samples, 0.01%)</title><rect x="400.8" y="421" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="403.77" y="431.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (27,429,978 samples, 0.01%)</title><rect x="716.3" y="1509" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="719.30" y="1519.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (25,814,918 samples, 0.01%)</title><rect x="749.0" y="997" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="752.00" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (29,468,453 samples, 0.01%)</title><rect x="63.5" y="517" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="66.52" y="527.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (191,361,186 samples, 0.07%)</title><rect x="237.0" y="1061" width="0.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="240.03" y="1071.5" ></text>
</g>
<g >
<title>do_syscall_64 (360,951,214 samples, 0.14%)</title><rect x="124.7" y="1157" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="127.65" y="1167.5" ></text>
</g>
<g >
<title>net_rx_action (35,220,996 samples, 0.01%)</title><rect x="691.1" y="917" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="694.14" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (30,174,608 samples, 0.01%)</title><rect x="78.6" y="949" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="81.62" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,454,868,507 samples, 4.29%)</title><rect x="718.7" y="1381" width="50.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="721.69" y="1391.5" >std::..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (48,879,539 samples, 0.02%)</title><rect x="483.7" y="1157" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="486.69" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (10,489,355,475 samples, 3.93%)</title><rect x="297.1" y="1189" width="46.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="300.14" y="1199.5" >std:..</text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (165,303,228 samples, 0.06%)</title><rect x="905.4" y="1109" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="908.37" y="1119.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (24,274,007 samples, 0.01%)</title><rect x="830.1" y="1141" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="833.14" y="1151.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (47,595,716 samples, 0.02%)</title><rect x="747.4" y="1045" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="750.44" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (36,618,459 samples, 0.01%)</title><rect x="1080.1" y="997" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1083.13" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (58,376,751 samples, 0.02%)</title><rect x="1103.6" y="1045" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1106.64" y="1055.5" ></text>
</g>
<g >
<title>std::function&lt;void  (29,959,610 samples, 0.01%)</title><rect x="1152.4" y="1269" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1155.41" y="1279.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (23,511,693 samples, 0.01%)</title><rect x="856.8" y="1413" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="859.80" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,967,673 samples, 0.01%)</title><rect x="1054.9" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.87" y="431.5" ></text>
</g>
<g >
<title>handle_softirqs (27,157,656 samples, 0.01%)</title><rect x="550.2" y="933" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="553.21" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,669,584 samples, 0.01%)</title><rect x="488.0" y="341" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.95" y="351.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (330,270,598 samples, 0.12%)</title><rect x="376.7" y="1061" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="379.68" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (26,748,065 samples, 0.01%)</title><rect x="373.4" y="981" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="376.38" y="991.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (222,238,138 samples, 0.08%)</title><rect x="740.4" y="1061" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="743.38" y="1071.5" ></text>
</g>
<g >
<title>__napi_poll (30,314,824 samples, 0.01%)</title><rect x="991.5" y="1541" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="994.55" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,919,698 samples, 0.02%)</title><rect x="347.7" y="581" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.74" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (40,352,106 samples, 0.02%)</title><rect x="347.3" y="565" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.29" y="575.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (26,503,571 samples, 0.01%)</title><rect x="237.9" y="1061" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="240.87" y="1071.5" ></text>
</g>
<g >
<title>__destroy_inode (26,470,356 samples, 0.01%)</title><rect x="268.2" y="997" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="271.24" y="1007.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (132,645,322 samples, 0.05%)</title><rect x="656.8" y="949" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="659.81" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,461,092,822 samples, 3.92%)</title><rect x="13.2" y="1205" width="46.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="16.19" y="1215.5" >std:..</text>
</g>
<g >
<title>sysvec_hyperv_callback (33,967,309 samples, 0.01%)</title><rect x="999.1" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1002.12" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (70,271,845 samples, 0.03%)</title><rect x="718.9" y="1173" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="721.94" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,685,062,734 samples, 1.38%)</title><rect x="930.7" y="1109" width="16.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="933.70" y="1119.5" ></text>
</g>
<g >
<title>tcp_write_xmit (138,494,087 samples, 0.05%)</title><rect x="409.6" y="981" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="412.60" y="991.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (44,157,653 samples, 0.02%)</title><rect x="434.9" y="1253" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="437.87" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (29,589,575 samples, 0.01%)</title><rect x="786.2" y="949" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="789.16" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (57,617,035 samples, 0.02%)</title><rect x="824.0" y="757" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.04" y="767.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (103,517,135 samples, 0.04%)</title><rect x="827.5" y="1269" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="830.46" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (60,522,232 samples, 0.02%)</title><rect x="477.8" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="480.75" y="1087.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (1,613,760,247 samples, 0.60%)</title><rect x="264.9" y="1477" width="7.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="267.87" y="1487.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (250,227,674 samples, 0.09%)</title><rect x="390.7" y="1045" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="393.72" y="1055.5" ></text>
</g>
<g >
<title>do_epoll_wait (999,565,674 samples, 0.37%)</title><rect x="1181.2" y="1525" width="4.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1184.18" y="1535.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (57,433,494 samples, 0.02%)</title><rect x="910.3" y="1173" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="913.29" y="1183.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (199,863,608 samples, 0.07%)</title><rect x="129.1" y="1221" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="132.11" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (10,608,787,048 samples, 3.97%)</title><rect x="579.5" y="1253" width="46.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="582.50" y="1263.5" >std:..</text>
</g>
<g >
<title>mas_store_gfp (31,937,188 samples, 0.01%)</title><rect x="266.6" y="1061" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="269.56" y="1071.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (196,103,630 samples, 0.07%)</title><rect x="617.9" y="1093" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="620.95" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (25,283,887 samples, 0.01%)</title><rect x="297.3" y="1141" width="0.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="300.29" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (46,274,965 samples, 0.02%)</title><rect x="1051.6" y="1301" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1054.58" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (135,115,235 samples, 0.05%)</title><rect x="1141.7" y="1685" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1144.70" y="1695.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (188,121,142 samples, 0.07%)</title><rect x="678.7" y="1093" width="0.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="681.74" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (31,823,709 samples, 0.01%)</title><rect x="22.5" y="1077" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="25.51" y="1087.5" ></text>
</g>
<g >
<title>__dynamic_cast (42,666,935 samples, 0.02%)</title><rect x="492.5" y="933" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="495.54" y="943.5" ></text>
</g>
<g >
<title>x64_sys_call (316,446,571 samples, 0.12%)</title><rect x="268.1" y="1157" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="271.07" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (2,087,408,449 samples, 0.78%)</title><rect x="101.9" y="1093" width="9.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="104.90" y="1103.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (25,715,193 samples, 0.01%)</title><rect x="39.7" y="1029" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="42.74" y="1039.5" ></text>
</g>
<g >
<title>x64_sys_call (292,980,243 samples, 0.11%)</title><rect x="1145.7" y="1397" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1148.69" y="1407.5" ></text>
</g>
<g >
<title>do_fault (25,242,430 samples, 0.01%)</title><rect x="835.0" y="1125" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="837.96" y="1135.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (23,767,831 samples, 0.01%)</title><rect x="108.9" y="933" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="111.86" y="943.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (45,909,875 samples, 0.02%)</title><rect x="575.1" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="578.06" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (64,383,513 samples, 0.02%)</title><rect x="74.6" y="885" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="77.58" y="895.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (55,947,171 samples, 0.02%)</title><rect x="259.3" y="1301" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="262.31" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (30,367,585 samples, 0.01%)</title><rect x="522.3" y="1061" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="525.34" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (25,999,602 samples, 0.01%)</title><rect x="757.7" y="1061" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="760.69" y="1071.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (115,661,189 samples, 0.04%)</title><rect x="895.6" y="1061" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="898.63" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="709" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (27,636,038 samples, 0.01%)</title><rect x="911.9" y="597" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.89" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (26,312,287 samples, 0.01%)</title><rect x="1108.6" y="357" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1111.63" y="367.5" ></text>
</g>
<g >
<title>EventLoop::DelChannel (161,549,496 samples, 0.06%)</title><rect x="548.2" y="1317" width="0.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="551.18" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,644,071 samples, 0.02%)</title><rect x="911.6" y="725" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.61" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,160,503 samples, 0.01%)</title><rect x="966.3" y="453" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.34" y="463.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (36,665,797 samples, 0.01%)</title><rect x="687.8" y="1253" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="690.82" y="1263.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (85,686,083 samples, 0.03%)</title><rect x="486.6" y="1285" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="489.56" y="1295.5" ></text>
</g>
<g >
<title>lock_sock_nested (418,982,936 samples, 0.16%)</title><rect x="1169.1" y="1317" width="1.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1172.09" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (234,413,388 samples, 0.09%)</title><rect x="517.3" y="1045" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="520.30" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (30,340,430 samples, 0.01%)</title><rect x="966.3" y="565" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="969.33" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (245,490,568 samples, 0.09%)</title><rect x="205.4" y="1173" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.36" y="1183.5" ></text>
</g>
<g >
<title>__strxfrm_l (210,460,272 samples, 0.08%)</title><rect x="568.7" y="1653" width="0.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="571.71" y="1663.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (114,622,410 samples, 0.04%)</title><rect x="970.8" y="1429" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="973.77" y="1439.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (37,549,844 samples, 0.01%)</title><rect x="1030.0" y="981" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1033.04" y="991.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (350,162,793 samples, 0.13%)</title><rect x="93.5" y="1061" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="96.48" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (298,211,739 samples, 0.11%)</title><rect x="347.1" y="1301" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="350.07" y="1311.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (212,475,270 samples, 0.08%)</title><rect x="886.0" y="965" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="889.04" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,533,423,782 samples, 2.82%)</title><rect x="348.9" y="1269" width="33.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="351.91" y="1279.5" >st..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (228,225,193 samples, 0.09%)</title><rect x="319.2" y="1029" width="1.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="322.18" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,838,973,462 samples, 4.06%)</title><rect x="1003.6" y="1285" width="47.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1006.65" y="1295.5" >std:..</text>
</g>
<g >
<title>std::priority_queue&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt;, TimerManager::TimerCmp&gt;::pop (38,414,613 samples, 0.01%)</title><rect x="131.1" y="1541" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="134.12" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (52,457,056 samples, 0.02%)</title><rect x="205.9" y="677" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.95" y="687.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (192,197,532 samples, 0.07%)</title><rect x="956.7" y="997" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="959.70" y="1007.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (82,055,735 samples, 0.03%)</title><rect x="356.6" y="885" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="359.59" y="895.5" ></text>
</g>
<g >
<title>handle_softirqs (35,788,259 samples, 0.01%)</title><rect x="1009.9" y="1029" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1012.90" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (36,280,353 samples, 0.01%)</title><rect x="206.0" y="373" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.97" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (23,706,871 samples, 0.01%)</title><rect x="768.8" y="1237" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="771.77" y="1247.5" ></text>
</g>
<g >
<title>__fdget_raw (27,139,850 samples, 0.01%)</title><rect x="1149.4" y="1365" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1152.41" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (73,245,430 samples, 0.03%)</title><rect x="684.0" y="1077" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="686.97" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (45,995,630 samples, 0.02%)</title><rect x="825.2" y="1381" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="828.15" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (95,155,406 samples, 0.04%)</title><rect x="153.7" y="1141" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="156.66" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::vector (42,389,317 samples, 0.02%)</title><rect x="487.5" y="1317" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="490.52" y="1327.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (35,513,560 samples, 0.01%)</title><rect x="101.7" y="1077" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="104.73" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (24,836,146 samples, 0.01%)</title><rect x="543.3" y="437" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="546.26" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,781,781,821 samples, 2.91%)</title><rect x="64.8" y="1269" width="34.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="67.82" y="1279.5" >st..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,728,074,949 samples, 1.40%)</title><rect x="64.9" y="1125" width="16.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="67.91" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (24,206,978 samples, 0.01%)</title><rect x="556.9" y="1253" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (59,742,672 samples, 0.02%)</title><rect x="1157.8" y="1205" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1160.84" y="1215.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (48,646,442 samples, 0.02%)</title><rect x="1117.2" y="1061" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1120.15" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (31,260,986 samples, 0.01%)</title><rect x="253.2" y="1077" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="256.17" y="1087.5" ></text>
</g>
<g >
<title>_int_free (217,152,446 samples, 0.08%)</title><rect x="1136.2" y="1685" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1139.18" y="1695.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (25,148,406 samples, 0.01%)</title><rect x="483.3" y="1141" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="486.29" y="1151.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (22,701,027 samples, 0.01%)</title><rect x="1027.9" y="997" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1030.86" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (234,645,761 samples, 0.09%)</title><rect x="205.4" y="1125" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.38" y="1135.5" ></text>
</g>
<g >
<title>EventLoop::DelChannel (174,251,981 samples, 0.07%)</title><rect x="405.8" y="1317" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="408.81" y="1327.5" ></text>
</g>
<g >
<title>tcp_sendmsg (355,774,267 samples, 0.13%)</title><rect x="694.2" y="1269" width="1.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="697.22" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (53,147,397 samples, 0.02%)</title><rect x="899.1" y="1029" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="902.07" y="1039.5" ></text>
</g>
<g >
<title>tcp_sendmsg (397,111,584 samples, 0.15%)</title><rect x="270.1" y="1269" width="1.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="273.05" y="1279.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (106,878,923 samples, 0.04%)</title><rect x="486.5" y="1365" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="489.49" y="1375.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (54,340,127 samples, 0.02%)</title><rect x="116.2" y="1125" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="119.24" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (100,876,110 samples, 0.04%)</title><rect x="543.1" y="1333" width="0.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="546.12" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (39,160,443 samples, 0.01%)</title><rect x="966.3" y="693" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="969.31" y="703.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (324,027,377 samples, 0.12%)</title><rect x="235.6" y="1061" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="238.58" y="1071.5" ></text>
</g>
<g >
<title>netvsc_poll (34,356,042 samples, 0.01%)</title><rect x="1009.9" y="981" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1012.90" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (33,071,374 samples, 0.01%)</title><rect x="97.2" y="1061" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="100.16" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (29,799,583 samples, 0.01%)</title><rect x="530.3" y="1013" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="533.30" y="1023.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (24,630,316 samples, 0.01%)</title><rect x="1155.7" y="1109" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1158.69" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (34,219,727 samples, 0.01%)</title><rect x="118.4" y="597" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="121.37" y="607.5" ></text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (137,323,334 samples, 0.05%)</title><rect x="118.1" y="1365" width="0.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="121.15" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (51,818,385 samples, 0.02%)</title><rect x="347.7" y="517" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.74" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (74,663,735 samples, 0.03%)</title><rect x="577.6" y="1141" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="580.63" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,739,177 samples, 0.01%)</title><rect x="347.8" y="245" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.77" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,518,440,079 samples, 1.32%)</title><rect x="930.9" y="1093" width="15.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="933.91" y="1103.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (66,827,068 samples, 0.03%)</title><rect x="655.1" y="1013" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="658.09" y="1023.5" ></text>
</g>
<g >
<title>EventLoop::Loop (27,056,329,589 samples, 10.13%)</title><rect x="718.1" y="1573" width="119.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="721.08" y="1583.5" >EventLoop::Loop</text>
</g>
<g >
<title>kmem_cache_alloc (100,467,990 samples, 0.04%)</title><rect x="1173.2" y="1269" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1176.19" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (254,017,647 samples, 0.10%)</title><rect x="347.1" y="1157" width="1.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.14" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,752,156,616 samples, 1.41%)</title><rect x="789.0" y="1221" width="16.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="791.98" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (48,019,246 samples, 0.02%)</title><rect x="475.3" y="1029" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="478.34" y="1039.5" ></text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (425,070,178 samples, 0.16%)</title><rect x="346.6" y="1365" width="1.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="349.61" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_any_matcher_ecma&lt;false, false&gt; (32,257,677 samples, 0.01%)</title><rect x="719.5" y="1141" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="722.46" y="1151.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (83,020,389 samples, 0.03%)</title><rect x="596.1" y="1077" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="599.14" y="1087.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (78,801,569 samples, 0.03%)</title><rect x="359.3" y="901" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="362.31" y="911.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (77,072,958 samples, 0.03%)</title><rect x="374.1" y="933" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="377.14" y="943.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (43,845,485 samples, 0.02%)</title><rect x="925.4" y="917" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="928.39" y="927.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (30,517,198 samples, 0.01%)</title><rect x="393.3" y="1013" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="396.34" y="1023.5" ></text>
</g>
<g >
<title>__strlen_avx2 (194,498,013 samples, 0.07%)</title><rect x="277.6" y="1669" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="280.55" y="1679.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (24,076,364,931 samples, 9.02%)</title><rect x="718.6" y="1413" width="106.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="721.59" y="1423.5" >HttpRequest::..</text>
</g>
<g >
<title>dev_hard_start_xmit (38,589,654 samples, 0.01%)</title><rect x="977.9" y="1029" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="980.85" y="1039.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (97,428,721 samples, 0.04%)</title><rect x="261.7" y="1317" width="0.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="264.69" y="1327.5" ></text>
</g>
<g >
<title>ip_local_out (144,308,206 samples, 0.05%)</title><rect x="129.2" y="1141" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="132.19" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (83,966,899 samples, 0.03%)</title><rect x="966.3" y="1157" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="969.26" y="1167.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (30,719,247 samples, 0.01%)</title><rect x="548.8" y="1285" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="551.76" y="1295.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (43,405,872 samples, 0.02%)</title><rect x="495.7" y="933" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="498.66" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (45,880,515 samples, 0.02%)</title><rect x="206.0" y="613" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.96" y="623.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (27,369,714,639 samples, 10.25%)</title><rect x="858.8" y="1669" width="120.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="861.80" y="1679.5" >std::thread::_S..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (709,664,520 samples, 0.27%)</title><rect x="592.4" y="1061" width="3.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="595.37" y="1071.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (42,552,399 samples, 0.02%)</title><rect x="1162.5" y="1429" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1165.50" y="1439.5" ></text>
</g>
<g >
<title>handle_softirqs (30,911,045 samples, 0.01%)</title><rect x="867.7" y="1029" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="870.73" y="1039.5" ></text>
</g>
<g >
<title>__dynamic_cast (49,129,554 samples, 0.02%)</title><rect x="933.5" y="1045" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="936.50" y="1055.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (74,508,040 samples, 0.03%)</title><rect x="294.3" y="1333" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="297.31" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (27,280,042 samples, 0.01%)</title><rect x="400.8" y="389" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="403.77" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (30,361,074 samples, 0.01%)</title><rect x="465.2" y="1029" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="468.17" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (84,626,700 samples, 0.03%)</title><rect x="118.3" y="1173" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="121.29" y="1183.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (25,052,306 samples, 0.01%)</title><rect x="305.9" y="1077" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="308.90" y="1087.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (32,587,860 samples, 0.01%)</title><rect x="823.6" y="1205" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="826.56" y="1215.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (42,154,772 samples, 0.02%)</title><rect x="153.0" y="1253" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="156.02" y="1263.5" ></text>
</g>
<g >
<title>__dynamic_cast (33,447,190 samples, 0.01%)</title><rect x="775.3" y="933" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="778.27" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (51,409,221 samples, 0.02%)</title><rect x="1108.6" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.60" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (28,950,503 samples, 0.01%)</title><rect x="662.3" y="1061" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="665.32" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (195,627,656 samples, 0.07%)</title><rect x="1031.8" y="1029" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1034.76" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (82,838,170 samples, 0.03%)</title><rect x="372.4" y="1029" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="375.37" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,776,422,308 samples, 1.41%)</title><rect x="1055.9" y="1205" width="16.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1058.88" y="1215.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (25,218,009,104 samples, 9.44%)</title><rect x="294.2" y="1461" width="111.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="297.24" y="1471.5" >HttpConn::Htt..</text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (57,277,135 samples, 0.02%)</title><rect x="381.3" y="1093" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="384.33" y="1103.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (138,072,509 samples, 0.05%)</title><rect x="118.1" y="1381" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="121.14" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,098,470 samples, 0.01%)</title><rect x="966.3" y="405" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.34" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (55,331,081 samples, 0.02%)</title><rect x="486.7" y="1173" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="489.66" y="1183.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (370,396,063 samples, 0.14%)</title><rect x="179.8" y="981" width="1.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="182.83" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,510,399,407 samples, 1.31%)</title><rect x="207.5" y="997" width="15.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="210.46" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,858,889,164 samples, 1.45%)</title><rect x="1090.0" y="1189" width="17.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1092.97" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (84,619,324 samples, 0.03%)</title><rect x="611.8" y="1077" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="614.82" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (85,594,430 samples, 0.03%)</title><rect x="470.1" y="1077" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="473.08" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (37,916,239 samples, 0.01%)</title><rect x="911.6" y="549" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.62" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,746,082,324 samples, 1.40%)</title><rect x="207.1" y="1189" width="16.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="210.12" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,044,943 samples, 0.01%)</title><rect x="1054.9" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.86" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (25,565,168 samples, 0.01%)</title><rect x="926.1" y="933" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="929.05" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (44,514,839 samples, 0.02%)</title><rect x="205.5" y="645" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.51" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (44,414,358 samples, 0.02%)</title><rect x="521.9" y="1061" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="524.85" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,802,417 samples, 0.01%)</title><rect x="63.5" y="677" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.49" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (72,614,151 samples, 0.03%)</title><rect x="684.0" y="1061" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="686.97" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (46,325,730 samples, 0.02%)</title><rect x="205.5" y="677" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="208.51" y="687.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (155,014,048 samples, 0.06%)</title><rect x="280.6" y="1669" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="283.58" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (79,048,652 samples, 0.03%)</title><rect x="153.7" y="1109" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="156.72" y="1119.5" ></text>
</g>
<g >
<title>tcp_close (179,677,837 samples, 0.07%)</title><rect x="409.5" y="1045" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="412.49" y="1055.5" ></text>
</g>
<g >
<title>std::function&lt;void  (109,757,254 samples, 0.04%)</title><rect x="836.6" y="1541" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="839.63" y="1551.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (27,059,464,734 samples, 10.13%)</title><rect x="718.1" y="1621" width="119.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="721.08" y="1631.5" >std::__invoke&lt;..</text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (79,836,053 samples, 0.03%)</title><rect x="585.2" y="1093" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="588.21" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::emplace_back&lt;char&gt; (35,502,061 samples, 0.01%)</title><rect x="156.0" y="1125" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="159.00" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (23,463,561 samples, 0.01%)</title><rect x="396.0" y="1029" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="399.03" y="1039.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (27,059,464,734 samples, 10.13%)</title><rect x="718.1" y="1605" width="119.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="721.08" y="1615.5" >std::__invoke_..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (94,222,484 samples, 0.04%)</title><rect x="52.8" y="1093" width="0.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="55.84" y="1103.5" ></text>
</g>
<g >
<title>rep_movs_alternative (86,792,144 samples, 0.03%)</title><rect x="976.9" y="1221" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="979.90" y="1231.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (48,173,309 samples, 0.02%)</title><rect x="801.2" y="1029" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="804.18" y="1039.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (499,267,064 samples, 0.19%)</title><rect x="615.5" y="1093" width="2.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="618.45" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,597,518 samples, 0.01%)</title><rect x="911.7" y="229" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.65" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (363,875,734 samples, 0.14%)</title><rect x="577.5" y="1269" width="1.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="580.52" y="1279.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (29,241,950 samples, 0.01%)</title><rect x="993.6" y="1637" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="996.57" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::_M_default_initialize (26,423,811 samples, 0.01%)</title><rect x="346.9" y="1301" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="349.92" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (241,417,630 samples, 0.09%)</title><rect x="86.7" y="1029" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="89.66" y="1039.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (32,737,035 samples, 0.01%)</title><rect x="1175.1" y="1253" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1178.08" y="1263.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (557,823,585 samples, 0.21%)</title><rect x="36.9" y="1013" width="2.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="39.89" y="1023.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (26,626,221 samples, 0.01%)</title><rect x="1009.9" y="933" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1012.91" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (36,066,200 samples, 0.01%)</title><rect x="436.8" y="1237" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="439.85" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,821,971,645 samples, 1.43%)</title><rect x="913.1" y="1189" width="16.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="916.13" y="1199.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (24,268,347 samples, 0.01%)</title><rect x="486.0" y="1253" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="489.01" y="1263.5" ></text>
</g>
<g >
<title>selinux_socket_accept (52,390,104 samples, 0.02%)</title><rect x="1172.2" y="1333" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1175.22" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (34,187,099 samples, 0.01%)</title><rect x="130.6" y="1397" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="133.56" y="1407.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (94,483,335 samples, 0.04%)</title><rect x="831.3" y="1045" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="834.30" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,685,555,687 samples, 4.00%)</title><rect x="1003.9" y="1221" width="47.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1006.85" y="1231.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,829,043,476 samples, 1.43%)</title><rect x="82.0" y="1173" width="16.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="84.99" y="1183.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (107,568,388 samples, 0.04%)</title><rect x="204.1" y="1301" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="207.11" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (361,020,496 samples, 0.14%)</title><rect x="549.4" y="1157" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="552.35" y="1167.5" ></text>
</g>
<g >
<title>__dentry_kill (216,968,625 samples, 0.08%)</title><rect x="1165.4" y="1317" width="1.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1168.44" y="1327.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (52,943,867 samples, 0.02%)</title><rect x="400.2" y="1365" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="403.16" y="1375.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (280,173,231 samples, 0.10%)</title><rect x="459.5" y="1045" width="1.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="462.51" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (32,986,743 samples, 0.01%)</title><rect x="360.6" y="917" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="363.59" y="927.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*&gt; (33,823,573 samples, 0.01%)</title><rect x="184.6" y="1045" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="187.60" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,737,506 samples, 0.02%)</title><rect x="912.1" y="421" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.08" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (84,194,202 samples, 0.03%)</title><rect x="812.9" y="1061" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="815.94" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (40,913,701 samples, 0.02%)</title><rect x="1054.4" y="565" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.42" y="575.5" ></text>
</g>
<g >
<title>operator new (88,304,358 samples, 0.03%)</title><rect x="698.6" y="1653" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="701.59" y="1663.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (59,069,095 samples, 0.02%)</title><rect x="520.9" y="1061" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="523.88" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (23,162,380 samples, 0.01%)</title><rect x="556.9" y="981" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (204,371,728 samples, 0.08%)</title><rect x="1077.7" y="997" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1080.67" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (47,324,473 samples, 0.02%)</title><rect x="1072.3" y="1093" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1075.32" y="1103.5" ></text>
</g>
<g >
<title>unmap_vmas (28,917,773 samples, 0.01%)</title><rect x="550.5" y="1045" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="553.49" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (22,741,018 samples, 0.01%)</title><rect x="387.7" y="1013" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="390.69" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (30,727,899 samples, 0.01%)</title><rect x="347.6" y="469" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.56" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (255,731,645 samples, 0.10%)</title><rect x="347.1" y="1205" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="350.13" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,160,182 samples, 0.02%)</title><rect x="629.5" y="693" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.50" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (88,876,463 samples, 0.03%)</title><rect x="118.3" y="1237" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="121.27" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (33,496,700 samples, 0.01%)</title><rect x="647.4" y="1125" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="650.41" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (28,145,542 samples, 0.01%)</title><rect x="521.9" y="1045" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="524.92" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,776,344,266 samples, 1.41%)</title><rect x="1072.9" y="1173" width="16.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1075.87" y="1183.5" ></text>
</g>
<g >
<title>napi_complete_done (28,860,104 samples, 0.01%)</title><rect x="691.1" y="869" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="694.15" y="879.5" ></text>
</g>
<g >
<title>tcp_sendmsg (372,069,285 samples, 0.14%)</title><rect x="128.5" y="1269" width="1.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="131.46" y="1279.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (56,822,274 samples, 0.02%)</title><rect x="759.1" y="1093" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="762.07" y="1103.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::AddChannel (117,015,980 samples, 0.04%)</title><rect x="978.6" y="1493" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="981.64" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_read (94,756,455 samples, 0.04%)</title><rect x="970.8" y="1381" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="973.84" y="1391.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (27,972,711 samples, 0.01%)</title><rect x="1033.5" y="1061" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1036.54" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (12,037,625,249 samples, 4.51%)</title><rect x="489.5" y="1381" width="53.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="492.45" y="1391.5" >std::..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (175,325,069 samples, 0.07%)</title><rect x="40.7" y="1029" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="43.67" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (27,283,275 samples, 0.01%)</title><rect x="206.0" y="261" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.98" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (40,962,675 samples, 0.02%)</title><rect x="115.0" y="1093" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="117.98" y="1103.5" ></text>
</g>
<g >
<title>EventLoop::AddChannel (1,396,480,375 samples, 0.52%)</title><rect x="1152.5" y="1301" width="6.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1155.55" y="1311.5" ></text>
</g>
<g >
<title>handle_softirqs (38,816,919 samples, 0.01%)</title><rect x="125.5" y="933" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="128.49" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (26,798,366 samples, 0.01%)</title><rect x="347.6" y="405" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.56" y="415.5" ></text>
</g>
<g >
<title>__ip_local_out (43,064,722 samples, 0.02%)</title><rect x="268.7" y="901" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="271.71" y="911.5" ></text>
</g>
<g >
<title>vfs_statx (42,836,841 samples, 0.02%)</title><rect x="545.1" y="1285" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="548.11" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (48,168,772 samples, 0.02%)</title><rect x="1043.7" y="1093" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1046.73" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (347,179,061 samples, 0.13%)</title><rect x="545.6" y="1333" width="1.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="548.57" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (30,366,649 samples, 0.01%)</title><rect x="377.9" y="997" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="380.92" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (339,369,699 samples, 0.13%)</title><rect x="686.6" y="1333" width="1.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="689.64" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,604,599,614 samples, 1.35%)</title><rect x="789.2" y="1109" width="15.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="792.19" y="1119.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;EventLoop,  (99,749,296 samples, 0.04%)</title><rect x="1144.3" y="1413" width="0.4" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="1147.27" y="1423.5" ></text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (150,589,780 samples, 0.06%)</title><rect x="966.1" y="1365" width="0.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="969.08" y="1375.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (42,110,131 samples, 0.02%)</title><rect x="377.9" y="1013" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="380.87" y="1023.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (69,749,751 samples, 0.03%)</title><rect x="802.6" y="1061" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="805.58" y="1071.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (206,307,729 samples, 0.08%)</title><rect x="1034.5" y="1029" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1037.49" y="1039.5" ></text>
</g>
<g >
<title>vfs_write (415,913,505 samples, 0.16%)</title><rect x="1154.4" y="1157" width="1.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1157.39" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (85,216,095 samples, 0.03%)</title><rect x="31.8" y="1077" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="34.83" y="1087.5" ></text>
</g>
<g >
<title>malloc (23,323,964 samples, 0.01%)</title><rect x="1081.1" y="981" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1084.14" y="991.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (224,540,693 samples, 0.08%)</title><rect x="394.2" y="1077" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="397.22" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (30,712,837 samples, 0.01%)</title><rect x="63.7" y="373" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.71" y="383.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (42,755,223 samples, 0.02%)</title><rect x="360.9" y="917" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="363.85" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (26,262,470 samples, 0.01%)</title><rect x="607.4" y="1013" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="610.35" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,496,028 samples, 0.01%)</title><rect x="824.1" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.09" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (40,098,378 samples, 0.02%)</title><rect x="910.4" y="1109" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="913.35" y="1119.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (96,146,640 samples, 0.04%)</title><rect x="628.2" y="1301" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="631.19" y="1311.5" ></text>
</g>
<g >
<title>__strxfrm_l (112,221,084 samples, 0.04%)</title><rect x="702.2" y="1669" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="705.24" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (24,476,674 samples, 0.01%)</title><rect x="938.8" y="981" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="941.81" y="991.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (23,960,910 samples, 0.01%)</title><rect x="467.0" y="1061" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="470.04" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (59,282,283 samples, 0.02%)</title><rect x="1108.6" y="885" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.58" y="895.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (38,053,016 samples, 0.01%)</title><rect x="960.8" y="1045" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="963.79" y="1055.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (64,988,326 samples, 0.02%)</title><rect x="293.4" y="1653" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="296.40" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (37,605,136 samples, 0.01%)</title><rect x="259.9" y="661" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="262.90" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,901,875,893 samples, 1.46%)</title><rect x="1090.0" y="1221" width="17.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1092.95" y="1231.5" ></text>
</g>
<g >
<title>do_syscall_64 (412,385,502 samples, 0.15%)</title><rect x="830.5" y="1157" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="833.46" y="1167.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (380,464,427 samples, 0.14%)</title><rect x="976.8" y="1253" width="1.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="979.76" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (38,507,589 samples, 0.01%)</title><rect x="156.0" y="1141" width="0.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="158.99" y="1151.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (45,772,467 samples, 0.02%)</title><rect x="1183.5" y="1445" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1186.52" y="1455.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (114,748,489 samples, 0.04%)</title><rect x="409.6" y="965" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="412.61" y="975.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (36,254,664 samples, 0.01%)</title><rect x="340.2" y="1109" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="343.19" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (36,804,522 samples, 0.01%)</title><rect x="117.9" y="1237" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="120.87" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_add_char (42,632,802 samples, 0.02%)</title><rect x="579.8" y="1157" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="582.79" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (194,411,906 samples, 0.07%)</title><rect x="777.0" y="901" width="0.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="779.96" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (29,637,989 samples, 0.01%)</title><rect x="367.4" y="1061" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="370.43" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (44,972,572 samples, 0.02%)</title><rect x="506.4" y="1125" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="509.40" y="1135.5" ></text>
</g>
<g >
<title>std::function&lt;void  (25,396,003,178 samples, 9.51%)</title><rect x="576.9" y="1525" width="112.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="579.86" y="1535.5" >std::function..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (83,984,925 samples, 0.03%)</title><rect x="435.9" y="1189" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="438.94" y="1199.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (1,995,645,909 samples, 0.75%)</title><rect x="808.4" y="1093" width="8.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="811.38" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (32,350,929 samples, 0.01%)</title><rect x="474.8" y="1045" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="477.75" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (46,705,870 samples, 0.02%)</title><rect x="718.2" y="1301" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="721.24" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (83,656,097 samples, 0.03%)</title><rect x="473.7" y="1077" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="476.72" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (37,362,004 samples, 0.01%)</title><rect x="1088.2" y="1061" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1091.25" y="1071.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (851,575,515 samples, 0.32%)</title><rect x="406.7" y="1301" width="3.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="409.69" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,815,982 samples, 0.01%)</title><rect x="629.5" y="309" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.54" y="319.5" ></text>
</g>
<g >
<title>iput (40,391,843 samples, 0.02%)</title><rect x="126.7" y="1045" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="129.67" y="1055.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (865,781,763 samples, 0.32%)</title><rect x="972.3" y="1269" width="3.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="975.29" y="1279.5" ></text>
</g>
<g >
<title>ksys_read (74,795,110 samples, 0.03%)</title><rect x="405.3" y="1365" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="408.25" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (240,139,642 samples, 0.09%)</title><rect x="629.4" y="1141" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.36" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (26,252,275 samples, 0.01%)</title><rect x="96.5" y="1061" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="99.53" y="1071.5" ></text>
</g>
<g >
<title>TimerManager::Tick (40,374,297 samples, 0.02%)</title><rect x="696.7" y="1557" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="699.74" y="1567.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (109,312,520 samples, 0.04%)</title><rect x="969.8" y="1269" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="972.77" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="789" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="799.5" ></text>
</g>
<g >
<title>ip_output (82,328,087 samples, 0.03%)</title><rect x="695.1" y="1125" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="698.14" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,839,622 samples, 0.01%)</title><rect x="488.2" y="533" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.22" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (82,991,642 samples, 0.03%)</title><rect x="11.5" y="1205" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="14.50" y="1215.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (70,062,879 samples, 0.03%)</title><rect x="357.5" y="821" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="360.45" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (26,071,021 samples, 0.01%)</title><rect x="898.0" y="1061" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="900.99" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (313,107,583 samples, 0.12%)</title><rect x="606.5" y="1045" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="609.51" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (25,246,741 samples, 0.01%)</title><rect x="626.5" y="1205" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="629.48" y="1215.5" ></text>
</g>
<g >
<title>[web-server] (30,828,161 samples, 0.01%)</title><rect x="509.5" y="1045" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="512.48" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (111,469,552 samples, 0.04%)</title><rect x="120.3" y="1333" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="123.26" y="1343.5" ></text>
</g>
<g >
<title>handle_softirqs (25,126,041 samples, 0.01%)</title><rect x="996.4" y="1605" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="999.43" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,940,481 samples, 0.02%)</title><rect x="543.2" y="741" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.23" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (4,003,477,320 samples, 1.50%)</title><rect x="99.3" y="1221" width="17.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="102.34" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (43,468,280 samples, 0.02%)</title><rect x="223.7" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="226.71" y="1087.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (27,461,525,407 samples, 10.28%)</title><rect x="434.6" y="1621" width="121.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="437.62" y="1631.5" >std::__invoke&lt;v..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,039,297 samples, 0.01%)</title><rect x="911.7" y="261" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.65" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (63,998,123 samples, 0.02%)</title><rect x="517.9" y="997" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="520.93" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (27,208,287,959 samples, 10.19%)</title><rect x="576.8" y="1621" width="120.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="579.81" y="1631.5" >std::__invoke&lt;..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,122,733,743 samples, 10.16%)</title><rect x="294.2" y="1653" width="119.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="297.17" y="1663.5" >std::thread::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (101,526,103 samples, 0.04%)</title><rect x="63.5" y="757" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.48" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (481,420,123 samples, 0.18%)</title><rect x="834.4" y="1429" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="837.41" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (58,655,435 samples, 0.02%)</title><rect x="484.4" y="1189" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="487.38" y="1199.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (236,839,682 samples, 0.09%)</title><rect x="377.0" y="1045" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="380.02" y="1055.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (107,365,842 samples, 0.04%)</title><rect x="345.8" y="1365" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="348.84" y="1375.5" ></text>
</g>
<g >
<title>do_writev (452,911,360 samples, 0.17%)</title><rect x="269.9" y="1365" width="2.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="272.93" y="1375.5" ></text>
</g>
<g >
<title>sock_recvmsg (63,826,331 samples, 0.02%)</title><rect x="264.5" y="1317" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="267.50" y="1327.5" ></text>
</g>
<g >
<title>read (136,838,316 samples, 0.05%)</title><rect x="264.2" y="1445" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="267.25" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (48,470,298 samples, 0.02%)</title><rect x="629.5" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.49" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,939,551 samples, 0.02%)</title><rect x="347.3" y="693" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.27" y="703.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (205,204,268 samples, 0.08%)</title><rect x="1081.4" y="997" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1084.44" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,648,856,109 samples, 1.37%)</title><rect x="99.7" y="1125" width="16.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="102.72" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (30,655,254 samples, 0.01%)</title><rect x="647.4" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="650.42" y="1087.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (43,153,994 samples, 0.02%)</title><rect x="486.0" y="1333" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="488.96" y="1343.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (211,449,363 samples, 0.08%)</title><rect x="1098.5" y="1029" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1101.52" y="1039.5" ></text>
</g>
<g >
<title>sock_recvmsg (59,827,927 samples, 0.02%)</title><rect x="828.7" y="1317" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="831.69" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,968,462 samples, 0.01%)</title><rect x="347.8" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.76" y="335.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (38,816,919 samples, 0.01%)</title><rect x="125.5" y="949" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="128.49" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (153,341,939 samples, 0.06%)</title><rect x="151.4" y="1685" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="154.39" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (27,768,445 samples, 0.01%)</title><rect x="389.0" y="1077" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="391.96" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (24,531,083 samples, 0.01%)</title><rect x="76.3" y="933" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="79.33" y="943.5" ></text>
</g>
<g >
<title>ip_local_out (104,302,580 samples, 0.04%)</title><rect x="268.7" y="917" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="271.71" y="927.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (35,753,377 samples, 0.01%)</title><rect x="887.4" y="981" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="890.37" y="991.5" ></text>
</g>
<g >
<title>[unknown] (28,942,893 samples, 0.01%)</title><rect x="1143.0" y="1541" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.99" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (115,518,061 samples, 0.04%)</title><rect x="968.2" y="1381" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="971.16" y="1391.5" ></text>
</g>
<g >
<title>loopthread7 (32,170,591,525 samples, 12.05%)</title><rect x="1000.8" y="1701" width="142.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1003.82" y="1711.5" >loopthread7</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (29,280,488 samples, 0.01%)</title><rect x="90.1" y="981" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="93.11" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,275,569 samples, 0.01%)</title><rect x="629.5" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.51" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (43,702,948 samples, 0.02%)</title><rect x="1044.1" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1047.10" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (26,028,500 samples, 0.01%)</title><rect x="1054.9" y="341" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1057.88" y="351.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (24,296,919 samples, 0.01%)</title><rect x="110.8" y="1013" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="113.80" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (29,651,938 samples, 0.01%)</title><rect x="684.0" y="437" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="687.05" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (40,939,403 samples, 0.02%)</title><rect x="745.9" y="933" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="748.86" y="943.5" ></text>
</g>
<g >
<title>tcp_close (185,828,571 samples, 0.07%)</title><rect x="268.5" y="1045" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="271.52" y="1055.5" ></text>
</g>
<g >
<title>__napi_poll (30,162,280 samples, 0.01%)</title><rect x="432.9" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="435.89" y="1583.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (64,020,763 samples, 0.02%)</title><rect x="325.0" y="1013" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="327.98" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (436,861,165 samples, 0.16%)</title><rect x="1033.9" y="1061" width="1.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1036.86" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (28,318,038 samples, 0.01%)</title><rect x="79.7" y="949" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="82.72" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (202,481,934 samples, 0.08%)</title><rect x="104.4" y="1029" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="107.45" y="1039.5" ></text>
</g>
<g >
<title>ip_list_rcv (28,065,509 samples, 0.01%)</title><rect x="831.4" y="821" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="834.43" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (22,744,788 samples, 0.01%)</title><rect x="347.3" y="165" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.32" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (103,536,452 samples, 0.04%)</title><rect x="347.5" y="693" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.54" y="703.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (52,863,566 samples, 0.02%)</title><rect x="1108.0" y="1301" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1111.01" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (54,858,238 samples, 0.02%)</title><rect x="912.1" y="597" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="915.05" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (41,895,515 samples, 0.02%)</title><rect x="950.1" y="1093" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="953.10" y="1103.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (79,889,327 samples, 0.03%)</title><rect x="971.6" y="1285" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="974.57" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (32,170,031 samples, 0.01%)</title><rect x="1054.7" y="485" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.67" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,477,455 samples, 0.01%)</title><rect x="347.8" y="181" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.77" y="191.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (23,361,651 samples, 0.01%)</title><rect x="542.4" y="1301" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="545.39" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,864,782,604 samples, 1.45%)</title><rect x="81.9" y="1205" width="17.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="84.94" y="1215.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (32,891,379 samples, 0.01%)</title><rect x="62.1" y="1109" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="65.08" y="1119.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (24,693,999 samples, 0.01%)</title><rect x="752.5" y="1093" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="755.52" y="1103.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (46,350,883 samples, 0.02%)</title><rect x="967.1" y="1397" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="970.07" y="1407.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (84,567,933 samples, 0.03%)</title><rect x="1039.5" y="1029" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1042.54" y="1039.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (35,019,521 samples, 0.01%)</title><rect x="269.6" y="1429" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="272.61" y="1439.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (24,909,707 samples, 0.01%)</title><rect x="741.4" y="1061" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="744.37" y="1071.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (29,936,418 samples, 0.01%)</title><rect x="1119.8" y="1093" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1122.81" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (86,440,358 samples, 0.03%)</title><rect x="1053.1" y="1269" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1056.10" y="1279.5" ></text>
</g>
<g >
<title>__sock_release (201,091,313 samples, 0.08%)</title><rect x="832.9" y="1077" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="835.95" y="1087.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (556,261,921 samples, 0.21%)</title><rect x="461.5" y="997" width="2.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="464.54" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (25,648,403,909 samples, 9.60%)</title><rect x="434.7" y="1493" width="113.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="437.72" y="1503.5" >std::__invoke_..</text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (34,632,440 samples, 0.01%)</title><rect x="346.1" y="1109" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="349.10" y="1119.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (26,830,471 samples, 0.01%)</title><rect x="503.1" y="949" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="506.14" y="959.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (46,507,797 samples, 0.02%)</title><rect x="151.0" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="154.01" y="1679.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (34,345,891 samples, 0.01%)</title><rect x="1121.7" y="1509" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1124.73" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,289,501 samples, 0.01%)</title><rect x="206.0" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.97" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,653,074,117 samples, 1.37%)</title><rect x="524.7" y="1125" width="16.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="527.68" y="1135.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (60,481,716 samples, 0.02%)</title><rect x="664.2" y="1093" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="667.18" y="1103.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,208,287,959 samples, 10.19%)</title><rect x="576.8" y="1637" width="120.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="579.81" y="1647.5" >std::thread::_..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_any_matcher_ecma&lt;false, false&gt; (26,595,686 samples, 0.01%)</title><rect x="295.7" y="1141" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="298.66" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,414,101,209 samples, 3.90%)</title><rect x="155.8" y="1205" width="46.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="158.81" y="1215.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (72,545,755 samples, 0.03%)</title><rect x="860.2" y="1173" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="863.17" y="1183.5" ></text>
</g>
<g >
<title>tcp_write_xmit (198,700,388 samples, 0.07%)</title><rect x="553.7" y="1205" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="556.67" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::~_BracketMatcher (24,094,649 samples, 0.01%)</title><rect x="910.4" y="1061" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="913.39" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (38,443,241 samples, 0.01%)</title><rect x="1047.0" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1050.04" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (42,060,182 samples, 0.02%)</title><rect x="259.9" y="757" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="262.89" y="767.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (92,054,431 samples, 0.03%)</title><rect x="1179.2" y="1445" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1182.24" y="1455.5" ></text>
</g>
<g >
<title>__fput (254,728,402 samples, 0.10%)</title><rect x="551.2" y="1109" width="1.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="554.20" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (196,700,011 samples, 0.07%)</title><rect x="935.5" y="997" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="938.53" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (70,972,554 samples, 0.03%)</title><rect x="392.3" y="1029" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="395.29" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (41,445,621 samples, 0.02%)</title><rect x="352.1" y="933" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="355.11" y="943.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (60,076,169 samples, 0.02%)</title><rect x="327.6" y="1013" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="330.56" y="1023.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (29,091,772 samples, 0.01%)</title><rect x="403.4" y="1237" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="406.42" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (50,824,900 samples, 0.02%)</title><rect x="630.0" y="565" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.95" y="575.5" ></text>
</g>
<g >
<title>net_rx_action (27,157,656 samples, 0.01%)</title><rect x="550.2" y="917" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="553.21" y="927.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (25,304,519 samples, 0.01%)</title><rect x="408.1" y="805" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="411.05" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (49,051,967 samples, 0.02%)</title><rect x="577.0" y="1285" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="580.03" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (116,313,791 samples, 0.04%)</title><rect x="205.7" y="837" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.73" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (45,633,409 samples, 0.02%)</title><rect x="625.4" y="1157" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="628.43" y="1167.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_maskbit (40,483,799 samples, 0.02%)</title><rect x="906.5" y="1109" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="909.55" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (51,283,961 samples, 0.02%)</title><rect x="543.2" y="837" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="546.22" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (342,737,903 samples, 0.13%)</title><rect x="262.4" y="1333" width="1.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="265.39" y="1343.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (51,748,261 samples, 0.02%)</title><rect x="769.5" y="1173" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="772.50" y="1183.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (43,514,985 samples, 0.02%)</title><rect x="168.1" y="1061" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="171.09" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,513,111 samples, 0.01%)</title><rect x="911.6" y="469" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.63" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (57,482,853 samples, 0.02%)</title><rect x="10.4" y="1365" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.44" y="1375.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (165,638,993 samples, 0.06%)</title><rect x="264.9" y="1365" width="0.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="267.95" y="1375.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (25,092,671 samples, 0.01%)</title><rect x="1031.0" y="1045" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1033.97" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (26,114,867 samples, 0.01%)</title><rect x="394.5" y="1061" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="397.49" y="1071.5" ></text>
</g>
<g >
<title>__dynamic_cast (43,290,973 samples, 0.02%)</title><rect x="67.8" y="933" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="70.80" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (44,899,607 samples, 0.02%)</title><rect x="380.0" y="1061" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="383.02" y="1071.5" ></text>
</g>
<g >
<title>thp_get_unmapped_area (32,802,474 samples, 0.01%)</title><rect x="686.7" y="1253" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="689.72" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (68,481,689 samples, 0.03%)</title><rect x="348.5" y="1365" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="351.53" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (74,093,202 samples, 0.03%)</title><rect x="578.7" y="1237" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="581.65" y="1247.5" ></text>
</g>
<g >
<title>vfs_fstatat (86,636,661 samples, 0.03%)</title><rect x="825.9" y="1301" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="828.94" y="1311.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (24,891,936 samples, 0.01%)</title><rect x="223.8" y="997" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="226.78" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (75,255,385 samples, 0.03%)</title><rect x="1157.8" y="1221" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1160.77" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,975,114,342 samples, 4.48%)</title><rect x="64.8" y="1349" width="52.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="67.80" y="1359.5" >std::..</text>
</g>
<g >
<title>__netif_receive_skb_list_core (24,102,976 samples, 0.01%)</title><rect x="161.6" y="933" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="164.56" y="943.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (53,022,676 samples, 0.02%)</title><rect x="363.9" y="965" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="366.94" y="975.5" ></text>
</g>
<g >
<title>_copy_from_iter (112,706,240 samples, 0.04%)</title><rect x="411.2" y="1237" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="414.20" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (52,129,306 samples, 0.02%)</title><rect x="12.1" y="1173" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="15.14" y="1183.5" ></text>
</g>
<g >
<title>[web-server] (24,613,180 samples, 0.01%)</title><rect x="1008.0" y="1093" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1010.97" y="1103.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (26,850,943 samples, 0.01%)</title><rect x="182.9" y="1029" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="185.91" y="1039.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (112,964,602 samples, 0.04%)</title><rect x="90.7" y="949" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="93.75" y="959.5" ></text>
</g>
<g >
<title>____fput (34,096,533 samples, 0.01%)</title><rect x="549.5" y="1093" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="552.45" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (37,998,642 samples, 0.01%)</title><rect x="579.8" y="1141" width="0.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="582.81" y="1151.5" ></text>
</g>
<g >
<title>exc_page_fault (82,763,269 samples, 0.03%)</title><rect x="694.4" y="1189" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="697.39" y="1199.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (76,063,786 samples, 0.03%)</title><rect x="780.7" y="821" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="783.73" y="831.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (27,445,925 samples, 0.01%)</title><rect x="877.3" y="1077" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="880.35" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (31,582,681 samples, 0.01%)</title><rect x="966.8" y="1349" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="969.83" y="1359.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (29,836,904 samples, 0.01%)</title><rect x="348.6" y="1349" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="351.61" y="1359.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (141,162,276 samples, 0.05%)</title><rect x="120.2" y="1397" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="123.17" y="1407.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (108,967,294 samples, 0.04%)</title><rect x="263.3" y="1269" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="266.31" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (54,256,727 samples, 0.02%)</title><rect x="1143.0" y="1621" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.99" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (40,321,322 samples, 0.02%)</title><rect x="260.3" y="1365" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="263.32" y="1375.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (23,818,523 samples, 0.01%)</title><rect x="128.9" y="1157" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="131.90" y="1167.5" ></text>
</g>
<g >
<title>__munmap (390,677,866 samples, 0.15%)</title><rect x="124.6" y="1189" width="1.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="127.60" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (49,793,729 samples, 0.02%)</title><rect x="684.0" y="757" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="687.02" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,407,912 samples, 0.01%)</title><rect x="912.1" y="325" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.08" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (60,500,357 samples, 0.02%)</title><rect x="1064.5" y="805" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1067.50" y="815.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (663,105,766 samples, 0.25%)</title><rect x="178.9" y="1045" width="2.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="181.87" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (30,727,374 samples, 0.01%)</title><rect x="20.9" y="1077" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="23.91" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (88,084,447 samples, 0.03%)</title><rect x="480.5" y="1093" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="483.47" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,798,366 samples, 0.01%)</title><rect x="347.6" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.56" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (81,143,299 samples, 0.03%)</title><rect x="621.9" y="1093" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="624.91" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (49,370,939 samples, 0.02%)</title><rect x="205.5" y="741" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.50" y="751.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (53,416,295 samples, 0.02%)</title><rect x="435.6" y="1061" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="438.58" y="1071.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (158,232,035 samples, 0.06%)</title><rect x="481.8" y="1109" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="484.78" y="1119.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (83,738,906 samples, 0.03%)</title><rect x="466.6" y="1061" width="0.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="469.60" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (683,817,571 samples, 0.26%)</title><rect x="168.3" y="1061" width="3.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="171.28" y="1071.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (25,490,444,485 samples, 9.55%)</title><rect x="1001.0" y="1477" width="112.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1003.98" y="1487.5" >std::__invoke..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::DelChannel (139,640,451 samples, 0.05%)</title><rect x="689.2" y="1333" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="692.18" y="1343.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (49,097,482 samples, 0.02%)</title><rect x="542.7" y="1301" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="545.67" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (38,072,707 samples, 0.01%)</title><rect x="114.0" y="1093" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="117.05" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,879,744 samples, 0.02%)</title><rect x="487.9" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.93" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (24,257,662 samples, 0.01%)</title><rect x="260.4" y="1333" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="263.37" y="1343.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (50,762,218 samples, 0.02%)</title><rect x="323.6" y="1045" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="326.64" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (108,548,276 samples, 0.04%)</title><rect x="957.8" y="1045" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="960.79" y="1055.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (74,103,868 samples, 0.03%)</title><rect x="922.0" y="821" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="924.99" y="831.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (23,794,272 samples, 0.01%)</title><rect x="501.8" y="901" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="504.83" y="911.5" ></text>
</g>
<g >
<title>_int_malloc (42,373,403 samples, 0.02%)</title><rect x="994.7" y="1685" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="997.70" y="1695.5" ></text>
</g>
<g >
<title>__wake_up_common (143,224,011 samples, 0.05%)</title><rect x="1154.8" y="1109" width="0.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1157.81" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (225,854,326 samples, 0.08%)</title><rect x="1077.6" y="1013" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1080.58" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (41,349,356 samples, 0.02%)</title><rect x="272.2" y="1429" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="275.20" y="1439.5" ></text>
</g>
<g >
<title>handle_softirqs (22,787,253 samples, 0.01%)</title><rect x="1155.7" y="1045" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1158.70" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (28,513,601 samples, 0.01%)</title><rect x="203.1" y="1317" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="206.11" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,964,563,122 samples, 1.48%)</title><rect x="665.2" y="1253" width="17.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="668.17" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (50,824,254 samples, 0.02%)</title><rect x="544.2" y="1381" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="547.23" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_eliminate_dummy (42,916,616 samples, 0.02%)</title><rect x="344.6" y="1333" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="347.55" y="1343.5" ></text>
</g>
<g >
<title>security_sock_graft (26,463,804 samples, 0.01%)</title><rect x="1167.8" y="1317" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1170.81" y="1327.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (54,466,714 samples, 0.02%)</title><rect x="214.2" y="901" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="217.22" y="911.5" ></text>
</g>
<g >
<title>ip_local_out (149,650,993 samples, 0.06%)</title><rect x="270.8" y="1141" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="273.82" y="1151.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (103,735,640 samples, 0.04%)</title><rect x="779.8" y="901" width="0.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="782.77" y="911.5" ></text>
</g>
<g >
<title>[unknown] (28,553,562 samples, 0.01%)</title><rect x="728.8" y="1077" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="731.76" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (67,445,179 samples, 0.03%)</title><rect x="118.3" y="1077" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="121.31" y="1087.5" ></text>
</g>
<g >
<title>do_fault (24,901,613 samples, 0.01%)</title><rect x="553.3" y="1125" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="556.30" y="1135.5" ></text>
</g>
<g >
<title>unmap_vmas (26,524,407 samples, 0.01%)</title><rect x="691.4" y="1045" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="694.44" y="1055.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (867,135,272 samples, 0.32%)</title><rect x="972.3" y="1285" width="3.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="975.29" y="1295.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (57,532,742 samples, 0.02%)</title><rect x="681.7" y="1109" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="684.71" y="1119.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (779,097,973 samples, 0.29%)</title><rect x="549.0" y="1269" width="3.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="552.01" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,839,070,214 samples, 1.44%)</title><rect x="805.8" y="1253" width="17.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="808.83" y="1263.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (55,284,781 samples, 0.02%)</title><rect x="610.0" y="1013" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="612.99" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (23,735,330 samples, 0.01%)</title><rect x="556.9" y="1141" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,874,383 samples, 0.01%)</title><rect x="911.9" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.91" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (178,019,525 samples, 0.07%)</title><rect x="1157.3" y="1253" width="0.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1160.31" y="1263.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (79,831,150 samples, 0.03%)</title><rect x="796.0" y="1029" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="799.03" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (118,689,972 samples, 0.04%)</title><rect x="204.1" y="1381" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="207.08" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,843,799,442 samples, 1.44%)</title><rect x="1072.8" y="1253" width="17.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1075.80" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (64,928,762 samples, 0.02%)</title><rect x="578.2" y="1173" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="581.16" y="1183.5" ></text>
</g>
<g >
<title>unmap_single_vma (31,551,190 samples, 0.01%)</title><rect x="1116.2" y="1029" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1119.19" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (45,375,666 samples, 0.02%)</title><rect x="1054.4" y="677" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1057.41" y="687.5" ></text>
</g>
<g >
<title>do_user_addr_fault (71,500,433 samples, 0.03%)</title><rect x="977.0" y="1173" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="979.96" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (83,975,400 samples, 0.03%)</title><rect x="543.2" y="1189" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.15" y="1199.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (25,240,071,157 samples, 9.45%)</title><rect x="576.9" y="1445" width="111.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="579.94" y="1455.5" >HttpConn::Han..</text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (213,461,773 samples, 0.08%)</title><rect x="905.2" y="1125" width="0.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="908.16" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (80,566,712 samples, 0.03%)</title><rect x="52.3" y="1093" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="55.26" y="1103.5" ></text>
</g>
<g >
<title>__napi_poll (37,157,909 samples, 0.01%)</title><rect x="125.5" y="901" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="128.49" y="911.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (318,296,005 samples, 0.12%)</title><rect x="800.3" y="1061" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="803.34" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (56,699,851 samples, 0.02%)</title><rect x="435.6" y="1093" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="438.58" y="1103.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (874,344,733 samples, 0.33%)</title><rect x="1114.6" y="1333" width="3.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1117.59" y="1343.5" ></text>
</g>
<g >
<title>path_lookupat (42,324,386 samples, 0.02%)</title><rect x="1110.7" y="1253" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1113.66" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,865,406,737 samples, 1.45%)</title><rect x="241.3" y="1173" width="17.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="244.28" y="1183.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (31,879,421 samples, 0.01%)</title><rect x="1147.7" y="1381" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1150.68" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (42,257,189 samples, 0.02%)</title><rect x="771.2" y="453" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="774.18" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (53,114,103 samples, 0.02%)</title><rect x="1050.8" y="1173" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1053.77" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (52,860,784 samples, 0.02%)</title><rect x="1054.4" y="789" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.40" y="799.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (56,818,756 samples, 0.02%)</title><rect x="577.7" y="1077" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="580.71" y="1087.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (55,708,979 samples, 0.02%)</title><rect x="117.8" y="1349" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="120.80" y="1359.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (51,877,176 samples, 0.02%)</title><rect x="73.7" y="805" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="76.70" y="815.5" ></text>
</g>
<g >
<title>irq_exit_rcu (31,879,421 samples, 0.01%)</title><rect x="1147.7" y="1397" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1150.68" y="1407.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (208,197,092 samples, 0.08%)</title><rect x="639.3" y="885" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="642.27" y="895.5" ></text>
</g>
<g >
<title>ip_list_rcv (28,495,551 samples, 0.01%)</title><rect x="691.1" y="821" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="694.15" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (300,582,472 samples, 0.11%)</title><rect x="347.1" y="1333" width="1.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="350.06" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (24,206,978 samples, 0.01%)</title><rect x="556.9" y="1269" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1279.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (54,147,829 samples, 0.02%)</title><rect x="965.7" y="1301" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="968.74" y="1311.5" ></text>
</g>
<g >
<title>irq_exit_rcu (32,840,185 samples, 0.01%)</title><rect x="432.9" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="435.88" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,577,997 samples, 0.02%)</title><rect x="629.5" y="725" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.50" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_Scanner (25,218,324 samples, 0.01%)</title><rect x="485.8" y="1333" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="488.78" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,872,035 samples, 0.01%)</title><rect x="630.0" y="261" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.99" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (116,663,736 samples, 0.04%)</title><rect x="629.7" y="805" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.73" y="815.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (26,131,917 samples, 0.01%)</title><rect x="124.5" y="1173" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="127.47" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,452,576,133 samples, 4.29%)</title><rect x="10.9" y="1349" width="50.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="13.92" y="1359.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (40,436,073 samples, 0.02%)</title><rect x="771.0" y="661" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="773.96" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (42,456,676 samples, 0.02%)</title><rect x="245.2" y="1077" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="248.20" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (41,140,513 samples, 0.02%)</title><rect x="967.5" y="1397" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="970.52" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (367,521,092 samples, 0.14%)</title><rect x="435.4" y="1269" width="1.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="438.41" y="1279.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (24,584,439 samples, 0.01%)</title><rect x="919.1" y="933" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="922.11" y="943.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (52,138,097 samples, 0.02%)</title><rect x="516.0" y="917" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="518.98" y="927.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (40,266,468 samples, 0.02%)</title><rect x="1108.1" y="1205" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1111.07" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (207,090,814 samples, 0.08%)</title><rect x="629.4" y="1045" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.42" y="1055.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (70,079,998 samples, 0.03%)</title><rect x="544.5" y="1397" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="547.52" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (110,153,952 samples, 0.04%)</title><rect x="1110.4" y="1333" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1113.43" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (29,836,262 samples, 0.01%)</title><rect x="784.3" y="885" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="787.26" y="895.5" ></text>
</g>
<g >
<title>ip_local_out (85,854,578 samples, 0.03%)</title><rect x="551.8" y="917" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="554.76" y="927.5" ></text>
</g>
<g >
<title>EventLoop::Loop (10,010,983,207 samples, 3.75%)</title><rect x="1143.7" y="1637" width="44.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1146.73" y="1647.5" >Even..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (42,278,206 samples, 0.02%)</title><rect x="684.0" y="661" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="687.02" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (49,367,821 samples, 0.02%)</title><rect x="506.4" y="1141" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="509.40" y="1151.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (23,941,159 samples, 0.01%)</title><rect x="727.0" y="837" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="729.98" y="847.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (188,363,223 samples, 0.07%)</title><rect x="515.6" y="965" width="0.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="518.65" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,484,460 samples, 0.04%)</title><rect x="63.5" y="789" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.47" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (247,309,516 samples, 0.09%)</title><rect x="911.4" y="1253" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.44" y="1263.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (398,087,386 samples, 0.15%)</title><rect x="1119.0" y="1317" width="1.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1122.00" y="1327.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (24,847,026 samples, 0.01%)</title><rect x="542.8" y="1125" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="545.75" y="1135.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (320,352,439 samples, 0.12%)</title><rect x="968.9" y="1317" width="1.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="971.93" y="1327.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (108,753,888 samples, 0.04%)</title><rect x="457.4" y="1029" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="460.43" y="1039.5" ></text>
</g>
<g >
<title>perf_event_mmap (61,811,335 samples, 0.02%)</title><rect x="1111.6" y="1253" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1114.57" y="1263.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (22,989,139 samples, 0.01%)</title><rect x="48.8" y="1077" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="51.82" y="1087.5" ></text>
</g>
<g >
<title>_int_free (333,015,351 samples, 0.12%)</title><rect x="561.7" y="1669" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="564.70" y="1679.5" ></text>
</g>
<g >
<title>[libc.so.6] (37,733,685 samples, 0.01%)</title><rect x="566.1" y="1653" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="569.14" y="1663.5" ></text>
</g>
<g >
<title>x64_sys_call (338,975,625 samples, 0.13%)</title><rect x="830.8" y="1141" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="833.79" y="1151.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (383,399,431 samples, 0.14%)</title><rect x="690.3" y="1173" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="693.26" y="1183.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (131,996,603 samples, 0.05%)</title><rect x="303.3" y="1093" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="306.29" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (82,082,949 samples, 0.03%)</title><rect x="1037.9" y="1061" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1040.91" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,481,980,771 samples, 4.30%)</title><rect x="348.9" y="1317" width="50.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="351.91" y="1327.5" >std::..</text>
</g>
<g >
<title>std::function&lt;void  (162,391,028 samples, 0.06%)</title><rect x="1113.7" y="1381" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1116.74" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (42,804,945 samples, 0.02%)</title><rect x="259.4" y="1237" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="262.37" y="1247.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (30,709,221 samples, 0.01%)</title><rect x="973.7" y="805" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="976.71" y="815.5" ></text>
</g>
<g >
<title>[unknown] (60,880,844 samples, 0.02%)</title><rect x="556.8" y="1653" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.83" y="1663.5" ></text>
</g>
<g >
<title>x64_sys_call (162,309,186 samples, 0.06%)</title><rect x="1149.3" y="1397" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1152.27" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,763,534,335 samples, 1.41%)</title><rect x="64.8" y="1173" width="16.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="67.83" y="1183.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (54,034,854 samples, 0.02%)</title><rect x="1045.8" y="1077" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1048.79" y="1087.5" ></text>
</g>
<g >
<title>netvsc_poll (48,773,948 samples, 0.02%)</title><rect x="1141.3" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1144.32" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (473,596,581 samples, 0.18%)</title><rect x="1118.8" y="1429" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1121.76" y="1439.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (118,247,316 samples, 0.04%)</title><rect x="204.1" y="1365" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="207.09" y="1375.5" ></text>
</g>
<g >
<title>netvsc_poll (37,157,909 samples, 0.01%)</title><rect x="125.5" y="885" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="128.49" y="895.5" ></text>
</g>
<g >
<title>__dynamic_cast (55,355,284 samples, 0.02%)</title><rect x="527.4" y="1077" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="530.41" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (58,617,828 samples, 0.02%)</title><rect x="1108.0" y="1381" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1111.00" y="1391.5" ></text>
</g>
<g >
<title>__dynamic_cast (43,882,108 samples, 0.02%)</title><rect x="509.6" y="1045" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="512.62" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (38,128,976 samples, 0.01%)</title><rect x="788.6" y="1125" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="791.60" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (68,469,583 samples, 0.03%)</title><rect x="684.0" y="1029" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="686.98" y="1039.5" ></text>
</g>
<g >
<title>__dynamic_cast (50,915,807 samples, 0.02%)</title><rect x="668.2" y="1077" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="671.19" y="1087.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (151,006,552 samples, 0.06%)</title><rect x="966.1" y="1381" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="969.07" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,023,182 samples, 0.02%)</title><rect x="684.0" y="709" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.02" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (43,303,994 samples, 0.02%)</title><rect x="130.5" y="1445" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="133.52" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (29,283,418 samples, 0.01%)</title><rect x="238.3" y="1061" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="241.28" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (44,944,702 samples, 0.02%)</title><rect x="542.7" y="1269" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="545.69" y="1279.5" ></text>
</g>
<g >
<title>epoll_ctl (53,367,949 samples, 0.02%)</title><rect x="10.4" y="1317" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="13.45" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (47,267,371 samples, 0.02%)</title><rect x="1143.0" y="1605" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.99" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (25,970,298 samples, 0.01%)</title><rect x="1121.5" y="1509" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1124.51" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (82,753,393 samples, 0.03%)</title><rect x="54.6" y="1093" width="0.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="57.58" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (39,924,895 samples, 0.01%)</title><rect x="205.5" y="549" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.52" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (5,491,065,607 samples, 2.06%)</title><rect x="20.1" y="1093" width="24.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="23.13" y="1103.5" >s..</text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, long, std::shared_ptr&lt;TimerManager::TimerNode&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (32,025,453 samples, 0.01%)</title><rect x="1121.7" y="1493" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1124.74" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (27,383,605 samples, 0.01%)</title><rect x="443.5" y="1013" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="446.49" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (40,891,761 samples, 0.02%)</title><rect x="260.3" y="1381" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="263.32" y="1391.5" ></text>
</g>
<g >
<title>__dentry_kill (80,125,738 samples, 0.03%)</title><rect x="692.3" y="1077" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="695.27" y="1087.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (22,891,464 samples, 0.01%)</title><rect x="683.6" y="1125" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="686.57" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (27,980,838 samples, 0.01%)</title><rect x="205.5" y="229" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.54" y="239.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (237,077,289 samples, 0.09%)</title><rect x="518.9" y="1045" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="521.88" y="1055.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (81,795,376 samples, 0.03%)</title><rect x="718.2" y="1429" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="721.19" y="1439.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (61,102,778 samples, 0.02%)</title><rect x="389.4" y="1045" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="392.38" y="1055.5" ></text>
</g>
<g >
<title>do_vmi_munmap (266,648,041 samples, 0.10%)</title><rect x="407.4" y="1093" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="410.39" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (411,669,717 samples, 0.15%)</title><rect x="153.5" y="1269" width="1.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="156.53" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,642,804 samples, 0.01%)</title><rect x="63.2" y="533" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.25" y="543.5" ></text>
</g>
<g >
<title>handle_mm_fault (45,015,051 samples, 0.02%)</title><rect x="553.3" y="1157" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="556.25" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,750,665,694 samples, 1.40%)</title><rect x="789.0" y="1205" width="16.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="791.98" y="1215.5" ></text>
</g>
<g >
<title>operator new[] (38,570,079 samples, 0.01%)</title><rect x="981.5" y="1653" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="984.49" y="1663.5" ></text>
</g>
<g >
<title>do_syscall_64 (42,306,866 samples, 0.02%)</title><rect x="10.5" y="1285" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.47" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (27,882,591 samples, 0.01%)</title><rect x="63.7" y="341" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="66.71" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (813,868,377 samples, 0.30%)</title><rect x="549.0" y="1397" width="3.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="551.96" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (23,493,376 samples, 0.01%)</title><rect x="71.4" y="917" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="74.40" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (40,680,697 samples, 0.02%)</title><rect x="221.4" y="949" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="224.43" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,813,649 samples, 0.01%)</title><rect x="347.6" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.55" y="511.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (107,316,726 samples, 0.04%)</title><rect x="769.3" y="1365" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="772.31" y="1375.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (36,978,726 samples, 0.01%)</title><rect x="1182.4" y="1509" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1185.40" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (1,910,620,813 samples, 0.72%)</title><rect x="209.7" y="949" width="8.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="212.72" y="959.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (48,821,346 samples, 0.02%)</title><rect x="94.7" y="1013" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="97.74" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28,912,815 samples, 0.01%)</title><rect x="696.5" y="1525" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="699.53" y="1535.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (157,037,584 samples, 0.06%)</title><rect x="123.5" y="1365" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="126.52" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (160,112,839 samples, 0.06%)</title><rect x="31.1" y="1077" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="34.13" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (10,723,462,843 samples, 4.02%)</title><rect x="1003.7" y="1237" width="47.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1006.70" y="1247.5" >std:..</text>
</g>
<g >
<title>HttpConn::HttpConn (1,705,285,956 samples, 0.64%)</title><rect x="829.1" y="1461" width="7.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="832.07" y="1471.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (65,615,029 samples, 0.02%)</title><rect x="718.2" y="1349" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="721.22" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (79,899,715 samples, 0.03%)</title><rect x="718.9" y="1221" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="721.93" y="1231.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (386,329,017 samples, 0.14%)</title><rect x="834.7" y="1253" width="1.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="837.69" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_openat (112,233,204 samples, 0.04%)</title><rect x="275.7" y="1605" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="278.73" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (749,964,152 samples, 0.28%)</title><rect x="231.1" y="1045" width="3.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="234.09" y="1055.5" ></text>
</g>
<g >
<title>ip_finish_output2 (47,833,314 samples, 0.02%)</title><rect x="409.8" y="853" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="412.81" y="863.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (22,741,144 samples, 0.01%)</title><rect x="1178.0" y="1349" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1181.01" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,365,091,931 samples, 4.26%)</title><rect x="1001.6" y="1317" width="50.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1004.57" y="1327.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (182,154,688 samples, 0.07%)</title><rect x="205.5" y="901" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.47" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,549,462,932 samples, 1.33%)</title><rect x="241.6" y="1125" width="15.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="244.63" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (30,223,638 samples, 0.01%)</title><rect x="398.0" y="1093" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="400.99" y="1103.5" ></text>
</g>
<g >
<title>net_rx_action (50,403,433 samples, 0.02%)</title><rect x="1141.3" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1144.31" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,632,318 samples, 0.01%)</title><rect x="629.5" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.54" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::construct&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (23,399,094 samples, 0.01%)</title><rect x="909.7" y="1221" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="912.65" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (38,048,624 samples, 0.01%)</title><rect x="114.3" y="1093" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="117.30" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::emplace_back&lt;char&gt; (31,687,045 samples, 0.01%)</title><rect x="861.9" y="1125" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="864.90" y="1135.5" ></text>
</g>
<g >
<title>malloc (590,221,975 samples, 0.22%)</title><rect x="1139.0" y="1685" width="2.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1141.98" y="1695.5" ></text>
</g>
<g >
<title>nf_hook_slow (47,135,102 samples, 0.02%)</title><rect x="1119.8" y="1109" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1122.81" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (38,029,822 samples, 0.01%)</title><rect x="368.8" y="1045" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="371.77" y="1055.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (61,675,755 samples, 0.02%)</title><rect x="394.9" y="1061" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="397.94" y="1071.5" ></text>
</g>
<g >
<title>irq_exit_rcu (42,290,728 samples, 0.02%)</title><rect x="151.0" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="154.01" y="1647.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (46,155,657 samples, 0.02%)</title><rect x="112.5" y="1045" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="115.51" y="1055.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (108,485,741 samples, 0.04%)</title><rect x="836.6" y="1525" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="839.63" y="1535.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,616,992,741 samples, 0.61%)</title><rect x="264.9" y="1525" width="7.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="267.86" y="1535.5" ></text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (116,033,319 samples, 0.04%)</title><rect x="130.3" y="1557" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="133.33" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (87,642,895 samples, 0.03%)</title><rect x="910.2" y="1253" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="913.21" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (26,353,759 samples, 0.01%)</title><rect x="869.4" y="1077" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="872.36" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (39,062,969 samples, 0.01%)</title><rect x="684.0" y="629" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="687.03" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (22,968,000 samples, 0.01%)</title><rect x="637.4" y="917" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="640.44" y="927.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (27,369,714,639 samples, 10.25%)</title><rect x="858.8" y="1589" width="120.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="861.80" y="1599.5" >EventLoopThread..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (41,452,211 samples, 0.02%)</title><rect x="823.5" y="1253" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="826.54" y="1263.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (180,485,166 samples, 0.07%)</title><rect x="840.8" y="1637" width="0.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="843.78" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (55,218,103 samples, 0.02%)</title><rect x="824.0" y="741" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.04" y="751.5" ></text>
</g>
<g >
<title>tcp_close (190,495,803 samples, 0.07%)</title><rect x="833.0" y="1045" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="835.99" y="1055.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (212,260,365 samples, 0.08%)</title><rect x="90.4" y="1013" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="93.44" y="1023.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (181,666,183 samples, 0.07%)</title><rect x="47.9" y="1061" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="50.94" y="1071.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (269,181,101 samples, 0.10%)</title><rect x="559.2" y="1669" width="1.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="562.24" y="1679.5" ></text>
</g>
<g >
<title>handle_softirqs (185,836,355 samples, 0.07%)</title><rect x="1184.2" y="1365" width="0.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1187.20" y="1375.5" ></text>
</g>
<g >
<title>__napi_poll (37,926,989 samples, 0.01%)</title><rect x="716.3" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="719.30" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (136,615,201 samples, 0.05%)</title><rect x="543.0" y="1349" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="546.00" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_fill_assign (27,373,328 samples, 0.01%)</title><rect x="770.2" y="1301" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="773.17" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,897,534,823 samples, 1.46%)</title><rect x="506.9" y="1253" width="17.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="509.86" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (62,802,771 samples, 0.02%)</title><rect x="912.0" y="677" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="915.04" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (85,685,379 samples, 0.03%)</title><rect x="1008.8" y="1093" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1011.80" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_fill_assign (27,408,399 samples, 0.01%)</title><rect x="1053.9" y="1301" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1056.86" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::vector (24,476,433 samples, 0.01%)</title><rect x="629.0" y="1285" width="0.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="631.98" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="293" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (203,222,092 samples, 0.08%)</title><rect x="487.8" y="1061" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.83" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (44,708,908 samples, 0.02%)</title><rect x="630.0" y="405" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.97" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (24,024,564 samples, 0.01%)</title><rect x="807.8" y="1093" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="810.79" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4,052,307,265 samples, 1.52%)</title><rect x="99.3" y="1269" width="17.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="102.29" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (31,786,902 samples, 0.01%)</title><rect x="966.3" y="597" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="969.33" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (111,902,465 samples, 0.04%)</title><rect x="910.1" y="1317" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="913.11" y="1327.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (70,651,004 samples, 0.03%)</title><rect x="595.8" y="1077" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="598.83" y="1087.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (31,441,935 samples, 0.01%)</title><rect x="795.0" y="1045" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="798.02" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (41,260,017 samples, 0.02%)</title><rect x="1093.2" y="1077" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1096.23" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,632,318 samples, 0.01%)</title><rect x="629.5" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.54" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (184,026,022 samples, 0.07%)</title><rect x="487.9" y="949" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.86" y="959.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,107,658,175 samples, 0.41%)</title><rect x="264.9" y="1445" width="4.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="267.91" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,288,829 samples, 0.04%)</title><rect x="205.8" y="741" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.76" y="751.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::DelChannel (163,185,302 samples, 0.06%)</title><rect x="971.4" y="1333" width="0.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="974.44" y="1343.5" ></text>
</g>
<g >
<title>x64_sys_call (308,274,270 samples, 0.12%)</title><rect x="692.2" y="1157" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="695.22" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (145,637,748 samples, 0.05%)</title><rect x="860.0" y="1237" width="0.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="863.02" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (26,883,533 samples, 0.01%)</title><rect x="387.8" y="1013" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="390.79" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (28,831,137 samples, 0.01%)</title><rect x="347.3" y="277" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.30" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (41,865,885 samples, 0.02%)</title><rect x="165.3" y="1077" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="168.25" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,789,308,386 samples, 1.42%)</title><rect x="805.9" y="1189" width="16.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="808.90" y="1199.5" ></text>
</g>
<g >
<title>std::function&lt;void  (903,047,048 samples, 0.34%)</title><rect x="972.2" y="1413" width="4.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="975.23" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (53,264,363 samples, 0.02%)</title><rect x="201.9" y="1189" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="204.93" y="1199.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (29,152,807 samples, 0.01%)</title><rect x="296.3" y="1077" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="299.25" y="1087.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (913,119,035 samples, 0.34%)</title><rect x="830.0" y="1301" width="4.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="833.02" y="1311.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (637,256,186 samples, 0.24%)</title><rect x="753.8" y="1077" width="2.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="756.76" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,197,203 samples, 0.01%)</title><rect x="63.5" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.50" y="623.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (28,200,670 samples, 0.01%)</title><rect x="473.3" y="1077" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="476.26" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (90,156,434 samples, 0.03%)</title><rect x="684.0" y="1205" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="686.95" y="1215.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (32,240,837 samples, 0.01%)</title><rect x="1024.4" y="1045" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1027.44" y="1055.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (62,716,128 samples, 0.02%)</title><rect x="718.2" y="1333" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="721.22" y="1343.5" ></text>
</g>
<g >
<title>__strxfrm_l (228,493,279 samples, 0.09%)</title><rect x="1135.0" y="1653" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1138.02" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (215,726,301 samples, 0.08%)</title><rect x="499.7" y="933" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="502.70" y="943.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (138,759,141 samples, 0.05%)</title><rect x="661.3" y="1045" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="664.35" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (25,444,605 samples, 0.01%)</title><rect x="543.3" y="469" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="546.26" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (27,763,173 samples, 0.01%)</title><rect x="29.5" y="1077" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="32.47" y="1087.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (36,393,400 samples, 0.01%)</title><rect x="867.7" y="1077" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="870.73" y="1087.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (164,693,784 samples, 0.06%)</title><rect x="472.4" y="1061" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="475.45" y="1071.5" ></text>
</g>
<g >
<title>ip_local_out (148,251,879 samples, 0.06%)</title><rect x="411.9" y="1141" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="414.87" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (48,771,869 samples, 0.02%)</title><rect x="197.6" y="1077" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="200.60" y="1087.5" ></text>
</g>
<g >
<title>handle_softirqs (33,015,741 samples, 0.01%)</title><rect x="161.5" y="1029" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="164.55" y="1039.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (45,565,152 samples, 0.02%)</title><rect x="727.0" y="1077" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="729.96" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (472,734,258 samples, 0.18%)</title><rect x="976.5" y="1413" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="979.48" y="1423.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (28,612,481 samples, 0.01%)</title><rect x="243.0" y="1093" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="246.04" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (39,289,501 samples, 0.01%)</title><rect x="206.0" y="485" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.97" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (102,770,327 samples, 0.04%)</title><rect x="1113.1" y="1429" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1116.07" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,191,289,392 samples, 4.19%)</title><rect x="859.5" y="1333" width="49.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="862.51" y="1343.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,769,856,796 samples, 1.41%)</title><rect x="224.2" y="1189" width="16.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="227.22" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (199,701,308 samples, 0.07%)</title><rect x="63.2" y="1109" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.15" y="1119.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (122,910,558 samples, 0.05%)</title><rect x="1184.3" y="1269" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1187.28" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (65,091,652 samples, 0.02%)</title><rect x="893.8" y="1077" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="896.84" y="1087.5" ></text>
</g>
<g >
<title>__napi_poll (31,707,765 samples, 0.01%)</title><rect x="19.3" y="997" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="22.26" y="1007.5" ></text>
</g>
<g >
<title>malloc (47,084,093 samples, 0.02%)</title><rect x="36.0" y="1013" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="38.99" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (24,481,966 samples, 0.01%)</title><rect x="375.4" y="981" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="378.38" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,520,963 samples, 0.01%)</title><rect x="824.1" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.09" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (25,970,298 samples, 0.01%)</title><rect x="1121.5" y="1477" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1124.51" y="1487.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (67,757,179 samples, 0.03%)</title><rect x="717.3" y="1653" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="720.28" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (46,211,465 samples, 0.02%)</title><rect x="480.3" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="483.25" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (35,143,601 samples, 0.01%)</title><rect x="63.5" y="629" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.50" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (38,639,239 samples, 0.01%)</title><rect x="988.9" y="1669" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="991.91" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (67,373,434 samples, 0.03%)</title><rect x="173.7" y="1061" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="176.73" y="1071.5" ></text>
</g>
<g >
<title>std::function&lt;void  (167,196,583 samples, 0.06%)</title><rect x="548.2" y="1381" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="551.16" y="1391.5" ></text>
</g>
<g >
<title>__dynamic_cast (51,565,756 samples, 0.02%)</title><rect x="650.9" y="1045" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="653.89" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,597,994 samples, 0.02%)</title><rect x="400.8" y="677" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.75" y="687.5" ></text>
</g>
<g >
<title>ip_finish_output2 (47,169,747 samples, 0.02%)</title><rect x="127.3" y="853" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="130.26" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,784,965,313 samples, 1.42%)</title><rect x="930.6" y="1141" width="16.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="933.59" y="1151.5" ></text>
</g>
<g >
<title>path_openat (62,751,604 samples, 0.02%)</title><rect x="275.8" y="1557" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="278.75" y="1567.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (25,735,128 samples, 0.01%)</title><rect x="408.1" y="853" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="411.05" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (50,683,799 samples, 0.02%)</title><rect x="767.8" y="1301" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="770.81" y="1311.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (57,811,047 samples, 0.02%)</title><rect x="106.8" y="1045" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="109.81" y="1055.5" ></text>
</g>
<g >
<title>operator new[] (33,926,755 samples, 0.01%)</title><rect x="274.9" y="1653" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="277.88" y="1663.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (31,606,751 samples, 0.01%)</title><rect x="259.4" y="1141" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="262.41" y="1151.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (905,310,520 samples, 0.34%)</title><rect x="830.0" y="1253" width="4.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="833.04" y="1263.5" ></text>
</g>
<g >
<title>std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, TimerManager::TimerCmp&gt; (32,896,063 samples, 0.01%)</title><rect x="837.4" y="1525" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="840.38" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,838,185,835 samples, 1.44%)</title><rect x="506.9" y="1189" width="17.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="509.92" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (51,262,512 samples, 0.02%)</title><rect x="197.9" y="1077" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="200.94" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,436,828 samples, 0.02%)</title><rect x="259.9" y="885" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.88" y="895.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (416,488,347 samples, 0.16%)</title><rect x="346.6" y="1349" width="1.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="349.64" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,756,061,131 samples, 1.41%)</title><rect x="224.2" y="1157" width="16.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="227.23" y="1167.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (45,078,617 samples, 0.02%)</title><rect x="1001.1" y="1253" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1004.11" y="1263.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (80,984,329 samples, 0.03%)</title><rect x="376.0" y="1013" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="379.04" y="1023.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (24,504,980 samples, 0.01%)</title><rect x="62.1" y="1093" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="65.11" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="661" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (145,651,980 samples, 0.05%)</title><rect x="53.9" y="1093" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="56.94" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (24,422,228 samples, 0.01%)</title><rect x="60.9" y="1317" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="63.89" y="1327.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (23,137,120 samples, 0.01%)</title><rect x="1155.7" y="1061" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1158.70" y="1071.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,208,287,959 samples, 10.19%)</title><rect x="576.8" y="1653" width="120.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="579.81" y="1663.5" >std::thread::_..</text>
</g>
<g >
<title>x64_sys_call (60,149,367 samples, 0.02%)</title><rect x="265.2" y="1253" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="268.17" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (22,674,426 samples, 0.01%)</title><rect x="247.0" y="1013" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="250.00" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::assign (28,344,709 samples, 0.01%)</title><rect x="770.2" y="1317" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="773.16" y="1327.5" ></text>
</g>
<g >
<title>napi_complete_done (29,461,077 samples, 0.01%)</title><rect x="575.1" y="1541" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="578.09" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (132,983,488 samples, 0.05%)</title><rect x="91.6" y="1013" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="94.60" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::~_BracketMatcher (26,259,372 samples, 0.01%)</title><rect x="201.2" y="1157" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="204.16" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (56,521,840 samples, 0.02%)</title><rect x="114.7" y="1093" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="117.73" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (63,112,286 samples, 0.02%)</title><rect x="966.3" y="965" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="969.29" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,147,729,739 samples, 4.17%)</title><rect x="718.8" y="1317" width="49.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="721.78" y="1327.5" >std:..</text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (410,941,396 samples, 0.15%)</title><rect x="628.9" y="1365" width="1.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="631.88" y="1375.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (62,476,414 samples, 0.02%)</title><rect x="943.3" y="1029" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="946.31" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (25,632,318 samples, 0.01%)</title><rect x="629.5" y="357" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.54" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (38,658,608 samples, 0.01%)</title><rect x="678.4" y="1029" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="681.42" y="1039.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (26,615,942 samples, 0.01%)</title><rect x="317.6" y="1061" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="320.60" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (23,998,459 samples, 0.01%)</title><rect x="644.7" y="949" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="647.70" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (35,347,663 samples, 0.01%)</title><rect x="910.7" y="1381" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="913.75" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,309,256 samples, 0.01%)</title><rect x="347.3" y="389" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.29" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (26,098,470 samples, 0.01%)</title><rect x="966.3" y="389" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="969.34" y="399.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;false&gt;::__uninit_default_n&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long&gt; (24,227,114 samples, 0.01%)</title><rect x="346.9" y="1253" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="349.93" y="1263.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (81,739,307 samples, 0.03%)</title><rect x="681.6" y="1125" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="684.60" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4,012,149,952 samples, 1.50%)</title><rect x="99.3" y="1237" width="17.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="102.30" y="1247.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (52,559,853 samples, 0.02%)</title><rect x="755.5" y="1045" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="758.48" y="1055.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (321,789,465 samples, 0.12%)</title><rect x="536.4" y="1093" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="539.42" y="1103.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (143,427,651 samples, 0.05%)</title><rect x="395.6" y="1077" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="398.56" y="1087.5" ></text>
</g>
<g >
<title>x64_sys_call (25,914,972 samples, 0.01%)</title><rect x="979.2" y="1493" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="982.20" y="1503.5" ></text>
</g>
<g >
<title>Channel::OnWrite (1,710,759,042 samples, 0.64%)</title><rect x="829.0" y="1541" width="7.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="832.05" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (36,845,020 samples, 0.01%)</title><rect x="634.3" y="933" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="637.35" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,821,757,064 samples, 1.43%)</title><rect x="647.9" y="1173" width="16.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="650.93" y="1183.5" ></text>
</g>
<g >
<title>Channel::OnRead (8,140,537,177 samples, 3.05%)</title><rect x="1143.8" y="1605" width="36.0" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1146.80" y="1615.5" >Cha..</text>
</g>
<g >
<title>__netif_receive_skb_list_core (25,735,128 samples, 0.01%)</title><rect x="408.1" y="837" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="411.05" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,678,322,010 samples, 4.37%)</title><rect x="207.1" y="1301" width="51.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="210.12" y="1311.5" >std::..</text>
</g>
<g >
<title>[web-server] (31,822,741 samples, 0.01%)</title><rect x="244.1" y="1077" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="247.08" y="1087.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (672,396,676 samples, 0.25%)</title><rect x="320.4" y="1045" width="3.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="323.43" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (59,612,594 samples, 0.02%)</title><rect x="1080.0" y="1013" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1083.03" y="1023.5" ></text>
</g>
<g >
<title>Channel::OnWrite (1,617,726,802 samples, 0.61%)</title><rect x="264.9" y="1541" width="7.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="267.86" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (10,577,693,753 samples, 3.96%)</title><rect x="861.5" y="1237" width="46.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="864.53" y="1247.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (30,168,694 samples, 0.01%)</title><rect x="771.0" y="469" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.97" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (51,413,855 samples, 0.02%)</title><rect x="748.9" y="1013" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="751.89" y="1023.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long&gt; (26,289,606 samples, 0.01%)</title><rect x="487.6" y="1269" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="490.56" y="1279.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (24,573,766 samples, 0.01%)</title><rect x="39.9" y="1045" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.88" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (196,135,714 samples, 0.07%)</title><rect x="63.2" y="1045" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.16" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (69,386,401 samples, 0.03%)</title><rect x="1142.3" y="1685" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1145.30" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,687,066 samples, 0.01%)</title><rect x="205.5" y="293" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.54" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (72,151,861 samples, 0.03%)</title><rect x="676.5" y="1029" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="679.53" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (49,969,113 samples, 0.02%)</title><rect x="256.3" y="1093" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="259.31" y="1103.5" ></text>
</g>
<g >
<title>net_rx_action (38,385,384 samples, 0.01%)</title><rect x="716.3" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="719.29" y="1599.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,422,297,457 samples, 10.27%)</title><rect x="10.3" y="1637" width="121.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.29" y="1647.5" >std::thread::_I..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,393,153 samples, 0.01%)</title><rect x="911.6" y="533" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.62" y="543.5" ></text>
</g>
<g >
<title>tcp_push (227,482,440 samples, 0.09%)</title><rect x="835.3" y="1237" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="838.28" y="1247.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::function&lt;void  (26,691,163 samples, 0.01%)</title><rect x="1157.9" y="1141" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1160.92" y="1151.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (218,962,593 samples, 0.08%)</title><rect x="783.4" y="933" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="786.44" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (38,060,962 samples, 0.01%)</title><rect x="259.9" y="693" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="262.89" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,828,533,224 samples, 2.93%)</title><rect x="489.5" y="1269" width="34.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.49" y="1279.5" >st..</text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (40,387,001 samples, 0.02%)</title><rect x="530.9" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="533.95" y="1087.5" ></text>
</g>
<g >
<title>x64_sys_call (97,876,391 samples, 0.04%)</title><rect x="416.8" y="1621" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="419.79" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (44,714,968 samples, 0.02%)</title><rect x="1054.4" y="629" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.42" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (85,567,713 samples, 0.03%)</title><rect x="435.5" y="1205" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="438.50" y="1215.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (214,216,007 samples, 0.08%)</title><rect x="218.6" y="933" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="221.62" y="943.5" ></text>
</g>
<g >
<title>[unknown] (26,252,052 samples, 0.01%)</title><rect x="838.6" y="1589" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (58,901,755 samples, 0.02%)</title><rect x="237.6" y="1013" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="240.58" y="1023.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (102,507,176 samples, 0.04%)</title><rect x="628.2" y="1333" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="631.18" y="1343.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (36,024,196 samples, 0.01%)</title><rect x="965.8" y="1189" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="968.80" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,530,118,922 samples, 1.32%)</title><rect x="525.0" y="1109" width="15.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="528.02" y="1119.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (71,327,320 samples, 0.03%)</title><rect x="1034.9" y="1013" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1037.87" y="1023.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (350,733,270 samples, 0.13%)</title><rect x="1101.5" y="1093" width="1.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1104.54" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,189,067,398 samples, 4.19%)</title><rect x="859.5" y="1317" width="49.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="862.51" y="1327.5" >std:..</text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (77,656,908 samples, 0.03%)</title><rect x="726.3" y="1093" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="729.30" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (102,567,563 samples, 0.04%)</title><rect x="635.8" y="869" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="638.84" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,995,918,609 samples, 1.50%)</title><rect x="524.3" y="1221" width="17.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="527.25" y="1231.5" ></text>
</g>
<g >
<title>inet_sendmsg (381,513,387 samples, 0.14%)</title><rect x="553.0" y="1285" width="1.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="555.97" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (168,905,906 samples, 0.06%)</title><rect x="173.3" y="1077" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="176.29" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,110,149 samples, 0.02%)</title><rect x="824.0" y="709" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.04" y="719.5" ></text>
</g>
<g >
<title>nf_hook_slow (37,928,608 samples, 0.01%)</title><rect x="268.7" y="885" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="271.72" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (106,565,622 samples, 0.04%)</title><rect x="122.9" y="1413" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="125.88" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,464,393 samples, 0.02%)</title><rect x="63.7" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.68" y="591.5" ></text>
</g>
<g >
<title>Channel::Channel (25,967,751 samples, 0.01%)</title><rect x="1160.6" y="1173" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1163.61" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_add_char (32,808,785 samples, 0.01%)</title><rect x="437.7" y="1157" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="440.66" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,463,291,802 samples, 4.29%)</title><rect x="859.4" y="1381" width="50.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="862.44" y="1391.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,820,218,971 samples, 1.43%)</title><rect x="647.9" y="1157" width="16.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="650.93" y="1167.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (29,227,810 samples, 0.01%)</title><rect x="884.6" y="1045" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="887.60" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (179,921,651 samples, 0.07%)</title><rect x="1054.3" y="1061" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.34" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (90,688,920 samples, 0.03%)</title><rect x="658.8" y="1013" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="661.83" y="1023.5" ></text>
</g>
<g >
<title>task_work_run (46,331,878 samples, 0.02%)</title><rect x="1115.1" y="1109" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1118.09" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (94,965,960 samples, 0.04%)</title><rect x="670.4" y="1013" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="673.38" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (41,797,236 samples, 0.02%)</title><rect x="365.1" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="368.09" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (87,757,070 samples, 0.03%)</title><rect x="543.1" y="1253" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.14" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (172,229,633 samples, 0.06%)</title><rect x="777.1" y="885" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="780.06" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,977,723 samples, 0.01%)</title><rect x="63.7" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.70" y="431.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (73,208,940 samples, 0.03%)</title><rect x="630.7" y="1381" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="633.73" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1,037,158,231 samples, 0.39%)</title><rect x="166.7" y="1077" width="4.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="169.72" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (61,472,440 samples, 0.02%)</title><rect x="643.9" y="901" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="646.91" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (954,680,352 samples, 0.36%)</title><rect x="706.8" y="1669" width="4.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="709.83" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,805,094 samples, 0.02%)</title><rect x="966.3" y="981" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.28" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (84,999,178 samples, 0.03%)</title><rect x="435.9" y="1205" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="438.94" y="1215.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (30,736,148 samples, 0.01%)</title><rect x="837.2" y="1477" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="840.17" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,709,054,588 samples, 1.39%)</title><rect x="64.9" y="1109" width="16.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="67.91" y="1119.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (32,578,949 samples, 0.01%)</title><rect x="695.3" y="1029" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="698.30" y="1039.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (28,927,009 samples, 0.01%)</title><rect x="550.2" y="981" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="553.21" y="991.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (74,429,473 samples, 0.03%)</title><rect x="295.1" y="1077" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="298.08" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (44,325,130 samples, 0.02%)</title><rect x="542.7" y="1253" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="545.69" y="1263.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (50,365,796 samples, 0.02%)</title><rect x="1088.9" y="1093" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1091.92" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (28,866,533 samples, 0.01%)</title><rect x="911.6" y="277" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.65" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (40,883,532 samples, 0.02%)</title><rect x="259.4" y="1173" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="262.37" y="1183.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (27,909,382 samples, 0.01%)</title><rect x="674.7" y="933" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="677.71" y="943.5" ></text>
</g>
<g >
<title>netvsc_poll (169,837,210 samples, 0.06%)</title><rect x="1184.3" y="1317" width="0.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1187.25" y="1327.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (332,858,798 samples, 0.12%)</title><rect x="111.3" y="1093" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="114.31" y="1103.5" ></text>
</g>
<g >
<title>__dynamic_cast (45,337,585 samples, 0.02%)</title><rect x="916.1" y="933" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="919.12" y="943.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (27,212,497,324 samples, 10.19%)</title><rect x="152.8" y="1605" width="120.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="155.81" y="1615.5" >std::__invoke_..</text>
</g>
<g >
<title>sch_direct_xmit (29,686,277 samples, 0.01%)</title><rect x="835.9" y="1045" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="838.85" y="1055.5" ></text>
</g>
<g >
<title>inet_recvmsg (58,535,044 samples, 0.02%)</title><rect x="264.5" y="1301" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="267.51" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (49,884,081 samples, 0.02%)</title><rect x="912.1" y="517" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="915.06" y="527.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (49,651,350 samples, 0.02%)</title><rect x="90.9" y="917" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="93.91" y="927.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (55,140,752 samples, 0.02%)</title><rect x="257.7" y="1125" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="260.71" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (50,565,343 samples, 0.02%)</title><rect x="201.9" y="1157" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="204.93" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,027,949 samples, 0.01%)</title><rect x="684.0" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.03" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (51,662,343 samples, 0.02%)</title><rect x="401.2" y="1381" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="404.22" y="1391.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (166,597,986 samples, 0.06%)</title><rect x="199.3" y="1109" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="202.35" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (24,007,703 samples, 0.01%)</title><rect x="803.0" y="1061" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="806.01" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (27,774,974 samples, 0.01%)</title><rect x="1067.1" y="933" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1070.10" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (137,730,878 samples, 0.05%)</title><rect x="719.3" y="1237" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="722.31" y="1247.5" ></text>
</g>
<g >
<title>__close (27,370,290 samples, 0.01%)</title><rect x="1111.0" y="1397" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1113.97" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (54,387,924 samples, 0.02%)</title><rect x="1108.6" y="837" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1111.59" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (47,597,994 samples, 0.02%)</title><rect x="400.8" y="661" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="403.75" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (250,651,640 samples, 0.09%)</title><rect x="629.3" y="1221" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.35" y="1231.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (33,307,373 samples, 0.01%)</title><rect x="328.0" y="1045" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="331.00" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (47,035,218 samples, 0.02%)</title><rect x="296.2" y="1141" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="299.18" y="1151.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (29,721,201 samples, 0.01%)</title><rect x="1158.5" y="1269" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1161.54" y="1279.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (12,247,581,413 samples, 4.59%)</title><rect x="294.7" y="1397" width="54.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="297.73" y="1407.5" >HttpR..</text>
</g>
<g >
<title>napi_complete_done (24,615,280 samples, 0.01%)</title><rect x="161.6" y="965" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="164.56" y="975.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (63,756,161 samples, 0.02%)</title><rect x="859.0" y="1333" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="861.99" y="1343.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (24,782,125 samples, 0.01%)</title><rect x="70.1" y="853" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="73.12" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (32,821,053 samples, 0.01%)</title><rect x="770.7" y="437" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.72" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (24,577,401 samples, 0.01%)</title><rect x="313.1" y="1077" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="316.12" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (86,288,304 samples, 0.03%)</title><rect x="756.2" y="1029" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="759.16" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (35,429,184 samples, 0.01%)</title><rect x="538.0" y="1077" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="541.00" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (30,370,927 samples, 0.01%)</title><rect x="324.4" y="1029" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="327.42" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (130,199,917 samples, 0.05%)</title><rect x="294.9" y="1237" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="297.90" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (23,969,886 samples, 0.01%)</title><rect x="822.7" y="1173" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="825.68" y="1183.5" ></text>
</g>
<g >
<title>vfs_open (32,370,700 samples, 0.01%)</title><rect x="134.5" y="1541" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="137.51" y="1551.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (81,740,229 samples, 0.03%)</title><rect x="110.6" y="1045" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="113.62" y="1055.5" ></text>
</g>
<g >
<title>tcp_send_fin (165,262,521 samples, 0.06%)</title><rect x="268.6" y="1013" width="0.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="271.57" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (241,611,598 samples, 0.09%)</title><rect x="487.8" y="1173" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="490.78" y="1183.5" ></text>
</g>
<g >
<title>tcp_sendmsg (396,401,920 samples, 0.15%)</title><rect x="834.7" y="1269" width="1.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="837.65" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (39,432,853 samples, 0.01%)</title><rect x="25.7" y="1061" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="28.74" y="1071.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (28,808,091 samples, 0.01%)</title><rect x="1047.4" y="1109" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1050.36" y="1119.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (29,305,165 samples, 0.01%)</title><rect x="164.5" y="1077" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="167.50" y="1087.5" ></text>
</g>
<g >
<title>TimerManager::DelTimer (24,639,990 samples, 0.01%)</title><rect x="1113.8" y="1301" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1116.78" y="1311.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (145,279,774 samples, 0.05%)</title><rect x="421.3" y="1669" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="424.31" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,168,133,686 samples, 4.18%)</title><rect x="153.5" y="1317" width="49.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="156.52" y="1327.5" >std:..</text>
</g>
<g >
<title>std::unique_ptr&lt;EventLoopThreadPool, std::default_delete&lt;EventLoopThreadPool&gt; &gt;::operator (30,300,814 samples, 0.01%)</title><rect x="1162.7" y="1445" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1165.72" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (54,722,716 samples, 0.02%)</title><rect x="966.3" y="901" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="969.29" y="911.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, long, std::shared_ptr&lt;TimerManager::TimerNode&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (28,159,612 samples, 0.01%)</title><rect x="979.4" y="1493" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="982.43" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (181,489,564 samples, 0.07%)</title><rect x="793.9" y="997" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="796.89" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (50,229,380 samples, 0.02%)</title><rect x="401.2" y="1365" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="404.23" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (29,116,488 samples, 0.01%)</title><rect x="587.1" y="1045" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="590.13" y="1055.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (898,486,854 samples, 0.34%)</title><rect x="972.2" y="1365" width="4.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="975.25" y="1375.5" ></text>
</g>
<g >
<title>__fdget (43,156,896 samples, 0.02%)</title><rect x="1166.9" y="1365" width="0.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1169.93" y="1375.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;HttpConn,  (2,459,021,560 samples, 0.92%)</title><rect x="1151.5" y="1397" width="10.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1154.48" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (59,967,914 samples, 0.02%)</title><rect x="912.0" y="661" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.05" y="671.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (26,482,561 samples, 0.01%)</title><rect x="824.8" y="1349" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="827.82" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,304,021 samples, 0.01%)</title><rect x="205.8" y="581" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.78" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (252,634,690 samples, 0.09%)</title><rect x="629.3" y="1237" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="632.34" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="341" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="351.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;HttpConn::HttpConn (37,139,561 samples, 0.01%)</title><rect x="1159.7" y="1285" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1162.74" y="1295.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (80,180,028 samples, 0.03%)</title><rect x="963.8" y="1125" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="966.78" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (86,248,134 samples, 0.03%)</title><rect x="900.5" y="1093" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="903.53" y="1103.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (32,360,028 samples, 0.01%)</title><rect x="605.2" y="965" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="608.22" y="975.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (87,010,631 samples, 0.03%)</title><rect x="1068.6" y="917" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1071.62" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (26,686,973 samples, 0.01%)</title><rect x="1145.0" y="1429" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1148.02" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Executor (52,347,554 samples, 0.02%)</title><rect x="487.5" y="1333" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="490.47" y="1343.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (76,719,257 samples, 0.03%)</title><rect x="937.8" y="1029" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="940.82" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,214,658 samples, 0.01%)</title><rect x="259.9" y="645" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.90" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (24,742,388 samples, 0.01%)</title><rect x="203.3" y="1301" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="206.26" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (70,636,647 samples, 0.03%)</title><rect x="259.8" y="1125" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="262.84" y="1135.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (59,381,779 samples, 0.02%)</title><rect x="928.7" y="965" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="931.74" y="975.5" ></text>
</g>
<g >
<title>netvsc_poll (37,939,664 samples, 0.01%)</title><rect x="575.1" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="578.09" y="1567.5" ></text>
</g>
<g >
<title>do_epoll_ctl (40,201,993 samples, 0.02%)</title><rect x="1001.1" y="1237" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1004.12" y="1247.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (37,385,532 samples, 0.01%)</title><rect x="795.2" y="1045" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="798.23" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (52,629,808 samples, 0.02%)</title><rect x="63.7" y="645" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.66" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (117,445,646 samples, 0.04%)</title><rect x="1080.8" y="1013" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1083.81" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (222,587,049 samples, 0.08%)</title><rect x="327.0" y="1045" width="1.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="330.02" y="1055.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (24,486,766 samples, 0.01%)</title><rect x="856.8" y="1461" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="859.80" y="1471.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (109,528,086 samples, 0.04%)</title><rect x="679.1" y="1061" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="682.06" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (10,583,559,904 samples, 3.96%)</title><rect x="1003.9" y="1189" width="46.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1006.86" y="1199.5" >std:..</text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (200,864,503 samples, 0.08%)</title><rect x="395.3" y="1093" width="0.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="398.32" y="1103.5" ></text>
</g>
<g >
<title>do_user_addr_fault (77,425,277 samples, 0.03%)</title><rect x="128.7" y="1173" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="131.69" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (44,716,555 samples, 0.02%)</title><rect x="206.0" y="597" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.96" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (30,750,604 samples, 0.01%)</title><rect x="1013.0" y="1077" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1015.97" y="1087.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (112,130,549 samples, 0.04%)</title><rect x="254.8" y="1077" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="257.76" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (24,839,728 samples, 0.01%)</title><rect x="1030.6" y="1045" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1033.63" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (23,917,563 samples, 0.01%)</title><rect x="615.0" y="1013" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="617.95" y="1023.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (35,650,707 samples, 0.01%)</title><rect x="1147.7" y="1429" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1150.67" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (25,443,464 samples, 0.01%)</title><rect x="838.6" y="1493" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (56,711,972 samples, 0.02%)</title><rect x="829.4" y="1237" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="832.41" y="1247.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;false&gt;::__uninit_default_n&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long&gt; (24,474,717 samples, 0.01%)</title><rect x="62.9" y="1253" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="65.91" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (191,583,216 samples, 0.07%)</title><rect x="205.4" y="965" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.45" y="975.5" ></text>
</g>
<g >
<title>do_epoll_ctl (32,791,134 samples, 0.01%)</title><rect x="294.4" y="1237" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="297.40" y="1247.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (63,829,772 samples, 0.02%)</title><rect x="236.6" y="1029" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="239.65" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,659,241,488 samples, 1.37%)</title><rect x="1056.0" y="1125" width="16.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1058.97" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (93,099,182 samples, 0.03%)</title><rect x="61.9" y="1269" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="64.89" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,650,505 samples, 0.01%)</title><rect x="912.1" y="261" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="915.10" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (624,647,550 samples, 0.23%)</title><rect x="372.8" y="1029" width="2.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="375.84" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,418,233 samples, 0.01%)</title><rect x="629.8" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.78" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (183,015,983 samples, 0.07%)</title><rect x="487.9" y="917" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="490.86" y="927.5" ></text>
</g>
<g >
<title>__dynamic_cast (42,365,772 samples, 0.02%)</title><rect x="385.2" y="1077" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="388.20" y="1087.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (27,105,455 samples, 0.01%)</title><rect x="360.9" y="901" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="363.92" y="911.5" ></text>
</g>
<g >
<title>irq_exit_rcu (25,126,041 samples, 0.01%)</title><rect x="996.4" y="1637" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="999.43" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (88,148,778 samples, 0.03%)</title><rect x="87.0" y="981" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="90.03" y="991.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (37,364,978 samples, 0.01%)</title><rect x="432.9" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="435.87" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (38,446,668 samples, 0.01%)</title><rect x="575.1" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="578.08" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (185,769,526 samples, 0.07%)</title><rect x="629.5" y="949" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.46" y="959.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (93,239,442 samples, 0.03%)</title><rect x="515.0" y="997" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="517.98" y="1007.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (37,214,567 samples, 0.01%)</title><rect x="1053.3" y="1141" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1056.27" y="1151.5" ></text>
</g>
<g >
<title>__ip_local_out (58,862,387 samples, 0.02%)</title><rect x="977.4" y="1125" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="980.45" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,615,131,195 samples, 1.35%)</title><rect x="913.4" y="1013" width="16.0" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="916.43" y="1023.5" ></text>
</g>
<g >
<title>handle_mm_fault (45,572,701 samples, 0.02%)</title><rect x="977.0" y="1157" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="979.98" y="1167.5" ></text>
</g>
<g >
<title>TimerManager::AddTimer (28,827,160 samples, 0.01%)</title><rect x="1121.0" y="1461" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1123.97" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (237,354,603 samples, 0.09%)</title><rect x="63.1" y="1189" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.09" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (165,785,505 samples, 0.06%)</title><rect x="1041.5" y="1045" width="0.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1044.52" y="1055.5" ></text>
</g>
<g >
<title>__fput_sync (293,234,235 samples, 0.11%)</title><rect x="1117.0" y="1125" width="1.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1120.01" y="1135.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (865,392,128 samples, 0.32%)</title><rect x="265.8" y="1349" width="3.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="268.78" y="1359.5" ></text>
</g>
<g >
<title>operator delete (49,390,796 samples, 0.02%)</title><rect x="1035.2" y="1013" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1038.19" y="1023.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (68,611,934 samples, 0.03%)</title><rect x="222.4" y="981" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="225.42" y="991.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (32,918,816 samples, 0.01%)</title><rect x="972.0" y="1269" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="975.01" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,717,528,624 samples, 1.39%)</title><rect x="1055.9" y="1189" width="16.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1058.88" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (23,735,330 samples, 0.01%)</title><rect x="556.9" y="1093" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1103.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (76,281,676 samples, 0.03%)</title><rect x="976.9" y="1205" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="979.94" y="1215.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (43,766,034 samples, 0.02%)</title><rect x="454.6" y="1077" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="457.56" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,574,003,615 samples, 1.34%)</title><rect x="772.5" y="1061" width="15.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="775.46" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (68,708,836 samples, 0.03%)</title><rect x="719.9" y="1205" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="722.95" y="1215.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (143,868,088 samples, 0.05%)</title><rect x="689.2" y="1397" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="692.16" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,120,954 samples, 0.09%)</title><rect x="487.8" y="1189" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.77" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,918,044,662 samples, 1.47%)</title><rect x="1089.9" y="1237" width="17.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1092.88" y="1247.5" ></text>
</g>
<g >
<title>unmap_region.constprop.0 (163,481,257 samples, 0.06%)</title><rect x="973.4" y="1061" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="976.41" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (28,149,442 samples, 0.01%)</title><rect x="344.8" y="1317" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="347.77" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (120,931,662 samples, 0.05%)</title><rect x="1010.1" y="1093" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1013.09" y="1103.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (12,257,665,916 samples, 4.59%)</title><rect x="435.3" y="1397" width="54.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="438.26" y="1407.5" >HttpR..</text>
</g>
<g >
<title>ip_finish_output2 (40,177,631 samples, 0.02%)</title><rect x="975.5" y="853" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="978.52" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (45,346,860 samples, 0.02%)</title><rect x="450.0" y="1061" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="453.02" y="1071.5" ></text>
</g>
<g >
<title>x64_sys_call (102,784,643 samples, 0.04%)</title><rect x="840.3" y="1621" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="843.27" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (50,413,289 samples, 0.02%)</title><rect x="506.4" y="1157" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="509.40" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (50,001,839 samples, 0.02%)</title><rect x="343.6" y="1157" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="346.61" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (331,576,897 samples, 0.12%)</title><rect x="403.3" y="1365" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="406.32" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (314,842,051 samples, 0.12%)</title><rect x="1117.0" y="1173" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1119.96" y="1183.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (72,284,416 samples, 0.03%)</title><rect x="1000.1" y="1685" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1003.12" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (28,927,009 samples, 0.01%)</title><rect x="550.2" y="997" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="553.21" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (23,247,422 samples, 0.01%)</title><rect x="413.6" y="1477" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="416.57" y="1487.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (108,660,448 samples, 0.04%)</title><rect x="1068.5" y="933" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1071.53" y="943.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (23,146,169 samples, 0.01%)</title><rect x="484.0" y="1157" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="486.95" y="1167.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (1,555,082,844 samples, 0.58%)</title><rect x="123.4" y="1477" width="6.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="126.44" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (374,290,583 samples, 0.14%)</title><rect x="690.3" y="1157" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="693.28" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (54,208,279 samples, 0.02%)</title><rect x="343.6" y="1189" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="346.60" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (28,435,778 samples, 0.01%)</title><rect x="630.0" y="197" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="633.00" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (235,763,222 samples, 0.09%)</title><rect x="487.8" y="1125" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="490.80" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (219,561,501 samples, 0.08%)</title><rect x="1054.2" y="1221" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.24" y="1231.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (28,069,782 samples, 0.01%)</title><rect x="728.8" y="1029" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="731.76" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (29,116,488 samples, 0.01%)</title><rect x="587.1" y="1061" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="590.13" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (24,206,978 samples, 0.01%)</title><rect x="556.9" y="1205" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (213,800,068 samples, 0.08%)</title><rect x="629.4" y="1093" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.39" y="1103.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (22,830,410 samples, 0.01%)</title><rect x="37.0" y="997" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="40.03" y="1007.5" ></text>
</g>
<g >
<title>ip_list_rcv (22,933,106 samples, 0.01%)</title><rect x="991.5" y="1461" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="994.55" y="1471.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (160,217,034 samples, 0.06%)</title><rect x="33.0" y="1045" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="36.04" y="1055.5" ></text>
</g>
<g >
<title>clear_bhb_loop (35,730,276 samples, 0.01%)</title><rect x="1164.5" y="1429" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1167.47" y="1439.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (24,511,442 samples, 0.01%)</title><rect x="709.8" y="1621" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="712.76" y="1631.5" ></text>
</g>
<g >
<title>TimerManager::AddTimer (28,019,054 samples, 0.01%)</title><rect x="696.0" y="1461" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="699.02" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="677" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="687.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (414,060,451 samples, 0.16%)</title><rect x="834.6" y="1317" width="1.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="837.61" y="1327.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (82,670,264 samples, 0.03%)</title><rect x="958.9" y="1045" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="961.87" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (73,815,903 samples, 0.03%)</title><rect x="829.3" y="1285" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="832.34" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (27,696,246 samples, 0.01%)</title><rect x="909.2" y="1301" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="912.20" y="1311.5" ></text>
</g>
<g >
<title>__fput (297,416,544 samples, 0.11%)</title><rect x="832.5" y="1109" width="1.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="835.53" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,989,111 samples, 0.01%)</title><rect x="630.0" y="213" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="633.00" y="223.5" ></text>
</g>
<g >
<title>HttpRequest::~HttpRequest (30,437,130 samples, 0.01%)</title><rect x="830.1" y="1189" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="833.11" y="1199.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (170,940,132 samples, 0.06%)</title><rect x="759.3" y="1093" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.32" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (26,021,965 samples, 0.01%)</title><rect x="911.9" y="549" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.90" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,862,523 samples, 0.02%)</title><rect x="488.4" y="677" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="491.35" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (335,812,643 samples, 0.13%)</title><rect x="832.5" y="1189" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="835.47" y="1199.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (803,384,684 samples, 0.30%)</title><rect x="124.3" y="1333" width="3.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="127.31" y="1343.5" ></text>
</g>
<g >
<title>down_write_killable (93,413,829 samples, 0.03%)</title><rect x="121.9" y="1285" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="124.88" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,164,388,545 samples, 4.18%)</title><rect x="11.0" y="1301" width="49.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.97" y="1311.5" >std:..</text>
</g>
<g >
<title>[unknown] (25,399,689 samples, 0.01%)</title><rect x="1011.5" y="1077" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1014.48" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::_M_default_initialize (23,888,254 samples, 0.01%)</title><rect x="770.3" y="1301" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="773.34" y="1311.5" ></text>
</g>
<g >
<title>selinux_d_instantiate (94,312,818 samples, 0.04%)</title><rect x="1177.1" y="1285" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1180.13" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_writev (471,494,235 samples, 0.18%)</title><rect x="410.9" y="1381" width="2.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="413.89" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (205,384,966 samples, 0.08%)</title><rect x="347.2" y="1029" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.20" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (76,147,185 samples, 0.03%)</title><rect x="736.1" y="1013" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="739.14" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (73,459,426 samples, 0.03%)</title><rect x="435.5" y="1157" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="438.51" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (201,885,430 samples, 0.08%)</title><rect x="782.1" y="933" width="0.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="785.09" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,002,866 samples, 0.01%)</title><rect x="771.2" y="421" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="774.18" y="431.5" ></text>
</g>
<g >
<title>_raw_read_lock_irqsave (39,299,964 samples, 0.01%)</title><rect x="1155.3" y="1077" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1158.25" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Executor (38,013,934 samples, 0.01%)</title><rect x="770.3" y="1333" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="773.29" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (128,815,819 samples, 0.05%)</title><rect x="120.2" y="1381" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="123.19" y="1391.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (218,151,827 samples, 0.08%)</title><rect x="780.4" y="885" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="783.35" y="895.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (23,733,772 samples, 0.01%)</title><rect x="958.5" y="1061" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="961.50" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="485" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (119,115,931 samples, 0.04%)</title><rect x="978.6" y="1541" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="981.63" y="1551.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (39,821,047 samples, 0.01%)</title><rect x="1108.1" y="1189" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1111.07" y="1199.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (53,831,058 samples, 0.02%)</title><rect x="1098.9" y="949" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1101.93" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,737,478 samples, 0.01%)</title><rect x="205.8" y="533" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.80" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (43,462,944 samples, 0.02%)</title><rect x="487.9" y="597" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="490.93" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,858,238 samples, 0.02%)</title><rect x="912.1" y="629" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.05" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_Scanner (22,795,566 samples, 0.01%)</title><rect x="61.1" y="1333" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="64.05" y="1343.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (23,449,116 samples, 0.01%)</title><rect x="1050.3" y="1157" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1053.34" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (30,518,562 samples, 0.01%)</title><rect x="643.2" y="885" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="646.21" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (43,612,177 samples, 0.02%)</title><rect x="578.7" y="1141" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="581.69" y="1151.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (27,064,314 samples, 0.01%)</title><rect x="255.3" y="1093" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="258.28" y="1103.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (30,919,842 samples, 0.01%)</title><rect x="296.2" y="1093" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="299.25" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (117,129,068 samples, 0.04%)</title><rect x="940.4" y="1013" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="943.44" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (187,727,795 samples, 0.07%)</title><rect x="63.2" y="965" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.18" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (34,117,281 samples, 0.01%)</title><rect x="876.4" y="1013" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="879.38" y="1023.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (176,453,036 samples, 0.07%)</title><rect x="1081.5" y="965" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1084.55" y="975.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (48,353,951 samples, 0.02%)</title><rect x="818.5" y="1045" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="821.53" y="1055.5" ></text>
</g>
<g >
<title>x64_sys_call (97,084,087 samples, 0.04%)</title><rect x="264.4" y="1397" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="267.36" y="1407.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (90,253,033 samples, 0.03%)</title><rect x="401.7" y="1413" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="404.74" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (30,173,995 samples, 0.01%)</title><rect x="239.4" y="1061" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="242.37" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (22,638,751 samples, 0.01%)</title><rect x="22.3" y="1077" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="25.32" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (105,706,146 samples, 0.04%)</title><rect x="935.7" y="981" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="938.65" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (24,200,037 samples, 0.01%)</title><rect x="645.1" y="949" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="648.14" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (32,035,255 samples, 0.01%)</title><rect x="774.2" y="949" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="777.17" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_read (100,352,885 samples, 0.04%)</title><rect x="828.5" y="1381" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="831.51" y="1391.5" ></text>
</g>
<g >
<title>EventLoop::DelChannel (179,696,146 samples, 0.07%)</title><rect x="548.1" y="1413" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="551.15" y="1423.5" ></text>
</g>
<g >
<title>do_epoll_ctl (39,076,182 samples, 0.01%)</title><rect x="153.0" y="1237" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="156.02" y="1247.5" ></text>
</g>
<g >
<title>EventLoop::Loop (27,118,685,358 samples, 10.16%)</title><rect x="294.2" y="1573" width="119.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="297.17" y="1583.5" >EventLoop::Loop</text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (102,922,526 samples, 0.04%)</title><rect x="938.6" y="1013" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="941.60" y="1023.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (30,721,597 samples, 0.01%)</title><rect x="272.8" y="1509" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="275.78" y="1519.5" ></text>
</g>
<g >
<title>napi_complete_done (22,974,313 samples, 0.01%)</title><rect x="443.5" y="965" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="446.49" y="975.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::AddChannel (103,992,768 samples, 0.04%)</title><rect x="554.9" y="1509" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="557.88" y="1519.5" ></text>
</g>
<g >
<title>__munmap (425,685,481 samples, 0.16%)</title><rect x="1114.9" y="1189" width="1.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1117.92" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,506,123,810 samples, 1.31%)</title><rect x="631.4" y="1013" width="15.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="634.37" y="1023.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_whichword (27,819,653 samples, 0.01%)</title><rect x="1048.6" y="1077" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1051.56" y="1087.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (27,726,394 samples, 0.01%)</title><rect x="547.8" y="1269" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="550.77" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (25,760,972 samples, 0.01%)</title><rect x="1063.7" y="869" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1066.72" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (50,041,561 samples, 0.02%)</title><rect x="1109.7" y="1365" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1112.71" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (34,265,715 samples, 0.01%)</title><rect x="347.5" y="549" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.55" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (53,919,698 samples, 0.02%)</title><rect x="347.7" y="613" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.74" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (401,164,195 samples, 0.15%)</title><rect x="1094.0" y="1077" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1096.96" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (68,564,574 samples, 0.03%)</title><rect x="1026.5" y="1013" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1029.50" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (27,309,435 samples, 0.01%)</title><rect x="488.4" y="229" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="491.40" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (36,753,806 samples, 0.01%)</title><rect x="836.8" y="1445" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="839.82" y="1455.5" ></text>
</g>
<g >
<title>dput (63,807,267 samples, 0.02%)</title><rect x="551.2" y="1093" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="554.22" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (23,162,380 samples, 0.01%)</title><rect x="556.9" y="885" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (25,824,910 samples, 0.01%)</title><rect x="226.0" y="1061" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="229.03" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_writev (457,518,634 samples, 0.17%)</title><rect x="834.5" y="1381" width="2.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="837.51" y="1391.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (141,734,738 samples, 0.05%)</title><rect x="1129.3" y="1669" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1132.30" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (237,626,063 samples, 0.09%)</title><rect x="63.1" y="1205" width="1.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="66.09" y="1215.5" ></text>
</g>
<g >
<title>ksys_write (515,863,526 samples, 0.19%)</title><rect x="1154.0" y="1173" width="2.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1156.95" y="1183.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (62,592,392 samples, 0.02%)</title><rect x="533.8" y="949" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="536.79" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (40,648,889 samples, 0.02%)</title><rect x="103.1" y="1077" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="106.12" y="1087.5" ></text>
</g>
<g >
<title>epoll_ctl (59,416,365 samples, 0.02%)</title><rect x="434.8" y="1317" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="437.84" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (181,827,206 samples, 0.07%)</title><rect x="770.7" y="853" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.67" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,389,000 samples, 0.02%)</title><rect x="488.4" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.37" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,861,872,631 samples, 1.45%)</title><rect x="1090.0" y="1205" width="17.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1092.96" y="1215.5" ></text>
</g>
<g >
<title>thp_get_unmapped_area (34,910,781 samples, 0.01%)</title><rect x="262.5" y="1253" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="265.47" y="1263.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (798,094,663 samples, 0.30%)</title><rect x="124.3" y="1269" width="3.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="127.32" y="1279.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (69,336,920 samples, 0.03%)</title><rect x="254.1" y="1061" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="257.14" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (117,127,476 samples, 0.04%)</title><rect x="911.8" y="821" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.84" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (72,306,788 samples, 0.03%)</title><rect x="472.8" y="1029" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="475.81" y="1039.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (91,242,218 samples, 0.03%)</title><rect x="692.9" y="933" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="695.88" y="943.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (31,522,311 samples, 0.01%)</title><rect x="117.9" y="1189" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="120.88" y="1199.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (31,096,505 samples, 0.01%)</title><rect x="401.5" y="1381" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="404.53" y="1391.5" ></text>
</g>
<g >
<title>handle_softirqs (40,866,683 samples, 0.02%)</title><rect x="973.7" y="933" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="976.69" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (77,598,298 samples, 0.03%)</title><rect x="824.0" y="997" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="827.01" y="1007.5" ></text>
</g>
<g >
<title>ip_finish_output (46,531,062 samples, 0.02%)</title><rect x="833.4" y="885" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="836.39" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (57,455,621 samples, 0.02%)</title><rect x="768.3" y="1333" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="771.29" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (24,098,407 samples, 0.01%)</title><rect x="400.8" y="309" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="403.78" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (255,538,450 samples, 0.10%)</title><rect x="593.5" y="1013" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="596.48" y="1023.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (23,796,211 samples, 0.01%)</title><rect x="1107.8" y="1317" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1110.78" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_resize (29,191,639 samples, 0.01%)</title><rect x="770.2" y="1333" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="773.16" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,563,818,086 samples, 1.33%)</title><rect x="772.5" y="1029" width="15.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="775.48" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,827,539 samples, 0.02%)</title><rect x="543.2" y="949" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.19" y="959.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (134,097,121 samples, 0.05%)</title><rect x="975.3" y="997" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="978.30" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (34,178,571 samples, 0.01%)</title><rect x="660.9" y="997" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="663.87" y="1007.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (27,429,978 samples, 0.01%)</title><rect x="716.3" y="1477" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="719.30" y="1487.5" ></text>
</g>
<g >
<title>ip_list_rcv (26,132,395 samples, 0.01%)</title><rect x="267.0" y="821" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="270.02" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (36,613,836 samples, 0.01%)</title><rect x="683.5" y="1237" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="686.54" y="1247.5" ></text>
</g>
<g >
<title>down_write_killable (49,059,218 samples, 0.02%)</title><rect x="832.1" y="1093" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="835.05" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (38,244,693 samples, 0.01%)</title><rect x="473.9" y="1061" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="476.91" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (93,680,688 samples, 0.04%)</title><rect x="205.8" y="709" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.76" y="719.5" ></text>
</g>
<g >
<title>handle_softirqs (28,529,700 samples, 0.01%)</title><rect x="1116.0" y="933" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1118.96" y="943.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (247,562,566 samples, 0.09%)</title><rect x="814.3" y="1045" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="817.35" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (58,427,815 samples, 0.02%)</title><rect x="347.2" y="789" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.25" y="799.5" ></text>
</g>
<g >
<title>destroy_inode (27,231,698 samples, 0.01%)</title><rect x="1117.2" y="1013" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1120.21" y="1023.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (250,922,477 samples, 0.09%)</title><rect x="253.3" y="1077" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="256.33" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (194,580,102 samples, 0.07%)</title><rect x="923.5" y="933" width="0.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="926.49" y="943.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (45,646,535 samples, 0.02%)</title><rect x="946.7" y="1093" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="949.75" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (27,946,456 samples, 0.01%)</title><rect x="1026.1" y="1029" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1029.14" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (229,655,297 samples, 0.09%)</title><rect x="776.8" y="917" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="779.81" y="927.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (24,576,742 samples, 0.01%)</title><rect x="187.0" y="1093" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="189.99" y="1103.5" ></text>
</g>
<g >
<title>netvsc_poll (26,226,799 samples, 0.01%)</title><rect x="550.2" y="885" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="553.22" y="895.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (215,584,702 samples, 0.08%)</title><rect x="1026.3" y="1029" width="0.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1029.28" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (45,475,963 samples, 0.02%)</title><rect x="347.8" y="405" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.75" y="415.5" ></text>
</g>
<g >
<title>epoll_wait (27,851,879 samples, 0.01%)</title><rect x="979.2" y="1541" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="982.20" y="1551.5" ></text>
</g>
<g >
<title>rep_movs_alternative (110,251,473 samples, 0.04%)</title><rect x="270.2" y="1221" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="273.20" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (269,580,651 samples, 0.10%)</title><rect x="1054.2" y="1333" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1057.16" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (51,590,702 samples, 0.02%)</title><rect x="684.0" y="805" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="687.01" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (55,914,509 samples, 0.02%)</title><rect x="1016.1" y="1061" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1019.08" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (63,192,802 samples, 0.02%)</title><rect x="965.7" y="1381" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="968.72" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (31,189,805 samples, 0.01%)</title><rect x="822.7" y="1205" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="825.65" y="1215.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (30,637,220 samples, 0.01%)</title><rect x="354.6" y="933" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="357.60" y="943.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (32,740,304 samples, 0.01%)</title><rect x="247.3" y="1077" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="250.28" y="1087.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (29,886,438 samples, 0.01%)</title><rect x="230.5" y="1045" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="233.49" y="1055.5" ></text>
</g>
<g >
<title>inet_recvmsg (52,950,755 samples, 0.02%)</title><rect x="971.0" y="1301" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="973.98" y="1311.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (23,035,645 samples, 0.01%)</title><rect x="575.1" y="1413" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="578.10" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (36,241,229 samples, 0.01%)</title><rect x="272.2" y="1397" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="275.22" y="1407.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (27,620,378 samples, 0.01%)</title><rect x="727.0" y="933" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="729.97" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (30,564,999 samples, 0.01%)</title><rect x="105.1" y="1013" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="108.08" y="1023.5" ></text>
</g>
<g >
<title>[web-server] (37,156,005 samples, 0.01%)</title><rect x="210.1" y="933" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="213.07" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (109,050,935 samples, 0.04%)</title><rect x="688.5" y="1429" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="691.53" y="1439.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (48,891,741 samples, 0.02%)</title><rect x="222.7" y="981" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="225.72" y="991.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (23,511,693 samples, 0.01%)</title><rect x="856.8" y="1397" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="859.80" y="1407.5" ></text>
</g>
<g >
<title>_int_malloc (39,467,613 samples, 0.01%)</title><rect x="428.9" y="1685" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="431.88" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (42,555,371 samples, 0.02%)</title><rect x="1109.0" y="1397" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1112.03" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (521,309,404 samples, 0.20%)</title><rect x="451.1" y="1029" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="454.13" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (383,272,008 samples, 0.14%)</title><rect x="266.1" y="1157" width="1.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="269.14" y="1167.5" ></text>
</g>
<g >
<title>exc_page_fault (88,354,195 samples, 0.03%)</title><rect x="411.3" y="1189" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="414.30" y="1199.5" ></text>
</g>
<g >
<title>do_syscall_64 (51,639,294 samples, 0.02%)</title><rect x="1001.1" y="1285" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1004.08" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,780,375,736 samples, 4.41%)</title><rect x="913.1" y="1333" width="52.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="916.12" y="1343.5" >std::..</text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (52,683,102 samples, 0.02%)</title><rect x="1030.7" y="1045" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1033.74" y="1055.5" ></text>
</g>
<g >
<title>ip_finish_output (42,555,870 samples, 0.02%)</title><rect x="1117.8" y="885" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1120.80" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,632,592,111 samples, 3.98%)</title><rect x="155.6" y="1269" width="47.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="158.63" y="1279.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (422,084,977 samples, 0.16%)</title><rect x="103.5" y="1077" width="1.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="106.50" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,575,327,689 samples, 4.33%)</title><rect x="435.3" y="1381" width="51.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="438.33" y="1391.5" >std::..</text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (27,643,329 samples, 0.01%)</title><rect x="235.8" y="1045" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="238.79" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (4,045,057,555 samples, 1.51%)</title><rect x="524.2" y="1285" width="17.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="527.19" y="1295.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (49,394,203 samples, 0.02%)</title><rect x="1184.5" y="1125" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1187.55" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (34,667,266 samples, 0.01%)</title><rect x="1059.7" y="933" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1062.72" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::function&lt;void  (24,622,602 samples, 0.01%)</title><rect x="1157.9" y="1125" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1160.92" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (404,969,607 samples, 0.15%)</title><rect x="1001.6" y="1269" width="1.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1004.58" y="1279.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (780,977,844 samples, 0.29%)</title><rect x="549.0" y="1285" width="3.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="552.00" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (55,397,948 samples, 0.02%)</title><rect x="400.7" y="757" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="403.73" y="767.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (36,969,865 samples, 0.01%)</title><rect x="1068.0" y="901" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1071.03" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (10,463,697,647 samples, 3.92%)</title><rect x="297.2" y="1173" width="46.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="300.20" y="1183.5" >std:..</text>
</g>
<g >
<title>__x64_sys_epoll_wait (28,815,567 samples, 0.01%)</title><rect x="130.9" y="1477" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="133.88" y="1487.5" ></text>
</g>
<g >
<title>handle_mm_fault (46,062,896 samples, 0.02%)</title><rect x="270.3" y="1157" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="273.32" y="1167.5" ></text>
</g>
<g >
<title>__napi_poll (23,764,110 samples, 0.01%)</title><rect x="996.4" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="999.43" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (58,760,142 samples, 0.02%)</title><rect x="12.1" y="1205" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="15.14" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (30,921,499 samples, 0.01%)</title><rect x="645.9" y="949" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="648.88" y="959.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (105,190,309 samples, 0.04%)</title><rect x="161.9" y="1077" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="164.90" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (356,670,671 samples, 0.13%)</title><rect x="262.3" y="1381" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="265.33" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (117,380,452 samples, 0.04%)</title><rect x="872.3" y="1077" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="875.26" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (23,901,144 samples, 0.01%)</title><rect x="1074.8" y="1061" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1077.76" y="1071.5" ></text>
</g>
<g >
<title>ip_finish_output (39,047,194 samples, 0.01%)</title><rect x="551.9" y="885" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="554.92" y="895.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (47,089,801 samples, 0.02%)</title><rect x="824.7" y="1397" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="827.73" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (24,542,371 samples, 0.01%)</title><rect x="1051.6" y="1221" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1054.63" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (112,538,758 samples, 0.04%)</title><rect x="264.3" y="1429" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="267.29" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,775,987,948 samples, 1.41%)</title><rect x="64.8" y="1189" width="16.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="67.83" y="1199.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (34,763,397 samples, 0.01%)</title><rect x="530.7" y="1077" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="533.73" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (72,375,119 samples, 0.03%)</title><rect x="577.6" y="1125" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="580.64" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (61,593,593 samples, 0.02%)</title><rect x="1109.7" y="1397" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1112.67" y="1407.5" ></text>
</g>
<g >
<title>x64_sys_call (269,437,013 samples, 0.10%)</title><rect x="551.2" y="1157" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="554.19" y="1167.5" ></text>
</g>
<g >
<title>[web-server] (23,950,661 samples, 0.01%)</title><rect x="865.8" y="1093" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="868.77" y="1103.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (47,628,796 samples, 0.02%)</title><rect x="400.2" y="1301" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="403.17" y="1311.5" ></text>
</g>
<g >
<title>____fput (35,606,469 samples, 0.01%)</title><rect x="830.6" y="1093" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="833.58" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (45,377,676 samples, 0.02%)</title><rect x="824.1" y="629" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.05" y="639.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (33,755,841 samples, 0.01%)</title><rect x="491.9" y="933" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="494.91" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (22,881,860 samples, 0.01%)</title><rect x="1038.2" y="1045" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1041.15" y="1055.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (25,340,640 samples, 0.01%)</title><rect x="965.8" y="1125" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="968.84" y="1135.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (1,706,048,090 samples, 0.64%)</title><rect x="829.1" y="1493" width="7.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="832.07" y="1503.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (52,360,738 samples, 0.02%)</title><rect x="220.1" y="901" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="223.14" y="911.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (47,794,326 samples, 0.02%)</title><rect x="551.3" y="1061" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="554.29" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (59,027,769 samples, 0.02%)</title><rect x="531.2" y="1077" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="534.17" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,790,831,934 samples, 1.42%)</title><rect x="789.0" y="1237" width="16.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="791.98" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (51,672,871 samples, 0.02%)</title><rect x="247.9" y="1077" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="250.88" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (468,217,376 samples, 0.18%)</title><rect x="153.5" y="1285" width="2.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="156.53" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (130,247,964 samples, 0.05%)</title><rect x="731.8" y="1077" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="734.78" y="1087.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (25,732,642 samples, 0.01%)</title><rect x="1027.5" y="1029" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1030.51" y="1039.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (89,939,029 samples, 0.03%)</title><rect x="294.3" y="1429" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="297.29" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,636,038 samples, 0.01%)</title><rect x="911.9" y="613" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.89" y="623.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (225,700,262 samples, 0.08%)</title><rect x="250.0" y="1029" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="252.97" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (72,074,677 samples, 0.03%)</title><rect x="637.9" y="917" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="640.88" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (41,991,102 samples, 0.02%)</title><rect x="823.5" y="1269" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="826.54" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (37,851,610 samples, 0.01%)</title><rect x="592.0" y="1061" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="595.02" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,269,349 samples, 0.01%)</title><rect x="347.3" y="261" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.31" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (30,499,221 samples, 0.01%)</title><rect x="521.1" y="1061" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="524.14" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,861,285,368 samples, 1.45%)</title><rect x="930.5" y="1237" width="17.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="933.53" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (94,592,483 samples, 0.04%)</title><rect x="204.2" y="1253" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="207.17" y="1263.5" ></text>
</g>
<g >
<title>__strxfrm_l (203,834,589 samples, 0.08%)</title><rect x="286.1" y="1653" width="0.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="289.08" y="1663.5" ></text>
</g>
<g >
<title>__fput (282,790,983 samples, 0.11%)</title><rect x="974.7" y="1109" width="1.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="977.74" y="1119.5" ></text>
</g>
<g >
<title>irq_exit_rcu (33,240,015 samples, 0.01%)</title><rect x="408.0" y="965" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="411.05" y="975.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (28,395,778 samples, 0.01%)</title><rect x="533.9" y="933" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="536.94" y="943.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (155,111,110 samples, 0.06%)</title><rect x="252.1" y="1061" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="255.13" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_realloc_insert&lt;char&gt; (25,000,304 samples, 0.01%)</title><rect x="861.9" y="1109" width="0.1" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="864.92" y="1119.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (41,514,824 samples, 0.02%)</title><rect x="1067.7" y="917" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1070.74" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (39,902,268 samples, 0.01%)</title><rect x="259.9" y="725" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="262.89" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (51,536,346 samples, 0.02%)</title><rect x="1050.8" y="1157" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1053.78" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (26,645,143 samples, 0.01%)</title><rect x="484.5" y="1093" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="487.48" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (71,629,778 samples, 0.03%)</title><rect x="824.0" y="933" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="827.02" y="943.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (25,550,867 samples, 0.01%)</title><rect x="1103.9" y="1093" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1106.93" y="1103.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (24,196,285 samples, 0.01%)</title><rect x="81.6" y="1029" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="84.58" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (51,916,705 samples, 0.02%)</title><rect x="347.3" y="709" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.27" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (82,483,394 samples, 0.03%)</title><rect x="903.5" y="1093" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="906.45" y="1103.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (41,218,671 samples, 0.02%)</title><rect x="811.9" y="1077" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="814.87" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (57,369,820 samples, 0.02%)</title><rect x="770.7" y="821" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="773.67" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (65,437,134 samples, 0.02%)</title><rect x="658.0" y="997" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="661.00" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (409,692,393 samples, 0.15%)</title><rect x="911.0" y="1349" width="1.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="913.97" y="1359.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (278,361,948 samples, 0.10%)</title><rect x="1125.2" y="1669" width="1.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1128.20" y="1679.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,422,297,457 samples, 10.27%)</title><rect x="10.3" y="1653" width="121.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.29" y="1663.5" >std::thread::_I..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (39,679,352 samples, 0.01%)</title><rect x="662.6" y="1061" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="665.56" y="1071.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (12,026,459,006 samples, 4.50%)</title><rect x="1055.8" y="1397" width="53.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1058.82" y="1407.5" >HttpR..</text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (30,530,757 samples, 0.01%)</title><rect x="223.8" y="1061" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="226.76" y="1071.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (70,594,753 samples, 0.03%)</title><rect x="398.4" y="1109" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="401.38" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (43,408,918 samples, 0.02%)</title><rect x="365.1" y="1093" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="368.09" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (188,921,387 samples, 0.07%)</title><rect x="487.9" y="965" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="490.86" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (35,566,840 samples, 0.01%)</title><rect x="355.2" y="933" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="358.25" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (58,889,357 samples, 0.02%)</title><rect x="538.4" y="1045" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="541.44" y="1055.5" ></text>
</g>
<g >
<title>x64_sys_call (307,292,038 samples, 0.12%)</title><rect x="1117.0" y="1157" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1120.00" y="1167.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (45,089,911 samples, 0.02%)</title><rect x="409.8" y="837" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="412.82" y="847.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (149,363,026 samples, 0.06%)</title><rect x="1119.8" y="1157" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1122.77" y="1167.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (25,369,040 samples, 0.01%)</title><rect x="138.9" y="1653" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="141.95" y="1663.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (24,734,606 samples, 0.01%)</title><rect x="835.9" y="1013" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="838.85" y="1023.5" ></text>
</g>
<g >
<title>dequeue_entity (40,219,868 samples, 0.02%)</title><rect x="1183.8" y="1429" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1186.84" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,188,008,881 samples, 4.19%)</title><rect x="294.9" y="1301" width="49.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="297.88" y="1311.5" >std:..</text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (38,357,777 samples, 0.01%)</title><rect x="260.6" y="1381" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="263.58" y="1391.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (27,914,016 samples, 0.01%)</title><rect x="234.5" y="1029" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="237.54" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (29,945,918 samples, 0.01%)</title><rect x="927.1" y="949" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="930.14" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,914,737,465 samples, 1.47%)</title><rect x="665.2" y="1189" width="17.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="668.24" y="1199.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (47,706,487 samples, 0.02%)</title><rect x="733.7" y="1061" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="736.69" y="1071.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (524,726,694 samples, 0.20%)</title><rect x="603.5" y="997" width="2.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="606.52" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (43,454,279 samples, 0.02%)</title><rect x="259.9" y="837" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="262.89" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (33,179,414 samples, 0.01%)</title><rect x="385.6" y="1077" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="388.62" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,282,494 samples, 0.03%)</title><rect x="400.7" y="1285" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.67" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (30,127,571 samples, 0.01%)</title><rect x="543.3" y="501" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="546.26" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (258,369,252 samples, 0.10%)</title><rect x="27.1" y="1013" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="30.07" y="1023.5" ></text>
</g>
<g >
<title>epoll_ctl (87,730,845 samples, 0.03%)</title><rect x="265.1" y="1301" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="268.09" y="1311.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;EventLoop&gt;::shared_ptr (102,923,604 samples, 0.04%)</title><rect x="1144.3" y="1429" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1147.25" y="1439.5" ></text>
</g>
<g >
<title>tcp_push (221,941,653 samples, 0.08%)</title><rect x="411.8" y="1237" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="414.75" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,987,731 samples, 0.01%)</title><rect x="630.0" y="357" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.97" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (98,906,058 samples, 0.04%)</title><rect x="1054.6" y="837" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.63" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,663,381,604 samples, 1.37%)</title><rect x="1073.0" y="1109" width="16.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1076.00" y="1119.5" ></text>
</g>
<g >
<title>exc_page_fault (91,454,281 samples, 0.03%)</title><rect x="834.9" y="1189" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="837.85" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (34,284,925 samples, 0.01%)</title><rect x="967.5" y="1381" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="970.54" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (73,367,718 samples, 0.03%)</title><rect x="11.1" y="1157" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="14.10" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,573,497 samples, 0.01%)</title><rect x="118.4" y="709" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.36" y="719.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (26,362,365 samples, 0.01%)</title><rect x="605.1" y="965" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="608.10" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (25,459,816 samples, 0.01%)</title><rect x="1044.3" y="1093" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1047.32" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (50,893,789 samples, 0.02%)</title><rect x="85.3" y="1045" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="88.33" y="1055.5" ></text>
</g>
<g >
<title>do_fault (26,067,707 samples, 0.01%)</title><rect x="411.4" y="1125" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="414.39" y="1135.5" ></text>
</g>
<g >
<title>epoll_ctl (93,308,272 samples, 0.03%)</title><rect x="971.6" y="1301" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="974.56" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (27,488,275 samples, 0.01%)</title><rect x="908.4" y="1237" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="911.38" y="1247.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (27,425,556,639 samples, 10.27%)</title><rect x="10.3" y="1685" width="121.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="13.28" y="1695.5" >[libstdc++.so.6..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (47,324,473 samples, 0.02%)</title><rect x="1072.3" y="1125" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1075.32" y="1135.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (46,872,171 samples, 0.02%)</title><rect x="126.0" y="1077" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="129.03" y="1087.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (96,099,984 samples, 0.04%)</title><rect x="769.3" y="1301" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="772.34" y="1311.5" ></text>
</g>
<g >
<title>perf_event_mmap (61,034,671 samples, 0.02%)</title><rect x="121.4" y="1253" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="124.42" y="1263.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (60,303,194 samples, 0.02%)</title><rect x="780.8" y="805" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="783.80" y="815.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (38,639,239 samples, 0.01%)</title><rect x="988.9" y="1637" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="991.91" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (29,571,671 samples, 0.01%)</title><rect x="296.5" y="1237" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="299.52" y="1247.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (658,349,281 samples, 0.25%)</title><rect x="188.3" y="1077" width="2.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="191.33" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (164,538,967 samples, 0.06%)</title><rect x="1021.8" y="1077" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1024.80" y="1087.5" ></text>
</g>
<g >
<title>do_epoll_ctl (53,742,811 samples, 0.02%)</title><rect x="829.4" y="1221" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="832.42" y="1231.5" ></text>
</g>
<g >
<title>x64_sys_call (2,700,865,702 samples, 1.01%)</title><rect x="1166.8" y="1413" width="12.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1169.84" y="1423.5" ></text>
</g>
<g >
<title>alloc_fd (82,378,231 samples, 0.03%)</title><rect x="1178.1" y="1349" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1181.11" y="1359.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (155,450,826 samples, 0.06%)</title><rect x="270.8" y="1157" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="273.81" y="1167.5" ></text>
</g>
<g >
<title>destroy_inode (28,265,718 samples, 0.01%)</title><rect x="692.5" y="1013" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="695.46" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (33,977,723 samples, 0.01%)</title><rect x="63.7" y="405" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.70" y="415.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_M_getword (23,082,983 samples, 0.01%)</title><rect x="98.1" y="1061" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="101.14" y="1071.5" ></text>
</g>
<g >
<title>operator new (38,167,919 samples, 0.01%)</title><rect x="602.5" y="1013" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="605.52" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (268,133,772 samples, 0.10%)</title><rect x="1094.5" y="1061" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1097.54" y="1071.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (579,261,789 samples, 0.22%)</title><rect x="885.1" y="1013" width="2.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="888.14" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (42,503,416 samples, 0.02%)</title><rect x="758.7" y="1029" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="761.74" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (155,522,354 samples, 0.06%)</title><rect x="334.5" y="1045" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="337.47" y="1055.5" ></text>
</g>
<g >
<title>down_write_killable (48,822,340 samples, 0.02%)</title><rect x="126.0" y="1093" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="129.02" y="1103.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (597,350,768 samples, 0.22%)</title><rect x="1027.7" y="1013" width="2.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1030.73" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,559,283,587 samples, 4.33%)</title><rect x="772.3" y="1349" width="51.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="775.32" y="1359.5" >std::..</text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (27,892,119 samples, 0.01%)</title><rect x="654.0" y="1045" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="657.03" y="1055.5" ></text>
</g>
<g >
<title>sock_write_iter (422,021,002 samples, 0.16%)</title><rect x="411.0" y="1301" width="1.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="414.03" y="1311.5" ></text>
</g>
<g >
<title>sch_direct_xmit (33,957,829 samples, 0.01%)</title><rect x="409.9" y="821" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="412.86" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (51,242,990 samples, 0.02%)</title><rect x="770.7" y="645" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.68" y="655.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (70,645,085 samples, 0.03%)</title><rect x="348.5" y="1381" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="351.53" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (82,608,968 samples, 0.03%)</title><rect x="345.9" y="1253" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="348.94" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,438,201,129 samples, 1.29%)</title><rect x="349.2" y="997" width="15.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="352.23" y="1007.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (137,843,332 samples, 0.05%)</title><rect x="845.1" y="1669" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="848.07" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,899,480 samples, 0.01%)</title><rect x="205.5" y="213" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.55" y="223.5" ></text>
</g>
<g >
<title>__fput (288,787,931 samples, 0.11%)</title><rect x="1117.0" y="1109" width="1.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1120.02" y="1119.5" ></text>
</g>
<g >
<title>sock_close (194,180,313 samples, 0.07%)</title><rect x="409.5" y="1093" width="0.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="412.45" y="1103.5" ></text>
</g>
<g >
<title>__close (341,707,997 samples, 0.13%)</title><rect x="408.9" y="1205" width="1.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="411.93" y="1215.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (64,545,198 samples, 0.02%)</title><rect x="577.0" y="1333" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="580.01" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (23,340,390 samples, 0.01%)</title><rect x="911.7" y="69" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.66" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (81,059,554 samples, 0.03%)</title><rect x="1001.7" y="1173" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1004.73" y="1183.5" ></text>
</g>
<g >
<title>__ip_local_out (53,609,001 samples, 0.02%)</title><rect x="694.9" y="1125" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="697.90" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (23,735,330 samples, 0.01%)</title><rect x="556.9" y="1029" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1039.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (288,003,122 samples, 0.11%)</title><rect x="125.0" y="1125" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="127.97" y="1135.5" ></text>
</g>
<g >
<title>sch_direct_xmit (41,089,312 samples, 0.02%)</title><rect x="1120.2" y="1045" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1123.16" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33,403,527 samples, 0.01%)</title><rect x="837.2" y="1525" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="840.16" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,829,455,918 samples, 1.43%)</title><rect x="1055.9" y="1253" width="16.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1058.88" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (75,380,189 samples, 0.03%)</title><rect x="479.8" y="1093" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="482.76" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (43,724,650 samples, 0.02%)</title><rect x="63.2" y="677" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="66.24" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62,332,766 samples, 0.02%)</title><rect x="400.7" y="885" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.72" y="895.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (24,249,991 samples, 0.01%)</title><rect x="713.6" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="716.63" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (141,634,319 samples, 0.05%)</title><rect x="683.8" y="1349" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="686.79" y="1359.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (23,167,898 samples, 0.01%)</title><rect x="1099.0" y="933" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1101.98" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (183,519,826 samples, 0.07%)</title><rect x="205.5" y="917" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.47" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (36,275,569 samples, 0.01%)</title><rect x="629.5" y="565" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.51" y="575.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (52,597,127 samples, 0.02%)</title><rect x="555.4" y="1557" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="558.36" y="1567.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (839,930,135 samples, 0.31%)</title><rect x="406.7" y="1221" width="3.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="409.74" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;ProtocolHandler&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (40,808,531 samples, 0.02%)</title><rect x="1163.3" y="1381" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1166.33" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="533" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="543.5" ></text>
</g>
<g >
<title>dequeue_task_fair (48,380,486 samples, 0.02%)</title><rect x="1183.8" y="1445" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1186.82" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (248,488,101 samples, 0.09%)</title><rect x="487.8" y="1253" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.76" y="1263.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (27,557,185 samples, 0.01%)</title><rect x="877.5" y="1077" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="880.47" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (170,886,352 samples, 0.06%)</title><rect x="487.9" y="853" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="490.89" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (137,818,317 samples, 0.05%)</title><rect x="153.5" y="1237" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="156.53" y="1247.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (34,552,159 samples, 0.01%)</title><rect x="543.9" y="1381" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="546.91" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (33,301,277 samples, 0.01%)</title><rect x="1013.1" y="1077" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1016.10" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (32,146,020 samples, 0.01%)</title><rect x="488.2" y="629" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="491.21" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,618,502,186 samples, 3.98%)</title><rect x="720.8" y="1269" width="46.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="723.81" y="1279.5" >std:..</text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (35,562,606 samples, 0.01%)</title><rect x="96.8" y="1061" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="99.77" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (273,884,277 samples, 0.10%)</title><rect x="417.3" y="1653" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="420.27" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,476,373,354 samples, 1.30%)</title><rect x="1056.2" y="997" width="15.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1059.19" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (37,159,735 samples, 0.01%)</title><rect x="824.1" y="501" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.07" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,472,280 samples, 0.01%)</title><rect x="1054.9" y="469" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.87" y="479.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (206,661,612 samples, 0.08%)</title><rect x="232.7" y="997" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="235.71" y="1007.5" ></text>
</g>
<g >
<title>tcp_recvmsg (47,681,114 samples, 0.02%)</title><rect x="1113.3" y="1285" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1116.27" y="1295.5" ></text>
</g>
<g >
<title>unmap_region.constprop.0 (143,422,162 samples, 0.05%)</title><rect x="690.9" y="1061" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="693.92" y="1071.5" ></text>
</g>
<g >
<title>x64_sys_call (459,428,939 samples, 0.17%)</title><rect x="834.5" y="1397" width="2.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="837.50" y="1407.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (134,828,486 samples, 0.05%)</title><rect x="234.8" y="1029" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="237.79" y="1039.5" ></text>
</g>
<g >
<title>exc_page_fault (75,264,313 samples, 0.03%)</title><rect x="976.9" y="1189" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="979.95" y="1199.5" ></text>
</g>
<g >
<title>operator new (78,300,329 samples, 0.03%)</title><rect x="415.6" y="1653" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="418.58" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,816,029,910 samples, 4.05%)</title><rect x="437.3" y="1269" width="47.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="440.32" y="1279.5" >std:..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (25,616,408 samples, 0.01%)</title><rect x="940.8" y="981" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="943.79" y="991.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (130,657,328 samples, 0.05%)</title><rect x="896.4" y="1045" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="899.35" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,959,845,180 samples, 1.48%)</title><rect x="1089.9" y="1285" width="17.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1092.87" y="1295.5" ></text>
</g>
<g >
<title>[web-server] (37,703,353 samples, 0.01%)</title><rect x="916.0" y="933" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="918.96" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (73,367,718 samples, 0.03%)</title><rect x="11.1" y="1141" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="14.10" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (26,597,518 samples, 0.01%)</title><rect x="911.7" y="197" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.65" y="207.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (57,768,560 samples, 0.02%)</title><rect x="345.2" y="1301" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="348.23" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (32,706,415 samples, 0.01%)</title><rect x="221.8" y="949" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="224.77" y="959.5" ></text>
</g>
<g >
<title>__napi_poll (26,375,962 samples, 0.01%)</title><rect x="425.7" y="1541" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="428.73" y="1551.5" ></text>
</g>
<g >
<title>TimerManager::Tick (41,732,489 samples, 0.02%)</title><rect x="272.8" y="1557" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="275.77" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,786,070,323 samples, 1.42%)</title><rect x="913.1" y="1157" width="16.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="916.13" y="1167.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (27,692,370 samples, 0.01%)</title><rect x="1186.0" y="1589" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1188.97" y="1599.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (355,490,390 samples, 0.13%)</title><rect x="37.4" y="981" width="1.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="40.45" y="991.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (27,427,471 samples, 0.01%)</title><rect x="696.8" y="1509" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="699.76" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (84,178,761 samples, 0.03%)</title><rect x="337.0" y="1093" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="340.04" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_resize (38,817,613 samples, 0.01%)</title><rect x="911.0" y="1333" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="914.04" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (31,117,287 samples, 0.01%)</title><rect x="1102.3" y="1061" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1105.29" y="1071.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (54,539,270 samples, 0.02%)</title><rect x="94.4" y="1029" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="97.43" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,241,679,748 samples, 4.21%)</title><rect x="294.9" y="1333" width="49.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="297.85" y="1343.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (51,406,388 samples, 0.02%)</title><rect x="118.3" y="885" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.34" y="895.5" ></text>
</g>
<g >
<title>unmap_vmas (33,286,814 samples, 0.01%)</title><rect x="974.0" y="1045" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="976.99" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (261,308,879 samples, 0.10%)</title><rect x="859.5" y="1253" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="862.53" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (394,523,353 samples, 0.15%)</title><rect x="266.1" y="1173" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="269.10" y="1183.5" ></text>
</g>
<g >
<title>nf_hook_slow (25,392,972 samples, 0.01%)</title><rect x="692.9" y="885" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="695.90" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (43,922,419 samples, 0.02%)</title><rect x="365.1" y="1125" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="368.09" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (95,359,503 samples, 0.04%)</title><rect x="204.2" y="1269" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="207.16" y="1279.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (103,648,281 samples, 0.04%)</title><rect x="409.6" y="933" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="412.63" y="943.5" ></text>
</g>
<g >
<title>vfs_statx (61,062,493 samples, 0.02%)</title><rect x="1110.6" y="1285" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1113.65" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (384,527,570 samples, 0.14%)</title><rect x="809.9" y="1077" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="812.92" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (39,028,508 samples, 0.01%)</title><rect x="698.0" y="1653" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="700.96" y="1663.5" ></text>
</g>
<g >
<title>task_work_run (45,962,119 samples, 0.02%)</title><rect x="266.2" y="1109" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="269.23" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (47,684,855 samples, 0.02%)</title><rect x="696.2" y="1445" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="699.16" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+= (30,358,869 samples, 0.01%)</title><rect x="755.6" y="1029" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="758.58" y="1039.5" ></text>
</g>
<g >
<title>ksys_read (79,497,918 samples, 0.03%)</title><rect x="1113.2" y="1365" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1116.17" y="1375.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (903,374,642 samples, 0.34%)</title><rect x="1114.6" y="1397" width="3.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1117.55" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,281,585,264 samples, 1.23%)</title><rect x="913.9" y="965" width="14.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="916.93" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,917,942,097 samples, 1.47%)</title><rect x="665.2" y="1205" width="17.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="668.23" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (126,782,604 samples, 0.05%)</title><rect x="134.2" y="1637" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="137.22" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,535,282,853 samples, 1.32%)</title><rect x="1090.3" y="1125" width="15.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1093.35" y="1135.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (149,688,367 samples, 0.06%)</title><rect x="676.3" y="1061" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="679.32" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (45,872,982 samples, 0.02%)</title><rect x="645.2" y="949" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="648.25" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (10,189,478,434 samples, 3.82%)</title><rect x="297.5" y="1141" width="45.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="300.48" y="1151.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,328,814 samples, 0.04%)</title><rect x="911.9" y="741" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.87" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (67,408,780 samples, 0.03%)</title><rect x="455.8" y="1061" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="458.80" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (36,275,569 samples, 0.01%)</title><rect x="629.5" y="549" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.51" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (118,267,917 samples, 0.04%)</title><rect x="347.5" y="821" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.52" y="831.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (26,064,978 samples, 0.01%)</title><rect x="251.9" y="1061" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="254.87" y="1071.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (41,509,094 samples, 0.02%)</title><rect x="271.2" y="1013" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="274.24" y="1023.5" ></text>
</g>
<g >
<title>__dynamic_cast (44,885,512 samples, 0.02%)</title><rect x="1075.7" y="1045" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1078.73" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (24,048,707 samples, 0.01%)</title><rect x="218.5" y="933" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="221.50" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (453,586,165 samples, 0.17%)</title><rect x="128.2" y="1413" width="2.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="131.23" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (75,071,563 samples, 0.03%)</title><rect x="259.8" y="1205" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="262.83" y="1215.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (26,317,953 samples, 0.01%)</title><rect x="391.3" y="933" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="394.35" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (124,800,661 samples, 0.05%)</title><rect x="685.8" y="1365" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="688.84" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (184,622,027 samples, 0.07%)</title><rect x="911.6" y="917" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.58" y="927.5" ></text>
</g>
<g >
<title>irq_exit_rcu (31,175,334 samples, 0.01%)</title><rect x="991.5" y="1605" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="994.54" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (31,328,092 samples, 0.01%)</title><rect x="125.5" y="837" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="128.49" y="847.5" ></text>
</g>
<g >
<title>__mmap (368,044,023 samples, 0.14%)</title><rect x="545.5" y="1397" width="1.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="548.51" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (27,662,396 samples, 0.01%)</title><rect x="696.5" y="1477" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="699.54" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (50,925,980 samples, 0.02%)</title><rect x="912.1" y="533" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="915.06" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (66,250,469 samples, 0.02%)</title><rect x="923.9" y="901" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="926.93" y="911.5" ></text>
</g>
<g >
<title>x64_sys_call (44,312,033 samples, 0.02%)</title><rect x="153.0" y="1269" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="156.02" y="1279.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (32,941,590 samples, 0.01%)</title><rect x="1164.9" y="1397" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1167.89" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (55,944,011 samples, 0.02%)</title><rect x="123.7" y="1237" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="126.74" y="1247.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (25,219,893,510 samples, 9.44%)</title><rect x="294.2" y="1493" width="111.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="297.23" y="1503.5" >std::__invoke..</text>
</g>
<g >
<title>_raw_spin_lock_bh (321,200,497 samples, 0.12%)</title><rect x="1169.1" y="1301" width="1.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1172.11" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (72,636,473 samples, 0.03%)</title><rect x="123.7" y="1285" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="126.68" y="1295.5" ></text>
</g>
<g >
<title>__mmap (357,320,443 samples, 0.13%)</title><rect x="968.8" y="1397" width="1.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="971.81" y="1407.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (134,900,123 samples, 0.05%)</title><rect x="956.8" y="981" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="959.82" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (106,357,631 samples, 0.04%)</title><rect x="486.5" y="1349" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="489.49" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::assign (28,091,647 samples, 0.01%)</title><rect x="1053.9" y="1317" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1056.86" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (44,835,221 samples, 0.02%)</title><rect x="577.0" y="1253" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="580.05" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (24,206,978 samples, 0.01%)</title><rect x="556.9" y="1189" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (28,393,801 samples, 0.01%)</title><rect x="1081.0" y="981" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1084.02" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (90,779,595 samples, 0.03%)</title><rect x="259.8" y="1317" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="262.81" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (55,926,804 samples, 0.02%)</title><rect x="400.7" y="773" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.73" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (26,946,125 samples, 0.01%)</title><rect x="363.2" y="949" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="366.22" y="959.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (48,578,992 samples, 0.02%)</title><rect x="180.6" y="933" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="183.55" y="943.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (25,791,158 samples, 0.01%)</title><rect x="1170.6" y="1045" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1173.59" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (219,886,896 samples, 0.08%)</title><rect x="467.7" y="1045" width="1.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="470.70" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (39,047,248 samples, 0.01%)</title><rect x="1054.4" y="469" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.43" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (55,914,076 samples, 0.02%)</title><rect x="231.4" y="1013" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="234.37" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (52,523,817 samples, 0.02%)</title><rect x="63.2" y="821" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="66.22" y="831.5" ></text>
</g>
<g >
<title>operator delete[] (52,694,581 samples, 0.02%)</title><rect x="281.6" y="1669" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="284.56" y="1679.5" ></text>
</g>
<g >
<title>read (135,568,786 samples, 0.05%)</title><rect x="1113.0" y="1445" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1116.02" y="1455.5" ></text>
</g>
<g >
<title>[web-server] (28,720,424 samples, 0.01%)</title><rect x="17.3" y="1093" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="20.27" y="1103.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,384,416 samples, 0.01%)</title><rect x="1121.5" y="1525" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1124.51" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (28,599,907 samples, 0.01%)</title><rect x="1141.3" y="1397" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1144.34" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (34,760,328 samples, 0.01%)</title><rect x="221.9" y="949" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="224.92" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (83,044,462 samples, 0.03%)</title><rect x="824.0" y="1093" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="827.00" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (29,346,871 samples, 0.01%)</title><rect x="966.3" y="533" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="969.33" y="543.5" ></text>
</g>
<g >
<title>rw_verify_area (26,169,307 samples, 0.01%)</title><rect x="828.6" y="1333" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="831.56" y="1343.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;Server::HandlerNewConn (26,962,044 samples, 0.01%)</title><rect x="1160.1" y="1269" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1163.07" y="1279.5" ></text>
</g>
<g >
<title>std::priority_queue&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt;, TimerManager::TimerCmp&gt;::pop (27,937,496 samples, 0.01%)</title><rect x="696.8" y="1541" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="699.76" y="1551.5" ></text>
</g>
<g >
<title>nf_hook_slow (29,242,578 samples, 0.01%)</title><rect x="551.8" y="885" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="554.77" y="895.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (92,328,467 samples, 0.03%)</title><rect x="1178.8" y="1445" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1181.83" y="1455.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (43,389,116 samples, 0.02%)</title><rect x="203.6" y="1317" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="206.58" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (967,247,288 samples, 0.36%)</title><rect x="847.5" y="1669" width="4.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="850.48" y="1679.5" ></text>
</g>
<g >
<title>do_vmi_munmap (244,124,313 samples, 0.09%)</title><rect x="266.5" y="1093" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="269.45" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (28,301,426 samples, 0.01%)</title><rect x="677.8" y="1061" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="680.84" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_fill_assign (36,898,207 samples, 0.01%)</title><rect x="346.7" y="1301" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="349.71" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (29,651,938 samples, 0.01%)</title><rect x="684.0" y="469" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="687.05" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (27,795,962 samples, 0.01%)</title><rect x="588.5" y="1077" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="591.51" y="1087.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (29,634,770 samples, 0.01%)</title><rect x="509.0" y="1045" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="512.03" y="1055.5" ></text>
</g>
<g >
<title>path_openat (59,028,329 samples, 0.02%)</title><rect x="558.8" y="1557" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="561.75" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (82,933,576 samples, 0.03%)</title><rect x="196.1" y="1093" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="199.07" y="1103.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (81,752,430 samples, 0.03%)</title><rect x="232.2" y="997" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="235.22" y="1007.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (188,311,218 samples, 0.07%)</title><rect x="502.3" y="949" width="0.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="505.31" y="959.5" ></text>
</g>
<g >
<title>[unknown] (468,939,381 samples, 0.18%)</title><rect x="1122.6" y="1669" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1125.58" y="1679.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (24,307,058 samples, 0.01%)</title><rect x="358.9" y="917" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="361.94" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,799,621,380 samples, 1.42%)</title><rect x="913.1" y="1173" width="16.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="916.13" y="1183.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (313,559,096 samples, 0.12%)</title><rect x="974.7" y="1189" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="977.69" y="1199.5" ></text>
</g>
<g >
<title>destroy_inode (26,515,808 samples, 0.01%)</title><rect x="126.7" y="1013" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="129.70" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (39,350,164 samples, 0.01%)</title><rect x="966.8" y="1365" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="969.82" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (35,391,964 samples, 0.01%)</title><rect x="347.5" y="597" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.54" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (35,370,352 samples, 0.01%)</title><rect x="243.3" y="1093" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="246.29" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (325,539,894 samples, 0.12%)</title><rect x="464.7" y="1045" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="467.66" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (101,917,609 samples, 0.04%)</title><rect x="205.8" y="725" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.76" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (228,777,720 samples, 0.09%)</title><rect x="353.3" y="917" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="356.35" y="927.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (29,148,911 samples, 0.01%)</title><rect x="636.9" y="933" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="639.86" y="943.5" ></text>
</g>
<g >
<title>cache_from_obj (52,748,056 samples, 0.02%)</title><rect x="1168.9" y="1301" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1171.85" y="1311.5" ></text>
</g>
<g >
<title>ip_finish_output (47,280,634 samples, 0.02%)</title><rect x="268.9" y="885" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="271.91" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,338,198,877 samples, 1.25%)</title><rect x="224.9" y="1077" width="14.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="227.89" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (32,625,078 samples, 0.01%)</title><rect x="1054.7" y="517" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1057.67" y="527.5" ></text>
</g>
<g >
<title>__ip_finish_output (71,736,763 samples, 0.03%)</title><rect x="554.0" y="1093" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="556.98" y="1103.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (902,302,003 samples, 0.34%)</title><rect x="1114.6" y="1381" width="3.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1117.56" y="1391.5" ></text>
</g>
<g >
<title>sock_close (190,726,639 samples, 0.07%)</title><rect x="692.7" y="1093" width="0.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="695.66" y="1103.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (900,922,499 samples, 0.34%)</title><rect x="972.2" y="1397" width="4.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="975.24" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (50,496,467 samples, 0.02%)</title><rect x="487.9" y="709" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="490.91" y="719.5" ></text>
</g>
<g >
<title>netvsc_xmit (32,004,942 samples, 0.01%)</title><rect x="412.3" y="997" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="415.27" y="1007.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (145,374,430 samples, 0.05%)</title><rect x="694.9" y="1157" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="697.87" y="1167.5" ></text>
</g>
<g >
<title>nf_hook_slow (49,084,963 samples, 0.02%)</title><rect x="411.9" y="1109" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="414.88" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (118,104,084 samples, 0.04%)</title><rect x="275.1" y="1653" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="278.09" y="1663.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (183,888,474 samples, 0.07%)</title><rect x="90.5" y="981" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="93.54" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (43,563,178 samples, 0.02%)</title><rect x="205.5" y="597" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.52" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (44,704,986 samples, 0.02%)</title><rect x="650.2" y="1061" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="653.22" y="1071.5" ></text>
</g>
<g >
<title>std::function&lt;void  (30,979,597 samples, 0.01%)</title><rect x="1152.2" y="1269" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1155.24" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (53,471,580 samples, 0.02%)</title><rect x="860.7" y="1173" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="863.72" y="1183.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (112,712,837 samples, 0.04%)</title><rect x="272.0" y="1525" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="275.03" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,822,472,801 samples, 1.43%)</title><rect x="506.9" y="1173" width="16.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="509.93" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (54,858,238 samples, 0.02%)</title><rect x="912.1" y="613" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="915.05" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (59,538,055 samples, 0.02%)</title><rect x="59.6" y="1189" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="62.56" y="1199.5" ></text>
</g>
<g >
<title>vfs_read (84,264,713 samples, 0.03%)</title><rect x="970.9" y="1349" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="973.89" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (59,148,184 samples, 0.02%)</title><rect x="1052.0" y="1333" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1055.04" y="1343.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (23,765,842 samples, 0.01%)</title><rect x="909.7" y="1237" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="912.65" y="1247.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (23,374,408 samples, 0.01%)</title><rect x="720.1" y="1061" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="723.08" y="1071.5" ></text>
</g>
<g >
<title>__dynamic_cast (48,664,068 samples, 0.02%)</title><rect x="210.2" y="933" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="213.23" y="943.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (65,797,985 samples, 0.02%)</title><rect x="946.5" y="1093" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="949.46" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (1,755,770,082 samples, 0.66%)</title><rect x="1024.9" y="1061" width="7.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1027.94" y="1071.5" ></text>
</g>
<g >
<title>alloc_fd (27,187,062 samples, 0.01%)</title><rect x="276.0" y="1557" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="279.05" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (24,206,978 samples, 0.01%)</title><rect x="556.9" y="1333" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (38,128,976 samples, 0.01%)</title><rect x="788.6" y="1093" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="791.60" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (33,721,255 samples, 0.01%)</title><rect x="205.5" y="405" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.54" y="415.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (64,916,276 samples, 0.02%)</title><rect x="835.7" y="1061" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="838.70" y="1071.5" ></text>
</g>
<g >
<title>do_epoll_ctl (30,484,988 samples, 0.01%)</title><rect x="10.5" y="1237" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="13.49" y="1247.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (110,034,868 samples, 0.04%)</title><rect x="77.7" y="933" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="80.69" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (23,375,539 samples, 0.01%)</title><rect x="820.6" y="1093" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="823.61" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (31,695,152 samples, 0.01%)</title><rect x="911.9" y="629" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.89" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (28,570,580 samples, 0.01%)</title><rect x="79.6" y="949" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="82.60" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (24,709,627 samples, 0.01%)</title><rect x="956.1" y="1013" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="959.10" y="1023.5" ></text>
</g>
<g >
<title>net_rx_action (40,296,303 samples, 0.02%)</title><rect x="727.0" y="1013" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="729.97" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (71,800,420 samples, 0.03%)</title><rect x="160.9" y="1093" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="163.88" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (23,423,500 samples, 0.01%)</title><rect x="681.1" y="1093" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="684.12" y="1103.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (46,239,307 samples, 0.02%)</title><rect x="112.2" y="1061" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="115.24" y="1071.5" ></text>
</g>
<g >
<title>x64_sys_call (285,992,226 samples, 0.11%)</title><rect x="126.5" y="1157" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="129.52" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (293,713,939 samples, 0.11%)</title><rect x="629.3" y="1333" width="1.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="632.30" y="1343.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_M_getword (44,823,996 samples, 0.02%)</title><rect x="765.0" y="1093" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="767.96" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (86,176,433 samples, 0.03%)</title><rect x="578.1" y="1189" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="581.07" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (90,265,807 samples, 0.03%)</title><rect x="1001.7" y="1221" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1004.72" y="1231.5" ></text>
</g>
<g >
<title>x64_sys_call (113,697,916 samples, 0.04%)</title><rect x="1110.4" y="1349" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1113.42" y="1359.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_maskbit (27,494,579 samples, 0.01%)</title><rect x="1106.5" y="1109" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1109.46" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Executor (36,733,530 samples, 0.01%)</title><rect x="205.1" y="1333" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="208.09" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (70,176,437 samples, 0.03%)</title><rect x="966.3" y="1093" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="969.28" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (90,497,701 samples, 0.03%)</title><rect x="847.1" y="1669" width="0.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="850.08" y="1679.5" ></text>
</g>
<g >
<title>thp_get_unmapped_area (29,582,439 samples, 0.01%)</title><rect x="1111.2" y="1253" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1114.23" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (103,602,103 samples, 0.04%)</title><rect x="970.8" y="1413" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="973.81" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,496,551 samples, 0.02%)</title><rect x="400.7" y="821" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.73" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (4,012,597,230 samples, 1.50%)</title><rect x="99.3" y="1253" width="17.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="102.30" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,702,161,232 samples, 4.38%)</title><rect x="631.1" y="1301" width="51.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="634.14" y="1311.5" >std::..</text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (118,688,943 samples, 0.04%)</title><rect x="910.1" y="1349" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="913.10" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (3,147,566,534 samples, 1.18%)</title><rect x="414.0" y="1685" width="13.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="417.02" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (103,584,907 samples, 0.04%)</title><rect x="1014.2" y="1077" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1017.18" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (41,753,320 samples, 0.02%)</title><rect x="1051.2" y="1253" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1054.19" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (266,248,614 samples, 0.10%)</title><rect x="770.5" y="1237" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="773.51" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (35,547,940 samples, 0.01%)</title><rect x="347.3" y="485" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.29" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (84,399,975 samples, 0.03%)</title><rect x="1043.9" y="1093" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1046.94" y="1103.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (26,782,882 samples, 0.01%)</title><rect x="544.6" y="1365" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="547.62" y="1375.5" ></text>
</g>
<g >
<title>x64_sys_call (108,103,127 samples, 0.04%)</title><rect x="699.8" y="1621" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="702.79" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,647,863 samples, 0.01%)</title><rect x="487.9" y="453" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.94" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (89,856,733 samples, 0.03%)</title><rect x="252.3" y="1045" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="255.29" y="1055.5" ></text>
</g>
<g >
<title>HttpConn::~HttpConn (463,451,200 samples, 0.17%)</title><rect x="124.3" y="1205" width="2.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="127.35" y="1215.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (31,971,059 samples, 0.01%)</title><rect x="400.2" y="1173" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="403.23" y="1183.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (132,260,671 samples, 0.05%)</title><rect x="95.3" y="1045" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="98.28" y="1055.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (55,440,517 samples, 0.02%)</title><rect x="183.5" y="1013" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="186.47" y="1023.5" ></text>
</g>
<g >
<title>HttpResponse::SetHeader (38,956,524 samples, 0.01%)</title><rect x="119.9" y="1381" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="122.90" y="1391.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (22,753,491 samples, 0.01%)</title><rect x="887.9" y="1045" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="890.91" y="1055.5" ></text>
</g>
<g >
<title>handle_softirqs (38,740,709 samples, 0.01%)</title><rect x="716.3" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="719.29" y="1615.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (106,359,191 samples, 0.04%)</title><rect x="107.7" y="1045" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="110.68" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,874,751,345 samples, 1.45%)</title><rect x="241.3" y="1205" width="17.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="244.26" y="1215.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (119,170,575 samples, 0.04%)</title><rect x="268.7" y="965" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="271.66" y="975.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (24,582,069 samples, 0.01%)</title><rect x="1067.8" y="901" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1070.82" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (26,641,172 samples, 0.01%)</title><rect x="932.5" y="1061" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="935.54" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_writev (454,269,105 samples, 0.17%)</title><rect x="269.9" y="1381" width="2.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="272.93" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::base (26,398,513 samples, 0.01%)</title><rect x="867.2" y="1077" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="870.20" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (43,421,931 samples, 0.02%)</title><rect x="260.3" y="1397" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="263.31" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (254,084,135 samples, 0.10%)</title><rect x="770.6" y="1173" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.56" y="1183.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (319,734,850 samples, 0.12%)</title><rect x="692.2" y="1189" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="695.18" y="1199.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (86,684,040 samples, 0.03%)</title><rect x="1100.8" y="1045" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1103.82" y="1055.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (23,284,158 samples, 0.01%)</title><rect x="549.2" y="1173" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="552.21" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (23,969,886 samples, 0.01%)</title><rect x="822.7" y="1157" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="825.68" y="1167.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (24,312,190 samples, 0.01%)</title><rect x="542.4" y="1317" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="545.39" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (26,973,026 samples, 0.01%)</title><rect x="528.2" y="1077" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="531.19" y="1087.5" ></text>
</g>
<g >
<title>x64_sys_call (52,219,260 samples, 0.02%)</title><rect x="689.4" y="1253" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="692.36" y="1263.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (22,989,643 samples, 0.01%)</title><rect x="882.1" y="1061" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="885.09" y="1071.5" ></text>
</g>
<g >
<title>vm_unmapped_area (27,600,224 samples, 0.01%)</title><rect x="403.4" y="1221" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="406.43" y="1231.5" ></text>
</g>
<g >
<title>inet_release (185,572,406 samples, 0.07%)</title><rect x="1117.4" y="1061" width="0.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1120.44" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (29,338,566 samples, 0.01%)</title><rect x="1105.6" y="1093" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1108.64" y="1103.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (25,830,909 samples, 0.01%)</title><rect x="213.0" y="933" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="216.02" y="943.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (879,496,090 samples, 0.33%)</title><rect x="406.7" y="1397" width="3.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="409.65" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (39,354,574 samples, 0.01%)</title><rect x="492.9" y="933" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="495.94" y="943.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (516,294,355 samples, 0.19%)</title><rect x="179.5" y="997" width="2.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="182.47" y="1007.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (43,978,757 samples, 0.02%)</title><rect x="119.1" y="1381" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="122.10" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (59,418,252 samples, 0.02%)</title><rect x="900.9" y="1093" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="903.91" y="1103.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (54,176,768 samples, 0.02%)</title><rect x="823.5" y="1349" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="826.49" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (361,539,064 samples, 0.14%)</title><rect x="545.5" y="1381" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="548.52" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (35,156,425 samples, 0.01%)</title><rect x="63.2" y="549" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.25" y="559.5" ></text>
</g>
<g >
<title>[unknown] (23,776,050 samples, 0.01%)</title><rect x="1143.0" y="1461" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.99" y="1471.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (29,294,574 samples, 0.01%)</title><rect x="154.9" y="1061" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="157.91" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (784,652,318 samples, 0.29%)</title><rect x="1079.7" y="1045" width="3.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1082.70" y="1055.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (31,824,423 samples, 0.01%)</title><rect x="374.3" y="901" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="377.34" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,654,452,155 samples, 1.37%)</title><rect x="631.2" y="1173" width="16.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="634.15" y="1183.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (27,244,573 samples, 0.01%)</title><rect x="402.9" y="1237" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="405.88" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,451,740 samples, 0.02%)</title><rect x="488.4" y="549" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.37" y="559.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (44,970,436 samples, 0.02%)</title><rect x="973.7" y="981" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="976.68" y="991.5" ></text>
</g>
<g >
<title>EventLoop::AddChannel (107,994,012 samples, 0.04%)</title><rect x="836.6" y="1477" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="839.63" y="1487.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (84,161,424 samples, 0.03%)</title><rect x="673.6" y="1029" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="676.59" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (24,206,978 samples, 0.01%)</title><rect x="556.9" y="1285" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1295.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (71,402,914 samples, 0.03%)</title><rect x="663.9" y="1093" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="666.86" y="1103.5" ></text>
</g>
<g >
<title>do_syscall_64 (111,149,250 samples, 0.04%)</title><rect x="261.6" y="1365" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="264.64" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (69,009,937 samples, 0.03%)</title><rect x="543.2" y="1093" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="546.18" y="1103.5" ></text>
</g>
<g >
<title>operator new (35,649,449 samples, 0.01%)</title><rect x="1027.1" y="1013" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1030.07" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (57,394,024 samples, 0.02%)</title><rect x="819.4" y="1045" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="822.38" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (75,560,934 samples, 0.03%)</title><rect x="295.1" y="1109" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="298.08" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (33,061,673 samples, 0.01%)</title><rect x="339.6" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="342.64" y="1087.5" ></text>
</g>
<g >
<title>irq_exit_rcu (29,660,140 samples, 0.01%)</title><rect x="267.0" y="965" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="270.01" y="975.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (142,800,452 samples, 0.05%)</title><rect x="683.8" y="1381" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="686.79" y="1391.5" ></text>
</g>
<g >
<title>ip_local_deliver (24,552,717 samples, 0.01%)</title><rect x="973.7" y="773" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="976.72" y="783.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (171,678,076 samples, 0.06%)</title><rect x="977.4" y="1189" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="980.39" y="1199.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_whichbit (23,437,165 samples, 0.01%)</title><rect x="1049.3" y="1093" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1052.33" y="1103.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (42,770,950 samples, 0.02%)</title><rect x="19.2" y="1093" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="22.24" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (68,229,591 samples, 0.03%)</title><rect x="671.9" y="1077" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="674.93" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (37,937,449 samples, 0.01%)</title><rect x="400.2" y="1253" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="403.22" y="1263.5" ></text>
</g>
<g >
<title>do_sys_openat2 (89,044,207 samples, 0.03%)</title><rect x="416.8" y="1589" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="419.81" y="1599.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (186,321,860 samples, 0.07%)</title><rect x="780.5" y="853" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="783.48" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (51,190,992 samples, 0.02%)</title><rect x="201.9" y="1173" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="204.93" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (202,176,337 samples, 0.08%)</title><rect x="487.8" y="1045" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="490.84" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (806,539,534 samples, 0.30%)</title><rect x="106.5" y="1077" width="3.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="109.52" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (31,535,415 samples, 0.01%)</title><rect x="818.9" y="1077" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="821.93" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,958,418,770 samples, 1.48%)</title><rect x="524.3" y="1189" width="17.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="527.26" y="1199.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (43,170,701 samples, 0.02%)</title><rect x="651.3" y="1045" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="654.34" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (49,265,512 samples, 0.02%)</title><rect x="479.5" y="1077" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="482.53" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (42,396,251 samples, 0.02%)</title><rect x="343.6" y="1125" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="346.62" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,680,901,935 samples, 4.37%)</title><rect x="1055.9" y="1317" width="51.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1058.87" y="1327.5" >std::..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (73,388,743 samples, 0.03%)</title><rect x="252.4" y="1029" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="255.36" y="1039.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (26,227,928 samples, 0.01%)</title><rect x="124.1" y="1269" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="127.08" y="1279.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (25,790,347 samples, 0.01%)</title><rect x="33.7" y="1045" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="36.75" y="1055.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (48,814,005 samples, 0.02%)</title><rect x="768.7" y="1301" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="771.70" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_State&lt;char&gt; &gt;::construct&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt; &gt; (23,526,075 samples, 0.01%)</title><rect x="1001.9" y="1013" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1004.91" y="1023.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (78,527,461 samples, 0.03%)</title><rect x="644.4" y="949" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="647.35" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (853,350,511 samples, 0.32%)</title><rect x="972.3" y="1221" width="3.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="975.34" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (236,841,518 samples, 0.09%)</title><rect x="911.5" y="1189" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.47" y="1199.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (105,376,798 samples, 0.04%)</title><rect x="395.7" y="1061" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="398.71" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (24,804,255 samples, 0.01%)</title><rect x="317.5" y="1061" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="320.48" y="1071.5" ></text>
</g>
<g >
<title>__GI___libc_open (145,575,860 samples, 0.05%)</title><rect x="134.2" y="1669" width="0.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="137.18" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (799,768,370 samples, 0.30%)</title><rect x="124.3" y="1285" width="3.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="127.32" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (39,899,096 samples, 0.01%)</title><rect x="1054.4" y="517" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.43" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (54,087,121 samples, 0.02%)</title><rect x="400.2" y="1381" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="403.15" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (101,718,875 samples, 0.04%)</title><rect x="197.0" y="1093" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="200.02" y="1103.5" ></text>
</g>
<g >
<title>main (10,033,016,653 samples, 3.76%)</title><rect x="1143.7" y="1669" width="44.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1146.70" y="1679.5" >main</text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (281,272,045 samples, 0.11%)</title><rect x="134.8" y="1669" width="1.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="137.83" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (86,029,963 samples, 0.03%)</title><rect x="621.5" y="1093" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="624.53" y="1103.5" ></text>
</g>
<g >
<title>vm_unmapped_area (22,802,047 samples, 0.01%)</title><rect x="969.0" y="1221" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="971.99" y="1231.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (42,850,418 samples, 0.02%)</title><rect x="642.9" y="917" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="645.88" y="927.5" ></text>
</g>
<g >
<title>napi_complete_done (27,387,958 samples, 0.01%)</title><rect x="856.8" y="1541" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="859.79" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (92,204,623 samples, 0.03%)</title><rect x="1054.6" y="757" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.64" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (26,784,462 samples, 0.01%)</title><rect x="925.1" y="917" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="928.15" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (43,977,708 samples, 0.02%)</title><rect x="117.8" y="1253" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="120.84" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (68,583,066 samples, 0.03%)</title><rect x="400.7" y="933" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="403.71" y="943.5" ></text>
</g>
<g >
<title>[web-server] (33,558,951 samples, 0.01%)</title><rect x="368.3" y="1045" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="371.26" y="1055.5" ></text>
</g>
<g >
<title>epoll_ctl (64,028,251 samples, 0.02%)</title><rect x="1001.1" y="1317" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1004.07" y="1327.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (370,793,709 samples, 0.14%)</title><rect x="321.4" y="981" width="1.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="324.35" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (27,408,799 samples, 0.01%)</title><rect x="522.5" y="1061" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="525.48" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (46,563,063 samples, 0.02%)</title><rect x="484.8" y="1253" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="487.83" y="1263.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (24,639,280,415 samples, 9.23%)</title><rect x="435.2" y="1413" width="108.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="438.23" y="1423.5" >HttpRequest::..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (57,927,756 samples, 0.02%)</title><rect x="767.0" y="1173" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="770.04" y="1183.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (154,165,673 samples, 0.06%)</title><rect x="192.9" y="1045" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="195.90" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (119,683,259 samples, 0.04%)</title><rect x="1124.1" y="1653" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1127.09" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,880,156,535 samples, 4.45%)</title><rect x="64.8" y="1317" width="52.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="67.82" y="1327.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (23,355,389 samples, 0.01%)</title><rect x="63.5" y="405" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.52" y="415.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (29,327,573 samples, 0.01%)</title><rect x="976.2" y="1429" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="979.23" y="1439.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (23,812,815 samples, 0.01%)</title><rect x="823.6" y="1141" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="826.59" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (218,440,893 samples, 0.08%)</title><rect x="770.6" y="1061" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.61" y="1071.5" ></text>
</g>
<g >
<title>inode_init_always (200,191,221 samples, 0.07%)</title><rect x="1172.9" y="1301" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1175.92" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (46,241,797 samples, 0.02%)</title><rect x="1070.0" y="949" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1073.00" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,601,657,869 samples, 4.34%)</title><rect x="348.9" y="1381" width="51.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="351.89" y="1391.5" >std::..</text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (24,087,259 samples, 0.01%)</title><rect x="469.3" y="1093" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="472.30" y="1103.5" ></text>
</g>
<g >
<title>TimerManager::DelTimer (25,032,390 samples, 0.01%)</title><rect x="548.2" y="1301" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="551.19" y="1311.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (69,052,421 samples, 0.03%)</title><rect x="193.6" y="1093" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="196.64" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (52,980,490 samples, 0.02%)</title><rect x="785.0" y="901" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="788.01" y="911.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (874,313,439 samples, 0.33%)</title><rect x="689.9" y="1365" width="3.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="692.89" y="1375.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::DelChannel (163,543,343 samples, 0.06%)</title><rect x="971.4" y="1349" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="974.44" y="1359.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (62,759,913 samples, 0.02%)</title><rect x="204.3" y="1189" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="207.28" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (29,502,805 samples, 0.01%)</title><rect x="1108.6" y="389" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1111.63" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,151,931,060 samples, 4.18%)</title><rect x="577.5" y="1301" width="49.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="580.51" y="1311.5" >std:..</text>
</g>
<g >
<title>std::function&lt;void  (25,454,515,560 samples, 9.53%)</title><rect x="858.9" y="1525" width="112.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="861.86" y="1535.5" >std::function..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,919,130 samples, 0.01%)</title><rect x="684.1" y="245" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.06" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (25,094,150 samples, 0.01%)</title><rect x="99.1" y="1221" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="102.05" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (25,139,319 samples, 0.01%)</title><rect x="653.6" y="981" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="656.61" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (34,978,697 samples, 0.01%)</title><rect x="543.3" y="597" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="546.25" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (90,416,405 samples, 0.03%)</title><rect x="295.0" y="1141" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="298.03" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,972,056,829 samples, 1.49%)</title><rect x="99.3" y="1205" width="17.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="102.34" y="1215.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (77,964,900 samples, 0.03%)</title><rect x="1010.3" y="1077" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1013.27" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (121,089,505 samples, 0.05%)</title><rect x="275.7" y="1637" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="278.70" y="1647.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (66,429,940 samples, 0.02%)</title><rect x="537.5" y="1061" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="540.48" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (32,091,378 samples, 0.01%)</title><rect x="81.5" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="84.55" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,269,750 samples, 0.07%)</title><rect x="911.6" y="949" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.57" y="959.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (208,162,490 samples, 0.08%)</title><rect x="533.4" y="1013" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="536.42" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,924,777,050 samples, 1.47%)</title><rect x="947.7" y="1269" width="17.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="950.71" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,643,721 samples, 0.01%)</title><rect x="487.9" y="373" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.94" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (74,396,544 samples, 0.03%)</title><rect x="697.6" y="1653" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="700.63" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::DelChannel (164,760,028 samples, 0.06%)</title><rect x="265.0" y="1349" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="267.95" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (23,442,382 samples, 0.01%)</title><rect x="928.3" y="949" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="931.33" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (182,297,604 samples, 0.07%)</title><rect x="629.5" y="901" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.47" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,700,532,869 samples, 1.39%)</title><rect x="1055.9" y="1173" width="16.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1058.88" y="1183.5" ></text>
</g>
<g >
<title>exc_page_fault (84,952,591 samples, 0.03%)</title><rect x="1119.3" y="1189" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1122.28" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (32,954,598 samples, 0.01%)</title><rect x="946.1" y="1061" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="949.06" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (55,949,531 samples, 0.02%)</title><rect x="908.0" y="1189" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="910.95" y="1199.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long&gt; (22,853,617 samples, 0.01%)</title><rect x="1054.0" y="1269" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1057.04" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (83,203,506 samples, 0.03%)</title><rect x="400.7" y="1173" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="403.70" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (25,457,632 samples, 0.01%)</title><rect x="1143.0" y="1477" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.99" y="1487.5" ></text>
</g>
<g >
<title>[web-server] (32,907,913 samples, 0.01%)</title><rect x="950.6" y="1077" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="953.64" y="1087.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (224,567,053 samples, 0.08%)</title><rect x="316.5" y="1061" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="319.49" y="1071.5" ></text>
</g>
<g >
<title>__destroy_inode (23,712,726 samples, 0.01%)</title><rect x="975.0" y="997" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="977.96" y="1007.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (432,793,552 samples, 0.16%)</title><rect x="204.9" y="1381" width="1.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="207.86" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (37,886,118 samples, 0.01%)</title><rect x="630.0" y="341" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="632.98" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (29,614,553 samples, 0.01%)</title><rect x="259.9" y="469" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="262.92" y="479.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (77,094,797 samples, 0.03%)</title><rect x="152.9" y="1413" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="155.93" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (49,943,420 samples, 0.02%)</title><rect x="365.1" y="1157" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="368.09" y="1167.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (99,622,130 samples, 0.04%)</title><rect x="1184.3" y="1221" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1187.33" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (67,422,990 samples, 0.03%)</title><rect x="358.5" y="885" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="361.49" y="895.5" ></text>
</g>
<g >
<title>[unknown] (30,727,374 samples, 0.01%)</title><rect x="20.9" y="1045" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="23.91" y="1055.5" ></text>
</g>
<g >
<title>x64_sys_call (46,483,442 samples, 0.02%)</title><rect x="1001.1" y="1269" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1004.11" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (26,524,256 samples, 0.01%)</title><rect x="1041.4" y="1045" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1044.40" y="1055.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (125,063,229 samples, 0.05%)</title><rect x="108.5" y="981" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="111.54" y="991.5" ></text>
</g>
<g >
<title>HttpRouter::Route (621,339,399 samples, 0.23%)</title><rect x="402.1" y="1413" width="2.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="405.14" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (37,977,377 samples, 0.01%)</title><rect x="651.7" y="1045" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="654.72" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (72,856,509 samples, 0.03%)</title><rect x="772.0" y="1365" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="774.97" y="1375.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (23,592,099 samples, 0.01%)</title><rect x="960.6" y="1045" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="963.59" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (28,470,415 samples, 0.01%)</title><rect x="937.9" y="997" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="940.95" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="741" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (30,918,967 samples, 0.01%)</title><rect x="488.4" y="341" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="491.39" y="351.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (105,934,237 samples, 0.04%)</title><rect x="486.5" y="1333" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="489.49" y="1343.5" ></text>
</g>
<g >
<title>EventLoop::AddChannel (103,543,580 samples, 0.04%)</title><rect x="130.4" y="1477" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="133.35" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (24,252,547 samples, 0.01%)</title><rect x="488.4" y="197" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="491.40" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,611,329 samples, 0.01%)</title><rect x="205.8" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.80" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,451,972,863 samples, 1.29%)</title><rect x="772.6" y="997" width="15.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="775.64" y="1007.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (29,931,513 samples, 0.01%)</title><rect x="56.1" y="1109" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="59.13" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (43,271,730 samples, 0.02%)</title><rect x="1054.7" y="661" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1057.65" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (27,939,666 samples, 0.01%)</title><rect x="908.8" y="1253" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="911.75" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (292,350,686 samples, 0.11%)</title><rect x="629.3" y="1301" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="632.31" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (55,827,945 samples, 0.02%)</title><rect x="1001.1" y="1301" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1004.07" y="1311.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (26,626,221 samples, 0.01%)</title><rect x="1009.9" y="901" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1012.91" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (29,448,179 samples, 0.01%)</title><rect x="488.2" y="597" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="491.22" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,413,375,657 samples, 1.28%)</title><rect x="648.5" y="1077" width="15.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="651.54" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (698,443,519 samples, 0.26%)</title><rect x="450.4" y="1061" width="3.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="453.39" y="1071.5" ></text>
</g>
<g >
<title>Channel::OnWrite (1,667,993,509 samples, 0.62%)</title><rect x="405.7" y="1541" width="7.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="408.68" y="1551.5" ></text>
</g>
<g >
<title>task_work_run (42,638,632 samples, 0.02%)</title><rect x="549.4" y="1109" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="552.45" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (34,259,003 samples, 0.01%)</title><rect x="1159.3" y="1301" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1162.25" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (34,873,059 samples, 0.01%)</title><rect x="897.6" y="1061" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="900.60" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (25,393,847 samples, 0.01%)</title><rect x="556.9" y="1349" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (45,037,174 samples, 0.02%)</title><rect x="400.8" y="629" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="403.75" y="639.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (194,301,039 samples, 0.07%)</title><rect x="814.6" y="997" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="817.57" y="1007.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (40,905,078 samples, 0.02%)</title><rect x="646.3" y="965" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="649.29" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::clear (25,205,705 samples, 0.01%)</title><rect x="1187.9" y="1621" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1190.85" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (92,764,070 samples, 0.03%)</title><rect x="683.9" y="1253" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="686.94" y="1263.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (27,475,342 samples, 0.01%)</title><rect x="641.0" y="917" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="644.04" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (38,605,414 samples, 0.01%)</title><rect x="205.5" y="485" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.53" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (230,143,327 samples, 0.09%)</title><rect x="457.1" y="1061" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="460.07" y="1071.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (27,092,472 samples, 0.01%)</title><rect x="1078.2" y="965" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1081.16" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (24,643,559 samples, 0.01%)</title><rect x="41.2" y="997" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="44.19" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (26,788,515 samples, 0.01%)</title><rect x="377.3" y="1029" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="380.34" y="1039.5" ></text>
</g>
<g >
<title>dput (78,826,699 samples, 0.03%)</title><rect x="268.1" y="1093" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="271.11" y="1103.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (105,344,153 samples, 0.04%)</title><rect x="19.6" y="1077" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="22.61" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (10,610,697,986 samples, 3.97%)</title><rect x="13.0" y="1237" width="46.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="16.00" y="1247.5" >std:..</text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (105,181,720 samples, 0.04%)</title><rect x="628.2" y="1365" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="631.17" y="1375.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (38,804,356 samples, 0.01%)</title><rect x="1002.9" y="1093" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1005.89" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (33,057,818 samples, 0.01%)</title><rect x="820.3" y="1093" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="823.34" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (23,633,066 samples, 0.01%)</title><rect x="1108.6" y="309" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1111.64" y="319.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (315,703,940 samples, 0.12%)</title><rect x="121.1" y="1301" width="1.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="124.05" y="1311.5" ></text>
</g>
<g >
<title>get_unmapped_area (34,552,855 samples, 0.01%)</title><rect x="403.4" y="1269" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="406.41" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (34,808,200 samples, 0.01%)</title><rect x="259.9" y="565" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="262.90" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (289,531,606 samples, 0.11%)</title><rect x="487.7" y="1301" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="490.71" y="1311.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (115,494,118 samples, 0.04%)</title><rect x="204.1" y="1333" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="207.10" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (72,810,764 samples, 0.03%)</title><rect x="859.6" y="1125" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="862.64" y="1135.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (131,361,044 samples, 0.05%)</title><rect x="391.1" y="981" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="394.08" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (85,842,966 samples, 0.03%)</title><rect x="577.6" y="1205" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="580.61" y="1215.5" ></text>
</g>
<g >
<title>HttpResponse::~HttpResponse (36,486,039 samples, 0.01%)</title><rect x="406.9" y="1189" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="409.88" y="1199.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (27,647,064 samples, 0.01%)</title><rect x="741.2" y="1045" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="744.18" y="1055.5" ></text>
</g>
<g >
<title>std::function&lt;void  (909,908,855 samples, 0.34%)</title><rect x="1114.5" y="1413" width="4.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1117.53" y="1423.5" ></text>
</g>
<g >
<title>TimerManager::AddTimer (28,063,628 samples, 0.01%)</title><rect x="130.4" y="1461" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="133.38" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (108,920,158 samples, 0.04%)</title><rect x="11.0" y="1237" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.98" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (420,064,379 samples, 0.16%)</title><rect x="487.3" y="1349" width="1.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="490.26" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (30,693,234 samples, 0.01%)</title><rect x="1072.4" y="1061" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1075.38" y="1071.5" ></text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (142,800,452 samples, 0.05%)</title><rect x="683.8" y="1365" width="0.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="686.79" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,367,397,484 samples, 4.26%)</title><rect x="1001.6" y="1333" width="50.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1004.57" y="1343.5" >std::..</text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (43,915,560 samples, 0.02%)</title><rect x="943.4" y="1013" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="946.38" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (464,427,892 samples, 0.17%)</title><rect x="1118.8" y="1413" width="2.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1121.79" y="1423.5" ></text>
</g>
<g >
<title>mas_store_gfp (46,190,395 samples, 0.02%)</title><rect x="973.1" y="1061" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="976.12" y="1071.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (147,144,859 samples, 0.06%)</title><rect x="400.5" y="1381" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="403.50" y="1391.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (119,866,016 samples, 0.04%)</title><rect x="215.8" y="837" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="218.81" y="847.5" ></text>
</g>
<g >
<title>hyperv_flush_tlb_multi (54,431,129 samples, 0.02%)</title><rect x="266.9" y="1013" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="269.94" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (87,488,817 samples, 0.03%)</title><rect x="578.1" y="1205" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="581.07" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (39,110,199 samples, 0.01%)</title><rect x="205.5" y="517" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.53" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (426,511,508 samples, 0.16%)</title><rect x="204.9" y="1349" width="1.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="207.88" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (245,411,276 samples, 0.09%)</title><rect x="700.3" y="1653" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="703.31" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (73,770,060 samples, 0.03%)</title><rect x="319.5" y="1013" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="322.49" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80,778,076 samples, 0.03%)</title><rect x="548.3" y="1285" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="551.31" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (73,709,486 samples, 0.03%)</title><rect x="28.7" y="1013" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="31.74" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (291,540,445 samples, 0.11%)</title><rect x="487.7" y="1333" width="1.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="490.70" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,277,658,253 samples, 3.47%)</title><rect x="722.8" y="1109" width="41.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="725.78" y="1119.5" >std..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,461,525,407 samples, 10.28%)</title><rect x="434.6" y="1637" width="121.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="437.62" y="1647.5" >std::thread::_I..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (116,273,472 samples, 0.04%)</title><rect x="516.7" y="1013" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="519.72" y="1023.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (47,100,134 samples, 0.02%)</title><rect x="537.6" y="1045" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="540.56" y="1055.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (634,870,700 samples, 0.24%)</title><rect x="1027.6" y="1029" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1030.63" y="1039.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (73,049,110 samples, 0.03%)</title><rect x="535.8" y="1029" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="538.75" y="1039.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (29,660,140 samples, 0.01%)</title><rect x="267.0" y="949" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="270.01" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,858,238 samples, 0.02%)</title><rect x="912.1" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.05" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (28,697,788 samples, 0.01%)</title><rect x="1108.1" y="1157" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1111.10" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (27,450,320 samples, 0.01%)</title><rect x="63.7" y="309" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.71" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,609,811 samples, 0.01%)</title><rect x="911.9" y="565" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.90" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,616,462,746 samples, 1.35%)</title><rect x="489.8" y="1013" width="16.0" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="492.79" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (56,645,494 samples, 0.02%)</title><rect x="1072.3" y="1173" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1075.32" y="1183.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (25,445,548,267 samples, 9.53%)</title><rect x="858.9" y="1493" width="112.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="861.90" y="1503.5" >std::__invoke..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,282,806,406 samples, 1.23%)</title><rect x="366.2" y="1077" width="14.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="369.19" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="277" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (26,917,786 samples, 0.01%)</title><rect x="63.3" y="405" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.26" y="415.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (24,938,043,200 samples, 9.34%)</title><rect x="718.2" y="1445" width="110.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="721.16" y="1455.5" >HttpConn::Han..</text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (35,976,171 samples, 0.01%)</title><rect x="1061.9" y="933" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1064.90" y="943.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (370,536,752 samples, 0.14%)</title><rect x="897.8" y="1077" width="1.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="900.78" y="1087.5" ></text>
</g>
<g >
<title>sock_write_iter (390,008,001 samples, 0.15%)</title><rect x="128.4" y="1301" width="1.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="131.42" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (27,849,726 samples, 0.01%)</title><rect x="821.0" y="1093" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="823.98" y="1103.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (47,714,942 samples, 0.02%)</title><rect x="391.3" y="949" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="394.25" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (43,888,392 samples, 0.02%)</title><rect x="718.2" y="1285" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="721.25" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,548,996 samples, 0.01%)</title><rect x="63.3" y="469" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.25" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (92,072,298 samples, 0.03%)</title><rect x="488.2" y="693" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="491.20" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (75,055,034 samples, 0.03%)</title><rect x="897.4" y="1077" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="900.45" y="1087.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (89,020,647 samples, 0.03%)</title><rect x="672.6" y="1061" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="675.60" y="1071.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (24,955,152 samples, 0.01%)</title><rect x="1075.1" y="1045" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1078.09" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,551,194 samples, 0.01%)</title><rect x="63.3" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.27" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (50,129,713 samples, 0.02%)</title><rect x="543.2" y="757" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="546.22" y="767.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (23,077,500 samples, 0.01%)</title><rect x="189.7" y="1061" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="192.72" y="1071.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (41,271,628 samples, 0.02%)</title><rect x="909.6" y="1333" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="912.61" y="1343.5" ></text>
</g>
<g >
<title>osq_lock (24,657,430 samples, 0.01%)</title><rect x="550.8" y="1061" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="553.75" y="1071.5" ></text>
</g>
<g >
<title>do_syscall_64 (105,150,673 samples, 0.04%)</title><rect x="264.3" y="1413" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="267.32" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,365,994 samples, 0.01%)</title><rect x="1054.7" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.70" y="303.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (27,387,958 samples, 0.01%)</title><rect x="856.8" y="1509" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="859.79" y="1519.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (22,789,339 samples, 0.01%)</title><rect x="904.7" y="1109" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="907.68" y="1119.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (26,132,395 samples, 0.01%)</title><rect x="267.0" y="853" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="270.02" y="863.5" ></text>
</g>
<g >
<title>lock_sock_nested (27,276,491 samples, 0.01%)</title><rect x="1171.3" y="1333" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1174.35" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (5,467,987,867 samples, 2.05%)</title><rect x="868.6" y="1093" width="24.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="871.56" y="1103.5" >s..</text>
</g>
<g >
<title>__sock_release (194,994,934 samples, 0.07%)</title><rect x="268.5" y="1077" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="271.49" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (30,385,627 samples, 0.01%)</title><rect x="962.4" y="1093" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="965.44" y="1103.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (26,994,543 samples, 0.01%)</title><rect x="203.6" y="1253" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="206.62" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (57,676,783 samples, 0.02%)</title><rect x="1002.8" y="1141" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1005.81" y="1151.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (219,121,335 samples, 0.08%)</title><rect x="390.8" y="1013" width="1.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="393.83" y="1023.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (56,106,711 samples, 0.02%)</title><rect x="1071.1" y="965" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1074.06" y="975.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (307,581,805 samples, 0.12%)</title><rect x="601.3" y="1045" width="1.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="604.33" y="1055.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (26,008,506 samples, 0.01%)</title><rect x="409.9" y="805" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="412.87" y="815.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (63,312,786 samples, 0.02%)</title><rect x="1115.0" y="1141" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1118.01" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (31,504,914 samples, 0.01%)</title><rect x="539.4" y="1093" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="542.42" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (328,960,466 samples, 0.12%)</title><rect x="40.0" y="1045" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="42.99" y="1055.5" ></text>
</g>
<g >
<title>do_syscall_64 (455,417,915 samples, 0.17%)</title><rect x="552.8" y="1413" width="2.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="555.77" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (32,058,124 samples, 0.01%)</title><rect x="63.3" y="437" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.25" y="447.5" ></text>
</g>
<g >
<title>mmap_region (133,233,891 samples, 0.05%)</title><rect x="403.6" y="1269" width="0.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="406.59" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (36,193,126 samples, 0.01%)</title><rect x="273.9" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="276.91" y="1663.5" ></text>
</g>
<g >
<title>__close (326,147,277 samples, 0.12%)</title><rect x="974.7" y="1205" width="1.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="977.67" y="1215.5" ></text>
</g>
<g >
<title>handle_softirqs (30,314,824 samples, 0.01%)</title><rect x="991.5" y="1573" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="994.55" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (131,222,227 samples, 0.05%)</title><rect x="11.5" y="1221" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="14.48" y="1231.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (52,943,867 samples, 0.02%)</title><rect x="400.2" y="1333" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="403.16" y="1343.5" ></text>
</g>
<g >
<title>[web-server] (30,024,789 samples, 0.01%)</title><rect x="227.1" y="1045" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="230.07" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,525,977 samples, 0.01%)</title><rect x="770.7" y="389" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.72" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,877,183 samples, 0.04%)</title><rect x="824.0" y="1157" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="826.98" y="1167.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (119,853,651 samples, 0.04%)</title><rect x="233.0" y="949" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="235.95" y="959.5" ></text>
</g>
<g >
<title>TimerManager::DelTimer (24,626,855 samples, 0.01%)</title><rect x="405.8" y="1301" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="408.82" y="1311.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (29,023,586 samples, 0.01%)</title><rect x="545.6" y="1237" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="548.62" y="1247.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (321,986,506 samples, 0.12%)</title><rect x="642.0" y="949" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="645.02" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (85,590,193 samples, 0.03%)</title><rect x="966.3" y="1173" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="969.26" y="1183.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (31,995,687 samples, 0.01%)</title><rect x="501.5" y="917" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="504.51" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (25,613,409 samples, 0.01%)</title><rect x="653.5" y="981" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="656.49" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (82,971,969 samples, 0.03%)</title><rect x="966.3" y="1141" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.27" y="1151.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (666,591,411 samples, 0.25%)</title><rect x="884.8" y="1045" width="2.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="887.78" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (42,803,615 samples, 0.02%)</title><rect x="259.9" y="821" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.89" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (29,614,553 samples, 0.01%)</title><rect x="259.9" y="421" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="262.92" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,707,811,595 samples, 2.89%)</title><rect x="207.1" y="1285" width="34.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="210.12" y="1295.5" >st..</text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (31,228,422 samples, 0.01%)</title><rect x="12.2" y="1093" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="15.22" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="421" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="431.5" ></text>
</g>
<g >
<title>irq_exit_rcu (41,220,123 samples, 0.02%)</title><rect x="727.0" y="1061" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="729.97" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (156,885,927 samples, 0.06%)</title><rect x="1100.6" y="1061" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1103.64" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (47,875,871 samples, 0.02%)</title><rect x="132.4" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="135.44" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (256,441,211 samples, 0.10%)</title><rect x="770.5" y="1205" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="773.55" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (24,991,144 samples, 0.01%)</title><rect x="1052.1" y="1269" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1055.07" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (24,208,810 samples, 0.01%)</title><rect x="954.6" y="1061" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="957.56" y="1071.5" ></text>
</g>
<g >
<title>operator delete (59,500,808 samples, 0.02%)</title><rect x="705.1" y="1669" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="708.10" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,151,600 samples, 0.02%)</title><rect x="118.4" y="773" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.36" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (87,025,793 samples, 0.03%)</title><rect x="902.0" y="1093" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="904.99" y="1103.5" ></text>
</g>
<g >
<title>netvsc_xmit (29,478,047 samples, 0.01%)</title><rect x="554.1" y="997" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="557.13" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,008,401 samples, 0.02%)</title><rect x="966.3" y="1029" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.28" y="1039.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (36,689,930 samples, 0.01%)</title><rect x="88.2" y="1045" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="91.25" y="1055.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (225,788,984 samples, 0.08%)</title><rect x="642.4" y="933" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="645.37" y="943.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (29,026,692 samples, 0.01%)</title><rect x="259.4" y="1125" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="262.42" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (261,876,575 samples, 0.10%)</title><rect x="1001.6" y="1253" width="1.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1004.58" y="1263.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (23,481,535 samples, 0.01%)</title><rect x="595.6" y="1077" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="598.61" y="1087.5" ></text>
</g>
<g >
<title>[web-server] (23,515,440 samples, 0.01%)</title><rect x="301.2" y="1093" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="304.18" y="1103.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (75,249,378 samples, 0.03%)</title><rect x="271.1" y="1061" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="274.10" y="1071.5" ></text>
</g>
<g >
<title>do_syscall_64 (475,624,367 samples, 0.18%)</title><rect x="834.4" y="1413" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="837.43" y="1423.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (51,633,339 samples, 0.02%)</title><rect x="823.5" y="1317" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="826.50" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (43,409,233 samples, 0.02%)</title><rect x="543.2" y="693" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="546.23" y="703.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (132,471,456 samples, 0.05%)</title><rect x="200.1" y="1125" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="203.08" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (87,907,836 samples, 0.03%)</title><rect x="684.0" y="1157" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="686.96" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (127,269,266 samples, 0.05%)</title><rect x="61.8" y="1381" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="64.76" y="1391.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (273,884,277 samples, 0.10%)</title><rect x="417.3" y="1669" width="1.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="420.27" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,084,669,925 samples, 4.15%)</title><rect x="718.8" y="1301" width="49.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="721.79" y="1311.5" >std:..</text>
</g>
<g >
<title>__fput (259,707,863 samples, 0.10%)</title><rect x="126.5" y="1109" width="1.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="129.53" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (57,523,181 samples, 0.02%)</title><rect x="513.4" y="1045" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="516.39" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (120,505,188 samples, 0.05%)</title><rect x="12.1" y="1253" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="15.11" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (144,843,421 samples, 0.05%)</title><rect x="400.5" y="1349" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="403.51" y="1359.5" ></text>
</g>
<g >
<title>sock_write_iter (410,774,425 samples, 0.15%)</title><rect x="976.7" y="1301" width="1.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="979.67" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,411,205 samples, 0.01%)</title><rect x="488.4" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.39" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (37,937,449 samples, 0.01%)</title><rect x="400.2" y="1269" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="403.22" y="1279.5" ></text>
</g>
<g >
<title>irq_exit_rcu (41,840,874 samples, 0.02%)</title><rect x="575.1" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="578.07" y="1647.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (47,721,235 samples, 0.02%)</title><rect x="965.8" y="1269" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="968.77" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (39,193,148 samples, 0.01%)</title><rect x="757.3" y="1061" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="760.29" y="1071.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (190,413,794 samples, 0.07%)</title><rect x="537.9" y="1093" width="0.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="540.89" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (92,561,996 samples, 0.03%)</title><rect x="719.3" y="1189" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="722.34" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (26,046,822 samples, 0.01%)</title><rect x="824.1" y="309" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.09" y="319.5" ></text>
</g>
<g >
<title>sock_read_iter (61,620,997 samples, 0.02%)</title><rect x="828.7" y="1333" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="831.68" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (44,523,446 samples, 0.02%)</title><rect x="294.4" y="1253" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="297.38" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,763,148 samples, 0.02%)</title><rect x="770.7" y="837" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.67" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (23,397,068 samples, 0.01%)</title><rect x="63.3" y="357" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.27" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (25,717,441 samples, 0.01%)</title><rect x="928.1" y="949" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="931.09" y="959.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::AddChannel (46,478,523 samples, 0.02%)</title><rect x="1158.3" y="1269" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1161.30" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (287,706,357 samples, 0.11%)</title><rect x="911.4" y="1317" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="914.41" y="1327.5" ></text>
</g>
<g >
<title>epoll_ctl (96,049,277 samples, 0.04%)</title><rect x="548.3" y="1301" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="551.30" y="1311.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (124,050,412 samples, 0.05%)</title><rect x="73.5" y="837" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="76.49" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (39,617,867 samples, 0.01%)</title><rect x="649.8" y="1061" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="652.83" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (87,980,180 samples, 0.03%)</title><rect x="248.5" y="1061" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="251.49" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,820,773 samples, 0.01%)</title><rect x="347.5" y="565" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.55" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (90,270,593 samples, 0.03%)</title><rect x="118.3" y="1269" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="121.27" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,706,943,109 samples, 1.39%)</title><rect x="913.3" y="1045" width="16.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="916.30" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (41,838,744 samples, 0.02%)</title><rect x="912.1" y="373" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="915.08" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (29,124,786 samples, 0.01%)</title><rect x="350.7" y="949" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="353.68" y="959.5" ></text>
</g>
<g >
<title>[unknown] (26,426,802 samples, 0.01%)</title><rect x="556.9" y="1493" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,449,669 samples, 0.02%)</title><rect x="206.0" y="661" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.95" y="671.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (24,407,401 samples, 0.01%)</title><rect x="516.1" y="901" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="519.10" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,737,283,020 samples, 1.40%)</title><rect x="772.3" y="1221" width="16.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="775.34" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,823,566,385 samples, 4.43%)</title><rect x="631.1" y="1349" width="52.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="634.12" y="1359.5" >std::..</text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (30,886,328 samples, 0.01%)</title><rect x="92.4" y="1029" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="95.37" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (25,698,801 samples, 0.01%)</title><rect x="838.6" y="1525" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (43,626,988 samples, 0.02%)</title><rect x="1054.4" y="597" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.42" y="607.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::unordered_map (52,362,191 samples, 0.02%)</title><rect x="1158.8" y="1285" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1161.76" y="1295.5" ></text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (125,362,090 samples, 0.05%)</title><rect x="1120.9" y="1557" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1123.92" y="1567.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (53,048,854 samples, 0.02%)</title><rect x="53.0" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="56.00" y="1087.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (50,016,684 samples, 0.02%)</title><rect x="627.6" y="1333" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="630.63" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (42,860,102 samples, 0.02%)</title><rect x="684.0" y="677" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.02" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,636,334,213 samples, 1.36%)</title><rect x="1056.0" y="1093" width="16.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1058.98" y="1103.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (24,528,097 samples, 0.01%)</title><rect x="704.3" y="1637" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="707.26" y="1647.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (24,901,924 samples, 0.01%)</title><rect x="786.7" y="933" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="789.71" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (85,351,348 samples, 0.03%)</title><rect x="598.0" y="1077" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="601.00" y="1087.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (33,045,764 samples, 0.01%)</title><rect x="354.5" y="933" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="357.45" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,472,280 samples, 0.01%)</title><rect x="1054.9" y="437" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.87" y="447.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;HttpConn&gt;::shared_ptr&lt;std::allocator&lt;HttpConn&gt;, int&amp;, sockaddr_in&amp;, std::shared_ptr&lt;EventLoop&gt;&amp;, int&amp;, Server::HandlerNewConn (2,479,485,318 samples, 0.93%)</title><rect x="1151.4" y="1413" width="11.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1154.41" y="1423.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (44,690,148 samples, 0.02%)</title><rect x="78.0" y="901" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="80.96" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,629,860,472 samples, 1.36%)</title><rect x="207.3" y="1029" width="16.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="210.29" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (85,614,444 samples, 0.03%)</title><rect x="514.0" y="1029" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="517.02" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (188,745,968 samples, 0.07%)</title><rect x="63.2" y="981" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.18" y="991.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (77,707,739 samples, 0.03%)</title><rect x="434.8" y="1413" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="437.79" y="1423.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (92,123,197 samples, 0.03%)</title><rect x="190.8" y="1029" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="193.81" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (51,008,606 samples, 0.02%)</title><rect x="626.1" y="1189" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="629.09" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (92,196,805 samples, 0.03%)</title><rect x="683.9" y="1237" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="686.94" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (30,069,101 samples, 0.01%)</title><rect x="487.9" y="389" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="490.94" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,218,238 samples, 0.01%)</title><rect x="630.0" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.98" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (54,176,768 samples, 0.02%)</title><rect x="823.5" y="1381" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="826.49" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (36,437,635 samples, 0.01%)</title><rect x="400.8" y="533" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="403.76" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (55,757,136 samples, 0.02%)</title><rect x="684.0" y="853" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.00" y="863.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (46,489,421 samples, 0.02%)</title><rect x="105.8" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="108.84" y="1087.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (134,409,537 samples, 0.05%)</title><rect x="1038.6" y="1061" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1041.59" y="1071.5" ></text>
</g>
<g >
<title>irq_exit_rcu (35,270,288 samples, 0.01%)</title><rect x="292.4" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="295.45" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (59,243,360 samples, 0.02%)</title><rect x="347.7" y="645" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.73" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (70,924,775 samples, 0.03%)</title><rect x="1082.8" y="997" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1085.80" y="1007.5" ></text>
</g>
<g >
<title>TimerManager::AddTimer (29,801,813 samples, 0.01%)</title><rect x="554.9" y="1461" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="557.90" y="1471.5" ></text>
</g>
<g >
<title>unmap_vmas (33,080,218 samples, 0.01%)</title><rect x="1116.2" y="1045" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1119.18" y="1055.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (26,843,375 samples, 0.01%)</title><rect x="105.5" y="1077" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="108.49" y="1087.5" ></text>
</g>
<g >
<title>thp_get_unmapped_area (30,269,878 samples, 0.01%)</title><rect x="403.4" y="1253" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="406.42" y="1263.5" ></text>
</g>
<g >
<title>operator new[] (33,854,154 samples, 0.01%)</title><rect x="557.9" y="1653" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="560.90" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (90,575,751 samples, 0.03%)</title><rect x="1054.6" y="725" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.65" y="735.5" ></text>
</g>
<g >
<title>Channel::OnEvents (27,160,943,161 samples, 10.17%)</title><rect x="10.3" y="1557" width="120.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="13.30" y="1567.5" >Channel::OnEve..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (136,990,469 samples, 0.05%)</title><rect x="575.4" y="1685" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="578.43" y="1695.5" ></text>
</g>
<g >
<title>get_unmapped_area (35,804,217 samples, 0.01%)</title><rect x="686.7" y="1269" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="689.71" y="1279.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (40,885,429 samples, 0.02%)</title><rect x="678.1" y="1061" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="681.10" y="1071.5" ></text>
</g>
<g >
<title>handle_softirqs (24,371,003 samples, 0.01%)</title><rect x="708.8" y="1573" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="711.82" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (119,441,187 samples, 0.04%)</title><rect x="696.0" y="1525" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="698.97" y="1535.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (97,833,547 samples, 0.04%)</title><rect x="378.5" y="1029" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="381.50" y="1039.5" ></text>
</g>
<g >
<title>[web-server] (33,436,221 samples, 0.01%)</title><rect x="808.7" y="1077" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="811.67" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (30,551,539 samples, 0.01%)</title><rect x="506.5" y="1061" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="509.46" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (36,951,401 samples, 0.01%)</title><rect x="932.3" y="1061" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="935.28" y="1071.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (25,645,705,324 samples, 9.60%)</title><rect x="434.7" y="1461" width="113.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="437.72" y="1471.5" >HttpConn::Http..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,581,210 samples, 0.01%)</title><rect x="1054.9" y="661" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.85" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (51,798,661 samples, 0.02%)</title><rect x="118.3" y="901" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="121.34" y="911.5" ></text>
</g>
<g >
<title>std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, TimerManager::TimerCmp&gt; (27,427,471 samples, 0.01%)</title><rect x="696.8" y="1525" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="699.76" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (23,146,335 samples, 0.01%)</title><rect x="912.1" y="117" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="915.12" y="127.5" ></text>
</g>
<g >
<title>exc_page_fault (91,947,255 samples, 0.03%)</title><rect x="553.2" y="1189" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="556.21" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (43,185,048 samples, 0.02%)</title><rect x="63.2" y="645" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.24" y="655.5" ></text>
</g>
<g >
<title>do_epoll_ctl (32,878,558 samples, 0.01%)</title><rect x="272.2" y="1381" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="275.22" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (84,270,073 samples, 0.03%)</title><rect x="118.3" y="1157" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="121.29" y="1167.5" ></text>
</g>
<g >
<title>inet_release (183,027,364 samples, 0.07%)</title><rect x="692.7" y="1061" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="695.67" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (71,555,228 samples, 0.03%)</title><rect x="400.7" y="1013" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="403.71" y="1023.5" ></text>
</g>
<g >
<title>TimerManager::AddTimer (32,387,921 samples, 0.01%)</title><rect x="978.7" y="1461" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="981.66" y="1471.5" ></text>
</g>
<g >
<title>__dynamic_cast (153,843,308 samples, 0.06%)</title><rect x="445.5" y="1077" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="448.54" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (1,932,657,253 samples, 0.72%)</title><rect x="368.0" y="1061" width="8.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="370.98" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_close (303,761,906 samples, 0.11%)</title><rect x="692.2" y="1141" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="695.24" y="1151.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (54,106,950 samples, 0.02%)</title><rect x="1053.2" y="1189" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1056.21" y="1199.5" ></text>
</g>
<g >
<title>unmap_single_vma (24,481,435 samples, 0.01%)</title><rect x="691.4" y="1029" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="694.44" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (64,152,528 samples, 0.02%)</title><rect x="795.4" y="1045" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="798.43" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (29,470,856 samples, 0.01%)</title><rect x="347.3" y="309" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.30" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (48,678,776 samples, 0.02%)</title><rect x="767.8" y="1285" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="770.81" y="1295.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (40,842,728 samples, 0.02%)</title><rect x="361.1" y="901" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="364.11" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (49,089,241 samples, 0.02%)</title><rect x="255.0" y="1045" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="258.03" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (36,381,987 samples, 0.01%)</title><rect x="1035.4" y="1045" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1038.41" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (28,198,194 samples, 0.01%)</title><rect x="333.5" y="1061" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="336.50" y="1071.5" ></text>
</g>
<g >
<title>unmap_single_vma (27,773,632 samples, 0.01%)</title><rect x="974.0" y="1029" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="977.01" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (142,035,980 samples, 0.05%)</title><rect x="705.6" y="1669" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="708.64" y="1679.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (170,062,733 samples, 0.06%)</title><rect x="971.4" y="1397" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="974.41" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (45,150,263 samples, 0.02%)</title><rect x="140.9" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="143.95" y="1663.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (309,700,008 samples, 0.12%)</title><rect x="407.4" y="1125" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="410.38" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,429,449,884 samples, 1.28%)</title><rect x="948.4" y="1109" width="15.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="951.43" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (24,309,937 samples, 0.01%)</title><rect x="356.7" y="869" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="359.66" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,598,450,105 samples, 1.35%)</title><rect x="65.1" y="1013" width="15.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="68.08" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_resize (33,892,126 samples, 0.01%)</title><rect x="487.3" y="1333" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="490.32" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (38,084,130 samples, 0.01%)</title><rect x="23.1" y="1077" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="26.15" y="1087.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (220,906,333 samples, 0.08%)</title><rect x="745.4" y="965" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="748.43" y="975.5" ></text>
</g>
<g >
<title>epoll_wait (31,115,044 samples, 0.01%)</title><rect x="555.4" y="1541" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="558.37" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (48,585,233 samples, 0.02%)</title><rect x="912.1" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.07" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (37,622,514 samples, 0.01%)</title><rect x="118.4" y="661" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="121.36" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (51,981,495 samples, 0.02%)</title><rect x="307.0" y="1077" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="309.98" y="1087.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (125,827,924 samples, 0.05%)</title><rect x="1081.7" y="949" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1084.68" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,862,407,621 samples, 1.45%)</title><rect x="930.5" y="1253" width="17.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="933.52" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (513,650,818 samples, 0.19%)</title><rect x="169.0" y="1029" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="171.98" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (90,659,347 samples, 0.03%)</title><rect x="684.0" y="1221" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="686.95" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (40,334,270 samples, 0.02%)</title><rect x="446.7" y="1077" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="449.71" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (42,089,890 samples, 0.02%)</title><rect x="154.9" y="1109" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="157.87" y="1119.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (590,607,645 samples, 0.22%)</title><rect x="744.5" y="1013" width="2.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="747.49" y="1023.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,554,824,183 samples, 0.58%)</title><rect x="689.1" y="1509" width="6.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="692.09" y="1519.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (71,436,920 samples, 0.03%)</title><rect x="475.7" y="1093" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="478.70" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (41,075,877 samples, 0.02%)</title><rect x="423.2" y="1669" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="426.19" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (54,979,440 samples, 0.02%)</title><rect x="770.7" y="741" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.67" y="751.5" ></text>
</g>
<g >
<title>operator new (40,235,099 samples, 0.02%)</title><rect x="460.6" y="1013" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="463.56" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (41,913,713 samples, 0.02%)</title><rect x="592.2" y="1061" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="595.19" y="1071.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (106,484,935 samples, 0.04%)</title><rect x="769.3" y="1349" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="772.32" y="1359.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (28,441,493 samples, 0.01%)</title><rect x="1002.9" y="1061" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1005.92" y="1071.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (36,609,749 samples, 0.01%)</title><rect x="203.6" y="1269" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="206.60" y="1279.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (178,545,522 samples, 0.07%)</title><rect x="405.8" y="1365" width="0.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="408.80" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::_State (22,785,331 samples, 0.01%)</title><rect x="153.9" y="997" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="156.88" y="1007.5" ></text>
</g>
<g >
<title>std::function&lt;void  (104,556,479 samples, 0.04%)</title><rect x="554.9" y="1541" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="557.87" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (27,406,604 samples, 0.01%)</title><rect x="912.1" y="197" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="915.11" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (361,581,586 samples, 0.14%)</title><rect x="68.9" y="933" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="71.92" y="943.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (63,777,274 samples, 0.02%)</title><rect x="554.0" y="1061" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="557.01" y="1071.5" ></text>
</g>
<g >
<title>malloc (59,974,164 samples, 0.02%)</title><rect x="1026.8" y="1013" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1029.81" y="1023.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (24,257,110 samples, 0.01%)</title><rect x="285.0" y="1589" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="288.05" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (35,675,026 samples, 0.01%)</title><rect x="259.9" y="629" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="262.90" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,235,946,617 samples, 4.21%)</title><rect x="294.9" y="1317" width="49.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="297.87" y="1327.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (95,073,918 samples, 0.04%)</title><rect x="488.2" y="725" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="491.19" y="735.5" ></text>
</g>
<g >
<title>__dynamic_cast (145,546,431 samples, 0.05%)</title><rect x="21.4" y="1077" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="24.44" y="1087.5" ></text>
</g>
<g >
<title>down_write_killable (51,605,255 samples, 0.02%)</title><rect x="1116.5" y="1093" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1119.48" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (86,211,065 samples, 0.03%)</title><rect x="902.7" y="1077" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="905.67" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,672,876,453 samples, 4.00%)</title><rect x="861.5" y="1269" width="47.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="864.51" y="1279.5" >std:..</text>
</g>
<g >
<title>ip_queue_xmit (155,762,714 samples, 0.06%)</title><rect x="270.8" y="1173" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="273.81" y="1183.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,212,497,324 samples, 10.19%)</title><rect x="152.8" y="1637" width="120.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="155.81" y="1647.5" >std::thread::_..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (34,133,417 samples, 0.01%)</title><rect x="202.4" y="1253" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="205.35" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (49,390,823 samples, 0.02%)</title><rect x="762.5" y="1077" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="765.49" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (33,556,321 samples, 0.01%)</title><rect x="206.0" y="341" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="208.98" y="351.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (72,250,666 samples, 0.03%)</title><rect x="1069.1" y="949" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1072.13" y="959.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (24,037,810 samples, 0.01%)</title><rect x="1009.9" y="885" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1012.91" y="895.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (58,082,506 samples, 0.02%)</title><rect x="1108.0" y="1365" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1111.00" y="1375.5" ></text>
</g>
<g >
<title>[web-server] (31,533,000 samples, 0.01%)</title><rect x="633.8" y="933" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="636.81" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (54,157,921 samples, 0.02%)</title><rect x="205.5" y="789" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.49" y="799.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (23,251,763 samples, 0.01%)</title><rect x="402.7" y="1269" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="405.70" y="1279.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (40,405,491 samples, 0.02%)</title><rect x="1131.3" y="1637" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1134.29" y="1647.5" ></text>
</g>
<g >
<title>__mmap (366,936,357 samples, 0.14%)</title><rect x="262.3" y="1397" width="1.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="265.31" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,078,620 samples, 0.02%)</title><rect x="206.0" y="549" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.97" y="559.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (59,057,051 samples, 0.02%)</title><rect x="239.9" y="1077" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="242.90" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (44,611,867 samples, 0.02%)</title><rect x="201.9" y="1125" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="204.95" y="1135.5" ></text>
</g>
<g >
<title>do_mmap (183,689,544 samples, 0.07%)</title><rect x="969.0" y="1285" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="971.95" y="1295.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (26,891,579 samples, 0.01%)</title><rect x="495.5" y="933" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="498.46" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (34,820,773 samples, 0.01%)</title><rect x="347.5" y="581" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.55" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,105,807 samples, 0.01%)</title><rect x="684.0" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.04" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (25,878,693 samples, 0.01%)</title><rect x="77.6" y="933" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="80.57" y="943.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (45,594,543 samples, 0.02%)</title><rect x="1071.3" y="981" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1074.31" y="991.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (325,773,656 samples, 0.12%)</title><rect x="853.0" y="1685" width="1.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="855.97" y="1695.5" ></text>
</g>
<g >
<title>vfs_writev (428,347,966 samples, 0.16%)</title><rect x="1118.9" y="1349" width="1.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1121.94" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,925,206 samples, 0.01%)</title><rect x="966.3" y="677" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.32" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (30,212,337 samples, 0.01%)</title><rect x="347.6" y="437" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.56" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,724,327,124 samples, 1.39%)</title><rect x="789.0" y="1157" width="16.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="792.04" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (44,508,237 samples, 0.02%)</title><rect x="871.4" y="1077" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="874.35" y="1087.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (851,575,515 samples, 0.32%)</title><rect x="406.7" y="1285" width="3.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="409.69" y="1295.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (39,911,556 samples, 0.01%)</title><rect x="607.7" y="1013" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="610.71" y="1023.5" ></text>
</g>
<g >
<title>ksys_read (79,838,757 samples, 0.03%)</title><rect x="547.6" y="1365" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="550.58" y="1375.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (27,422,297,457 samples, 10.27%)</title><rect x="10.3" y="1669" width="121.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="13.29" y="1679.5" >std::thread::_S..</text>
</g>
<g >
<title>x64_sys_call (26,741,766 samples, 0.01%)</title><rect x="555.1" y="1413" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="558.09" y="1423.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (87,872,615 samples, 0.03%)</title><rect x="355.6" y="917" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="358.63" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,827,534,317 samples, 1.43%)</title><rect x="82.0" y="1157" width="16.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="85.00" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (256,158,882 samples, 0.10%)</title><rect x="718.8" y="1253" width="1.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="721.80" y="1263.5" ></text>
</g>
<g >
<title>Channel::SetWriteHandler (34,896,635 samples, 0.01%)</title><rect x="1152.4" y="1301" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1155.39" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_begin (30,069,783 samples, 0.01%)</title><rect x="908.7" y="1269" width="0.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="911.75" y="1279.5" ></text>
</g>
<g >
<title>do_vmi_munmap (254,176,395 samples, 0.10%)</title><rect x="690.6" y="1093" width="1.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="693.59" y="1103.5" ></text>
</g>
<g >
<title>do_epoll_ctl (25,895,642 samples, 0.01%)</title><rect x="413.3" y="1381" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="416.29" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (69,516,176 samples, 0.03%)</title><rect x="64.4" y="1365" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="67.43" y="1375.5" ></text>
</g>
<g >
<title>inet_sendmsg (375,631,776 samples, 0.14%)</title><rect x="128.4" y="1285" width="1.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="131.45" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (126,793,107 samples, 0.05%)</title><rect x="392.0" y="1045" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="395.05" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (22,908,039 samples, 0.01%)</title><rect x="930.1" y="1045" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="933.11" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (192,807,283 samples, 0.07%)</title><rect x="629.4" y="981" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.45" y="991.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (31,791,804 samples, 0.01%)</title><rect x="1115.9" y="997" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1118.95" y="1007.5" ></text>
</g>
<g >
<title>HttpConn::~HttpConn (475,391,703 samples, 0.18%)</title><rect x="265.9" y="1205" width="2.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="268.86" y="1215.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (52,085,129 samples, 0.02%)</title><rect x="565.0" y="1637" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="567.96" y="1647.5" ></text>
</g>
<g >
<title>std::function&lt;void  (33,900,878 samples, 0.01%)</title><rect x="1152.4" y="1285" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1155.40" y="1295.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (48,224,047 samples, 0.02%)</title><rect x="637.9" y="901" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="640.93" y="911.5" ></text>
</g>
<g >
<title>x64_sys_call (458,799,628 samples, 0.17%)</title><rect x="976.5" y="1397" width="2.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="979.54" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,445,734,607 samples, 1.29%)</title><rect x="224.6" y="1093" width="15.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="227.60" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_eliminate_dummy (40,689,087 samples, 0.02%)</title><rect x="1051.8" y="1333" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1054.83" y="1343.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (23,380,977 samples, 0.01%)</title><rect x="826.7" y="1237" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="829.67" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (26,426,802 samples, 0.01%)</title><rect x="556.9" y="1477" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1487.5" ></text>
</g>
<g >
<title>tcp_push (201,589,768 samples, 0.08%)</title><rect x="1119.7" y="1237" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1122.70" y="1247.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_maskbit (49,811,063 samples, 0.02%)</title><rect x="624.6" y="1109" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="627.57" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (31,803,960 samples, 0.01%)</title><rect x="870.8" y="1077" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="873.76" y="1087.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (36,742,928 samples, 0.01%)</title><rect x="691.1" y="997" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="694.13" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::construct&lt;HttpConn, int&amp;, sockaddr_in&amp;, std::shared_ptr&lt;EventLoop&gt;&amp;, int&amp;, Server::HandlerNewConn (2,230,155,956 samples, 0.84%)</title><rect x="1152.0" y="1333" width="9.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1154.96" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,525,977 samples, 0.01%)</title><rect x="770.7" y="421" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.72" y="431.5" ></text>
</g>
<g >
<title>malloc (54,653,637 samples, 0.02%)</title><rect x="743.6" y="1013" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="746.55" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (350,212,933 samples, 0.13%)</title><rect x="686.6" y="1365" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="689.60" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::construct&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (25,609,252 samples, 0.01%)</title><rect x="627.7" y="1221" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="630.68" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (32,823,984 samples, 0.01%)</title><rect x="820.8" y="1077" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="823.82" y="1087.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (33,506,064 samples, 0.01%)</title><rect x="667.6" y="1077" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="670.58" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (31,138,215 samples, 0.01%)</title><rect x="347.6" y="485" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.55" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (266,286,696 samples, 0.10%)</title><rect x="529.3" y="1061" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="532.30" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,053,984 samples, 0.01%)</title><rect x="824.1" y="405" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.08" y="415.5" ></text>
</g>
<g >
<title>__napi_poll (32,194,895 samples, 0.01%)</title><rect x="303.1" y="997" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="306.10" y="1007.5" ></text>
</g>
<g >
<title>HttpResponse::SetHeader (28,976,969 samples, 0.01%)</title><rect x="261.3" y="1381" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="264.34" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (25,738,907 samples, 0.01%)</title><rect x="1143.0" y="1493" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.99" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (66,146,425 samples, 0.02%)</title><rect x="824.0" y="885" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.03" y="895.5" ></text>
</g>
<g >
<title>__napi_poll (38,446,668 samples, 0.01%)</title><rect x="575.1" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="578.08" y="1583.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (94,726,323 samples, 0.04%)</title><rect x="303.5" y="1077" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="306.45" y="1087.5" ></text>
</g>
<g >
<title>tcp_write_xmit (201,575,419 samples, 0.08%)</title><rect x="694.8" y="1205" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="697.81" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (26,692,911 samples, 0.01%)</title><rect x="821.1" y="1093" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="824.10" y="1103.5" ></text>
</g>
<g >
<title>getname_flags (28,742,483 samples, 0.01%)</title><rect x="261.7" y="1285" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="264.74" y="1295.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (211,491,347 samples, 0.08%)</title><rect x="764.4" y="1125" width="0.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="767.35" y="1135.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (70,087,569 samples, 0.03%)</title><rect x="434.8" y="1365" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="437.82" y="1375.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (254,639,829 samples, 0.10%)</title><rect x="797.3" y="1013" width="1.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="800.35" y="1023.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (45,953,584 samples, 0.02%)</title><rect x="643.1" y="901" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="646.14" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (55,038,598 samples, 0.02%)</title><rect x="60.3" y="1285" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="63.33" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (266,985,730 samples, 0.10%)</title><rect x="1054.2" y="1317" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1057.17" y="1327.5" ></text>
</g>
<g >
<title>std::function&lt;void  (71,114,443 samples, 0.03%)</title><rect x="434.8" y="1397" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="437.82" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (44,841,468 samples, 0.02%)</title><rect x="1051.6" y="1285" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1054.59" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,655,336 samples, 0.02%)</title><rect x="1108.6" y="741" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.61" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,811,206,434 samples, 4.42%)</title><rect x="207.1" y="1365" width="52.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="210.10" y="1375.5" >std::..</text>
</g>
<g >
<title>destroy_inode (23,406,224 samples, 0.01%)</title><rect x="551.3" y="1013" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="554.33" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (23,037,100 samples, 0.01%)</title><rect x="861.3" y="1237" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="864.29" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (59,733,560 samples, 0.02%)</title><rect x="154.8" y="1157" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="157.80" y="1167.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (81,848,868 samples, 0.03%)</title><rect x="531.8" y="1061" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="534.84" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,482,284 samples, 0.01%)</title><rect x="347.8" y="213" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.77" y="223.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (25,330,733 samples, 0.01%)</title><rect x="876.2" y="981" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="879.23" y="991.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (1,705,285,956 samples, 0.64%)</title><rect x="829.1" y="1477" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="832.07" y="1487.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (57,918,199 samples, 0.02%)</title><rect x="769.5" y="1189" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="772.48" y="1199.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (332,883,498 samples, 0.12%)</title><rect x="686.7" y="1317" width="1.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="689.66" y="1327.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (162,457,229 samples, 0.06%)</title><rect x="926.0" y="949" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="928.96" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (208,909,527 samples, 0.08%)</title><rect x="1054.3" y="1141" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.27" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (28,802,568 samples, 0.01%)</title><rect x="817.6" y="1077" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="820.59" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_eliminate_dummy (41,086,179 samples, 0.02%)</title><rect x="909.0" y="1333" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="912.00" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,676,016,073 samples, 1.38%)</title><rect x="772.3" y="1189" width="16.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="775.34" y="1199.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (54,240,652 samples, 0.02%)</title><rect x="542.7" y="1365" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="545.65" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (12,035,117,449 samples, 4.51%)</title><rect x="489.5" y="1365" width="53.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="492.46" y="1375.5" >std::..</text>
</g>
<g >
<title>up_write (25,920,753 samples, 0.01%)</title><rect x="122.3" y="1285" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="125.33" y="1295.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (28,698,979 samples, 0.01%)</title><rect x="1065.9" y="917" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1068.89" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (23,773,164 samples, 0.01%)</title><rect x="594.0" y="997" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="597.03" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (51,418,883 samples, 0.02%)</title><rect x="628.3" y="1157" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="631.33" y="1167.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_M_getword (47,742,796 samples, 0.02%)</title><rect x="199.8" y="1093" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="202.75" y="1103.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::construct&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt; &gt; (36,538,037 samples, 0.01%)</title><rect x="153.8" y="1029" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="156.84" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (107,467,818 samples, 0.04%)</title><rect x="232.1" y="1013" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="235.10" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (44,596,016 samples, 0.02%)</title><rect x="1076.5" y="1045" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1079.48" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,865,426,557 samples, 1.45%)</title><rect x="81.9" y="1221" width="17.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="84.94" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,632,965,862 samples, 3.61%)</title><rect x="862.6" y="1125" width="42.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="865.59" y="1135.5" >std:..</text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (32,730,164 samples, 0.01%)</title><rect x="1102.6" y="1045" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1105.61" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_end (95,939,521 samples, 0.04%)</title><rect x="153.7" y="1189" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="156.66" y="1199.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (22,870,840 samples, 0.01%)</title><rect x="143.6" y="1589" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="146.56" y="1599.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (52,939,266 samples, 0.02%)</title><rect x="464.3" y="1045" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="467.33" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (281,677,489 samples, 0.11%)</title><rect x="63.0" y="1301" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="66.04" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+= (48,090,981 samples, 0.02%)</title><rect x="614.0" y="1029" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="617.04" y="1039.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (82,424,016 samples, 0.03%)</title><rect x="1170.5" y="1285" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1173.53" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (40,115,782 samples, 0.02%)</title><rect x="102.8" y="1077" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="105.75" y="1087.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (73,203,936 samples, 0.03%)</title><rect x="1001.0" y="1413" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1004.04" y="1423.5" ></text>
</g>
<g >
<title>ip_list_rcv (26,626,221 samples, 0.01%)</title><rect x="1009.9" y="917" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1012.91" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (33,275,939 samples, 0.01%)</title><rect x="1044.6" y="1093" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1047.56" y="1103.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (27,212,451,080 samples, 10.19%)</title><rect x="576.8" y="1685" width="120.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="579.79" y="1695.5" >[libstdc++.so...</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (210,433,726 samples, 0.08%)</title><rect x="799.3" y="1045" width="0.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="802.25" y="1055.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (67,840,025 samples, 0.03%)</title><rect x="944.6" y="1061" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="947.57" y="1071.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (22,757,755 samples, 0.01%)</title><rect x="176.2" y="1061" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="179.21" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (203,249,966 samples, 0.08%)</title><rect x="375.6" y="1045" width="0.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="378.62" y="1055.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (34,394,749 samples, 0.01%)</title><rect x="388.1" y="1077" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="391.10" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (40,403,939 samples, 0.02%)</title><rect x="937.4" y="1045" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="940.39" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (155,828,975 samples, 0.06%)</title><rect x="1023.7" y="1045" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1026.75" y="1055.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (31,761,576 samples, 0.01%)</title><rect x="554.1" y="1013" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="557.12" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (39,924,895 samples, 0.01%)</title><rect x="205.5" y="565" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.52" y="575.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (179,254,097 samples, 0.07%)</title><rect x="1103.1" y="1093" width="0.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1106.14" y="1103.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (30,840,754 samples, 0.01%)</title><rect x="686.7" y="1237" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="689.72" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (312,820,910 samples, 0.12%)</title><rect x="205.3" y="1333" width="1.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="208.25" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,468,427,081 samples, 4.29%)</title><rect x="577.4" y="1365" width="50.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="580.45" y="1375.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,413,128 samples, 0.01%)</title><rect x="347.8" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.76" y="303.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (182,960,222 samples, 0.07%)</title><rect x="190.4" y="1061" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="193.43" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,032,766 samples, 0.01%)</title><rect x="63.3" y="341" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.27" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,843,456 samples, 0.01%)</title><rect x="118.4" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.39" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (599,401,729 samples, 0.22%)</title><rect x="1017.1" y="1045" width="2.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1020.11" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (273,321,508 samples, 0.10%)</title><rect x="276.3" y="1653" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="279.28" y="1663.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (56,960,387 samples, 0.02%)</title><rect x="346.0" y="1173" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="349.01" y="1183.5" ></text>
</g>
<g >
<title>ip_finish_output2 (74,287,396 samples, 0.03%)</title><rect x="129.4" y="1077" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="132.43" y="1087.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (166,813,826 samples, 0.06%)</title><rect x="232.9" y="965" width="0.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="235.85" y="975.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::AddChannel (108,485,741 samples, 0.04%)</title><rect x="836.6" y="1493" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="839.63" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (108,063,882 samples, 0.04%)</title><rect x="1124.7" y="1637" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1127.68" y="1647.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (917,436,387 samples, 0.34%)</title><rect x="187.4" y="1093" width="4.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="190.39" y="1103.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (44,865,941 samples, 0.02%)</title><rect x="282.4" y="1637" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="285.39" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (37,866,667 samples, 0.01%)</title><rect x="629.8" y="661" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="632.76" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;,  (45,794,192 samples, 0.02%)</title><rect x="627.6" y="1285" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="630.64" y="1295.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (27,208,287,959 samples, 10.19%)</title><rect x="576.8" y="1669" width="120.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="579.81" y="1679.5" >std::thread::_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (46,144,606 samples, 0.02%)</title><rect x="684.5" y="1365" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="687.47" y="1375.5" ></text>
</g>
<g >
<title>net_rx_action (32,194,895 samples, 0.01%)</title><rect x="303.1" y="1013" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="306.10" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (78,027,024 samples, 0.03%)</title><rect x="1046.9" y="1093" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1049.90" y="1103.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (38,950,834 samples, 0.01%)</title><rect x="154.9" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="157.88" y="1087.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (25,037,422 samples, 0.01%)</title><rect x="546.2" y="1221" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="549.17" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (50,658,248 samples, 0.02%)</title><rect x="543.2" y="805" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="546.22" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,510,788,152 samples, 1.31%)</title><rect x="1056.2" y="1013" width="15.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1059.16" y="1023.5" ></text>
</g>
<g >
<title>perf_iterate_sb (30,043,452 samples, 0.01%)</title><rect x="263.0" y="1237" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="265.98" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (35,023,294 samples, 0.01%)</title><rect x="81.5" y="1125" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="84.54" y="1135.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (107,568,908 samples, 0.04%)</title><rect x="685.9" y="1317" width="0.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="688.91" y="1327.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (223,737,176 samples, 0.08%)</title><rect x="639.2" y="901" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="642.20" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (60,076,934 samples, 0.02%)</title><rect x="118.3" y="1013" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="121.33" y="1023.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (66,559,851 samples, 0.02%)</title><rect x="679.7" y="1093" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="682.69" y="1103.5" ></text>
</g>
<g >
<title>irq_exit_rcu (27,157,656 samples, 0.01%)</title><rect x="550.2" y="965" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="553.21" y="975.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (1,664,089,694 samples, 0.62%)</title><rect x="405.7" y="1493" width="7.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="408.70" y="1503.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (23,002,878 samples, 0.01%)</title><rect x="823.6" y="1125" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.59" y="1135.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (131,375,416 samples, 0.05%)</title><rect x="921.9" y="837" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="924.88" y="847.5" ></text>
</g>
<g >
<title>__dynamic_cast (54,364,827 samples, 0.02%)</title><rect x="1058.8" y="933" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1061.78" y="943.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (189,338,886 samples, 0.07%)</title><rect x="180.2" y="965" width="0.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="183.21" y="975.5" ></text>
</g>
<g >
<title>ip_local_deliver (23,727,578 samples, 0.01%)</title><rect x="267.0" y="773" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="270.02" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,904,322,194 samples, 1.46%)</title><rect x="382.3" y="1285" width="17.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="385.30" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::assign (36,898,207 samples, 0.01%)</title><rect x="346.7" y="1317" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="349.71" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,783,789 samples, 0.01%)</title><rect x="912.1" y="133" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.12" y="143.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (915,736,742 samples, 0.34%)</title><rect x="830.0" y="1317" width="4.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="833.02" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (43,226,643 samples, 0.02%)</title><rect x="1059.2" y="933" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1062.19" y="943.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (488,676,086 samples, 0.18%)</title><rect x="333.1" y="1093" width="2.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="336.12" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (35,617,255 samples, 0.01%)</title><rect x="963.0" y="1093" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="966.04" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (40,023,102 samples, 0.01%)</title><rect x="351.2" y="949" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="354.16" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (155,812,854 samples, 0.06%)</title><rect x="1054.4" y="853" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.38" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (107,805,506 samples, 0.04%)</title><rect x="730.3" y="1077" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="733.32" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::~_BracketMatcher (27,291,765 samples, 0.01%)</title><rect x="628.4" y="1061" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="631.41" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (57,131,961 samples, 0.02%)</title><rect x="577.7" y="1093" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="580.71" y="1103.5" ></text>
</g>
<g >
<title>do_syscall_64 (96,253,643 samples, 0.04%)</title><rect x="544.9" y="1365" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="547.88" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::str (25,536,166 samples, 0.01%)</title><rect x="487.1" y="1365" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="490.08" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (33,538,728 samples, 0.01%)</title><rect x="402.3" y="1349" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="405.32" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (34,702,955 samples, 0.01%)</title><rect x="771.0" y="597" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.97" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,912,247 samples, 0.01%)</title><rect x="543.3" y="485" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.26" y="495.5" ></text>
</g>
<g >
<title>destroy_inode (22,708,690 samples, 0.01%)</title><rect x="409.3" y="1013" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="412.25" y="1023.5" ></text>
</g>
<g >
<title>do_iter_write (417,477,224 samples, 0.16%)</title><rect x="552.9" y="1333" width="1.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="555.91" y="1343.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (25,345,242,920 samples, 9.49%)</title><rect x="1001.0" y="1445" width="112.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1004.01" y="1455.5" >HttpConn::Han..</text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (32,255,480 samples, 0.01%)</title><rect x="94.5" y="1013" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="97.51" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (36,788,701 samples, 0.01%)</title><rect x="588.6" y="1077" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="591.64" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64,677,132 samples, 0.02%)</title><rect x="689.3" y="1285" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="692.31" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (56,379,335 samples, 0.02%)</title><rect x="23.3" y="1077" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="26.31" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (26,395,000 samples, 0.01%)</title><rect x="814.0" y="1013" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="816.96" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (32,522,204 samples, 0.01%)</title><rect x="478.3" y="1093" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="481.27" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (41,231,950 samples, 0.02%)</title><rect x="771.2" y="437" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="774.18" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (37,258,068 samples, 0.01%)</title><rect x="487.9" y="517" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="490.93" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::vector (33,964,691 samples, 0.01%)</title><rect x="629.2" y="1317" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="632.15" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,178,295 samples, 0.01%)</title><rect x="911.6" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.63" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (38,009,315 samples, 0.01%)</title><rect x="594.6" y="1013" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="597.61" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (37,710,404 samples, 0.01%)</title><rect x="101.4" y="1093" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="104.44" y="1103.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (40,544,469 samples, 0.02%)</title><rect x="423.2" y="1637" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="426.19" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (10,404,935,117 samples, 3.90%)</title><rect x="155.8" y="1189" width="46.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="158.83" y="1199.5" >std:..</text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (164,217,845 samples, 0.06%)</title><rect x="474.9" y="1045" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="477.89" y="1055.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (73,792,287 samples, 0.03%)</title><rect x="658.9" y="997" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="661.91" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,828,941 samples, 0.01%)</title><rect x="206.0" y="149" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.98" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (261,192,654 samples, 0.10%)</title><rect x="770.5" y="1221" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.53" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (37,681,081 samples, 0.01%)</title><rect x="1040.6" y="1061" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1043.61" y="1071.5" ></text>
</g>
<g >
<title>tcp_sendmsg (381,189,929 samples, 0.14%)</title><rect x="1119.0" y="1269" width="1.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1122.05" y="1279.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (28,415,830 samples, 0.01%)</title><rect x="831.4" y="837" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="834.43" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,852,704 samples, 0.02%)</title><rect x="630.0" y="549" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.95" y="559.5" ></text>
</g>
<g >
<title>tcp_push (216,529,701 samples, 0.08%)</title><rect x="270.7" y="1237" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="273.72" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (28,787,072 samples, 0.01%)</title><rect x="209.3" y="949" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="212.28" y="959.5" ></text>
</g>
<g >
<title>vfs_read (67,592,653 samples, 0.03%)</title><rect x="547.6" y="1349" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="550.63" y="1359.5" ></text>
</g>
<g >
<title>path_lookupat (40,346,651 samples, 0.02%)</title><rect x="826.1" y="1253" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="829.11" y="1263.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (46,909,819 samples, 0.02%)</title><rect x="943.1" y="1029" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="946.10" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (43,977,708 samples, 0.02%)</title><rect x="117.8" y="1269" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="120.84" y="1279.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (41,250,587 samples, 0.02%)</title><rect x="737.9" y="1077" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="740.90" y="1087.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (68,164,323 samples, 0.03%)</title><rect x="515.9" y="933" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="518.90" y="943.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (89,718,743 samples, 0.03%)</title><rect x="89.0" y="1029" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="92.03" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (196,856,320 samples, 0.07%)</title><rect x="770.6" y="933" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.64" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (100,603,956 samples, 0.04%)</title><rect x="860.1" y="1189" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="863.05" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (105,676,735 samples, 0.04%)</title><rect x="966.2" y="1333" width="0.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="969.23" y="1343.5" ></text>
</g>
<g >
<title>do_sys_openat2 (93,975,553 samples, 0.04%)</title><rect x="1124.7" y="1589" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1127.72" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (47,949,969 samples, 0.02%)</title><rect x="155.4" y="1269" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="158.38" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (743,457,346 samples, 0.28%)</title><rect x="213.9" y="933" width="3.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="216.94" y="943.5" ></text>
</g>
<g >
<title>ip_finish_output (71,186,621 samples, 0.03%)</title><rect x="695.1" y="1109" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="698.15" y="1119.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (235,364,858 samples, 0.09%)</title><rect x="215.4" y="901" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="218.44" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (202,667,479 samples, 0.08%)</title><rect x="387.0" y="1045" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="390.04" y="1055.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (164,168,215 samples, 0.06%)</title><rect x="971.4" y="1365" width="0.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="974.44" y="1375.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (146,806,025 samples, 0.05%)</title><rect x="268.6" y="997" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="271.64" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (51,839,120 samples, 0.02%)</title><rect x="629.5" y="821" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="632.49" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,806,026,804 samples, 1.43%)</title><rect x="1072.8" y="1221" width="16.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1075.81" y="1231.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (52,049,227 samples, 0.02%)</title><rect x="542.7" y="1317" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="545.66" y="1327.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (58,895,711 samples, 0.02%)</title><rect x="259.3" y="1333" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="262.30" y="1343.5" ></text>
</g>
<g >
<title>____fput (36,815,668 samples, 0.01%)</title><rect x="972.8" y="1093" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="975.77" y="1103.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (852,246,482 samples, 0.32%)</title><rect x="406.7" y="1333" width="3.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="409.69" y="1343.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (226,858,027 samples, 0.08%)</title><rect x="175.1" y="1061" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="178.07" y="1071.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (12,150,025,098 samples, 4.55%)</title><rect x="859.4" y="1397" width="53.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="862.38" y="1407.5" >HttpR..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (54,861,963 samples, 0.02%)</title><rect x="197.2" y="1077" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="200.22" y="1087.5" ></text>
</g>
<g >
<title>_int_malloc (26,408,608 samples, 0.01%)</title><rect x="1143.5" y="1653" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1146.51" y="1663.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (192,660,282 samples, 0.07%)</title><rect x="276.3" y="1637" width="0.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="279.29" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (59,107,511 samples, 0.02%)</title><rect x="371.8" y="1045" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="374.81" y="1055.5" ></text>
</g>
<g >
<title>HttpConn::Close (1,083,978,118 samples, 0.41%)</title><rect x="405.8" y="1429" width="4.8" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="408.76" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (212,797,748 samples, 0.08%)</title><rect x="347.2" y="1045" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.19" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (23,185,537 samples, 0.01%)</title><rect x="725.3" y="1093" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="728.29" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (23,182,506 samples, 0.01%)</title><rect x="532.9" y="1013" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="535.94" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (115,498,519 samples, 0.04%)</title><rect x="33.2" y="1029" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="36.24" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (96,877,183 samples, 0.04%)</title><rect x="824.0" y="1173" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="826.98" y="1183.5" ></text>
</g>
<g >
<title>x64_sys_call (81,665,183 samples, 0.03%)</title><rect x="547.6" y="1397" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="550.57" y="1407.5" ></text>
</g>
<g >
<title>Channel::SetReadHandler (44,431,841 samples, 0.02%)</title><rect x="1152.2" y="1301" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1155.20" y="1311.5" ></text>
</g>
<g >
<title>std::function&lt;void  (67,367,353 samples, 0.03%)</title><rect x="718.2" y="1397" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="721.21" y="1407.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (224,001,636 samples, 0.08%)</title><rect x="750.9" y="1045" width="1.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="753.90" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (42,599,439 samples, 0.02%)</title><rect x="934.3" y="1045" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="937.31" y="1055.5" ></text>
</g>
<g >
<title>__GI___libc_open (121,051,494 samples, 0.05%)</title><rect x="416.7" y="1669" width="0.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="419.71" y="1679.5" ></text>
</g>
<g >
<title>epoll_wait (24,623,340 samples, 0.01%)</title><rect x="272.6" y="1541" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="275.58" y="1551.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (26,482,938 samples, 0.01%)</title><rect x="285.0" y="1621" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="288.05" y="1631.5" ></text>
</g>
<g >
<title>std::function&lt;void  (141,577,401 samples, 0.05%)</title><rect x="689.2" y="1381" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="692.17" y="1391.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (23,703,580 samples, 0.01%)</title><rect x="164.4" y="1077" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.40" y="1087.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (222,917,196 samples, 0.08%)</title><rect x="373.8" y="997" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="376.76" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (41,234,041 samples, 0.02%)</title><rect x="915.4" y="949" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="918.44" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,323,759 samples, 0.01%)</title><rect x="487.9" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.94" y="511.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (509,278,017 samples, 0.19%)</title><rect x="897.2" y="1093" width="2.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="900.21" y="1103.5" ></text>
</g>
<g >
<title>loopthread2 (31,780,175,523 samples, 11.90%)</title><rect x="294.1" y="1701" width="140.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="297.08" y="1711.5" >loopthread2</text>
</g>
<g >
<title>do_user_addr_fault (86,953,844 samples, 0.03%)</title><rect x="834.9" y="1173" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="837.87" y="1183.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (1,530,492,706 samples, 0.57%)</title><rect x="548.1" y="1477" width="6.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="551.09" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (70,797,503 samples, 0.03%)</title><rect x="966.3" y="1109" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.27" y="1119.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (31,163,930 samples, 0.01%)</title><rect x="553.8" y="1093" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="556.75" y="1103.5" ></text>
</g>
<g >
<title>__fput (31,412,270 samples, 0.01%)</title><rect x="972.8" y="1077" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="975.77" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (25,115,267 samples, 0.01%)</title><rect x="748.7" y="1013" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="751.71" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (218,076,500 samples, 0.08%)</title><rect x="1054.2" y="1205" width="1.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1057.24" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (27,116,673 samples, 0.01%)</title><rect x="337.5" y="1093" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="340.49" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (156,582,647 samples, 0.06%)</title><rect x="988.2" y="1669" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="991.22" y="1679.5" ></text>
</g>
<g >
<title>task_work_run (45,147,725 samples, 0.02%)</title><rect x="830.6" y="1109" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="833.58" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (112,132,452 samples, 0.04%)</title><rect x="22.7" y="1077" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="25.65" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (32,349,068 samples, 0.01%)</title><rect x="68.6" y="933" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="71.56" y="943.5" ></text>
</g>
<g >
<title>std::function&lt;void  (816,016,622 samples, 0.31%)</title><rect x="549.0" y="1413" width="3.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="551.95" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (110,504,546 samples, 0.04%)</title><rect x="968.2" y="1365" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="971.19" y="1375.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (55,160,745 samples, 0.02%)</title><rect x="355.7" y="901" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="358.70" y="911.5" ></text>
</g>
<g >
<title>nf_conntrack_in (27,929,189 samples, 0.01%)</title><rect x="129.2" y="1077" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="132.22" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (38,898,743 samples, 0.01%)</title><rect x="581.0" y="1109" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="584.04" y="1119.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (168,013,007 samples, 0.06%)</title><rect x="264.9" y="1397" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="267.94" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (49,182,421 samples, 0.02%)</title><rect x="1054.4" y="757" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.40" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,210,429 samples, 0.01%)</title><rect x="771.0" y="565" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.97" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,758,428,263 samples, 1.41%)</title><rect x="631.1" y="1237" width="16.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="634.15" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (41,046,320 samples, 0.02%)</title><rect x="479.9" y="1077" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="482.91" y="1087.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (97,951,729 samples, 0.04%)</title><rect x="404.2" y="1269" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="407.21" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (56,408,564 samples, 0.02%)</title><rect x="118.3" y="933" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="121.34" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (54,553,278 samples, 0.02%)</title><rect x="1109.7" y="1381" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1112.69" y="1391.5" ></text>
</g>
<g >
<title>__GI___libc_open (141,598,111 samples, 0.05%)</title><rect x="275.6" y="1669" width="0.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="278.64" y="1679.5" ></text>
</g>
<g >
<title>do_syscall_64 (474,109,910 samples, 0.18%)</title><rect x="269.8" y="1413" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="272.85" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,697,125 samples, 0.01%)</title><rect x="1054.9" y="549" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.86" y="559.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (339,589,393 samples, 0.13%)</title><rect x="1111.2" y="1317" width="1.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1114.16" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::str (32,113,346 samples, 0.01%)</title><rect x="910.8" y="1365" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="913.75" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (22,898,911 samples, 0.01%)</title><rect x="495.1" y="869" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="498.11" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (253,462,276 samples, 0.09%)</title><rect x="770.6" y="1157" width="1.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.56" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (164,336,082 samples, 0.06%)</title><rect x="1054.4" y="917" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.36" y="927.5" ></text>
</g>
<g >
<title>____fput (35,943,072 samples, 0.01%)</title><rect x="1115.1" y="1093" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1118.09" y="1103.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (25,098,494 samples, 0.01%)</title><rect x="752.3" y="1093" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="755.34" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (36,577,252 samples, 0.01%)</title><rect x="306.2" y="1077" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="309.25" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (46,740,166 samples, 0.02%)</title><rect x="978.8" y="1429" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="981.84" y="1439.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (41,082,218 samples, 0.02%)</title><rect x="831.4" y="949" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="834.42" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,919,772,371 samples, 1.47%)</title><rect x="1089.9" y="1253" width="17.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1092.88" y="1263.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (39,213,192 samples, 0.01%)</title><rect x="62.1" y="1141" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="65.07" y="1151.5" ></text>
</g>
<g >
<title>__strlen_avx2 (170,023,801 samples, 0.06%)</title><rect x="842.0" y="1669" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="845.02" y="1679.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (32,840,185 samples, 0.01%)</title><rect x="432.9" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="435.88" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (60,248,878 samples, 0.02%)</title><rect x="315.1" y="1061" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="318.12" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (95,016,802 samples, 0.04%)</title><rect x="393.1" y="1045" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="396.14" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (35,093,441 samples, 0.01%)</title><rect x="379.6" y="1061" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="382.64" y="1071.5" ></text>
</g>
<g >
<title>do_syscall_64 (112,065,832 samples, 0.04%)</title><rect x="982.2" y="1637" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="985.25" y="1647.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (33,666,028 samples, 0.01%)</title><rect x="818.3" y="1061" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="821.29" y="1071.5" ></text>
</g>
<g >
<title>do_epoll_wait (26,701,229 samples, 0.01%)</title><rect x="696.5" y="1461" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="699.54" y="1471.5" ></text>
</g>
<g >
<title>__dynamic_cast (49,902,273 samples, 0.02%)</title><rect x="227.2" y="1045" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="230.20" y="1055.5" ></text>
</g>
<g >
<title>std::function&lt;void  (882,830,705 samples, 0.33%)</title><rect x="406.6" y="1413" width="3.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="409.64" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (135,322,757 samples, 0.05%)</title><rect x="1002.8" y="1253" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1005.76" y="1263.5" ></text>
</g>
<g >
<title>ip_queue_xmit (160,602,958 samples, 0.06%)</title><rect x="977.4" y="1173" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="980.43" y="1183.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (25,098,738,362 samples, 9.40%)</title><rect x="718.1" y="1461" width="110.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="721.14" y="1471.5" >HttpConn::Htt..</text>
</g>
<g >
<title>ip_local_out (151,060,108 samples, 0.06%)</title><rect x="835.4" y="1141" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="838.38" y="1151.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (342,607,467 samples, 0.13%)</title><rect x="545.6" y="1301" width="1.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="548.59" y="1311.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (23,271,793 samples, 0.01%)</title><rect x="230.3" y="1045" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="233.31" y="1055.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (142,015,040 samples, 0.05%)</title><rect x="1110.3" y="1397" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1113.33" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,565,012,820 samples, 3.96%)</title><rect x="13.2" y="1221" width="46.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="16.18" y="1231.5" >std:..</text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (233,003,423 samples, 0.09%)</title><rect x="924.9" y="933" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="927.85" y="943.5" ></text>
</g>
<g >
<title>__GI___libc_open (121,502,825 samples, 0.05%)</title><rect x="1124.7" y="1669" width="0.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1127.65" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (69,971,548 samples, 0.03%)</title><rect x="958.9" y="1029" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="961.92" y="1039.5" ></text>
</g>
<g >
<title>unmap_region.constprop.0 (156,322,790 samples, 0.06%)</title><rect x="407.8" y="1061" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="410.76" y="1071.5" ></text>
</g>
<g >
<title>ksys_read (95,520,758 samples, 0.04%)</title><rect x="122.9" y="1365" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="125.93" y="1375.5" ></text>
</g>
<g >
<title>handle_mm_fault (47,426,754 samples, 0.02%)</title><rect x="834.9" y="1157" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="837.90" y="1167.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;,  (48,784,550 samples, 0.02%)</title><rect x="61.2" y="1285" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="64.22" y="1295.5" ></text>
</g>
<g >
<title>__strxfrm_l (100,616,179 samples, 0.04%)</title><rect x="137.0" y="1669" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="139.98" y="1679.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, long, std::shared_ptr&lt;TimerManager::TimerNode&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (28,204,401 samples, 0.01%)</title><rect x="272.8" y="1493" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="275.79" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,783,797 samples, 0.01%)</title><rect x="1054.4" y="261" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.44" y="271.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,461,525,407 samples, 10.28%)</title><rect x="434.6" y="1653" width="121.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="437.62" y="1663.5" >std::thread::_I..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (228,527,694 samples, 0.09%)</title><rect x="63.1" y="1125" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.12" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (25,393,847 samples, 0.01%)</title><rect x="556.9" y="1413" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1423.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (103,996,739 samples, 0.04%)</title><rect x="1024.0" y="1029" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1026.98" y="1039.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (245,720,986 samples, 0.09%)</title><rect x="533.3" y="1045" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="536.27" y="1055.5" ></text>
</g>
<g >
<title>__dynamic_cast (123,265,898 samples, 0.05%)</title><rect x="869.8" y="1077" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="872.84" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (75,311,704 samples, 0.03%)</title><rect x="577.6" y="1173" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="580.63" y="1183.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (127,990,985 samples, 0.05%)</title><rect x="237.3" y="1045" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="240.28" y="1055.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (89,015,120 samples, 0.03%)</title><rect x="825.4" y="1397" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="828.42" y="1407.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (216,427,165 samples, 0.08%)</title><rect x="501.2" y="933" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="504.23" y="943.5" ></text>
</g>
<g >
<title>__handle_mm_fault (36,906,357 samples, 0.01%)</title><rect x="834.9" y="1141" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="837.91" y="1151.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (406,918,984 samples, 0.15%)</title><rect x="1165.0" y="1413" width="1.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1168.04" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (10,159,475,351 samples, 3.80%)</title><rect x="721.4" y="1157" width="44.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="724.39" y="1167.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (68,583,066 samples, 0.03%)</title><rect x="400.7" y="949" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.71" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (46,374,195 samples, 0.02%)</title><rect x="669.2" y="1077" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="672.17" y="1087.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (53,786,405 samples, 0.02%)</title><rect x="577.7" y="1061" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="580.72" y="1071.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (64,978,524 samples, 0.02%)</title><rect x="381.0" y="1077" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="384.04" y="1087.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (8,102,343,167 samples, 3.03%)</title><rect x="1143.9" y="1509" width="35.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1146.93" y="1519.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,369,820 samples, 0.02%)</title><rect x="770.7" y="805" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.67" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (26,778,708 samples, 0.01%)</title><rect x="836.9" y="1397" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="839.86" y="1407.5" ></text>
</g>
<g >
<title>handle_softirqs (29,660,140 samples, 0.01%)</title><rect x="267.0" y="933" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="270.01" y="943.5" ></text>
</g>
<g >
<title>nf_conntrack_in (30,595,915 samples, 0.01%)</title><rect x="835.4" y="1077" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="838.41" y="1087.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (30,981,956 samples, 0.01%)</title><rect x="44.1" y="1045" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="47.08" y="1055.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, long, std::shared_ptr&lt;TimerManager::TimerNode&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (28,872,458 samples, 0.01%)</title><rect x="413.8" y="1493" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="416.76" y="1503.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (26,352,952 samples, 0.01%)</title><rect x="833.2" y="869" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="836.20" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (50,135,254 samples, 0.02%)</title><rect x="908.0" y="1141" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="910.96" y="1151.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (24,552,717 samples, 0.01%)</title><rect x="973.7" y="741" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="976.72" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,918,967 samples, 0.01%)</title><rect x="488.4" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.39" y="335.5" ></text>
</g>
<g >
<title>malloc (84,041,729 samples, 0.03%)</title><rect x="557.2" y="1653" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="560.16" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (753,591,361 samples, 0.28%)</title><rect x="778.8" y="933" width="3.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="781.76" y="943.5" ></text>
</g>
<g >
<title>__close (26,594,420 samples, 0.01%)</title><rect x="826.4" y="1397" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="829.37" y="1407.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (30,693,401 samples, 0.01%)</title><rect x="79.3" y="933" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="82.29" y="943.5" ></text>
</g>
<g >
<title>unmap_region.constprop.0 (139,569,449 samples, 0.05%)</title><rect x="125.3" y="1061" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="128.29" y="1071.5" ></text>
</g>
<g >
<title>x64_sys_call (113,724,009 samples, 0.04%)</title><rect x="120.3" y="1349" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="123.25" y="1359.5" ></text>
</g>
<g >
<title>netvsc_poll (39,005,430 samples, 0.01%)</title><rect x="727.0" y="981" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="729.97" y="991.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (220,254,860 samples, 0.08%)</title><rect x="199.1" y="1125" width="1.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="202.11" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (34,238,116 samples, 0.01%)</title><rect x="1095.5" y="1013" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1098.52" y="1023.5" ></text>
</g>
<g >
<title>netvsc_poll (25,737,713 samples, 0.01%)</title><rect x="425.7" y="1525" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="428.73" y="1535.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (28,393,688 samples, 0.01%)</title><rect x="436.6" y="1093" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="439.58" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (78,612,670 samples, 0.03%)</title><rect x="387.3" y="1013" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="390.27" y="1023.5" ></text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (413,751,528 samples, 0.15%)</title><rect x="62.6" y="1365" width="1.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="65.58" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,476,846 samples, 0.02%)</title><rect x="400.8" y="645" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.75" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (64,735,562 samples, 0.02%)</title><rect x="400.7" y="917" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.72" y="927.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (135,102,214 samples, 0.05%)</title><rect x="814.7" y="981" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="817.72" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,714,140,914 samples, 4.01%)</title><rect x="297.0" y="1285" width="47.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="299.97" y="1295.5" >std:..</text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (75,600,197 samples, 0.03%)</title><rect x="1064.4" y="821" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1067.43" y="831.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (30,871,071 samples, 0.01%)</title><rect x="585.6" y="1045" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="588.58" y="1055.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (37,666,164 samples, 0.01%)</title><rect x="1096.2" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1099.21" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (88,493,306 samples, 0.03%)</title><rect x="154.2" y="1205" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="157.19" y="1215.5" ></text>
</g>
<g >
<title>osq_lock (24,451,377 samples, 0.01%)</title><rect x="691.7" y="1061" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="694.74" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (127,482,455 samples, 0.05%)</title><rect x="1002.2" y="1221" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1005.16" y="1231.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (168,271,087 samples, 0.06%)</title><rect x="1113.7" y="1397" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1116.72" y="1407.5" ></text>
</g>
<g >
<title>vm_unmapped_area (28,356,947 samples, 0.01%)</title><rect x="545.6" y="1221" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="548.62" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1,027,169,515 samples, 0.38%)</title><rect x="448.9" y="1077" width="4.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="451.94" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23,118,325 samples, 0.01%)</title><rect x="272.6" y="1525" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="275.58" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (108,371,149 samples, 0.04%)</title><rect x="770.9" y="757" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.94" y="767.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (34,414,148 samples, 0.01%)</title><rect x="400.2" y="1221" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="403.23" y="1231.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (57,476,509 samples, 0.02%)</title><rect x="974.9" y="1061" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="977.88" y="1071.5" ></text>
</g>
<g >
<title>HttpConn::~HttpConn (455,493,672 samples, 0.17%)</title><rect x="549.1" y="1205" width="2.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="552.07" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,502,558 samples, 0.02%)</title><rect x="206.0" y="629" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.96" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (84,007,389 samples, 0.03%)</title><rect x="343.5" y="1205" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="346.51" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (56,230,290 samples, 0.02%)</title><rect x="11.2" y="1109" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="14.16" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (48,533,690 samples, 0.02%)</title><rect x="67.1" y="949" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="70.12" y="959.5" ></text>
</g>
<g >
<title>EventLoop::AddChannel (102,754,854 samples, 0.04%)</title><rect x="554.9" y="1477" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="557.88" y="1487.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (31,456,846 samples, 0.01%)</title><rect x="93.7" y="1045" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="96.73" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,089,139 samples, 0.02%)</title><rect x="63.7" y="661" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.66" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (44,120,521 samples, 0.02%)</title><rect x="683.5" y="1285" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="686.51" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (86,694,594 samples, 0.03%)</title><rect x="118.3" y="1221" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.28" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,423,080,730 samples, 3.53%)</title><rect x="439.2" y="1109" width="41.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="442.22" y="1119.5" >std..</text>
</g>
<g >
<title>tcp_write_xmit (129,253,044 samples, 0.05%)</title><rect x="127.0" y="981" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="130.04" y="991.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (61,169,023 samples, 0.02%)</title><rect x="433.8" y="1653" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="436.84" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (33,496,700 samples, 0.01%)</title><rect x="647.4" y="1093" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="650.41" y="1103.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (69,011,722 samples, 0.03%)</title><rect x="434.8" y="1349" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="437.82" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (217,947,111 samples, 0.08%)</title><rect x="347.2" y="1077" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.18" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (30,870,251 samples, 0.01%)</title><rect x="748.3" y="1029" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="751.28" y="1039.5" ></text>
</g>
<g >
<title>do_epoll_ctl (40,477,529 samples, 0.02%)</title><rect x="978.9" y="1381" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="981.87" y="1391.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (28,449,152 samples, 0.01%)</title><rect x="406.9" y="1173" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="409.91" y="1183.5" ></text>
</g>
<g >
<title>rep_movs_alternative (98,367,560 samples, 0.04%)</title><rect x="128.6" y="1221" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="131.62" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,532,881,878 samples, 1.32%)</title><rect x="648.3" y="1093" width="15.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="651.25" y="1103.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long&gt; (23,214,039 samples, 0.01%)</title><rect x="629.2" y="1269" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="632.19" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (75,580,885 samples, 0.03%)</title><rect x="53.6" y="1093" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="56.61" y="1103.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (37,937,449 samples, 0.01%)</title><rect x="400.2" y="1285" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="403.22" y="1295.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (64,217,974 samples, 0.02%)</title><rect x="10.4" y="1413" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.42" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (23,795,928 samples, 0.01%)</title><rect x="767.2" y="1109" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="770.15" y="1119.5" ></text>
</g>
<g >
<title>do_syscall_64 (395,060,940 samples, 0.15%)</title><rect x="1115.0" y="1157" width="1.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1117.97" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (76,581,474 samples, 0.03%)</title><rect x="923.1" y="885" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="926.11" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (81,850,784 samples, 0.03%)</title><rect x="769.4" y="1269" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="772.40" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (2,041,130,195 samples, 0.76%)</title><rect x="1092.3" y="1093" width="9.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1095.32" y="1103.5" ></text>
</g>
<g >
<title>filename_lookup (44,290,144 samples, 0.02%)</title><rect x="826.1" y="1269" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="829.10" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (26,518,792 samples, 0.01%)</title><rect x="195.8" y="1093" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="198.80" y="1103.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,557,091,768 samples, 0.58%)</title><rect x="123.4" y="1509" width="6.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="126.43" y="1519.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (73,061,722 samples, 0.03%)</title><rect x="396.3" y="1093" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="399.30" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (37,809,551 samples, 0.01%)</title><rect x="1018.9" y="1013" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1021.90" y="1023.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (23,727,578 samples, 0.01%)</title><rect x="267.0" y="757" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="270.02" y="767.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (847,860,761 samples, 0.32%)</title><rect x="265.8" y="1333" width="3.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="268.80" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (29,830,715 samples, 0.01%)</title><rect x="919.9" y="933" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="922.88" y="943.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (851,575,515 samples, 0.32%)</title><rect x="406.7" y="1317" width="3.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="409.69" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (52,485,939 samples, 0.02%)</title><rect x="1046.2" y="1077" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1049.21" y="1087.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (253,340,587 samples, 0.09%)</title><rect x="49.9" y="1061" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="52.94" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (26,426,802 samples, 0.01%)</title><rect x="556.9" y="1525" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (59,084,837 samples, 0.02%)</title><rect x="930.0" y="1189" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="933.02" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (80,633,226 samples, 0.03%)</title><rect x="903.8" y="1093" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="906.82" y="1103.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (26,473,396 samples, 0.01%)</title><rect x="1114.8" y="1157" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1117.79" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (62,138,615 samples, 0.02%)</title><rect x="859.7" y="1109" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="862.68" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (28,615,368 samples, 0.01%)</title><rect x="645.8" y="949" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="648.76" y="959.5" ></text>
</g>
<g >
<title>[web-server] (83,583,295 samples, 0.03%)</title><rect x="869.5" y="1077" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="872.47" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (248,784,716 samples, 0.09%)</title><rect x="310.9" y="1013" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="313.90" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (254,515,711 samples, 0.10%)</title><rect x="347.1" y="1173" width="1.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.13" y="1183.5" ></text>
</g>
<g >
<title>__x64_sys_close (282,354,334 samples, 0.11%)</title><rect x="126.5" y="1141" width="1.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="129.53" y="1151.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (61,607,281 samples, 0.02%)</title><rect x="886.4" y="933" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="889.39" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::vector (30,413,818 samples, 0.01%)</title><rect x="205.1" y="1317" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="208.12" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,119,761 samples, 0.01%)</title><rect x="1108.6" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.63" y="335.5" ></text>
</g>
<g >
<title>__dynamic_cast (84,966,610 samples, 0.03%)</title><rect x="983.5" y="1637" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="986.54" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,485,450 samples, 0.01%)</title><rect x="771.2" y="389" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="774.18" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (346,848,951 samples, 0.13%)</title><rect x="973.0" y="1125" width="1.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="975.99" y="1135.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (288,303,810 samples, 0.11%)</title><rect x="883.3" y="1045" width="1.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="886.33" y="1055.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (61,222,033 samples, 0.02%)</title><rect x="313.2" y="1077" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="316.23" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (43,151,631 samples, 0.02%)</title><rect x="901.3" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="904.34" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,102,902 samples, 0.01%)</title><rect x="771.0" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.98" y="383.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="645" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="655.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (49,063,709 samples, 0.02%)</title><rect x="979.2" y="1557" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="982.17" y="1567.5" ></text>
</g>
<g >
<title>alloc_file (293,121,583 samples, 0.11%)</title><rect x="1174.7" y="1317" width="1.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1177.67" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (41,820,344 samples, 0.02%)</title><rect x="1108.6" y="677" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.61" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (82,806,784 samples, 0.03%)</title><rect x="529.7" y="1013" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="532.74" y="1023.5" ></text>
</g>
<g >
<title>net_rx_action (172,189,728 samples, 0.06%)</title><rect x="1184.2" y="1349" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1187.25" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (235,545,989 samples, 0.09%)</title><rect x="63.1" y="1157" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.09" y="1167.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (344,922,298 samples, 0.13%)</title><rect x="968.8" y="1381" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="971.84" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (30,861,163 samples, 0.01%)</title><rect x="790.8" y="1061" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="793.84" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,396,629 samples, 0.02%)</title><rect x="205.5" y="661" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.51" y="671.5" ></text>
</g>
<g >
<title>[web-server] (83,143,722 samples, 0.03%)</title><rect x="163.2" y="1077" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="166.23" y="1087.5" ></text>
</g>
<g >
<title>ksys_read (85,249,169 samples, 0.03%)</title><rect x="688.6" y="1365" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="691.63" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (50,842,039 samples, 0.02%)</title><rect x="633.2" y="949" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="636.25" y="959.5" ></text>
</g>
<g >
<title>operator new (47,761,202 samples, 0.02%)</title><rect x="743.8" y="1013" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="746.79" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (27,268,574 samples, 0.01%)</title><rect x="824.1" y="357" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="827.09" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,726,751,028 samples, 1.40%)</title><rect x="365.6" y="1221" width="16.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="368.57" y="1231.5" ></text>
</g>
<g >
<title>_int_free (192,833,793 samples, 0.07%)</title><rect x="993.8" y="1685" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="996.85" y="1695.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (85,287,421 samples, 0.03%)</title><rect x="804.5" y="1093" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="807.46" y="1103.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (267,317,232 samples, 0.10%)</title><rect x="830.8" y="1077" width="1.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="833.83" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (100,235,892 samples, 0.04%)</title><rect x="1143.0" y="1637" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.99" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (62,455,487 samples, 0.02%)</title><rect x="31.6" y="1061" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="34.56" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (52,612,360 samples, 0.02%)</title><rect x="53.7" y="1077" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="56.69" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (92,204,623 samples, 0.03%)</title><rect x="1054.6" y="789" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.64" y="799.5" ></text>
</g>
<g >
<title>malloc (50,655,298 samples, 0.02%)</title><rect x="602.3" y="1013" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="605.30" y="1023.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (33,900,383 samples, 0.01%)</title><rect x="67.2" y="933" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="70.19" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,616,515 samples, 0.01%)</title><rect x="1054.4" y="213" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.44" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (461,834,067 samples, 0.17%)</title><rect x="128.2" y="1429" width="2.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="131.20" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (47,755,520 samples, 0.02%)</title><rect x="1005.4" y="1109" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1008.36" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (28,617,942 samples, 0.01%)</title><rect x="351.0" y="949" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="353.96" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (190,644,282 samples, 0.07%)</title><rect x="911.6" y="981" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.57" y="991.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (245,519,303 samples, 0.09%)</title><rect x="93.9" y="1045" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="96.88" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (112,997,438 samples, 0.04%)</title><rect x="205.7" y="821" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.74" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (43,151,600 samples, 0.02%)</title><rect x="118.4" y="789" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="121.36" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_fill_assign (35,110,056 samples, 0.01%)</title><rect x="629.0" y="1301" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="631.95" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="453" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="463.5" ></text>
</g>
<g >
<title>do_writev (408,302,094 samples, 0.15%)</title><rect x="694.1" y="1365" width="1.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="697.09" y="1375.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (38,555,618 samples, 0.01%)</title><rect x="231.4" y="997" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="234.45" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_close (304,463,306 samples, 0.11%)</title><rect x="1117.0" y="1141" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1120.01" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (1,969,490,401 samples, 0.74%)</title><rect x="915.6" y="949" width="8.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="918.65" y="959.5" ></text>
</g>
<g >
<title>HttpResponse::SetHeader (36,087,053 samples, 0.01%)</title><rect x="685.5" y="1381" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="688.54" y="1391.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (23,850,660 samples, 0.01%)</title><rect x="1151.2" y="1445" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1154.17" y="1455.5" ></text>
</g>
<g >
<title>mmap_region (135,011,555 samples, 0.05%)</title><rect x="1111.4" y="1269" width="0.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1114.39" y="1279.5" ></text>
</g>
<g >
<title>ip_output (57,538,980 samples, 0.02%)</title><rect x="268.9" y="901" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="271.91" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (158,599,836 samples, 0.06%)</title><rect x="999.4" y="1685" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1002.42" y="1695.5" ></text>
</g>
<g >
<title>TimerManager::AddTimer (26,646,924 samples, 0.01%)</title><rect x="272.1" y="1461" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="275.05" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (28,194,585 samples, 0.01%)</title><rect x="1068.4" y="933" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1071.39" y="943.5" ></text>
</g>
<g >
<title>net_rx_action (65,581,878 samples, 0.02%)</title><rect x="1170.6" y="1221" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1173.56" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,849,544 samples, 0.01%)</title><rect x="1054.9" y="629" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.86" y="639.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (27,858,536 samples, 0.01%)</title><rect x="603.8" y="981" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="606.78" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (102,952,781 samples, 0.04%)</title><rect x="824.0" y="1269" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="826.96" y="1279.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (35,711,518 samples, 0.01%)</title><rect x="123.1" y="1269" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="126.14" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (55,679,983 samples, 0.02%)</title><rect x="259.9" y="1045" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="262.86" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (23,978,932 samples, 0.01%)</title><rect x="628.7" y="1381" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="631.72" y="1391.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (55,402,050 samples, 0.02%)</title><rect x="1062.8" y="901" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1065.78" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (580,742,052 samples, 0.22%)</title><rect x="734.3" y="1045" width="2.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="737.29" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (630,116,267 samples, 0.24%)</title><rect x="41.6" y="1077" width="2.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="44.61" y="1087.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (103,408,829 samples, 0.04%)</title><rect x="502.7" y="917" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="505.66" y="927.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (239,491,318 samples, 0.09%)</title><rect x="690.6" y="1077" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="693.59" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (71,704,315 samples, 0.03%)</title><rect x="857.9" y="1685" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="860.90" y="1695.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (91,018,327 samples, 0.03%)</title><rect x="220.0" y="917" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="222.98" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (99,933,301 samples, 0.04%)</title><rect x="968.2" y="1333" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="971.23" y="1343.5" ></text>
</g>
<g >
<title>get_unmapped_area (29,588,594 samples, 0.01%)</title><rect x="826.7" y="1269" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="829.65" y="1279.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (27,067,216 samples, 0.01%)</title><rect x="535.9" y="1013" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="538.87" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (613,638,513 samples, 0.23%)</title><rect x="608.0" y="1077" width="2.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="611.03" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (51,284,366 samples, 0.02%)</title><rect x="930.0" y="1157" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="933.03" y="1167.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (65,763,311 samples, 0.02%)</title><rect x="830.5" y="1141" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="833.50" y="1151.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (129,518,133 samples, 0.05%)</title><rect x="685.8" y="1381" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="688.82" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (69,693,581 samples, 0.03%)</title><rect x="630.7" y="1365" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="633.74" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (23,171,281 samples, 0.01%)</title><rect x="838.6" y="1349" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1359.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (35,994,460 samples, 0.01%)</title><rect x="971.0" y="1269" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="974.04" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (38,605,414 samples, 0.01%)</title><rect x="205.5" y="469" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.53" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (30,628,006 samples, 0.01%)</title><rect x="771.0" y="517" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="773.97" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (28,026,395 samples, 0.01%)</title><rect x="928.2" y="949" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="931.21" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (78,524,846 samples, 0.03%)</title><rect x="198.2" y="1093" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="201.18" y="1103.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (32,401,270 samples, 0.01%)</title><rect x="267.0" y="997" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="270.00" y="1007.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (61,274,935 samples, 0.02%)</title><rect x="965.7" y="1365" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="968.73" y="1375.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (70,737,264 samples, 0.03%)</title><rect x="153.0" y="1349" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="155.96" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,026,804 samples, 0.02%)</title><rect x="771.2" y="517" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="774.17" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,800,946 samples, 0.01%)</title><rect x="770.7" y="469" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.72" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,211,429,501 samples, 4.20%)</title><rect x="577.5" y="1333" width="49.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="580.50" y="1343.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::str (26,915,347 samples, 0.01%)</title><rect x="346.4" y="1365" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="349.43" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (81,535,538 samples, 0.03%)</title><rect x="760.1" y="1093" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="763.08" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (106,642,075 samples, 0.04%)</title><rect x="731.3" y="1077" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="734.31" y="1087.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (24,893,325 samples, 0.01%)</title><rect x="44.7" y="1093" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="47.69" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (31,893,080 samples, 0.01%)</title><rect x="672.2" y="1077" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="675.23" y="1087.5" ></text>
</g>
<g >
<title>net_rx_action (28,529,700 samples, 0.01%)</title><rect x="1116.0" y="917" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1118.96" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (176,613,562 samples, 0.07%)</title><rect x="629.5" y="869" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.48" y="879.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (24,021,251 samples, 0.01%)</title><rect x="636.8" y="933" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="639.76" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,418,466 samples, 0.01%)</title><rect x="400.8" y="341" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="403.78" y="351.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (22,990,717 samples, 0.01%)</title><rect x="693.1" y="789" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="696.10" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (58,725,304 samples, 0.02%)</title><rect x="824.0" y="789" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="827.04" y="799.5" ></text>
</g>
<g >
<title>hyperv_flush_tlb_multi (60,999,500 samples, 0.02%)</title><rect x="408.0" y="1013" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="410.97" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,617,035 samples, 0.02%)</title><rect x="824.0" y="773" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.04" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (24,811,316 samples, 0.01%)</title><rect x="206.0" y="117" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.99" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (32,472,280 samples, 0.01%)</title><rect x="1054.9" y="453" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.87" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (412,777,577 samples, 0.15%)</title><rect x="510.9" y="1045" width="1.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="513.86" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,635,822,402 samples, 1.36%)</title><rect x="348.9" y="1173" width="16.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="351.93" y="1183.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (29,327,605 samples, 0.01%)</title><rect x="1143.2" y="1605" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1146.23" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (59,806,202 samples, 0.02%)</title><rect x="685.1" y="1381" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="688.10" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (236,868,552 samples, 0.09%)</title><rect x="63.1" y="1173" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.09" y="1183.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (36,566,627 samples, 0.01%)</title><rect x="1117.8" y="837" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1120.83" y="847.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (25,099,356,930 samples, 9.40%)</title><rect x="718.1" y="1493" width="110.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="721.14" y="1503.5" >std::__invoke..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count (23,220,002 samples, 0.01%)</title><rect x="834.3" y="1397" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="837.25" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,907,186,299 samples, 1.46%)</title><rect x="665.3" y="1173" width="17.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="668.26" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_realloc_insert&lt;char&gt; (32,528,892 samples, 0.01%)</title><rect x="721.2" y="1109" width="0.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="724.22" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (111,458,192 samples, 0.04%)</title><rect x="718.8" y="1237" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="721.80" y="1247.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (51,105,169 samples, 0.02%)</title><rect x="1053.2" y="1173" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1056.22" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (1,732,900,963 samples, 0.65%)</title><rect x="741.7" y="1061" width="7.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="744.69" y="1071.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (48,514,050 samples, 0.02%)</title><rect x="1161.9" y="1365" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1164.88" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,761,789 samples, 0.01%)</title><rect x="911.7" y="53" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.66" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (22,748,335 samples, 0.01%)</title><rect x="221.5" y="933" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="224.51" y="943.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (23,681,717 samples, 0.01%)</title><rect x="992.5" y="1621" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="995.54" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (101,975,953 samples, 0.04%)</title><rect x="629.8" y="725" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.75" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,525,586,527 samples, 1.32%)</title><rect x="382.7" y="1125" width="15.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="385.72" y="1135.5" ></text>
</g>
<g >
<title>irq_exit_rcu (24,257,110 samples, 0.01%)</title><rect x="285.0" y="1605" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="288.05" y="1615.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (30,749,726 samples, 0.01%)</title><rect x="676.0" y="1061" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="679.04" y="1071.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (54,638,513 samples, 0.02%)</title><rect x="856.8" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="859.76" y="1679.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (55,595,292 samples, 0.02%)</title><rect x="929.0" y="981" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="932.00" y="991.5" ></text>
</g>
<g >
<title>osq_lock (56,928,236 samples, 0.02%)</title><rect x="969.8" y="1253" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="972.82" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (33,271,039 samples, 0.01%)</title><rect x="911.9" y="661" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="914.89" y="671.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (66,651,526 samples, 0.02%)</title><rect x="434.8" y="1333" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="437.83" y="1343.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_maskbit (50,739,373 samples, 0.02%)</title><rect x="1049.2" y="1109" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1052.21" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (189,085,185 samples, 0.07%)</title><rect x="1060.6" y="885" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1063.62" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (25,194,231 samples, 0.01%)</title><rect x="117.9" y="1157" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="120.90" y="1167.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (27,145,514 samples, 0.01%)</title><rect x="246.7" y="997" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="249.69" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (801,657,504 samples, 0.30%)</title><rect x="124.3" y="1317" width="3.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="127.31" y="1327.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (26,034,119 samples, 0.01%)</title><rect x="538.7" y="1093" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="541.73" y="1103.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (28,100,264 samples, 0.01%)</title><rect x="36.4" y="1045" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="39.38" y="1055.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (105,622,304 samples, 0.04%)</title><rect x="345.9" y="1333" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="348.85" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (368,746,499 samples, 0.14%)</title><rect x="549.3" y="1173" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="552.33" y="1183.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (201,960,446 samples, 0.08%)</title><rect x="797.6" y="965" width="0.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="800.56" y="975.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (24,805,290 samples, 0.01%)</title><rect x="545.0" y="1269" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="547.99" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (85,049,552 samples, 0.03%)</title><rect x="118.3" y="1205" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="121.28" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="501" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="511.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (60,669,595 samples, 0.02%)</title><rect x="233.1" y="933" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="236.07" y="943.5" ></text>
</g>
<g >
<title>path_lookupat (47,427,350 samples, 0.02%)</title><rect x="686.1" y="1253" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="689.11" y="1263.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (23,035,645 samples, 0.01%)</title><rect x="575.1" y="1429" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="578.10" y="1439.5" ></text>
</g>
<g >
<title>do_filp_open (80,687,145 samples, 0.03%)</title><rect x="134.3" y="1573" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="137.31" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (49,612,355 samples, 0.02%)</title><rect x="68.7" y="933" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="71.70" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,817,649 samples, 0.01%)</title><rect x="912.1" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.09" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (102,182,540 samples, 0.04%)</title><rect x="870.9" y="1077" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="873.90" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (42,742,515 samples, 0.02%)</title><rect x="155.4" y="1253" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="158.38" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,098,470 samples, 0.01%)</title><rect x="966.3" y="421" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="969.34" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (34,343,782 samples, 0.01%)</title><rect x="259.9" y="533" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="262.90" y="543.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (37,134,052 samples, 0.01%)</title><rect x="791.4" y="1045" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="794.35" y="1055.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (24,119,710 samples, 0.01%)</title><rect x="944.5" y="1061" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="947.46" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (55,879,508 samples, 0.02%)</title><rect x="355.0" y="933" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="358.00" y="943.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (85,724,829 samples, 0.03%)</title><rect x="956.0" y="1029" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="959.00" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,567,520 samples, 0.01%)</title><rect x="206.0" y="357" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.97" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (37,858,662 samples, 0.01%)</title><rect x="487.9" y="549" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="490.93" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (61,823,212 samples, 0.02%)</title><rect x="1002.8" y="1173" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1005.80" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (25,365,120 samples, 0.01%)</title><rect x="908.8" y="1221" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="911.76" y="1231.5" ></text>
</g>
<g >
<title>__fget_light (82,316,713 samples, 0.03%)</title><rect x="1154.0" y="1141" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1156.97" y="1151.5" ></text>
</g>
<g >
<title>irq_exit_rcu (24,371,003 samples, 0.01%)</title><rect x="708.8" y="1605" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="711.82" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (129,947,956 samples, 0.05%)</title><rect x="564.4" y="1669" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="567.39" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (30,317,264 samples, 0.01%)</title><rect x="1057.8" y="949" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1060.80" y="959.5" ></text>
</g>
<g >
<title>sockopt_release_sock (31,788,041 samples, 0.01%)</title><rect x="1146.5" y="1285" width="0.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1149.48" y="1295.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (34,571,498 samples, 0.01%)</title><rect x="638.0" y="885" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="641.00" y="895.5" ></text>
</g>
<g >
<title>destroy_inode (33,985,889 samples, 0.01%)</title><rect x="832.7" y="1013" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="835.69" y="1023.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (31,243,430 samples, 0.01%)</title><rect x="1120.2" y="1013" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1123.18" y="1023.5" ></text>
</g>
<g >
<title>security_file_fcntl (34,078,304 samples, 0.01%)</title><rect x="1149.7" y="1365" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1152.71" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (37,731,472 samples, 0.01%)</title><rect x="916.6" y="933" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="919.57" y="943.5" ></text>
</g>
<g >
<title>EventLoop::AddChannel (116,374,699 samples, 0.04%)</title><rect x="696.0" y="1477" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="698.98" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (28,639,571 samples, 0.01%)</title><rect x="963.3" y="1093" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="966.33" y="1103.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (22,806,521 samples, 0.01%)</title><rect x="47.2" y="1061" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="50.24" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (26,346,842 samples, 0.01%)</title><rect x="491.7" y="949" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="494.67" y="959.5" ></text>
</g>
<g >
<title>__napi_poll (34,356,042 samples, 0.01%)</title><rect x="1009.9" y="997" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1012.90" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,283,275 samples, 0.01%)</title><rect x="206.0" y="245" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.98" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (54,108,117 samples, 0.02%)</title><rect x="259.9" y="1013" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="262.87" y="1023.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (48,588,105 samples, 0.02%)</title><rect x="690.3" y="1125" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="693.34" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (152,263,717 samples, 0.06%)</title><rect x="1143.0" y="1669" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.99" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_resize (40,577,800 samples, 0.02%)</title><rect x="346.7" y="1333" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="349.69" y="1343.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long&gt; (27,521,928 samples, 0.01%)</title><rect x="62.9" y="1269" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="65.90" y="1279.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::construct&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt; &gt; (25,180,707 samples, 0.01%)</title><rect x="859.8" y="1029" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="862.75" y="1039.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (78,897,357 samples, 0.03%)</title><rect x="608.4" y="1061" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="611.39" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (29,780,465 samples, 0.01%)</title><rect x="1054.4" y="197" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.44" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (24,996,394 samples, 0.01%)</title><rect x="446.3" y="1077" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="449.29" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (30,687,066 samples, 0.01%)</title><rect x="205.5" y="309" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.54" y="319.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (76,033,733 samples, 0.03%)</title><rect x="153.7" y="1077" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="156.73" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::_M_default_initialize (22,888,870 samples, 0.01%)</title><rect x="205.1" y="1301" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="208.14" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,837,924,653 samples, 1.44%)</title><rect x="805.8" y="1237" width="17.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="808.84" y="1247.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (29,868,869 samples, 0.01%)</title><rect x="1141.3" y="1461" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1144.34" y="1471.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (426,706,426 samples, 0.16%)</title><rect x="487.2" y="1381" width="1.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="490.23" y="1391.5" ></text>
</g>
<g >
<title>operator delete[] (52,197,635 samples, 0.02%)</title><rect x="422.2" y="1669" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="425.24" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (31,101,300 samples, 0.01%)</title><rect x="912.1" y="229" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="915.10" y="239.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Channel&gt;::shared_ptr&lt;std::allocator&lt;Channel&gt;, int&amp;&gt; (171,693,457 samples, 0.06%)</title><rect x="1160.3" y="1269" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1163.29" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (531,993,562 samples, 0.20%)</title><rect x="593.1" y="1029" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="596.12" y="1039.5" ></text>
</g>
<g >
<title>do_filp_open (76,980,581 samples, 0.03%)</title><rect x="840.3" y="1573" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="843.30" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (43,821,349 samples, 0.02%)</title><rect x="488.4" y="485" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="491.37" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (403,148,046 samples, 0.15%)</title><rect x="628.9" y="1349" width="1.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="631.91" y="1359.5" ></text>
</g>
<g >
<title>__do_softirq (75,066,728 samples, 0.03%)</title><rect x="1170.6" y="1253" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1173.56" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (60,338,124 samples, 0.02%)</title><rect x="873.7" y="1061" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="876.71" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (25,172,190 samples, 0.01%)</title><rect x="663.4" y="1061" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="666.39" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,824,515,768 samples, 1.43%)</title><rect x="207.1" y="1221" width="16.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="210.12" y="1231.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (73,553,988 samples, 0.03%)</title><rect x="1180.7" y="1557" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1183.69" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_eliminate_dummy (22,725,729 samples, 0.01%)</title><rect x="682.9" y="1333" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="685.95" y="1343.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (33,758,387 samples, 0.01%)</title><rect x="400.2" y="1189" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="403.23" y="1199.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (46,186,430 samples, 0.02%)</title><rect x="664.0" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="666.98" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (82,505,423 samples, 0.03%)</title><rect x="154.8" y="1221" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="157.79" y="1231.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (868,106,310 samples, 0.33%)</title><rect x="265.8" y="1397" width="3.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="268.77" y="1407.5" ></text>
</g>
<g >
<title>iput (54,159,215 samples, 0.02%)</title><rect x="974.9" y="1045" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="977.90" y="1055.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (681,640,746 samples, 0.26%)</title><rect x="744.2" y="1045" width="3.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="747.15" y="1055.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (24,038,745 samples, 0.01%)</title><rect x="1053.3" y="1093" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1056.31" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (10,545,859,999 samples, 3.95%)</title><rect x="155.6" y="1253" width="46.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="158.64" y="1263.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,975,642 samples, 0.01%)</title><rect x="347.5" y="677" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.54" y="687.5" ></text>
</g>
<g >
<title>__napi_poll (34,199,249 samples, 0.01%)</title><rect x="292.4" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="295.45" y="1583.5" ></text>
</g>
<g >
<title>napi_complete_done (32,690,352 samples, 0.01%)</title><rect x="973.7" y="869" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="976.71" y="879.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (65,730,043 samples, 0.02%)</title><rect x="735.7" y="997" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="738.69" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (90,237,525 samples, 0.03%)</title><rect x="966.2" y="1269" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="969.24" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,829,801,209 samples, 1.43%)</title><rect x="947.8" y="1173" width="16.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="950.80" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (27,741,938 samples, 0.01%)</title><rect x="344.9" y="1317" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="347.93" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (39,676,617 samples, 0.01%)</title><rect x="543.7" y="1381" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="546.68" y="1391.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (361,608,713 samples, 0.14%)</title><rect x="128.5" y="1253" width="1.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="131.51" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (119,112,258 samples, 0.04%)</title><rect x="1065.2" y="901" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1068.25" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,653,400,983 samples, 1.37%)</title><rect x="772.3" y="1173" width="16.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="775.34" y="1183.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (30,486,813 samples, 0.01%)</title><rect x="860.8" y="1077" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="863.81" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (146,523,611 samples, 0.05%)</title><rect x="478.8" y="1093" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="481.77" y="1103.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (36,251,732 samples, 0.01%)</title><rect x="408.6" y="1077" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="411.58" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_read (95,771,998 samples, 0.04%)</title><rect x="264.4" y="1381" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="267.36" y="1391.5" ></text>
</g>
<g >
<title>operator new (84,535,404 samples, 0.03%)</title><rect x="557.5" y="1653" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="560.53" y="1663.5" ></text>
</g>
<g >
<title>psi_task_switch (31,021,549 samples, 0.01%)</title><rect x="1185.2" y="1445" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1188.24" y="1455.5" ></text>
</g>
<g >
<title>vfs_writev (443,942,145 samples, 0.17%)</title><rect x="976.6" y="1349" width="2.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="979.60" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (1,722,685,672 samples, 0.65%)</title><rect x="882.3" y="1061" width="7.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="885.27" y="1071.5" ></text>
</g>
<g >
<title>inet_recvmsg (46,810,474 samples, 0.02%)</title><rect x="688.8" y="1301" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="691.78" y="1311.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (123,003,264 samples, 0.05%)</title><rect x="515.8" y="949" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="518.79" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (23,413,962 samples, 0.01%)</title><rect x="647.4" y="1061" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="650.45" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (180,184,977 samples, 0.07%)</title><rect x="629.5" y="885" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.48" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,200,479,605 samples, 1.20%)</title><rect x="1164.6" y="1429" width="14.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1167.63" y="1439.5" ></text>
</g>
<g >
<title>filename_lookup (42,147,269 samples, 0.02%)</title><rect x="968.4" y="1269" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="971.41" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (84,070,406 samples, 0.03%)</title><rect x="296.1" y="1237" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="299.14" y="1247.5" ></text>
</g>
<g >
<title>ip_list_rcv (34,071,873 samples, 0.01%)</title><rect x="1141.3" y="1493" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1144.32" y="1503.5" ></text>
</g>
<g >
<title>do_epoll_ctl (66,462,700 samples, 0.02%)</title><rect x="406.0" y="1221" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="409.02" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,171,237 samples, 0.01%)</title><rect x="118.4" y="677" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.36" y="687.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (32,401,056 samples, 0.01%)</title><rect x="979.4" y="1509" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="982.42" y="1519.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (146,484,513 samples, 0.05%)</title><rect x="823.8" y="1381" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="826.81" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::vector (27,754,389 samples, 0.01%)</title><rect x="911.1" y="1285" width="0.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="914.08" y="1295.5" ></text>
</g>
<g >
<title>std::function&lt;void  (25,500,316,109 samples, 9.55%)</title><rect x="1000.9" y="1525" width="112.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1003.94" y="1535.5" >std::function..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (181,333,788 samples, 0.07%)</title><rect x="63.2" y="933" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.19" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::assign (32,142,944 samples, 0.01%)</title><rect x="204.9" y="1317" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="207.95" y="1327.5" ></text>
</g>
<g >
<title>[web-server] (91,157,259 samples, 0.03%)</title><rect x="587.3" y="1077" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="590.26" y="1087.5" ></text>
</g>
<g >
<title>__ip_local_out (33,450,428 samples, 0.01%)</title><rect x="409.7" y="901" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="412.65" y="911.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (23,196,254 samples, 0.01%)</title><rect x="675.7" y="1013" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="678.71" y="1023.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,122,733,743 samples, 10.16%)</title><rect x="294.2" y="1637" width="119.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="297.17" y="1647.5" >std::thread::_..</text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (109,534,126 samples, 0.04%)</title><rect x="1053.0" y="1381" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1056.03" y="1391.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (26,418,147 samples, 0.01%)</title><rect x="28.1" y="981" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="31.06" y="991.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (30,273,231 samples, 0.01%)</title><rect x="1145.5" y="1397" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1148.50" y="1407.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (313,494,894 samples, 0.12%)</title><rect x="403.4" y="1301" width="1.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="406.39" y="1311.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (27,377,658 samples, 0.01%)</title><rect x="690.7" y="1045" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="693.74" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (480,171,424 samples, 0.18%)</title><rect x="414.6" y="1669" width="2.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="417.59" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (23,473,922 samples, 0.01%)</title><rect x="575.1" y="1445" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="578.10" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (122,869,793 samples, 0.05%)</title><rect x="578.0" y="1221" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="581.04" y="1231.5" ></text>
</g>
<g >
<title>net_rx_action (28,938,111 samples, 0.01%)</title><rect x="999.1" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1002.13" y="1599.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (62,724,184 samples, 0.02%)</title><rect x="876.1" y="997" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="879.10" y="1007.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (56,105,615 samples, 0.02%)</title><rect x="628.3" y="1189" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="631.32" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,878,889,715 samples, 1.45%)</title><rect x="805.8" y="1285" width="17.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="808.82" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (67,933,721 samples, 0.03%)</title><rect x="293.4" y="1685" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="296.40" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (390,146,081 samples, 0.15%)</title><rect x="859.5" y="1269" width="1.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="862.53" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (41,211,019 samples, 0.02%)</title><rect x="719.5" y="1157" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="722.45" y="1167.5" ></text>
</g>
<g >
<title>do_epoll_ctl (31,118,118 samples, 0.01%)</title><rect x="718.3" y="1237" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="721.28" y="1247.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (42,013,294 samples, 0.02%)</title><rect x="32.7" y="1061" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="35.69" y="1071.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (34,507,917 samples, 0.01%)</title><rect x="443.5" y="1093" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="446.47" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (47,585,207 samples, 0.02%)</title><rect x="966.3" y="757" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="969.30" y="767.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (30,816,811 samples, 0.01%)</title><rect x="171.5" y="1077" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="174.50" y="1087.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (33,625,440 samples, 0.01%)</title><rect x="88.0" y="1045" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="91.02" y="1055.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (24,977,936 samples, 0.01%)</title><rect x="973.7" y="789" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="976.72" y="799.5" ></text>
</g>
<g >
<title>TimerManager::DelTimer (25,135,121 samples, 0.01%)</title><rect x="971.5" y="1301" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="974.45" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,761,031,519 samples, 1.41%)</title><rect x="489.6" y="1125" width="16.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="492.61" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (62,761,907 samples, 0.02%)</title><rect x="71.2" y="933" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="74.22" y="943.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (76,981,553 samples, 0.03%)</title><rect x="414.6" y="1653" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="417.59" y="1663.5" ></text>
</g>
<g >
<title>std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, TimerManager::TimerCmp&gt; (32,401,056 samples, 0.01%)</title><rect x="979.4" y="1525" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="982.42" y="1535.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::function&lt;void  (25,078,703 samples, 0.01%)</title><rect x="1157.4" y="1221" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1160.41" y="1231.5" ></text>
</g>
<g >
<title>loopthread1 (31,995,662,498 samples, 11.98%)</title><rect x="152.7" y="1701" width="141.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="155.69" y="1711.5" >loopthread1</text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (28,141,602 samples, 0.01%)</title><rect x="1019.9" y="1077" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1022.90" y="1087.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (144,049,439 samples, 0.05%)</title><rect x="1048.8" y="1125" width="0.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1051.82" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,675,227,712 samples, 2.87%)</title><rect x="631.1" y="1269" width="34.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="634.14" y="1279.5" >st..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (345,202,441 samples, 0.13%)</title><rect x="616.1" y="1077" width="1.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="619.10" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (118,524,081 samples, 0.04%)</title><rect x="558.7" y="1637" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="561.67" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (59,310,421 samples, 0.02%)</title><rect x="824.0" y="821" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.04" y="831.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (28,182,112 samples, 0.01%)</title><rect x="1114.3" y="1269" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1117.31" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (49,583,991 samples, 0.02%)</title><rect x="578.7" y="1173" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="581.67" y="1183.5" ></text>
</g>
<g >
<title>epoll_wait (1,302,937,548 samples, 0.49%)</title><rect x="1180.3" y="1605" width="5.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1183.33" y="1615.5" ></text>
</g>
<g >
<title>TimerManager::AddTimer (32,810,043 samples, 0.01%)</title><rect x="413.1" y="1461" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="416.11" y="1471.5" ></text>
</g>
<g >
<title>do_fcntl (36,434,507 samples, 0.01%)</title><rect x="1149.6" y="1365" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1152.55" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (30,404,868 samples, 0.01%)</title><rect x="1054.9" y="405" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.88" y="415.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (182,276,155 samples, 0.07%)</title><rect x="373.9" y="965" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="376.92" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (632,827,621 samples, 0.24%)</title><rect x="514.5" y="1029" width="2.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="517.49" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (80,331,774 samples, 0.03%)</title><rect x="543.2" y="1125" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="546.17" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,605,955,445 samples, 1.35%)</title><rect x="772.4" y="1109" width="15.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="775.40" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (40,584,460 samples, 0.02%)</title><rect x="347.8" y="373" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.76" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (31,099,509 samples, 0.01%)</title><rect x="791.1" y="1061" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="794.09" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (68,501,218 samples, 0.03%)</title><rect x="543.2" y="1061" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.18" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,527,635 samples, 0.01%)</title><rect x="259.9" y="517" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.91" y="527.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (27,212,497,324 samples, 10.19%)</title><rect x="152.8" y="1669" width="120.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="155.81" y="1679.5" >std::thread::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (48,974,219 samples, 0.02%)</title><rect x="630.0" y="517" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.95" y="527.5" ></text>
</g>
<g >
<title>EventLoop::AddChannel (109,956,986 samples, 0.04%)</title><rect x="272.0" y="1477" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="275.03" y="1487.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (33,831,949 samples, 0.01%)</title><rect x="1002.9" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1005.90" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,692,609,758 samples, 1.38%)</title><rect x="365.6" y="1141" width="16.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="368.63" y="1151.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (24,511,442 samples, 0.01%)</title><rect x="709.8" y="1637" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="712.76" y="1647.5" ></text>
</g>
<g >
<title>ip_finish_output2 (67,139,250 samples, 0.03%)</title><rect x="1120.1" y="1077" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1123.05" y="1087.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::operator (32,303,136 samples, 0.01%)</title><rect x="1186.3" y="1605" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1189.25" y="1615.5" ></text>
</g>
<g >
<title>unmap_single_vma (37,005,957 samples, 0.01%)</title><rect x="831.7" y="1029" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="834.73" y="1039.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (33,015,741 samples, 0.01%)</title><rect x="161.5" y="1045" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="164.55" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (99,966,011 samples, 0.04%)</title><rect x="316.9" y="1029" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="319.86" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,307,589,066 samples, 3.49%)</title><rect x="863.4" y="1109" width="41.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="866.42" y="1119.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (67,618,811 samples, 0.03%)</title><rect x="594.8" y="1013" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="597.78" y="1023.5" ></text>
</g>
<g >
<title>hyperv_flush_tlb_multi (63,322,562 samples, 0.02%)</title><rect x="973.6" y="1013" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="976.62" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (167,403,200 samples, 0.06%)</title><rect x="314.7" y="1077" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="317.65" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (70,023,308 samples, 0.03%)</title><rect x="495.9" y="933" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="498.91" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (33,186,025 samples, 0.01%)</title><rect x="861.1" y="1237" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="864.10" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (33,536,339 samples, 0.01%)</title><rect x="684.0" y="533" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="687.04" y="543.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (25,497,741,879 samples, 9.55%)</title><rect x="1001.0" y="1509" width="112.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1003.95" y="1519.5" >std::_Functio..</text>
</g>
<g >
<title>std::__shared_count&lt; (56,922,277 samples, 0.02%)</title><rect x="1108.0" y="1333" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1111.01" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,174,981 samples, 0.01%)</title><rect x="259.9" y="485" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.91" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,590,112,182 samples, 1.34%)</title><rect x="365.8" y="1109" width="15.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="368.76" y="1119.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (31,998,004 samples, 0.01%)</title><rect x="751.9" y="1045" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="754.88" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (115,153,985 samples, 0.04%)</title><rect x="261.6" y="1381" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="264.62" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (10,183,479,275 samples, 3.81%)</title><rect x="156.2" y="1157" width="45.0" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="159.16" y="1167.5" >std:..</text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (92,313,178 samples, 0.03%)</title><rect x="380.9" y="1093" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="383.92" y="1103.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (26,360,036 samples, 0.01%)</title><rect x="125.1" y="1045" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="128.10" y="1055.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::AddChannel (118,231,844 samples, 0.04%)</title><rect x="696.0" y="1509" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="698.98" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (45,190,330 samples, 0.02%)</title><rect x="10.5" y="1301" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.46" y="1311.5" ></text>
</g>
<g >
<title>_int_malloc (164,456,884 samples, 0.06%)</title><rect x="1188.1" y="1685" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1191.09" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (28,978,590 samples, 0.01%)</title><rect x="953.5" y="1013" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="956.55" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (34,562,543 samples, 0.01%)</title><rect x="1054.4" y="325" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.43" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (56,581,254 samples, 0.02%)</title><rect x="543.2" y="901" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="546.20" y="911.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (75,349,854 samples, 0.03%)</title><rect x="335.3" y="1093" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="338.28" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (117,054,344 samples, 0.04%)</title><rect x="534.6" y="1045" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="537.60" y="1055.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (26,153,828 samples, 0.01%)</title><rect x="151.0" y="1477" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="154.04" y="1487.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (25,501,430,565 samples, 9.55%)</title><rect x="434.8" y="1445" width="112.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="437.75" y="1455.5" >HttpConn::Han..</text>
</g>
<g >
<title>HttpConn::~HttpConn (507,866,204 samples, 0.19%)</title><rect x="1114.7" y="1205" width="2.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1117.65" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (69,636,352 samples, 0.03%)</title><rect x="265.1" y="1269" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="268.12" y="1279.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,643,019,210 samples, 0.62%)</title><rect x="971.3" y="1525" width="7.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="974.35" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (22,761,789 samples, 0.01%)</title><rect x="911.7" y="37" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.66" y="47.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (26,102,271 samples, 0.01%)</title><rect x="768.3" y="1285" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="771.30" y="1295.5" ></text>
</g>
<g >
<title>task_work_run (38,325,137 samples, 0.01%)</title><rect x="690.4" y="1109" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="693.39" y="1119.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (27,212,497,324 samples, 10.19%)</title><rect x="152.8" y="1621" width="120.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="155.81" y="1631.5" >std::__invoke&lt;..</text>
</g>
<g >
<title>[unknown] (39,976,974 samples, 0.01%)</title><rect x="1143.0" y="1589" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.99" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (29,093,726 samples, 0.01%)</title><rect x="575.1" y="1509" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="578.09" y="1519.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (25,207,579 samples, 0.01%)</title><rect x="380.1" y="1045" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="383.10" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (49,583,991 samples, 0.02%)</title><rect x="578.7" y="1189" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="581.67" y="1199.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (73,753,039 samples, 0.03%)</title><rect x="819.8" y="1093" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="822.78" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (168,315,704 samples, 0.06%)</title><rect x="889.0" y="1029" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="892.02" y="1039.5" ></text>
</g>
<g >
<title>__close (342,196,935 samples, 0.13%)</title><rect x="1116.9" y="1205" width="1.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1119.92" y="1215.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (25,099,795 samples, 0.01%)</title><rect x="885.6" y="981" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="888.63" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (29,614,553 samples, 0.01%)</title><rect x="259.9" y="437" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="262.92" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (68,871,494 samples, 0.03%)</title><rect x="717.3" y="1685" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="720.28" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (30,680,915 samples, 0.01%)</title><rect x="949.7" y="1093" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="952.73" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (30,094,364 samples, 0.01%)</title><rect x="959.7" y="1077" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="962.74" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,341,718 samples, 0.02%)</title><rect x="684.0" y="789" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="687.02" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_less_val (40,773,830 samples, 0.02%)</title><rect x="442.1" y="1093" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="445.13" y="1103.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (22,853,376 samples, 0.01%)</title><rect x="716.3" y="1461" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="719.31" y="1471.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (156,463,771 samples, 0.06%)</title><rect x="881.1" y="1045" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="884.06" y="1055.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (52,545,143 samples, 0.02%)</title><rect x="357.5" y="805" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="360.53" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (199,757,972 samples, 0.07%)</title><rect x="511.8" y="997" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="514.78" y="1007.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (53,734,883 samples, 0.02%)</title><rect x="1183.1" y="1477" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1186.11" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (24,257,784 samples, 0.01%)</title><rect x="771.2" y="229" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="774.21" y="239.5" ></text>
</g>
<g >
<title>operator delete[] (55,323,605 samples, 0.02%)</title><rect x="1130.2" y="1669" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1133.23" y="1679.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (36,834,550 samples, 0.01%)</title><rect x="128.0" y="1429" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="130.98" y="1439.5" ></text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (30,082,899 samples, 0.01%)</title><rect x="1179.8" y="1621" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1182.81" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (62,304,041 samples, 0.02%)</title><rect x="436.0" y="1173" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="439.03" y="1183.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (119,923,504 samples, 0.04%)</title><rect x="172.6" y="1077" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="175.64" y="1087.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (23,475,534 samples, 0.01%)</title><rect x="117.6" y="1301" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="120.58" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (45,316,010 samples, 0.02%)</title><rect x="966.8" y="1397" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="969.80" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,621,506,668 samples, 1.36%)</title><rect x="631.2" y="1141" width="16.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="634.21" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (28,296,964 samples, 0.01%)</title><rect x="1091.7" y="1093" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1094.68" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (30,145,999 samples, 0.01%)</title><rect x="967.6" y="1365" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="970.56" y="1375.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (193,474,129 samples, 0.07%)</title><rect x="90.5" y="997" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="93.53" y="1007.5" ></text>
</g>
<g >
<title>vfs_statx (66,056,065 samples, 0.02%)</title><rect x="686.1" y="1285" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="689.10" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (41,451,873 samples, 0.02%)</title><rect x="1131.3" y="1669" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1134.29" y="1679.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (24,826,650,466 samples, 9.30%)</title><rect x="718.6" y="1429" width="109.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="721.56" y="1439.5" >HttpConn::OnP..</text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (224,242,335 samples, 0.08%)</title><rect x="497.9" y="885" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="500.93" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (23,340,390 samples, 0.01%)</title><rect x="911.7" y="85" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.66" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (951,570,869 samples, 0.36%)</title><rect x="141.6" y="1669" width="4.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="144.55" y="1679.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::AddChannel (114,940,792 samples, 0.04%)</title><rect x="1120.9" y="1493" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1123.94" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (196,480,777 samples, 0.07%)</title><rect x="212.0" y="901" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="215.00" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (60,035,232 samples, 0.02%)</title><rect x="347.7" y="661" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.73" y="671.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (146,915,524 samples, 0.06%)</title><rect x="1154.8" y="1125" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1157.81" y="1135.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (26,079,928 samples, 0.01%)</title><rect x="683.2" y="1333" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="686.20" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,438,277,335 samples, 1.29%)</title><rect x="241.9" y="1109" width="15.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="244.92" y="1119.5" ></text>
</g>
<g >
<title>__napi_poll (26,226,799 samples, 0.01%)</title><rect x="550.2" y="901" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="553.22" y="911.5" ></text>
</g>
<g >
<title>std::priority_queue&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt;, TimerManager::TimerCmp&gt;::pop (33,789,780 samples, 0.01%)</title><rect x="555.6" y="1541" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="558.62" y="1551.5" ></text>
</g>
<g >
<title>irq_exit_rcu (28,965,466 samples, 0.01%)</title><rect x="1116.0" y="965" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1118.96" y="975.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (501,945,538 samples, 0.19%)</title><rect x="37.1" y="997" width="2.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="40.13" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (43,595,788 samples, 0.02%)</title><rect x="227.6" y="1045" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="230.61" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (31,316,732 samples, 0.01%)</title><rect x="112.9" y="1077" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="115.89" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (29,426,400 samples, 0.01%)</title><rect x="682.6" y="1205" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="685.55" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,615,923,728 samples, 3.60%)</title><rect x="14.1" y="1125" width="42.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="17.14" y="1135.5" >std:..</text>
</g>
<g >
<title>[web-server] (89,783,639 samples, 0.03%)</title><rect x="21.0" y="1077" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="24.05" y="1087.5" ></text>
</g>
<g >
<title>handle_softirqs (41,159,108 samples, 0.02%)</title><rect x="575.1" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="578.07" y="1615.5" ></text>
</g>
<g >
<title>__fput_sync (290,279,341 samples, 0.11%)</title><rect x="409.1" y="1125" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="412.06" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (37,043,631 samples, 0.01%)</title><rect x="898.4" y="1045" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="901.44" y="1055.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (84,417,639 samples, 0.03%)</title><rect x="128.7" y="1205" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="131.68" y="1215.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (28,585,956 samples, 0.01%)</title><rect x="506.5" y="1013" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="509.47" y="1023.5" ></text>
</g>
<g >
<title>__ip_local_out (33,878,838 samples, 0.01%)</title><rect x="975.4" y="901" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="978.36" y="911.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (131,478,325 samples, 0.05%)</title><rect x="968.1" y="1397" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="971.13" y="1407.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (36,687,742 samples, 0.01%)</title><rect x="977.9" y="1013" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="980.86" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_Scanner (22,643,386 samples, 0.01%)</title><rect x="909.5" y="1333" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="912.47" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,139,012 samples, 0.01%)</title><rect x="347.3" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.29" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (327,738,076 samples, 0.12%)</title><rect x="182.4" y="1045" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="185.45" y="1055.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (74,597,249 samples, 0.03%)</title><rect x="538.8" y="1093" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="541.85" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (400,554,764 samples, 0.15%)</title><rect x="245.4" y="1077" width="1.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="248.39" y="1087.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (120,939,951 samples, 0.05%)</title><rect x="357.3" y="837" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="360.34" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (34,554,166 samples, 0.01%)</title><rect x="63.7" y="437" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.70" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (54,783,172 samples, 0.02%)</title><rect x="462.6" y="933" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="465.59" y="943.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (28,362,285 samples, 0.01%)</title><rect x="406.7" y="1173" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="409.75" y="1183.5" ></text>
</g>
<g >
<title>sock_close (198,877,329 samples, 0.07%)</title><rect x="268.5" y="1093" width="0.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="271.49" y="1103.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (631,621,562 samples, 0.24%)</title><rect x="894.2" y="1077" width="2.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="897.16" y="1087.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (28,686,217 samples, 0.01%)</title><rect x="453.7" y="1077" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="456.69" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (103,406,771 samples, 0.04%)</title><rect x="118.3" y="1301" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="121.26" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (60,641,170 samples, 0.02%)</title><rect x="453.1" y="1013" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="456.09" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,454,279 samples, 0.02%)</title><rect x="259.9" y="853" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.89" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,909,282,149 samples, 1.46%)</title><rect x="241.3" y="1221" width="17.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="244.26" y="1231.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (26,828,515 samples, 0.01%)</title><rect x="346.1" y="1093" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="349.12" y="1103.5" ></text>
</g>
<g >
<title>do_syscall_64 (322,124,057 samples, 0.12%)</title><rect x="268.0" y="1173" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="271.05" y="1183.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (54,126,837 samples, 0.02%)</title><rect x="501.9" y="917" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="504.94" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (24,280,543 samples, 0.01%)</title><rect x="232.3" y="981" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="235.30" y="991.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (29,412,825 samples, 0.01%)</title><rect x="365.1" y="1013" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="368.14" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (30,168,694 samples, 0.01%)</title><rect x="771.0" y="437" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.97" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (110,283,217 samples, 0.04%)</title><rect x="488.2" y="837" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="491.16" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,263,664 samples, 0.01%)</title><rect x="684.0" y="405" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.05" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (123,470,172 samples, 0.05%)</title><rect x="131.5" y="1669" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="134.50" y="1679.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (220,088,628 samples, 0.08%)</title><rect x="977.3" y="1221" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="980.34" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (57,131,961 samples, 0.02%)</title><rect x="577.7" y="1109" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="580.71" y="1119.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_maskbit (45,684,300 samples, 0.02%)</title><rect x="200.4" y="1109" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="203.45" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (25,441,784 samples, 0.01%)</title><rect x="347.6" y="357" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.56" y="367.5" ></text>
</g>
<g >
<title>net_rx_action (26,927,064 samples, 0.01%)</title><rect x="1148.9" y="1301" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1151.89" y="1311.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (25,126,041 samples, 0.01%)</title><rect x="996.4" y="1621" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="999.43" y="1631.5" ></text>
</g>
<g >
<title>ip_list_rcv (33,205,723 samples, 0.01%)</title><rect x="1170.6" y="1125" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1173.57" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (39,934,018 samples, 0.01%)</title><rect x="824.1" y="533" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.07" y="543.5" ></text>
</g>
<g >
<title>perf_event_mmap (61,569,309 samples, 0.02%)</title><rect x="262.8" y="1253" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="265.84" y="1263.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (25,274,143 samples, 0.01%)</title><rect x="250.6" y="933" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="253.56" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,298,304 samples, 0.01%)</title><rect x="543.3" y="549" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.25" y="559.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (71,096,162 samples, 0.03%)</title><rect x="831.3" y="1029" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="834.32" y="1039.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (31,027,564 samples, 0.01%)</title><rect x="443.5" y="1045" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="446.48" y="1055.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (71,725,682 samples, 0.03%)</title><rect x="1156.6" y="1237" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1159.60" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::vector (24,748,571 samples, 0.01%)</title><rect x="346.7" y="1285" width="0.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="349.73" y="1295.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (29,078,805 samples, 0.01%)</title><rect x="622.8" y="1109" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="625.75" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (68,343,859 samples, 0.03%)</title><rect x="346.0" y="1237" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="349.00" y="1247.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::construct&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt; &gt; (32,015,515 samples, 0.01%)</title><rect x="11.2" y="1029" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="14.22" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (378,234,221 samples, 0.14%)</title><rect x="407.1" y="1157" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="410.08" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (108,923,062 samples, 0.04%)</title><rect x="629.7" y="789" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.74" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (27,081,806 samples, 0.01%)</title><rect x="954.7" y="1077" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="957.66" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (29,338,529 samples, 0.01%)</title><rect x="1164.1" y="1445" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1167.06" y="1455.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (37,237,724 samples, 0.01%)</title><rect x="684.7" y="1397" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="687.70" y="1407.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (32,888,084 samples, 0.01%)</title><rect x="537.0" y="1061" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="540.01" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (266,598,056 samples, 0.10%)</title><rect x="1054.2" y="1301" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1057.17" y="1311.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (25,046,045 samples, 0.01%)</title><rect x="463.2" y="965" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="466.17" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (126,528,757 samples, 0.05%)</title><rect x="275.7" y="1653" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="278.67" y="1663.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (120,831,788 samples, 0.05%)</title><rect x="878.4" y="1077" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="881.41" y="1087.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (53,000,137 samples, 0.02%)</title><rect x="628.3" y="1173" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="631.33" y="1183.5" ></text>
</g>
<g >
<title>ip_local_out (142,992,689 samples, 0.05%)</title><rect x="1119.8" y="1141" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1122.79" y="1151.5" ></text>
</g>
<g >
<title>Channel::OnEvents (27,208,771,703 samples, 10.19%)</title><rect x="434.6" y="1557" width="120.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="437.63" y="1567.5" >Channel::OnEve..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (91,107,204 samples, 0.03%)</title><rect x="966.2" y="1285" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.24" y="1295.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (61,057,088 samples, 0.02%)</title><rect x="505.4" y="981" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="508.37" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (33,087,383 samples, 0.01%)</title><rect x="209.1" y="949" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="212.13" y="959.5" ></text>
</g>
<g >
<title>epoll_wait (32,534,046 samples, 0.01%)</title><rect x="696.5" y="1541" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="699.53" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (40,405,491 samples, 0.02%)</title><rect x="1131.3" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1134.29" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (26,985,772 samples, 0.01%)</title><rect x="520.1" y="1045" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="523.13" y="1055.5" ></text>
</g>
<g >
<title>_int_free (374,875,203 samples, 0.14%)</title><rect x="702.7" y="1669" width="1.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="705.74" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (81,522,362 samples, 0.03%)</title><rect x="1009.5" y="1093" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1012.53" y="1103.5" ></text>
</g>
<g >
<title>x64_sys_call (311,090,948 samples, 0.12%)</title><rect x="407.4" y="1141" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="410.37" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (125,766,095 samples, 0.05%)</title><rect x="109.5" y="1045" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="112.48" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (103,227,030 samples, 0.04%)</title><rect x="390.2" y="1045" width="0.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="393.19" y="1055.5" ></text>
</g>
<g >
<title>hyperv_flush_tlb_multi (55,844,747 samples, 0.02%)</title><rect x="691.1" y="1013" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="694.09" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (55,679,993 samples, 0.02%)</title><rect x="205.5" y="821" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="208.48" y="831.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (25,393,018,906 samples, 9.51%)</title><rect x="576.9" y="1509" width="112.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="579.87" y="1519.5" >std::_Functio..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (44,865,941 samples, 0.02%)</title><rect x="282.4" y="1669" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="285.39" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (30,819,004 samples, 0.01%)</title><rect x="543.3" y="533" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="546.25" y="543.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="373" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (234,797,664 samples, 0.09%)</title><rect x="911.5" y="1157" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.48" y="1167.5" ></text>
</g>
<g >
<title>__ep_remove (29,736,503 samples, 0.01%)</title><rect x="265.2" y="1205" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="268.22" y="1215.5" ></text>
</g>
<g >
<title>TimerManager::Tick (47,911,343 samples, 0.02%)</title><rect x="1121.7" y="1557" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1124.71" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (376,757,912 samples, 0.14%)</title><rect x="369.5" y="1045" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="372.47" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (29,462,970 samples, 0.01%)</title><rect x="378.2" y="1045" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="381.24" y="1055.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (72,810,135 samples, 0.03%)</title><rect x="1104.0" y="1093" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1107.04" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (57,901,499 samples, 0.02%)</title><rect x="206.8" y="1365" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="209.80" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (39,505,468 samples, 0.01%)</title><rect x="81.5" y="1141" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="84.54" y="1151.5" ></text>
</g>
<g >
<title>__napi_poll (40,077,738 samples, 0.02%)</title><rect x="151.0" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="154.02" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (87,021,098 samples, 0.03%)</title><rect x="901.2" y="1093" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="904.17" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,906,796 samples, 0.02%)</title><rect x="1054.4" y="837" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.38" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (41,820,344 samples, 0.02%)</title><rect x="1108.6" y="693" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1111.61" y="703.5" ></text>
</g>
<g >
<title>perf_event_mmap (56,753,964 samples, 0.02%)</title><rect x="827.0" y="1253" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="830.01" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (173,299,664 samples, 0.06%)</title><rect x="487.9" y="869" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.89" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,891,207,121 samples, 1.46%)</title><rect x="99.5" y="1157" width="17.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="102.46" y="1167.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (346,511,944 samples, 0.13%)</title><rect x="757.5" y="1077" width="1.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="760.49" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (58,799,370 samples, 0.02%)</title><rect x="1108.6" y="869" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1111.58" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (354,374,936 samples, 0.13%)</title><rect x="1111.1" y="1381" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1114.12" y="1391.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (28,124,780 samples, 0.01%)</title><rect x="825.9" y="1269" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="828.94" y="1279.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (23,801,422 samples, 0.01%)</title><rect x="143.6" y="1637" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="146.56" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (58,259,125 samples, 0.02%)</title><rect x="771.1" y="677" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="774.14" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (873,236,374 samples, 0.33%)</title><rect x="1114.6" y="1317" width="3.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1117.60" y="1327.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (23,228,471 samples, 0.01%)</title><rect x="112.3" y="1045" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="115.34" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (48,362,480 samples, 0.02%)</title><rect x="966.3" y="789" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="969.30" y="799.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (67,516,283 samples, 0.03%)</title><rect x="941.6" y="997" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="944.64" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (28,315,237 samples, 0.01%)</title><rect x="629.8" y="485" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.78" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (32,857,956 samples, 0.01%)</title><rect x="824.1" y="469" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="827.08" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (23,246,694 samples, 0.01%)</title><rect x="616.8" y="1045" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="619.77" y="1055.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (43,159,319 samples, 0.02%)</title><rect x="783.9" y="917" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="786.95" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (52,129,306 samples, 0.02%)</title><rect x="12.1" y="1189" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="15.14" y="1199.5" ></text>
</g>
<g >
<title>EventLoop::DelChannel (155,968,241 samples, 0.06%)</title><rect x="689.2" y="1413" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="692.16" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="613" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="623.5" ></text>
</g>
<g >
<title>HttpRouter::Route (641,979,202 samples, 0.24%)</title><rect x="1109.9" y="1413" width="2.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1112.94" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (24,529,735 samples, 0.01%)</title><rect x="347.3" y="197" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.31" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (24,360,983 samples, 0.01%)</title><rect x="751.3" y="1013" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="754.30" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,872,025,151 samples, 1.45%)</title><rect x="64.8" y="1253" width="17.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="67.83" y="1263.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (26,375,270 samples, 0.01%)</title><rect x="233.2" y="901" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="236.22" y="911.5" ></text>
</g>
<g >
<title>malloc (634,664,329 samples, 0.24%)</title><rect x="289.9" y="1685" width="2.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="292.87" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (43,022,374 samples, 0.02%)</title><rect x="647.4" y="1157" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="650.41" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (71,048,228 samples, 0.03%)</title><rect x="204.3" y="1237" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="207.27" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,515,527,208 samples, 4.31%)</title><rect x="435.4" y="1349" width="50.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="438.35" y="1359.5" >std::..</text>
</g>
<g >
<title>do_vmi_align_munmap (254,138,464 samples, 0.10%)</title><rect x="407.4" y="1077" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="410.40" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,706,469,218 samples, 4.01%)</title><rect x="297.0" y="1269" width="47.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="299.98" y="1279.5" >std:..</text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (28,431,662 samples, 0.01%)</title><rect x="996.4" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="999.42" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (634,783,618 samples, 0.24%)</title><rect x="813.4" y="1061" width="2.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="816.39" y="1071.5" ></text>
</g>
<g >
<title>__napi_poll (27,383,605 samples, 0.01%)</title><rect x="443.5" y="997" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="446.49" y="1007.5" ></text>
</g>
<g >
<title>__ip_local_out (43,134,637 samples, 0.02%)</title><rect x="833.2" y="901" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="836.19" y="911.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (239,984,046 samples, 0.09%)</title><rect x="515.4" y="1013" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="518.44" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (10,410,229,387 samples, 3.90%)</title><rect x="861.8" y="1173" width="46.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="864.76" y="1183.5" >std:..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,481,791,711 samples, 1.30%)</title><rect x="772.6" y="1013" width="15.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="775.60" y="1023.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (783,832,319 samples, 0.29%)</title><rect x="549.0" y="1301" width="3.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="552.00" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (29,302,367 samples, 0.01%)</title><rect x="821.3" y="1093" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="824.35" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (90,162,838 samples, 0.03%)</title><rect x="719.9" y="1237" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="722.95" y="1247.5" ></text>
</g>
<g >
<title>epoll_ctl (60,761,096 samples, 0.02%)</title><rect x="577.0" y="1317" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="580.01" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (198,595,006 samples, 0.07%)</title><rect x="63.2" y="1093" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.15" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (26,917,433 samples, 0.01%)</title><rect x="1003.7" y="1221" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1006.70" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,926,752 samples, 0.02%)</title><rect x="684.0" y="949" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="686.99" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (27,576,608 samples, 0.01%)</title><rect x="803.6" y="1045" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="806.57" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (25,393,847 samples, 0.01%)</title><rect x="556.9" y="1397" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1407.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::AddChannel (111,726,425 samples, 0.04%)</title><rect x="272.0" y="1493" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="275.03" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (65,956,758 samples, 0.02%)</title><rect x="293.4" y="1669" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="296.40" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (34,900,296 samples, 0.01%)</title><rect x="966.3" y="629" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="969.32" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_any_matcher_ecma&lt;false, false&gt; (27,093,212 samples, 0.01%)</title><rect x="154.3" y="1141" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="157.32" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (81,803,533 samples, 0.03%)</title><rect x="118.3" y="1141" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.30" y="1151.5" ></text>
</g>
<g >
<title>loopthread6 (32,167,915,906 samples, 12.05%)</title><rect x="858.7" y="1701" width="142.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="861.67" y="1711.5" >loopthread6</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Executor (43,305,958 samples, 0.02%)</title><rect x="911.2" y="1333" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="914.22" y="1343.5" ></text>
</g>
<g >
<title>__stpncpy_avx2 (302,460,112 samples, 0.11%)</title><rect x="707.6" y="1653" width="1.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="710.61" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (75,084,874 samples, 0.03%)</title><rect x="435.5" y="1173" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="438.51" y="1183.5" ></text>
</g>
<g >
<title>x64_sys_call (31,749,261 samples, 0.01%)</title><rect x="837.2" y="1493" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="840.16" y="1503.5" ></text>
</g>
<g >
<title>[web-server] (31,301,527 samples, 0.01%)</title><rect x="1058.6" y="933" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1061.64" y="943.5" ></text>
</g>
<g >
<title>inet_recvmsg (49,693,897 samples, 0.02%)</title><rect x="1113.3" y="1301" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1116.26" y="1311.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (226,719,417 samples, 0.08%)</title><rect x="459.7" y="1029" width="1.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="462.74" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (238,151,099 samples, 0.09%)</title><rect x="63.1" y="1221" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.09" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (31,653,351 samples, 0.01%)</title><rect x="540.2" y="1093" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="543.22" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (31,709,418 samples, 0.01%)</title><rect x="942.8" y="1029" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="945.82" y="1039.5" ></text>
</g>
<g >
<title>eventfd_write (244,740,379 samples, 0.09%)</title><rect x="1154.8" y="1141" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1157.78" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (24,929,266 samples, 0.01%)</title><rect x="838.6" y="1429" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1439.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (310,941,817 samples, 0.12%)</title><rect x="360.0" y="949" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="362.98" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (43,239,133 samples, 0.02%)</title><rect x="788.6" y="1141" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="791.60" y="1151.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (223,415,393 samples, 0.08%)</title><rect x="73.2" y="885" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="76.17" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (58,225,567 samples, 0.02%)</title><rect x="944.2" y="1013" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="947.15" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,792,329,806 samples, 1.42%)</title><rect x="930.6" y="1157" width="16.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="933.57" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (30,091,795 samples, 0.01%)</title><rect x="506.5" y="1045" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="509.46" y="1055.5" ></text>
</g>
<g >
<title>net_rx_action (30,480,432 samples, 0.01%)</title><rect x="585.6" y="1013" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="588.58" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (126,555,469 samples, 0.05%)</title><rect x="358.2" y="901" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="361.23" y="911.5" ></text>
</g>
<g >
<title>epoll_ctl (49,984,742 samples, 0.02%)</title><rect x="555.0" y="1461" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="558.04" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (32,543,417 samples, 0.01%)</title><rect x="537.6" y="1029" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="540.62" y="1039.5" ></text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (126,157,942 samples, 0.05%)</title><rect x="978.6" y="1557" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="981.62" y="1567.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (69,379,257 samples, 0.03%)</title><rect x="1088.6" y="1093" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1091.61" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (47,357,563 samples, 0.02%)</title><rect x="81.5" y="1189" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="84.53" y="1199.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (52,065,304 samples, 0.02%)</title><rect x="62.0" y="1173" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="65.02" y="1183.5" ></text>
</g>
<g >
<title>__d_instantiate (30,927,099 samples, 0.01%)</title><rect x="1176.8" y="1301" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1179.79" y="1311.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::AddChannel (112,224,907 samples, 0.04%)</title><rect x="272.0" y="1509" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="275.03" y="1519.5" ></text>
</g>
<g >
<title>_int_malloc (39,758,207 samples, 0.01%)</title><rect x="570.7" y="1685" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="573.72" y="1695.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (75,367,675 samples, 0.03%)</title><rect x="51.1" y="1093" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="54.13" y="1103.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (25,283,174 samples, 0.01%)</title><rect x="461.4" y="997" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="464.43" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,502,348 samples, 0.01%)</title><rect x="555.4" y="1525" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="558.38" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,924,240 samples, 0.01%)</title><rect x="824.1" y="485" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.08" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (38,666,863 samples, 0.01%)</title><rect x="696.2" y="1397" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="699.20" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,699,988 samples, 0.01%)</title><rect x="63.7" y="261" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.72" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (119,842,284 samples, 0.04%)</title><rect x="910.1" y="1381" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="913.09" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (170,832,606 samples, 0.06%)</title><rect x="1054.3" y="981" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.35" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,758,172,493 samples, 1.41%)</title><rect x="224.2" y="1173" width="16.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="227.22" y="1183.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (41,042,370 samples, 0.02%)</title><rect x="413.6" y="1557" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="416.56" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (10,258,396,124 samples, 3.84%)</title><rect x="437.9" y="1141" width="45.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="440.91" y="1151.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (23,056,829 samples, 0.01%)</title><rect x="1078.4" y="981" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1081.45" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (33,806,552 samples, 0.01%)</title><rect x="258.4" y="1205" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="261.39" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,415,345 samples, 0.02%)</title><rect x="63.7" y="549" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.68" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (31,958,630 samples, 0.01%)</title><rect x="259.9" y="501" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="262.91" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,548,996 samples, 0.01%)</title><rect x="63.3" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.25" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (22,647,725 samples, 0.01%)</title><rect x="892.6" y="1045" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="895.62" y="1055.5" ></text>
</g>
<g >
<title>nf_conntrack_in (23,151,826 samples, 0.01%)</title><rect x="833.2" y="853" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="836.21" y="863.5" ></text>
</g>
<g >
<title>irq_exit_rcu (24,934,780 samples, 0.01%)</title><rect x="993.6" y="1605" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="996.58" y="1615.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (95,074,924 samples, 0.04%)</title><rect x="172.0" y="1077" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="175.00" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_end (77,205,182 samples, 0.03%)</title><rect x="577.6" y="1189" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="580.63" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,929,586,974 samples, 1.47%)</title><rect x="489.5" y="1253" width="17.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.49" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,452,446,288 samples, 4.29%)</title><rect x="153.4" y="1365" width="50.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="156.44" y="1375.5" >std::..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (26,325,000 samples, 0.01%)</title><rect x="626.5" y="1237" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="629.47" y="1247.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (41,576,151 samples, 0.02%)</title><rect x="919.4" y="933" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="922.43" y="943.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (71,559,849 samples, 0.03%)</title><rect x="1038.8" y="1045" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1041.84" y="1055.5" ></text>
</g>
<g >
<title>ip_output (55,586,224 samples, 0.02%)</title><rect x="693.0" y="901" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="696.02" y="911.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (25,412,999 samples, 0.01%)</title><rect x="289.7" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="292.74" y="1663.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (104,167,366 samples, 0.04%)</title><rect x="819.2" y="1061" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="822.19" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (62,368,973 samples, 0.02%)</title><rect x="1046.6" y="1077" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1049.60" y="1087.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (122,189,916 samples, 0.05%)</title><rect x="613.7" y="1061" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="616.73" y="1071.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (52,049,227 samples, 0.02%)</title><rect x="542.7" y="1333" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="545.66" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (66,562,274 samples, 0.02%)</title><rect x="769.5" y="1237" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="772.46" y="1247.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (25,683,997 samples, 0.01%)</title><rect x="124.5" y="1157" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="127.47" y="1167.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (79,780,988 samples, 0.03%)</title><rect x="779.9" y="885" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="782.87" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (31,478,357 samples, 0.01%)</title><rect x="811.3" y="1013" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="814.32" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (25,149,112 samples, 0.01%)</title><rect x="1078.3" y="981" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1081.34" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (213,358,310 samples, 0.08%)</title><rect x="347.2" y="1061" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.19" y="1071.5" ></text>
</g>
<g >
<title>vfs_open (26,337,991 samples, 0.01%)</title><rect x="1124.9" y="1541" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1127.90" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (57,744,829 samples, 0.02%)</title><rect x="684.0" y="869" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="687.00" y="879.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (226,663,771 samples, 0.08%)</title><rect x="481.5" y="1125" width="1.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="484.48" y="1135.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (64,618,611 samples, 0.02%)</title><rect x="215.9" y="821" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="218.92" y="831.5" ></text>
</g>
<g >
<title>tcp_send_fin (169,267,629 samples, 0.06%)</title><rect x="833.0" y="1013" width="0.8" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="836.03" y="1023.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (24,319,641,414 samples, 9.11%)</title><rect x="153.3" y="1413" width="107.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="156.33" y="1423.5" >HttpRequest::..</text>
</g>
<g >
<title>HttpResponse::SetHeader (34,833,109 samples, 0.01%)</title><rect x="967.9" y="1381" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="970.88" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1,014,453,247 samples, 0.38%)</title><rect x="872.8" y="1077" width="4.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="875.78" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (81,201,518 samples, 0.03%)</title><rect x="656.0" y="997" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="659.00" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (73,205,054 samples, 0.03%)</title><rect x="28.4" y="1013" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="31.42" y="1023.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (25,998,538 samples, 0.01%)</title><rect x="1112.4" y="1253" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1115.37" y="1263.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (25,303,244 samples, 0.01%)</title><rect x="750.3" y="1061" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="753.26" y="1071.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (26,639,653 samples, 0.01%)</title><rect x="578.8" y="1077" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="581.76" y="1087.5" ></text>
</g>
<g >
<title>__sock_release (176,156,765 samples, 0.07%)</title><rect x="126.9" y="1077" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="129.90" y="1087.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (159,093,833 samples, 0.06%)</title><rect x="700.3" y="1637" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="703.31" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (85,942,062 samples, 0.03%)</title><rect x="953.0" y="1013" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="955.98" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (78,546,887 samples, 0.03%)</title><rect x="479.4" y="1093" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="482.42" y="1103.5" ></text>
</g>
<g >
<title>[web-server] (23,358,178 samples, 0.01%)</title><rect x="441.6" y="1093" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="444.56" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (55,977,104 samples, 0.02%)</title><rect x="484.4" y="1173" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="487.38" y="1183.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (47,165,054 samples, 0.02%)</title><rect x="925.7" y="901" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="928.66" y="911.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (1,640,435,443 samples, 0.61%)</title><rect x="1113.7" y="1461" width="7.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1116.66" y="1471.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (44,906,312 samples, 0.02%)</title><rect x="1052.5" y="1301" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1055.49" y="1311.5" ></text>
</g>
<g >
<title>net_rx_action (38,774,307 samples, 0.01%)</title><rect x="831.4" y="917" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="834.42" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,250,519 samples, 0.01%)</title><rect x="770.7" y="293" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.74" y="303.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (24,981,029 samples, 0.01%)</title><rect x="888.2" y="1045" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="891.17" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (203,575,108 samples, 0.08%)</title><rect x="205.4" y="1061" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.43" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,258,068 samples, 0.01%)</title><rect x="487.9" y="533" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.93" y="543.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (33,825,760 samples, 0.01%)</title><rect x="463.3" y="965" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="466.28" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (28,190,333 samples, 0.01%)</title><rect x="663.5" y="1061" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="666.50" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (180,542,281 samples, 0.07%)</title><rect x="347.2" y="869" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.25" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_read (82,701,502 samples, 0.03%)</title><rect x="1113.2" y="1381" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1116.15" y="1391.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (61,850,799 samples, 0.02%)</title><rect x="1018.6" y="997" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1021.62" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (84,826,535 samples, 0.03%)</title><rect x="301.9" y="1093" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="304.93" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,170,031 samples, 0.01%)</title><rect x="1054.7" y="469" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.67" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (61,304,613 samples, 0.02%)</title><rect x="689.3" y="1269" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="692.32" y="1279.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (69,608,873 samples, 0.03%)</title><rect x="857.9" y="1653" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="860.90" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (55,885,696 samples, 0.02%)</title><rect x="770.7" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.67" y="783.5" ></text>
</g>
<g >
<title>operator new[] (35,601,440 samples, 0.01%)</title><rect x="839.6" y="1653" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="842.58" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (64,748,749 samples, 0.02%)</title><rect x="679.3" y="1045" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="682.25" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (47,854,012 samples, 0.02%)</title><rect x="347.3" y="629" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.28" y="639.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (70,236,914 samples, 0.03%)</title><rect x="801.4" y="1029" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="804.39" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (27,213,500 samples, 0.01%)</title><rect x="795.7" y="1045" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="798.71" y="1055.5" ></text>
</g>
<g >
<title>do_epoll_ctl (38,826,411 samples, 0.01%)</title><rect x="577.1" y="1237" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="580.05" y="1247.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (102,818,923 samples, 0.04%)</title><rect x="881.3" y="1029" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="884.29" y="1039.5" ></text>
</g>
<g >
<title>std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, TimerManager::TimerCmp&gt; (33,173,754 samples, 0.01%)</title><rect x="555.6" y="1525" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="558.63" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (34,392,378 samples, 0.01%)</title><rect x="81.5" y="1109" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="84.54" y="1119.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (117,924,904 samples, 0.04%)</title><rect x="833.1" y="965" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="836.13" y="975.5" ></text>
</g>
<g >
<title>x64_sys_call (305,308,825 samples, 0.11%)</title><rect x="409.0" y="1157" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="412.04" y="1167.5" ></text>
</g>
<g >
<title>ip_queue_xmit (101,226,762 samples, 0.04%)</title><rect x="1117.6" y="949" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1120.62" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,821,699,207 samples, 1.43%)</title><rect x="82.0" y="1141" width="16.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="85.01" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (48,285,424 samples, 0.02%)</title><rect x="119.5" y="1365" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="122.50" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,887,666 samples, 0.02%)</title><rect x="1054.4" y="693" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.41" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,906,444 samples, 0.01%)</title><rect x="979.2" y="1525" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="982.20" y="1535.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (131,564,758 samples, 0.05%)</title><rect x="765.3" y="1125" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="768.29" y="1135.5" ></text>
</g>
<g >
<title>tcp_sendmsg (406,445,670 samples, 0.15%)</title><rect x="411.1" y="1269" width="1.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="414.06" y="1279.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (58,895,711 samples, 0.02%)</title><rect x="259.3" y="1349" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="262.30" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (162,769,683 samples, 0.06%)</title><rect x="1054.4" y="901" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.37" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (27,054,008 samples, 0.01%)</title><rect x="347.8" y="197" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="350.77" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (85,211,046 samples, 0.03%)</title><rect x="941.6" y="1013" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="944.56" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (196,930,109 samples, 0.07%)</title><rect x="629.4" y="1013" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.43" y="1023.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (241,130,838 samples, 0.09%)</title><rect x="73.1" y="901" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="76.09" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,747,740,120 samples, 1.40%)</title><rect x="382.5" y="1157" width="16.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="385.48" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (29,936,589 samples, 0.01%)</title><rect x="943.8" y="1045" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="946.77" y="1055.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (27,465,902,188 samples, 10.29%)</title><rect x="434.6" y="1685" width="121.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="437.60" y="1695.5" >[libstdc++.so.6..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,678,285 samples, 0.03%)</title><rect x="966.2" y="1253" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.24" y="1263.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (126,149,060 samples, 0.05%)</title><rect x="639.5" y="837" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="642.51" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (28,039,906 samples, 0.01%)</title><rect x="960.8" y="1029" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="963.83" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,827,627,657 samples, 1.43%)</title><rect x="64.8" y="1205" width="16.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="67.83" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (51,818,385 samples, 0.02%)</title><rect x="347.7" y="485" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.74" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (36,194,842 samples, 0.01%)</title><rect x="807.6" y="1093" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="810.63" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (44,977,560 samples, 0.02%)</title><rect x="81.5" y="1173" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="84.53" y="1183.5" ></text>
</g>
<g >
<title>tcp_write_xmit (223,249,600 samples, 0.08%)</title><rect x="835.3" y="1205" width="1.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="838.30" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (42,608,116 samples, 0.02%)</title><rect x="543.7" y="1397" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="546.67" y="1407.5" ></text>
</g>
<g >
<title>security_socket_accept (70,194,418 samples, 0.03%)</title><rect x="1172.2" y="1349" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1175.17" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (24,296,100 samples, 0.01%)</title><rect x="380.2" y="1061" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="383.22" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (77,900,294 samples, 0.03%)</title><rect x="1001.7" y="1125" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1004.74" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (32,304,021 samples, 0.01%)</title><rect x="205.8" y="597" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.78" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (891,178,871 samples, 0.33%)</title><rect x="830.1" y="1237" width="3.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="833.10" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (205,744,494 samples, 0.08%)</title><rect x="86.8" y="1013" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="89.81" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (78,300,810 samples, 0.03%)</title><rect x="1108.5" y="1221" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.54" y="1231.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (218,606,270 samples, 0.08%)</title><rect x="1081.4" y="1013" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1084.38" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (2,048,459,840 samples, 0.77%)</title><rect x="243.8" y="1093" width="9.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="246.77" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,741,273 samples, 0.01%)</title><rect x="684.1" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.05" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,745,318,477 samples, 1.40%)</title><rect x="507.0" y="1125" width="16.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="510.04" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,148,075 samples, 0.02%)</title><rect x="347.3" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.28" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (54,979,440 samples, 0.02%)</title><rect x="770.7" y="709" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.67" y="719.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (79,087,273 samples, 0.03%)</title><rect x="214.2" y="917" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="217.17" y="927.5" ></text>
</g>
<g >
<title>__ip_local_out (34,520,315 samples, 0.01%)</title><rect x="551.8" y="901" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="554.76" y="911.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (127,252,490 samples, 0.05%)</title><rect x="190.7" y="1045" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="193.66" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,106,278 samples, 0.02%)</title><rect x="118.3" y="1029" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.33" y="1039.5" ></text>
</g>
<g >
<title>kmem_cache_free (28,567,766 samples, 0.01%)</title><rect x="1165.5" y="1285" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1168.49" y="1295.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (27,117,925 samples, 0.01%)</title><rect x="1109.3" y="1365" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1112.32" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (30,193,181 samples, 0.01%)</title><rect x="540.4" y="1093" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="543.36" y="1103.5" ></text>
</g>
<g >
<title>ip_output (53,462,837 samples, 0.02%)</title><rect x="833.4" y="901" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="836.39" y="911.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (94,706,832 samples, 0.04%)</title><rect x="113.1" y="1061" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="116.14" y="1071.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, long, std::shared_ptr&lt;TimerManager::TimerNode&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (23,823,998 samples, 0.01%)</title><rect x="696.8" y="1493" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="699.76" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (328,039,079 samples, 0.12%)</title><rect x="324.0" y="1045" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="326.95" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (81,698,009 samples, 0.03%)</title><rect x="824.0" y="1045" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.01" y="1055.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (133,375,791 samples, 0.05%)</title><rect x="692.8" y="997" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="695.83" y="1007.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (36,110,371 samples, 0.01%)</title><rect x="719.1" y="1045" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="722.07" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (49,866,774 samples, 0.02%)</title><rect x="908.7" y="1301" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="911.72" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,749,274,059 samples, 3.65%)</title><rect x="438.4" y="1125" width="43.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="441.40" y="1135.5" >std:..</text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (52,848,212 samples, 0.02%)</title><rect x="860.7" y="1157" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="863.72" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (192,796,404 samples, 0.07%)</title><rect x="911.6" y="1029" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.57" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (78,501,758 samples, 0.03%)</title><rect x="718.9" y="1205" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="721.93" y="1215.5" ></text>
</g>
<g >
<title>std::function&lt;void  (950,722,404 samples, 0.36%)</title><rect x="830.0" y="1413" width="4.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="832.96" y="1423.5" ></text>
</g>
<g >
<title>net_rx_action (40,866,683 samples, 0.02%)</title><rect x="973.7" y="917" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="976.69" y="927.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (127,014,047 samples, 0.05%)</title><rect x="1103.4" y="1077" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1106.35" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (235,527,856 samples, 0.09%)</title><rect x="110.1" y="1077" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="113.09" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (29,853,447 samples, 0.01%)</title><rect x="1070.6" y="949" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1073.63" y="959.5" ></text>
</g>
<g >
<title>__libc_start_call_main (10,033,016,653 samples, 3.76%)</title><rect x="1143.7" y="1685" width="44.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1146.70" y="1695.5" >__li..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,925,361 samples, 0.01%)</title><rect x="118.4" y="645" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.37" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (133,208,680 samples, 0.05%)</title><rect x="782.4" y="917" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="785.40" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,808,188,445 samples, 1.43%)</title><rect x="489.5" y="1173" width="16.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.50" y="1183.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Channel&gt; &gt;::construct&lt;Channel, int&amp;&gt; (36,992,336 samples, 0.01%)</title><rect x="1160.6" y="1205" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1163.58" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (100,316,792 samples, 0.04%)</title><rect x="543.1" y="1317" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="546.13" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (10,249,908,554 samples, 3.84%)</title><rect x="580.0" y="1157" width="45.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="582.97" y="1167.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,763,518,737 samples, 1.41%)</title><rect x="489.6" y="1141" width="16.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="492.60" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (58,408,422 samples, 0.02%)</title><rect x="578.7" y="1205" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="581.66" y="1215.5" ></text>
</g>
<g >
<title>x64_sys_call (324,343,686 samples, 0.12%)</title><rect x="832.5" y="1157" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="835.52" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (81,131,297 samples, 0.03%)</title><rect x="18.1" y="1093" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="21.13" y="1103.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (12,222,332,173 samples, 4.58%)</title><rect x="64.7" y="1397" width="54.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="67.75" y="1407.5" >HttpR..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,951,836,522 samples, 1.48%)</title><rect x="665.2" y="1221" width="17.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="668.23" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::~_BracketMatcher (24,984,205 samples, 0.01%)</title><rect x="58.7" y="1157" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="61.66" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,421,337,733 samples, 1.28%)</title><rect x="789.3" y="1093" width="15.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="792.34" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,174,099,720 samples, 4.18%)</title><rect x="153.5" y="1333" width="49.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="156.51" y="1343.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,445,436 samples, 0.02%)</title><rect x="1108.6" y="645" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.61" y="655.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (24,370,246 samples, 0.01%)</title><rect x="1030.5" y="1045" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1033.52" y="1055.5" ></text>
</g>
<g >
<title>std::function&lt;void  (869,843,041 samples, 0.33%)</title><rect x="265.8" y="1413" width="3.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="268.77" y="1423.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;false&gt;::__uninit_default_n&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long&gt; (24,665,652 samples, 0.01%)</title><rect x="487.6" y="1253" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="490.56" y="1263.5" ></text>
</g>
<g >
<title>ip_queue_xmit (150,173,412 samples, 0.06%)</title><rect x="1119.8" y="1173" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1122.77" y="1183.5" ></text>
</g>
<g >
<title>do_syscall_64 (106,329,263 samples, 0.04%)</title><rect x="840.3" y="1637" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="843.26" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (117,805,516 samples, 0.04%)</title><rect x="296.1" y="1253" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="299.14" y="1263.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (764,941,924 samples, 0.29%)</title><rect x="549.1" y="1237" width="3.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="552.06" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (2,168,063,233 samples, 0.81%)</title><rect x="739.8" y="1077" width="9.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="742.83" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+= (44,278,647 samples, 0.02%)</title><rect x="472.2" y="1029" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="475.21" y="1039.5" ></text>
</g>
<g >
<title>Channel::OnEvents (26,972,031,015 samples, 10.10%)</title><rect x="152.8" y="1557" width="119.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="155.82" y="1567.5" >Channel::OnEve..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,700,677,992 samples, 4.01%)</title><rect x="579.5" y="1269" width="47.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="582.48" y="1279.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,899,664 samples, 0.01%)</title><rect x="911.7" y="133" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.66" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (104,529,966 samples, 0.04%)</title><rect x="921.0" y="901" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="924.02" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (30,413,128 samples, 0.01%)</title><rect x="347.8" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.76" y="287.5" ></text>
</g>
<g >
<title>sock_read_iter (66,725,677 samples, 0.02%)</title><rect x="123.1" y="1333" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="126.05" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (119,735,055 samples, 0.04%)</title><rect x="675.3" y="1045" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="678.34" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::construct&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (22,689,205 samples, 0.01%)</title><rect x="768.8" y="1221" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="771.77" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (97,319,782 samples, 0.04%)</title><rect x="295.5" y="1189" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="298.52" y="1199.5" ></text>
</g>
<g >
<title>ip_local_deliver (23,511,693 samples, 0.01%)</title><rect x="856.8" y="1445" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="859.80" y="1455.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (114,797,957 samples, 0.04%)</title><rect x="1117.6" y="965" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1120.58" y="975.5" ></text>
</g>
<g >
<title>[unknown] (44,102,819 samples, 0.02%)</title><rect x="846.9" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="849.88" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,753,872,096 samples, 1.41%)</title><rect x="82.1" y="1125" width="16.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="85.10" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (32,546,844 samples, 0.01%)</title><rect x="253.7" y="1061" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="256.67" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (260,953,311 samples, 0.10%)</title><rect x="952.6" y="1061" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="955.58" y="1071.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (40,120,584 samples, 0.02%)</title><rect x="909.6" y="1317" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="912.61" y="1327.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (23,326,596 samples, 0.01%)</title><rect x="354.0" y="853" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="356.95" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,427,688,949 samples, 1.28%)</title><rect x="82.6" y="1077" width="15.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="85.57" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (1,907,891,084 samples, 0.71%)</title><rect x="351.3" y="949" width="8.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="354.35" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (61,594,151 samples, 0.02%)</title><rect x="767.0" y="1189" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="770.04" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (270,318,511 samples, 0.10%)</title><rect x="770.5" y="1269" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="773.50" y="1279.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,000,556 samples, 0.01%)</title><rect x="270.3" y="1141" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="273.33" y="1151.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (234,694,789 samples, 0.09%)</title><rect x="390.8" y="1029" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="393.79" y="1039.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (83,780,680 samples, 0.03%)</title><rect x="171.6" y="1077" width="0.4" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="174.63" y="1087.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (29,924,927 samples, 0.01%)</title><rect x="659.0" y="981" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="662.03" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (39,966,825 samples, 0.01%)</title><rect x="1108.6" y="629" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1111.61" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (212,252,548 samples, 0.08%)</title><rect x="35.4" y="1029" width="1.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="38.44" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,172,554 samples, 0.01%)</title><rect x="259.9" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.93" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (23,317,455 samples, 0.01%)</title><rect x="908.4" y="1189" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="911.39" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (53,919,698 samples, 0.02%)</title><rect x="347.7" y="597" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.74" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,053,984 samples, 0.01%)</title><rect x="824.1" y="421" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="827.08" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (22,998,471 samples, 0.01%)</title><rect x="115.3" y="1077" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="118.34" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (803,618,590 samples, 0.30%)</title><rect x="672.4" y="1077" width="3.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="675.37" y="1087.5" ></text>
</g>
<g >
<title>mas_store_gfp (41,192,868 samples, 0.02%)</title><rect x="1115.4" y="1061" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1118.42" y="1071.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (480,045,853 samples, 0.18%)</title><rect x="976.5" y="1429" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="979.45" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (126,900,538 samples, 0.05%)</title><rect x="1149.4" y="1381" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1152.35" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (86,232,113 samples, 0.03%)</title><rect x="1002.2" y="1205" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1005.17" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (154,985,066 samples, 0.06%)</title><rect x="879.1" y="1077" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="882.06" y="1087.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (786,295,936 samples, 0.29%)</title><rect x="549.0" y="1317" width="3.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="552.00" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (42,078,686 samples, 0.02%)</title><rect x="1016.3" y="1061" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1019.33" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,783,393,679 samples, 1.42%)</title><rect x="224.2" y="1205" width="16.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="227.16" y="1215.5" ></text>
</g>
<g >
<title>sock_write_iter (396,507,272 samples, 0.15%)</title><rect x="1119.0" y="1301" width="1.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1122.01" y="1311.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (30,972,793 samples, 0.01%)</title><rect x="1110.7" y="1237" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1113.69" y="1247.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (181,948,967 samples, 0.07%)</title><rect x="896.1" y="1061" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="899.14" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (1,884,021,976 samples, 0.71%)</title><rect x="1058.4" y="949" width="8.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1061.38" y="959.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (64,520,256 samples, 0.02%)</title><rect x="1115.8" y="1029" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1118.83" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (22,643,090 samples, 0.01%)</title><rect x="608.9" y="1061" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="611.92" y="1071.5" ></text>
</g>
<g >
<title>x64_sys_call (315,825,750 samples, 0.12%)</title><rect x="266.4" y="1141" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="269.44" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,588,813,035 samples, 3.97%)</title><rect x="1003.9" y="1205" width="46.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1006.86" y="1215.5" >std:..</text>
</g>
<g >
<title>handle_softirqs (27,348,219 samples, 0.01%)</title><rect x="425.7" y="1573" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="428.72" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (23,348,958 samples, 0.01%)</title><rect x="973.7" y="725" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="976.72" y="735.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (40,997,177 samples, 0.02%)</title><rect x="1161.9" y="1349" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1164.91" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (86,181,607 samples, 0.03%)</title><rect x="400.7" y="1253" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.69" y="1263.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (62,158,294 samples, 0.02%)</title><rect x="830.5" y="1125" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="833.50" y="1135.5" ></text>
</g>
<g >
<title>mmap_region (144,048,122 samples, 0.05%)</title><rect x="969.1" y="1269" width="0.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="972.11" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (51,085,504 samples, 0.02%)</title><rect x="12.1" y="1157" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="15.14" y="1167.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (154,948,839 samples, 0.06%)</title><rect x="321.9" y="949" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="324.86" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (27,013,444 samples, 0.01%)</title><rect x="238.5" y="1061" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="241.50" y="1071.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (34,796,852 samples, 0.01%)</title><rect x="975.5" y="837" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="978.54" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (81,587,822 samples, 0.03%)</title><rect x="478.4" y="1093" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="481.41" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (109,339,805 samples, 0.04%)</title><rect x="345.8" y="1381" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="348.83" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (44,926,520 samples, 0.02%)</title><rect x="809.7" y="1077" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="812.72" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::base (27,791,073 samples, 0.01%)</title><rect x="1009.4" y="1077" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1012.39" y="1087.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (475,780,706 samples, 0.18%)</title><rect x="191.5" y="1093" width="2.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="194.54" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (61,926,752 samples, 0.02%)</title><rect x="684.0" y="933" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="686.99" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (343,796,970 samples, 0.13%)</title><rect x="747.7" y="1045" width="1.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="750.74" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (37,396,667 samples, 0.01%)</title><rect x="578.2" y="1157" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="581.17" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (55,432,918 samples, 0.02%)</title><rect x="59.6" y="1141" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="62.56" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (82,945,488 samples, 0.03%)</title><rect x="761.9" y="1077" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="764.94" y="1087.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (26,616,000 samples, 0.01%)</title><rect x="1170.6" y="1093" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1173.58" y="1103.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (282,716,517 samples, 0.11%)</title><rect x="551.1" y="1189" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="554.14" y="1199.5" ></text>
</g>
<g >
<title>EventLoop::AddChannel (115,735,295 samples, 0.04%)</title><rect x="978.6" y="1477" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="981.64" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (200,169,691 samples, 0.07%)</title><rect x="1065.8" y="933" width="0.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1068.82" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (31,710,876 samples, 0.01%)</title><rect x="503.7" y="949" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="506.74" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (42,475,900 samples, 0.02%)</title><rect x="916.9" y="933" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="919.90" y="943.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (383,763,029 samples, 0.14%)</title><rect x="42.7" y="1061" width="1.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="45.70" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (39,589,286 samples, 0.01%)</title><rect x="672.7" y="1029" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="675.73" y="1039.5" ></text>
</g>
<g >
<title>osq_lock (59,372,677 samples, 0.02%)</title><rect x="827.5" y="1253" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="830.51" y="1263.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (339,309,002 samples, 0.13%)</title><rect x="677.2" y="1093" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="680.19" y="1103.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (28,458,721 samples, 0.01%)</title><rect x="1058.2" y="933" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1061.23" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,595,134 samples, 0.01%)</title><rect x="1108.6" y="549" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.63" y="559.5" ></text>
</g>
<g >
<title>netvsc_poll (29,660,140 samples, 0.01%)</title><rect x="267.0" y="885" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="270.01" y="895.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (35,677,873 samples, 0.01%)</title><rect x="691.1" y="949" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="694.14" y="959.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (27,412,966,371 samples, 10.27%)</title><rect x="1000.9" y="1589" width="121.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1003.91" y="1599.5" >EventLoopThread..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (55,226,420 samples, 0.02%)</title><rect x="296.7" y="1269" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="299.70" y="1279.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (112,408,621 samples, 0.04%)</title><rect x="204.1" y="1317" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="207.10" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,706,494,897 samples, 4.01%)</title><rect x="13.0" y="1269" width="47.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="15.96" y="1279.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (102,322,649 samples, 0.04%)</title><rect x="246.4" y="1013" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="249.36" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,806,714 samples, 0.01%)</title><rect x="543.2" y="645" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.25" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (48,028,544 samples, 0.02%)</title><rect x="347.7" y="469" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.75" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (198,125,340 samples, 0.07%)</title><rect x="69.6" y="901" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="72.63" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (446,714,969 samples, 0.17%)</title><rect x="718.8" y="1285" width="2.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="721.79" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (10,247,745,828 samples, 3.84%)</title><rect x="1004.3" y="1141" width="45.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1007.30" y="1151.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,386,378,200 samples, 4.26%)</title><rect x="718.7" y="1349" width="50.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="721.72" y="1359.5" >std::..</text>
</g>
<g >
<title>path_openat (74,612,333 samples, 0.03%)</title><rect x="840.3" y="1557" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="843.30" y="1567.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::base (24,377,360 samples, 0.01%)</title><rect x="302.9" y="1077" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="305.94" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (76,336,263 samples, 0.03%)</title><rect x="196.7" y="1077" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="199.66" y="1087.5" ></text>
</g>
<g >
<title>handle_softirqs (24,934,780 samples, 0.01%)</title><rect x="993.6" y="1573" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="996.58" y="1583.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (60,902,654 samples, 0.02%)</title><rect x="500.3" y="885" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="503.28" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (53,915,514 samples, 0.02%)</title><rect x="1079.3" y="1045" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1082.33" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,309,256 samples, 0.01%)</title><rect x="347.3" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.29" y="431.5" ></text>
</g>
<g >
<title>x64_sys_call (447,572,027 samples, 0.17%)</title><rect x="1118.9" y="1397" width="1.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1121.87" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,347,424,929 samples, 3.50%)</title><rect x="298.8" y="1109" width="41.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="301.78" y="1119.5" >std..</text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (30,647,493 samples, 0.01%)</title><rect x="953.8" y="1077" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="956.83" y="1087.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (99,401,712 samples, 0.04%)</title><rect x="975.3" y="965" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="978.32" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (110,908,036 samples, 0.04%)</title><rect x="577.5" y="1237" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="580.52" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,620,234 samples, 0.02%)</title><rect x="118.4" y="821" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.35" y="831.5" ></text>
</g>
<g >
<title>HttpResponse::~HttpResponse (35,879,289 samples, 0.01%)</title><rect x="830.2" y="1189" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="833.25" y="1199.5" ></text>
</g>
<g >
<title>thp_get_unmapped_area (27,505,087 samples, 0.01%)</title><rect x="969.0" y="1253" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="971.98" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_resize (29,132,875 samples, 0.01%)</title><rect x="1053.9" y="1333" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1056.86" y="1343.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (40,883,532 samples, 0.02%)</title><rect x="259.4" y="1189" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="262.37" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (10,423,674,779 samples, 3.90%)</title><rect x="13.3" y="1173" width="46.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="16.25" y="1183.5" >std:..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_end (78,217,492 samples, 0.03%)</title><rect x="859.6" y="1189" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="862.62" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,197,203 samples, 0.01%)</title><rect x="63.5" y="581" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.50" y="591.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (68,763,327 samples, 0.03%)</title><rect x="886.7" y="933" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="889.68" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (73,765,422 samples, 0.03%)</title><rect x="259.8" y="1157" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="262.83" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (34,321,758 samples, 0.01%)</title><rect x="911.6" y="485" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.63" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (59,828,437 samples, 0.02%)</title><rect x="684.0" y="917" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="686.99" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (348,136,983 samples, 0.13%)</title><rect x="776.3" y="933" width="1.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="779.29" y="943.5" ></text>
</g>
<g >
<title>__strlen_avx2 (209,218,969 samples, 0.08%)</title><rect x="984.0" y="1669" width="0.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="986.98" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (250,844,047 samples, 0.09%)</title><rect x="11.0" y="1253" width="1.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.97" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (10,582,366,318 samples, 3.96%)</title><rect x="437.5" y="1189" width="46.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="440.49" y="1199.5" >std:..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (61,589,795 samples, 0.02%)</title><rect x="376.1" y="997" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="379.13" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_writev (437,135,883 samples, 0.16%)</title><rect x="552.8" y="1381" width="2.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="555.85" y="1391.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (28,182,112 samples, 0.01%)</title><rect x="1114.3" y="1285" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1117.31" y="1295.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (11,806,145,023 samples, 4.42%)</title><rect x="772.3" y="1397" width="52.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="775.29" y="1407.5" >HttpR..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::DelChannel (155,085,396 samples, 0.06%)</title><rect x="123.5" y="1333" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="126.53" y="1343.5" ></text>
</g>
<g >
<title>std::function&lt;void  (25,344,465,824 samples, 9.49%)</title><rect x="152.9" y="1525" width="112.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="155.86" y="1535.5" >std::function..</text>
</g>
<g >
<title>EventLoop::DelChannel (161,154,431 samples, 0.06%)</title><rect x="971.4" y="1317" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="974.44" y="1327.5" ></text>
</g>
<g >
<title>x64_sys_call (45,836,239 samples, 0.02%)</title><rect x="577.0" y="1269" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="580.04" y="1279.5" ></text>
</g>
<g >
<title>ip_queue_xmit (106,207,390 samples, 0.04%)</title><rect x="409.6" y="949" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="412.63" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (145,540,219 samples, 0.05%)</title><rect x="338.1" y="1093" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="341.09" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (111,503,460 samples, 0.04%)</title><rect x="815.7" y="1045" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="818.68" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,410,148 samples, 0.01%)</title><rect x="911.7" y="181" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.65" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_openat (100,647,116 samples, 0.04%)</title><rect x="840.3" y="1605" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="843.28" y="1615.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (50,757,106 samples, 0.02%)</title><rect x="837.1" y="1557" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="840.14" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,207,249 samples, 0.01%)</title><rect x="63.5" y="565" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.51" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (40,849,673 samples, 0.02%)</title><rect x="598.8" y="1061" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="601.80" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (48,382,514 samples, 0.02%)</title><rect x="770.7" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.69" y="623.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (54,819,980 samples, 0.02%)</title><rect x="11.2" y="1077" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="14.17" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (2,042,036,413 samples, 0.76%)</title><rect x="950.3" y="1093" width="9.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="953.32" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (76,445,087 samples, 0.03%)</title><rect x="859.6" y="1173" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="862.63" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (71,414,178 samples, 0.03%)</title><rect x="109.7" y="1029" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="112.71" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,543,643 samples, 0.02%)</title><rect x="1054.4" y="805" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.39" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (44,980,924 samples, 0.02%)</title><rect x="272.2" y="1445" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="275.18" y="1455.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (41,063,458 samples, 0.02%)</title><rect x="784.2" y="901" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="787.22" y="911.5" ></text>
</g>
<g >
<title>TimerManager::AddTimer (35,552,490 samples, 0.01%)</title><rect x="836.7" y="1461" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="839.66" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (76,765,310 samples, 0.03%)</title><rect x="479.0" y="1077" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="482.05" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (35,270,571 samples, 0.01%)</title><rect x="1004.0" y="1141" width="0.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1007.03" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (89,228,740 samples, 0.03%)</title><rect x="153.7" y="1125" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="156.68" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (23,162,380 samples, 0.01%)</title><rect x="556.9" y="901" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (26,604,500 samples, 0.01%)</title><rect x="195.7" y="1093" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="198.68" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,723,983,776 samples, 1.39%)</title><rect x="348.9" y="1221" width="16.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="351.92" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,140,847 samples, 0.09%)</title><rect x="1054.2" y="1253" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.21" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (205,240,508 samples, 0.08%)</title><rect x="770.6" y="1013" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.63" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (53,303,458 samples, 0.02%)</title><rect x="771.1" y="645" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="774.15" y="655.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (34,288,094 samples, 0.01%)</title><rect x="388.3" y="1077" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="391.25" y="1087.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (24,325,709 samples, 0.01%)</title><rect x="860.8" y="1061" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="863.83" y="1071.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (525,087,366 samples, 0.20%)</title><rect x="885.4" y="997" width="2.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="888.38" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (27,770,927 samples, 0.01%)</title><rect x="788.6" y="1045" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="791.64" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (2,208,745,711 samples, 0.83%)</title><rect x="880.2" y="1077" width="9.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="883.18" y="1087.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (32,690,352 samples, 0.01%)</title><rect x="973.7" y="853" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="976.71" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (43,492,571 samples, 0.02%)</title><rect x="298.5" y="1109" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="301.49" y="1119.5" ></text>
</g>
<g >
<title>do_vmi_munmap (287,054,064 samples, 0.11%)</title><rect x="973.0" y="1093" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="976.00" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (35,123,147 samples, 0.01%)</title><rect x="540.1" y="1093" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="543.07" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (53,661,523 samples, 0.02%)</title><rect x="1086.3" y="1013" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1089.35" y="1023.5" ></text>
</g>
<g >
<title>__call_rcu_common.constprop.0 (24,106,435 samples, 0.01%)</title><rect x="1166.0" y="1189" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1169.03" y="1199.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (75,621,942 samples, 0.03%)</title><rect x="10.4" y="1429" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="13.41" y="1439.5" ></text>
</g>
<g >
<title>EventLoop::DelChannel (173,378,031 samples, 0.06%)</title><rect x="123.5" y="1413" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="126.50" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (117,562,128 samples, 0.04%)</title><rect x="629.7" y="821" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.73" y="831.5" ></text>
</g>
<g >
<title>HttpResponse::SetHeader (34,083,063 samples, 0.01%)</title><rect x="402.3" y="1381" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="405.31" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (46,113,822 samples, 0.02%)</title><rect x="201.3" y="1157" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="204.32" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (26,295,204 samples, 0.01%)</title><rect x="390.4" y="1013" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="393.37" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,273,943,272 samples, 1.23%)</title><rect x="349.4" y="981" width="14.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="352.38" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,737,622,172 samples, 1.40%)</title><rect x="789.0" y="1189" width="16.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="792.04" y="1199.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (424,375,969 samples, 0.16%)</title><rect x="411.0" y="1317" width="1.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="414.02" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (10,077,170,907 samples, 3.77%)</title><rect x="156.3" y="1141" width="44.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="159.26" y="1151.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,062,969 samples, 0.01%)</title><rect x="684.0" y="645" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.03" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (230,311,119 samples, 0.09%)</title><rect x="958.3" y="1077" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="961.33" y="1087.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (28,860,104 samples, 0.01%)</title><rect x="691.1" y="853" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="694.15" y="863.5" ></text>
</g>
<g >
<title>Channel::OnRead (25,224,797,054 samples, 9.45%)</title><rect x="294.2" y="1541" width="111.5" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="297.22" y="1551.5" >Channel::OnRead</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (27,434,883 samples, 0.01%)</title><rect x="884.9" y="1029" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="887.89" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (277,559,961 samples, 0.10%)</title><rect x="104.1" y="1061" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="107.14" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (83,874,718 samples, 0.03%)</title><rect x="1131.5" y="1669" width="0.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1134.48" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (25,776,572 samples, 0.01%)</title><rect x="908.8" y="1237" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="911.76" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (76,203,053 samples, 0.03%)</title><rect x="191.8" y="1077" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="194.76" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (201,285,502 samples, 0.08%)</title><rect x="347.2" y="965" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.21" y="975.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (41,252,442 samples, 0.02%)</title><rect x="204.4" y="1125" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="207.36" y="1135.5" ></text>
</g>
<g >
<title>ksys_read (93,978,270 samples, 0.04%)</title><rect x="264.4" y="1365" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="267.37" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,578,352,108 samples, 1.34%)</title><rect x="349.0" y="1109" width="15.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="352.01" y="1119.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (55,354,381 samples, 0.02%)</title><rect x="646.5" y="981" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="649.48" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (37,127,615 samples, 0.01%)</title><rect x="543.3" y="629" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="546.25" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (55,338,091 samples, 0.02%)</title><rect x="11.2" y="1093" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="14.17" y="1103.5" ></text>
</g>
<g >
<title>tcp_send_fin (155,242,651 samples, 0.06%)</title><rect x="692.7" y="1013" width="0.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="695.75" y="1023.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (877,285,253 samples, 0.33%)</title><rect x="406.7" y="1381" width="3.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="409.66" y="1391.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (29,116,488 samples, 0.01%)</title><rect x="587.1" y="1029" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="590.13" y="1039.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (224,039,611 samples, 0.08%)</title><rect x="515.5" y="997" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="518.52" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,563,811,837 samples, 1.33%)</title><rect x="65.1" y="997" width="15.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="68.11" y="1007.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (589,168,185 samples, 0.22%)</title><rect x="320.7" y="1013" width="2.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="323.75" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (52,507,890 samples, 0.02%)</title><rect x="685.1" y="1365" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="688.13" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (40,814,877 samples, 0.02%)</title><rect x="452.6" y="1013" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="455.63" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (32,798,956 samples, 0.01%)</title><rect x="677.4" y="1077" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="680.38" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (332,039,237 samples, 0.12%)</title><rect x="832.5" y="1173" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="835.48" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,129,775,525 samples, 4.17%)</title><rect x="859.5" y="1301" width="49.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="862.52" y="1311.5" >std:..</text>
</g>
<g >
<title>unmap_page_range (27,959,534 samples, 0.01%)</title><rect x="831.8" y="1013" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="834.77" y="1023.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (112,548,232 samples, 0.04%)</title><rect x="1173.9" y="1285" width="0.5" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1176.89" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (46,597,813 samples, 0.02%)</title><rect x="912.1" y="453" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="915.07" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (66,038,529 samples, 0.02%)</title><rect x="204.3" y="1205" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="207.27" y="1215.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (33,767,538 samples, 0.01%)</title><rect x="117.9" y="1221" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="120.87" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (25,620,925 samples, 0.01%)</title><rect x="41.4" y="1045" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="44.44" y="1055.5" ></text>
</g>
<g >
<title>__dynamic_cast (135,490,877 samples, 0.05%)</title><rect x="163.6" y="1077" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="166.60" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (91,094,228 samples, 0.03%)</title><rect x="1060.8" y="869" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1063.75" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,680,901,935 samples, 4.37%)</title><rect x="1055.9" y="1333" width="51.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1058.87" y="1343.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (83,443,535 samples, 0.03%)</title><rect x="1002.8" y="1221" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1005.78" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (34,997,618 samples, 0.01%)</title><rect x="519.8" y="997" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="522.76" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,053,580 samples, 0.01%)</title><rect x="771.0" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.98" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (22,654,297 samples, 0.01%)</title><rect x="730.1" y="1077" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="733.11" y="1087.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (31,328,092 samples, 0.01%)</title><rect x="125.5" y="853" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="128.49" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36,147,609 samples, 0.01%)</title><rect x="154.3" y="1157" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="157.31" y="1167.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (118,278,627 samples, 0.04%)</title><rect x="1112.0" y="1269" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1115.02" y="1279.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (25,399,689 samples, 0.01%)</title><rect x="1011.5" y="1029" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1014.48" y="1039.5" ></text>
</g>
<g >
<title>netvsc_poll (36,968,700 samples, 0.01%)</title><rect x="831.4" y="885" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="834.43" y="895.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (58,709,006 samples, 0.02%)</title><rect x="250.4" y="949" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="253.41" y="959.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::DelChannel (163,903,872 samples, 0.06%)</title><rect x="265.0" y="1333" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="267.95" y="1343.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::DelChannel (165,781,331 samples, 0.06%)</title><rect x="548.2" y="1349" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="551.17" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,347,521 samples, 0.01%)</title><rect x="966.3" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.34" y="383.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (24,102,976 samples, 0.01%)</title><rect x="161.6" y="901" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="164.56" y="911.5" ></text>
</g>
<g >
<title>x64_sys_call (333,231,263 samples, 0.12%)</title><rect x="826.6" y="1349" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="829.58" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (174,850,034 samples, 0.07%)</title><rect x="911.6" y="869" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.59" y="879.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (27,308,548 samples, 0.01%)</title><rect x="122.1" y="1253" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="125.14" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (47,013,770 samples, 0.02%)</title><rect x="223.7" y="1093" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="226.70" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (10,529,053,680 samples, 3.94%)</title><rect x="720.8" y="1237" width="46.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="723.85" y="1247.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (28,415,973 samples, 0.01%)</title><rect x="629.5" y="437" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.53" y="447.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (60,833,449 samples, 0.02%)</title><rect x="346.0" y="1205" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="349.00" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (75,926,000 samples, 0.03%)</title><rect x="456.1" y="1077" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="459.10" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (67,698,969 samples, 0.03%)</title><rect x="110.7" y="1029" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="113.69" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (28,319,996 samples, 0.01%)</title><rect x="1143.0" y="1525" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.99" y="1535.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (64,920,646 samples, 0.02%)</title><rect x="939.7" y="917" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="942.66" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (45,168,007 samples, 0.02%)</title><rect x="170.4" y="1013" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="173.45" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (42,270,347 samples, 0.02%)</title><rect x="352.5" y="933" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="355.46" y="943.5" ></text>
</g>
<g >
<title>__handle_mm_fault (28,040,216 samples, 0.01%)</title><rect x="694.4" y="1141" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="697.44" y="1151.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (334,927,149 samples, 0.13%)</title><rect x="659.6" y="1061" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="662.60" y="1071.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_M_getword (42,534,340 samples, 0.02%)</title><rect x="57.3" y="1093" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="60.30" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (60,680,477 samples, 0.02%)</title><rect x="170.6" y="1013" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="173.64" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (73,594,232 samples, 0.03%)</title><rect x="265.1" y="1285" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="268.11" y="1295.5" ></text>
</g>
<g >
<title>iput (51,070,311 samples, 0.02%)</title><rect x="692.4" y="1045" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="695.40" y="1055.5" ></text>
</g>
<g >
<title>irq_exit_rcu (38,816,919 samples, 0.01%)</title><rect x="125.5" y="965" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="128.49" y="975.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (41,010,196 samples, 0.02%)</title><rect x="833.4" y="837" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="836.40" y="847.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (244,453,800 samples, 0.09%)</title><rect x="959.9" y="1077" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="962.88" y="1087.5" ></text>
</g>
<g >
<title>__munmap (404,279,572 samples, 0.15%)</title><rect x="690.2" y="1189" width="1.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="693.24" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (26,252,052 samples, 0.01%)</title><rect x="838.6" y="1573" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (61,785,219 samples, 0.02%)</title><rect x="1108.6" y="933" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1111.58" y="943.5" ></text>
</g>
<g >
<title>__GI___writev (454,184,246 samples, 0.17%)</title><rect x="694.0" y="1445" width="2.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="696.95" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (75,764,077 samples, 0.03%)</title><rect x="860.7" y="1221" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="863.71" y="1231.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (96,530,719 samples, 0.04%)</title><rect x="127.1" y="933" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="130.08" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (95,474,881 samples, 0.04%)</title><rect x="484.3" y="1205" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="487.28" y="1215.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (24,488,725 samples, 0.01%)</title><rect x="468.8" y="1045" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="471.81" y="1055.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (29,123,498 samples, 0.01%)</title><rect x="425.7" y="1621" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="428.72" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,967,624,608 samples, 1.49%)</title><rect x="99.3" y="1189" width="17.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="102.35" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (32,404,437 samples, 0.01%)</title><rect x="437.1" y="1237" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="440.08" y="1247.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (27,496,518 samples, 0.01%)</title><rect x="815.0" y="933" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="818.03" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (103,364,354 samples, 0.04%)</title><rect x="63.5" y="773" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.47" y="783.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (36,755,798 samples, 0.01%)</title><rect x="496.7" y="885" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="499.70" y="895.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (327,567,134 samples, 0.12%)</title><rect x="942.2" y="1061" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="945.21" y="1071.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, long, std::shared_ptr&lt;TimerManager::TimerNode&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (35,389,739 samples, 0.01%)</title><rect x="131.1" y="1493" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="134.12" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (31,240,636 samples, 0.01%)</title><rect x="97.3" y="1061" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="100.31" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,499,128,696 samples, 4.31%)</title><rect x="10.9" y="1365" width="50.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="13.90" y="1375.5" >std::..</text>
</g>
<g >
<title>clear_bhb_loop (27,848,804 samples, 0.01%)</title><rect x="1153.4" y="1221" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1156.35" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (45,160,182 samples, 0.02%)</title><rect x="629.5" y="677" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="632.50" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (76,791,752 samples, 0.03%)</title><rect x="1108.5" y="1189" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.55" y="1199.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (40,014,078 samples, 0.01%)</title><rect x="954.1" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="957.15" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,349,027,199 samples, 3.50%)</title><rect x="581.3" y="1109" width="41.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="584.31" y="1119.5" >std..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (299,168,781 samples, 0.11%)</title><rect x="126.5" y="1189" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="129.46" y="1199.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_M_getword (51,658,237 samples, 0.02%)</title><rect x="905.8" y="1093" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="908.76" y="1103.5" ></text>
</g>
<g >
<title>__dynamic_cast (131,013,711 samples, 0.05%)</title><rect x="587.7" y="1077" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="590.66" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (347,458,686 samples, 0.13%)</title><rect x="826.5" y="1381" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="829.52" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (123,840,750 samples, 0.05%)</title><rect x="860.7" y="1253" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="863.70" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (244,405,499 samples, 0.09%)</title><rect x="205.4" y="1157" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.36" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (103,838,011 samples, 0.04%)</title><rect x="400.7" y="1333" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="403.67" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (68,480,488 samples, 0.03%)</title><rect x="731.0" y="1077" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="734.01" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,578,684,998 samples, 1.34%)</title><rect x="913.5" y="997" width="15.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="916.47" y="1007.5" ></text>
</g>
<g >
<title>net_rx_action (34,785,982 samples, 0.01%)</title><rect x="292.4" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="295.45" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,803,562,716 samples, 1.42%)</title><rect x="665.4" y="1141" width="16.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="668.41" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (35,194,215 samples, 0.01%)</title><rect x="249.5" y="1013" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="252.53" y="1023.5" ></text>
</g>
<g >
<title>tcp_write_xmit (142,607,072 samples, 0.05%)</title><rect x="1117.6" y="981" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1120.57" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (141,651,362 samples, 0.05%)</title><rect x="19.4" y="1093" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="22.45" y="1103.5" ></text>
</g>
<g >
<title>handle_softirqs (31,596,515 samples, 0.01%)</title><rect x="1147.7" y="1365" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1150.68" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (41,130,831 samples, 0.02%)</title><rect x="347.8" y="389" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.76" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (24,481,094 samples, 0.01%)</title><rect x="221.3" y="949" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="224.32" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,566,737,660 samples, 1.34%)</title><rect x="631.3" y="1045" width="15.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="634.28" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (251,665,886 samples, 0.09%)</title><rect x="911.4" y="1285" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.43" y="1295.5" ></text>
</g>
<g >
<title>__ip_local_out (53,917,196 samples, 0.02%)</title><rect x="1119.8" y="1125" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1122.80" y="1135.5" ></text>
</g>
<g >
<title>sock_write_iter (371,496,948 samples, 0.14%)</title><rect x="694.2" y="1301" width="1.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="697.20" y="1311.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (160,218,397 samples, 0.06%)</title><rect x="341.1" y="1109" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="344.05" y="1119.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (1,639,717,463 samples, 0.61%)</title><rect x="971.4" y="1477" width="7.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="974.36" y="1487.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (103,990,503 samples, 0.04%)</title><rect x="413.1" y="1525" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="416.07" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (39,321,068 samples, 0.01%)</title><rect x="874.2" y="1061" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="877.18" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (25,323,253 samples, 0.01%)</title><rect x="508.8" y="1061" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="511.79" y="1071.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (157,127,525 samples, 0.06%)</title><rect x="801.8" y="1061" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="804.78" y="1071.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (839,930,135 samples, 0.31%)</title><rect x="406.7" y="1237" width="3.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="409.74" y="1247.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (338,053,270 samples, 0.13%)</title><rect x="959.5" y="1093" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="962.55" y="1103.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (56,040,325 samples, 0.02%)</title><rect x="1108.0" y="1317" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1111.01" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (23,162,380 samples, 0.01%)</title><rect x="556.9" y="933" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,708,908 samples, 0.02%)</title><rect x="630.0" y="421" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.97" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (25,337,050,133 samples, 9.49%)</title><rect x="152.9" y="1477" width="112.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="155.89" y="1487.5" >std::__invoke..</text>
</g>
<g >
<title>ip_finish_output (73,126,365 samples, 0.03%)</title><rect x="554.0" y="1109" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="556.98" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (51,666,582 samples, 0.02%)</title><rect x="487.9" y="741" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="490.90" y="751.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (27,804,633 samples, 0.01%)</title><rect x="750.1" y="1061" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="753.14" y="1071.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (32,896,063 samples, 0.01%)</title><rect x="837.4" y="1509" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="840.38" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (111,686,566 samples, 0.04%)</title><rect x="63.5" y="805" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.47" y="815.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (30,253,111 samples, 0.01%)</title><rect x="639.8" y="789" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="642.80" y="799.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (89,861,424 samples, 0.03%)</title><rect x="813.9" y="1029" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="816.86" y="1039.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (193,481,529 samples, 0.07%)</title><rect x="357.1" y="869" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="360.13" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (57,777,338 samples, 0.02%)</title><rect x="637.3" y="933" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="640.29" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (24,196,285 samples, 0.01%)</title><rect x="81.6" y="1045" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="84.58" y="1055.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (23,823,308 samples, 0.01%)</title><rect x="323.7" y="1029" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="326.73" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (306,215,143 samples, 0.11%)</title><rect x="770.5" y="1301" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="773.47" y="1311.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (226,932,671 samples, 0.08%)</title><rect x="835.3" y="1221" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="838.28" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (59,849,654 samples, 0.02%)</title><rect x="216.9" y="885" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="219.92" y="895.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (32,951,586 samples, 0.01%)</title><rect x="19.3" y="1045" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="22.26" y="1055.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (12,076,554,480 samples, 4.52%)</title><rect x="631.1" y="1397" width="53.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="634.06" y="1407.5" >HttpR..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (24,519,022 samples, 0.01%)</title><rect x="103.9" y="1061" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="106.88" y="1071.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_M_getword (52,565,337 samples, 0.02%)</title><rect x="1048.4" y="1093" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1051.45" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (30,815,871 samples, 0.01%)</title><rect x="397.4" y="1077" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="400.38" y="1087.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (49,843,423 samples, 0.02%)</title><rect x="892.0" y="1013" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="894.97" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (262,315,164 samples, 0.10%)</title><rect x="347.1" y="1237" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="350.11" y="1247.5" ></text>
</g>
<g >
<title>ip_output (90,533,125 samples, 0.03%)</title><rect x="129.4" y="1125" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="132.43" y="1135.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (134,396,447 samples, 0.05%)</title><rect x="259.7" y="1381" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="262.65" y="1391.5" ></text>
</g>
<g >
<title>nf_hook_slow (32,354,873 samples, 0.01%)</title><rect x="1117.6" y="885" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1120.64" y="895.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (873,400,003 samples, 0.33%)</title><rect x="689.9" y="1349" width="3.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="692.89" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,817,545,009 samples, 1.43%)</title><rect x="382.4" y="1173" width="16.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="385.39" y="1183.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (321,136,273 samples, 0.12%)</title><rect x="121.0" y="1333" width="1.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="124.03" y="1343.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (1,532,326,952 samples, 0.57%)</title><rect x="1179.9" y="1621" width="6.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1182.94" y="1631.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (29,191,070 samples, 0.01%)</title><rect x="1072.4" y="1029" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1075.39" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (51,875,922 samples, 0.02%)</title><rect x="372.4" y="1013" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="375.44" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (32,193,028 samples, 0.01%)</title><rect x="502.0" y="885" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="505.04" y="895.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (115,251,067 samples, 0.04%)</title><rect x="1160.4" y="1237" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1163.38" y="1247.5" ></text>
</g>
<g >
<title>__strlen_avx2 (218,316,299 samples, 0.08%)</title><rect x="849.7" y="1653" width="0.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="852.66" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (25,404,640 samples, 0.01%)</title><rect x="1110.1" y="1349" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1113.12" y="1359.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (44,712,819 samples, 0.02%)</title><rect x="388.5" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="391.48" y="1087.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (591,346,937 samples, 0.22%)</title><rect x="603.2" y="1013" width="2.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="606.23" y="1023.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (119,980,697 samples, 0.04%)</title><rect x="1184.3" y="1237" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.29" y="1247.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (26,563,826 samples, 0.01%)</title><rect x="512.2" y="965" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="515.24" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (192,355,129 samples, 0.07%)</title><rect x="629.5" y="965" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.45" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (235,701,237 samples, 0.09%)</title><rect x="911.5" y="1173" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.48" y="1183.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (24,091,674 samples, 0.01%)</title><rect x="683.2" y="1301" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="686.21" y="1311.5" ></text>
</g>
<g >
<title>inet_sendmsg (396,876,482 samples, 0.15%)</title><rect x="834.7" y="1285" width="1.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="837.65" y="1295.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (102,875,427 samples, 0.04%)</title><rect x="833.2" y="933" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="836.17" y="943.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (126,444,997 samples, 0.05%)</title><rect x="1064.3" y="837" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1067.34" y="847.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (31,832,180 samples, 0.01%)</title><rect x="686.1" y="1237" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="689.15" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (23,643,476 samples, 0.01%)</title><rect x="205.6" y="149" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.55" y="159.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (34,617,602 samples, 0.01%)</title><rect x="1141.3" y="1525" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1144.32" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (102,435,485 samples, 0.04%)</title><rect x="307.5" y="1077" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="310.46" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (37,879,773 samples, 0.01%)</title><rect x="1101.8" y="1077" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1104.79" y="1087.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (37,702,898 samples, 0.01%)</title><rect x="514.2" y="997" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="517.16" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::AddChannel (114,940,792 samples, 0.04%)</title><rect x="1120.9" y="1509" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1123.94" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (30,629,245 samples, 0.01%)</title><rect x="1186.5" y="1557" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1189.47" y="1567.5" ></text>
</g>
<g >
<title>epoll_ctl (56,570,910 samples, 0.02%)</title><rect x="718.2" y="1317" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="721.23" y="1327.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (30,708,810 samples, 0.01%)</title><rect x="594.5" y="981" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="597.45" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (44,289,563 samples, 0.02%)</title><rect x="1003.4" y="1253" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1006.40" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,596,131 samples, 0.01%)</title><rect x="1054.9" y="357" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.88" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (385,537,014 samples, 0.14%)</title><rect x="407.1" y="1173" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="410.05" y="1183.5" ></text>
</g>
<g >
<title>sch_direct_xmit (39,698,770 samples, 0.01%)</title><rect x="695.3" y="1045" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="698.28" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,573,763,175 samples, 2.84%)</title><rect x="772.3" y="1285" width="33.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="775.34" y="1295.5" >st..</text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (139,325,992 samples, 0.05%)</title><rect x="543.0" y="1365" width="0.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="545.98" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (248,047,167 samples, 0.09%)</title><rect x="205.4" y="1205" width="1.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="208.36" y="1215.5" ></text>
</g>
<g >
<title>__tcp_close (181,039,033 samples, 0.07%)</title><rect x="833.0" y="1029" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="835.99" y="1039.5" ></text>
</g>
<g >
<title>x64_sys_call (100,472,188 samples, 0.04%)</title><rect x="825.9" y="1349" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="828.89" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (582,432,785 samples, 0.22%)</title><rect x="214.6" y="917" width="2.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="217.63" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_fill_assign (28,072,196 samples, 0.01%)</title><rect x="62.7" y="1301" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="65.67" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (634,002,718 samples, 0.24%)</title><rect x="107.3" y="1061" width="2.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="110.26" y="1071.5" ></text>
</g>
<g >
<title>ip_local_out (137,669,054 samples, 0.05%)</title><rect x="553.7" y="1141" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="556.74" y="1151.5" ></text>
</g>
<g >
<title>__ip_finish_output (48,616,025 samples, 0.02%)</title><rect x="409.8" y="869" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="412.81" y="879.5" ></text>
</g>
<g >
<title>osq_lock (72,629,053 samples, 0.03%)</title><rect x="546.5" y="1253" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="549.49" y="1263.5" ></text>
</g>
<g >
<title>x64_sys_call (105,707,400 samples, 0.04%)</title><rect x="982.3" y="1621" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="985.28" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,899,956,642 samples, 4.46%)</title><rect x="489.5" y="1301" width="52.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.48" y="1311.5" >std::..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::base (24,056,419 samples, 0.01%)</title><rect x="585.1" y="1077" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="588.09" y="1087.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (30,690,055 samples, 0.01%)</title><rect x="915.5" y="933" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="918.49" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (214,504,980 samples, 0.08%)</title><rect x="1054.3" y="1173" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.26" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,198,709 samples, 0.02%)</title><rect x="1108.6" y="981" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.57" y="991.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (54,489,060 samples, 0.02%)</title><rect x="407.1" y="1125" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="410.13" y="1135.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (81,738,395 samples, 0.03%)</title><rect x="29.9" y="1077" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="32.95" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (26,089,990 samples, 0.01%)</title><rect x="684.5" y="1333" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="687.51" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,186,279 samples, 0.01%)</title><rect x="770.7" y="261" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.74" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,025,846 samples, 0.01%)</title><rect x="630.0" y="245" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.99" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::~_BracketMatcher (22,874,118 samples, 0.01%)</title><rect x="769.6" y="1061" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="772.59" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,282,311 samples, 0.01%)</title><rect x="63.5" y="645" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.50" y="655.5" ></text>
</g>
<g >
<title>do_iter_write (389,379,111 samples, 0.15%)</title><rect x="694.2" y="1333" width="1.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="697.15" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (33,778,989 samples, 0.01%)</title><rect x="645.5" y="949" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="648.45" y="959.5" ></text>
</g>
<g >
<title>HttpRouter::Route (627,057,172 samples, 0.23%)</title><rect x="825.4" y="1413" width="2.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="828.37" y="1423.5" ></text>
</g>
<g >
<title>std::make_shared&lt;HttpConn, int&amp;, sockaddr_in&amp;, std::shared_ptr&lt;EventLoop&gt;&amp;, int&amp;, Server::HandlerNewConn (2,511,990,867 samples, 0.94%)</title><rect x="1151.3" y="1445" width="11.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1154.32" y="1455.5" ></text>
</g>
<g >
<title>ip_local_deliver (24,037,810 samples, 0.01%)</title><rect x="1009.9" y="869" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1012.91" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (245,350,266 samples, 0.09%)</title><rect x="577.5" y="1253" width="1.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="580.52" y="1263.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (620,144,208 samples, 0.23%)</title><rect x="461.3" y="1013" width="2.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="464.26" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (80,536,524 samples, 0.03%)</title><rect x="1001.7" y="1141" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1004.73" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (10,459,506,077 samples, 3.92%)</title><rect x="579.7" y="1173" width="46.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="582.68" y="1183.5" >std:..</text>
</g>
<g >
<title>_copy_from_iter (100,926,169 samples, 0.04%)</title><rect x="976.8" y="1237" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="979.84" y="1247.5" ></text>
</g>
<g >
<title>nf_conntrack_in (27,772,345 samples, 0.01%)</title><rect x="1119.8" y="1077" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1122.82" y="1087.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_maskbit (23,754,657 samples, 0.01%)</title><rect x="257.8" y="1109" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="260.84" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (24,570,516 samples, 0.01%)</title><rect x="771.0" y="357" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.98" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,076,960 samples, 0.01%)</title><rect x="684.1" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.06" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (297,076,871 samples, 0.11%)</title><rect x="742.7" y="1045" width="1.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="745.70" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,453,615 samples, 0.01%)</title><rect x="911.9" y="533" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.90" y="543.5" ></text>
</g>
<g >
<title>ip_output (82,326,812 samples, 0.03%)</title><rect x="554.0" y="1125" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="556.98" y="1135.5" ></text>
</g>
<g >
<title>__destroy_inode (24,756,487 samples, 0.01%)</title><rect x="692.5" y="997" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="695.46" y="1007.5" ></text>
</g>
<g >
<title>malloc (97,565,248 samples, 0.04%)</title><rect x="274.1" y="1653" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="277.12" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (1,725,381,701 samples, 0.65%)</title><rect x="600.3" y="1061" width="7.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="603.34" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (226,708,240 samples, 0.08%)</title><rect x="74.9" y="933" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="77.93" y="943.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (29,393,874 samples, 0.01%)</title><rect x="811.7" y="1077" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="814.74" y="1087.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (25,493,730,039 samples, 9.55%)</title><rect x="1001.0" y="1493" width="112.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1003.97" y="1503.5" >std::__invoke..</text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (22,846,658 samples, 0.01%)</title><rect x="1041.0" y="1061" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1043.98" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (29,881,680 samples, 0.01%)</title><rect x="1087.1" y="1061" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1090.06" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (91,456,453 samples, 0.03%)</title><rect x="1050.7" y="1205" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1053.66" y="1215.5" ></text>
</g>
<g >
<title>mmap_region (137,073,621 samples, 0.05%)</title><rect x="826.8" y="1269" width="0.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="829.80" y="1279.5" ></text>
</g>
<g >
<title>HttpConn::~HttpConn (491,443,411 samples, 0.18%)</title><rect x="690.0" y="1205" width="2.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="692.95" y="1215.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (86,443,381 samples, 0.03%)</title><rect x="802.1" y="1029" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="805.08" y="1039.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (27,369,714,639 samples, 10.25%)</title><rect x="858.8" y="1621" width="120.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="861.80" y="1631.5" >std::__invoke&lt;v..</text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (46,086,253 samples, 0.02%)</title><rect x="1093.8" y="1077" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1096.75" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="405" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (82,229,521 samples, 0.03%)</title><rect x="890.2" y="1061" width="0.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="893.24" y="1071.5" ></text>
</g>
<g >
<title>netvsc_poll (29,756,766 samples, 0.01%)</title><rect x="432.9" y="1557" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="435.89" y="1567.5" ></text>
</g>
<g >
<title>read (138,314,779 samples, 0.05%)</title><rect x="122.8" y="1445" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="125.81" y="1455.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (155,031,936 samples, 0.06%)</title><rect x="535.5" y="1061" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="538.52" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (41,674,982 samples, 0.02%)</title><rect x="118.4" y="725" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="121.36" y="735.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (107,138,603 samples, 0.04%)</title><rect x="1175.3" y="1285" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1178.28" y="1295.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (27,060,532 samples, 0.01%)</title><rect x="831.4" y="805" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="834.43" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,811,112,902 samples, 1.43%)</title><rect x="648.0" y="1141" width="16.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="650.96" y="1151.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (34,550,095 samples, 0.01%)</title><rect x="1061.7" y="933" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1064.69" y="943.5" ></text>
</g>
<g >
<title>ip_local_out (137,366,959 samples, 0.05%)</title><rect x="694.9" y="1141" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="697.90" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (32,309,256 samples, 0.01%)</title><rect x="347.3" y="405" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.29" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (40,913,701 samples, 0.02%)</title><rect x="1054.4" y="549" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.42" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (27,784,737 samples, 0.01%)</title><rect x="302.2" y="1077" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="305.17" y="1087.5" ></text>
</g>
<g >
<title>HttpConn::Close (1,014,449,121 samples, 0.38%)</title><rect x="123.5" y="1429" width="4.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="126.49" y="1439.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (34,944,943 samples, 0.01%)</title><rect x="999.1" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1002.12" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (43,102,994 samples, 0.02%)</title><rect x="167.9" y="1061" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="170.90" y="1071.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (57,222,228 samples, 0.02%)</title><rect x="859.7" y="1061" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="862.70" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (32,156,182 samples, 0.01%)</title><rect x="967.9" y="1349" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="970.89" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (23,981,882 samples, 0.01%)</title><rect x="303.9" y="1093" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="306.87" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (108,700,431 samples, 0.04%)</title><rect x="770.9" y="773" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.94" y="783.5" ></text>
</g>
<g >
<title>[unknown] (36,396,089 samples, 0.01%)</title><rect x="556.8" y="1637" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.84" y="1647.5" ></text>
</g>
<g >
<title>evict (43,328,977 samples, 0.02%)</title><rect x="692.4" y="1029" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="695.42" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (33,015,287 samples, 0.01%)</title><rect x="880.7" y="1061" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="883.67" y="1071.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (41,535,631 samples, 0.02%)</title><rect x="1157.0" y="1253" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1160.03" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (57,078,994 samples, 0.02%)</title><rect x="720.0" y="1189" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="722.95" y="1199.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (97,593,039 samples, 0.04%)</title><rect x="402.7" y="1317" width="0.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="405.65" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (33,776,569 samples, 0.01%)</title><rect x="720.0" y="1125" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="723.04" y="1135.5" ></text>
</g>
<g >
<title>path_lookupat (41,853,539 samples, 0.02%)</title><rect x="261.9" y="1253" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="264.89" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (499,072,810 samples, 0.19%)</title><rect x="410.8" y="1429" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="413.78" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (40,481,819 samples, 0.02%)</title><rect x="965.8" y="1237" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="968.80" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::emplace_back&lt;char&gt; (29,496,910 samples, 0.01%)</title><rect x="13.4" y="1125" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="16.40" y="1135.5" ></text>
</g>
<g >
<title>inet_release (172,192,008 samples, 0.06%)</title><rect x="126.9" y="1061" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="129.91" y="1071.5" ></text>
</g>
<g >
<title>iput (41,427,763 samples, 0.02%)</title><rect x="409.2" y="1045" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="412.21" y="1055.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (185,607,542 samples, 0.07%)</title><rect x="405.8" y="1397" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="408.77" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (81,291,403 samples, 0.03%)</title><rect x="543.2" y="1141" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.16" y="1151.5" ></text>
</g>
<g >
<title>HttpRouter::Route (641,484,216 samples, 0.24%)</title><rect x="261.2" y="1413" width="2.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="264.16" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (43,408,918 samples, 0.02%)</title><rect x="365.1" y="1109" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="368.09" y="1119.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (44,155,440 samples, 0.02%)</title><rect x="936.9" y="1045" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="939.92" y="1055.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (25,373,129,705 samples, 9.50%)</title><rect x="435.2" y="1429" width="112.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="438.20" y="1439.5" >HttpConn::OnP..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (75,619,274 samples, 0.03%)</title><rect x="294.3" y="1349" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="297.31" y="1359.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (30,244,685 samples, 0.01%)</title><rect x="695.3" y="1013" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="698.30" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,382,975 samples, 0.02%)</title><rect x="629.5" y="661" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.50" y="671.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (39,353,087 samples, 0.01%)</title><rect x="605.5" y="981" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="608.51" y="991.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (139,172,561 samples, 0.05%)</title><rect x="987.1" y="1669" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="990.06" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (198,595,006 samples, 0.07%)</title><rect x="63.2" y="1077" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.15" y="1087.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (615,298,419 samples, 0.23%)</title><rect x="885.0" y="1029" width="2.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="888.01" y="1039.5" ></text>
</g>
<g >
<title>__x64_sys_close (267,700,365 samples, 0.10%)</title><rect x="551.2" y="1141" width="1.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="554.20" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,738,856,376 samples, 1.40%)</title><rect x="348.9" y="1237" width="16.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="351.92" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (25,526,285 samples, 0.01%)</title><rect x="229.7" y="981" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="232.74" y="991.5" ></text>
</g>
<g >
<title>x64_sys_call (457,645,546 samples, 0.17%)</title><rect x="269.9" y="1397" width="2.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="272.92" y="1407.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (52,373,345 samples, 0.02%)</title><rect x="696.5" y="1557" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="699.51" y="1567.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (77,549,990 samples, 0.03%)</title><rect x="544.1" y="1413" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="547.13" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,601,015,580 samples, 1.35%)</title><rect x="1056.1" y="1045" width="15.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1059.05" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (23,672,409 samples, 0.01%)</title><rect x="177.6" y="1029" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="180.59" y="1039.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (254,188,538 samples, 0.10%)</title><rect x="956.5" y="1045" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="959.45" y="1055.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (158,899,019 samples, 0.06%)</title><rect x="977.4" y="1157" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="980.43" y="1167.5" ></text>
</g>
<g >
<title>_copy_from_iter (111,723,477 samples, 0.04%)</title><rect x="128.6" y="1237" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="131.56" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (29,165,129 samples, 0.01%)</title><rect x="668.9" y="1077" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="671.92" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (31,690,135 samples, 0.01%)</title><rect x="296.2" y="1125" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="299.24" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (55,100,532 samples, 0.02%)</title><rect x="401.2" y="1397" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="404.21" y="1407.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (30,727,374 samples, 0.01%)</title><rect x="20.9" y="1029" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="23.91" y="1039.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (210,731,426 samples, 0.08%)</title><rect x="250.0" y="1013" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="253.01" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_fill_assign (33,310,676 samples, 0.01%)</title><rect x="911.1" y="1301" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="914.06" y="1311.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (76,021,737 samples, 0.03%)</title><rect x="250.3" y="965" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="253.34" y="975.5" ></text>
</g>
<g >
<title>rep_movs_alternative (93,763,502 samples, 0.04%)</title><rect x="694.3" y="1221" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="697.35" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (82,480,147 samples, 0.03%)</title><rect x="966.3" y="1125" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="969.27" y="1135.5" ></text>
</g>
<g >
<title>ip_finish_output2 (40,649,704 samples, 0.02%)</title><rect x="1117.8" y="853" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1120.81" y="863.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (162,698,355 samples, 0.06%)</title><rect x="1068.3" y="949" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1071.30" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (79,991,160 samples, 0.03%)</title><rect x="769.4" y="1253" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="772.41" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,618,297,585 samples, 1.36%)</title><rect x="665.6" y="1125" width="16.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="668.61" y="1135.5" ></text>
</g>
<g >
<title>napi_complete_done (22,889,319 samples, 0.01%)</title><rect x="867.7" y="965" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="870.74" y="975.5" ></text>
</g>
<g >
<title>__vm_munmap (333,926,147 samples, 0.13%)</title><rect x="830.8" y="1109" width="1.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="833.80" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (34,365,098 samples, 0.01%)</title><rect x="350.8" y="949" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="353.81" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (43,210,612 samples, 0.02%)</title><rect x="720.6" y="1253" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="723.55" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (52,598,378 samples, 0.02%)</title><rect x="153.0" y="1285" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="155.98" y="1295.5" ></text>
</g>
<g >
<title>TimerManager::Tick (43,316,379 samples, 0.02%)</title><rect x="837.4" y="1557" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="840.37" y="1567.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (40,869,071 samples, 0.02%)</title><rect x="519.4" y="1029" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="522.43" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,241,716 samples, 0.01%)</title><rect x="911.9" y="645" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.89" y="655.5" ></text>
</g>
<g >
<title>mmap_region (144,848,614 samples, 0.05%)</title><rect x="545.8" y="1269" width="0.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="548.78" y="1279.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (60,239,126 samples, 0.02%)</title><rect x="130.8" y="1557" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="133.84" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (175,526,274 samples, 0.07%)</title><rect x="629.5" y="853" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.48" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,824,022,688 samples, 1.43%)</title><rect x="930.5" y="1221" width="16.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="933.53" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (55,633,731 samples, 0.02%)</title><rect x="63.7" y="677" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.66" y="687.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (1,245,903,420 samples, 0.47%)</title><rect x="1152.7" y="1285" width="5.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1155.66" y="1295.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char const*&gt; (25,282,936 samples, 0.01%)</title><rect x="453.5" y="1077" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="456.48" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (35,507,843 samples, 0.01%)</title><rect x="10.5" y="1253" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="13.49" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (23,872,872 samples, 0.01%)</title><rect x="183.6" y="997" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.61" y="1007.5" ></text>
</g>
<g >
<title>__ip_finish_output (75,068,401 samples, 0.03%)</title><rect x="129.4" y="1093" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="132.43" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (35,567,584 samples, 0.01%)</title><rect x="825.6" y="1349" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="828.57" y="1359.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (394,474,506 samples, 0.15%)</title><rect x="750.5" y="1061" width="1.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="753.46" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (85,896,325 samples, 0.03%)</title><rect x="92.8" y="1013" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="95.82" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (34,245,421 samples, 0.01%)</title><rect x="1070.5" y="949" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1073.48" y="959.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (53,025,395 samples, 0.02%)</title><rect x="606.1" y="1045" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="609.13" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (85,564,570 samples, 0.03%)</title><rect x="1108.5" y="1253" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.52" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (99,443,998 samples, 0.04%)</title><rect x="619.4" y="1093" width="0.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="622.41" y="1103.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (2,098,496,431 samples, 0.79%)</title><rect x="1152.1" y="1317" width="9.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1155.08" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,060,962 samples, 0.01%)</title><rect x="259.9" y="677" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.89" y="687.5" ></text>
</g>
<g >
<title>do_epoll_wait (25,290,124 samples, 0.01%)</title><rect x="979.2" y="1461" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="982.20" y="1471.5" ></text>
</g>
<g >
<title>do_mmap (184,840,411 samples, 0.07%)</title><rect x="826.6" y="1285" width="0.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="829.63" y="1295.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (25,201,399 samples, 0.01%)</title><rect x="1107.8" y="1333" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1110.78" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (51,058,009 samples, 0.02%)</title><rect x="908.0" y="1157" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="910.96" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (83,146,753 samples, 0.03%)</title><rect x="339.1" y="1093" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="342.13" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (241,160,907 samples, 0.09%)</title><rect x="63.1" y="1237" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="66.08" y="1247.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2,397,849,668 samples, 0.90%)</title><rect x="1151.6" y="1381" width="10.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1154.59" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (39,316,634 samples, 0.01%)</title><rect x="397.8" y="1093" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="400.82" y="1103.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (233,553,991 samples, 0.09%)</title><rect x="266.5" y="1077" width="1.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="269.46" y="1087.5" ></text>
</g>
<g >
<title>do_dentry_open (24,201,378 samples, 0.01%)</title><rect x="840.5" y="1525" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="843.51" y="1535.5" ></text>
</g>
<g >
<title>Channel::OnWrite (1,558,475,023 samples, 0.58%)</title><rect x="123.4" y="1541" width="6.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="126.43" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (35,609,748 samples, 0.01%)</title><rect x="824.5" y="1381" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="827.53" y="1391.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (29,615,939 samples, 0.01%)</title><rect x="12.2" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="15.22" y="1087.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (75,469,950 samples, 0.03%)</title><rect x="939.6" y="933" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="942.61" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (120,789,374 samples, 0.05%)</title><rect x="416.1" y="1653" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="419.15" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (30,445,486 samples, 0.01%)</title><rect x="867.7" y="1013" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="870.74" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,765,961,655 samples, 1.41%)</title><rect x="1090.1" y="1157" width="16.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1093.12" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Executor (51,055,374 samples, 0.02%)</title><rect x="62.8" y="1333" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="65.81" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (68,313,976 samples, 0.03%)</title><rect x="576.0" y="1685" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="579.04" y="1695.5" ></text>
</g>
<g >
<title>x64_sys_call (62,365,776 samples, 0.02%)</title><rect x="971.7" y="1253" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="974.65" y="1263.5" ></text>
</g>
<g >
<title>vfs_read (86,938,471 samples, 0.03%)</title><rect x="123.0" y="1349" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="125.97" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (74,234,391 samples, 0.03%)</title><rect x="259.8" y="1173" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="262.83" y="1183.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (856,719,623 samples, 0.32%)</title><rect x="1114.7" y="1221" width="3.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1117.65" y="1231.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (35,208,278 samples, 0.01%)</title><rect x="303.1" y="1045" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="306.09" y="1055.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (126,769,492 samples, 0.05%)</title><rect x="61.8" y="1349" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="64.77" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (28,855,446 samples, 0.01%)</title><rect x="680.7" y="1077" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="683.72" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (185,789,506 samples, 0.07%)</title><rect x="205.5" y="949" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.46" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (86,800,110 samples, 0.03%)</title><rect x="966.3" y="1221" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.25" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,845,933,817 samples, 4.44%)</title><rect x="631.1" y="1365" width="52.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="634.10" y="1375.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (30,399,357 samples, 0.01%)</title><rect x="770.7" y="357" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.73" y="367.5" ></text>
</g>
<g >
<title>__dentry_kill (69,000,386 samples, 0.03%)</title><rect x="409.1" y="1077" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="412.10" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (107,752,891 samples, 0.04%)</title><rect x="629.7" y="773" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.74" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,719,482,946 samples, 1.39%)</title><rect x="930.7" y="1125" width="16.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="933.67" y="1135.5" ></text>
</g>
<g >
<title>sch_direct_xmit (23,133,674 samples, 0.01%)</title><rect x="975.6" y="821" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="978.59" y="831.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (334,630,447 samples, 0.13%)</title><rect x="262.4" y="1301" width="1.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="265.42" y="1311.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (25,497,261 samples, 0.01%)</title><rect x="436.6" y="1077" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="439.59" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (2,088,933,052 samples, 0.78%)</title><rect x="667.7" y="1093" width="9.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="670.75" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (29,740,582 samples, 0.01%)</title><rect x="821.2" y="1093" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="824.22" y="1103.5" ></text>
</g>
<g >
<title>hyperv_flush_tlb_multi (53,574,275 samples, 0.02%)</title><rect x="550.1" y="1013" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="553.15" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (28,552,270 samples, 0.01%)</title><rect x="669.0" y="1077" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="672.05" y="1087.5" ></text>
</g>
<g >
<title>evict (33,366,824 samples, 0.01%)</title><rect x="409.2" y="1029" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="412.23" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,222,647,393 samples, 0.46%)</title><rect x="1180.5" y="1589" width="5.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1183.47" y="1599.5" ></text>
</g>
<g >
<title>nf_hook_slow (51,949,139 samples, 0.02%)</title><rect x="977.5" y="1109" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="980.46" y="1119.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (55,207,792 samples, 0.02%)</title><rect x="295.1" y="1045" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="298.14" y="1055.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,666,040,949 samples, 0.62%)</title><rect x="405.7" y="1525" width="7.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="408.69" y="1535.5" ></text>
</g>
<g >
<title>path_openat (66,239,472 samples, 0.02%)</title><rect x="416.8" y="1557" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="419.81" y="1567.5" ></text>
</g>
<g >
<title>tcp_recvmsg (49,521,295 samples, 0.02%)</title><rect x="971.0" y="1285" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="973.98" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,219,727 samples, 0.01%)</title><rect x="118.4" y="613" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.37" y="623.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (56,725,046 samples, 0.02%)</title><rect x="912.8" y="1381" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="915.82" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (174,393,654 samples, 0.07%)</title><rect x="205.5" y="853" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.48" y="863.5" ></text>
</g>
<g >
<title>ip_output (55,532,150 samples, 0.02%)</title><rect x="1117.8" y="901" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1120.80" y="911.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (827,330,303 samples, 0.31%)</title><rect x="124.3" y="1349" width="3.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="127.29" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (54,752,427 samples, 0.02%)</title><rect x="1072.3" y="1157" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1075.32" y="1167.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (58,347,306 samples, 0.02%)</title><rect x="10.4" y="1381" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.44" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,640,680,254 samples, 1.36%)</title><rect x="207.3" y="1061" width="16.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="210.27" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (204,804,036 samples, 0.08%)</title><rect x="911.5" y="1093" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.53" y="1103.5" ></text>
</g>
<g >
<title>__strxfrm_l (101,444,917 samples, 0.04%)</title><rect x="561.3" y="1669" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="564.25" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (681,482,819 samples, 0.26%)</title><rect x="733.9" y="1061" width="3.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="736.90" y="1071.5" ></text>
</g>
<g >
<title>HttpConn::~HttpConn (526,640,439 samples, 0.20%)</title><rect x="830.1" y="1205" width="2.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="833.11" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (48,053,194 samples, 0.02%)</title><rect x="211.1" y="933" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="214.08" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (757,269,983 samples, 0.28%)</title><rect x="1062.5" y="933" width="3.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1065.48" y="943.5" ></text>
</g>
<g >
<title>HttpResponse::GetFileType (24,458,030 samples, 0.01%)</title><rect x="402.2" y="1381" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="405.21" y="1391.5" ></text>
</g>
<g >
<title>operator new (25,475,258 samples, 0.01%)</title><rect x="356.8" y="869" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="359.84" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,325,922 samples, 0.01%)</title><rect x="347.8" y="357" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.76" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (46,979,364 samples, 0.02%)</title><rect x="762.9" y="1077" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="765.86" y="1087.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (23,355,519 samples, 0.01%)</title><rect x="752.6" y="1093" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="755.63" y="1103.5" ></text>
</g>
<g >
<title>handle_softirqs (33,240,015 samples, 0.01%)</title><rect x="408.0" y="933" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="411.05" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (46,459,903 samples, 0.02%)</title><rect x="626.8" y="1285" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="629.81" y="1295.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (43,183,457 samples, 0.02%)</title><rect x="1158.8" y="1269" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1161.77" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (55,246,545 samples, 0.02%)</title><rect x="579.2" y="1269" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="582.16" y="1279.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (419,330,590 samples, 0.16%)</title><rect x="910.9" y="1381" width="1.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="913.94" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,725,179,404 samples, 1.40%)</title><rect x="365.6" y="1205" width="16.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="368.57" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (45,831,193 samples, 0.02%)</title><rect x="118.8" y="1365" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="121.83" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (215,718,151 samples, 0.08%)</title><rect x="629.4" y="1109" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.38" y="1119.5" ></text>
</g>
<g >
<title>vfs_fstatat (98,323,909 samples, 0.04%)</title><rect x="686.0" y="1301" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="688.95" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (621,918,480 samples, 0.23%)</title><rect x="938.3" y="1029" width="2.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="941.25" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (216,109,730 samples, 0.08%)</title><rect x="358.8" y="933" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="361.82" y="943.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (347,009,884 samples, 0.13%)</title><rect x="712.2" y="1685" width="1.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="715.23" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (25,393,847 samples, 0.01%)</title><rect x="556.9" y="1365" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1375.5" ></text>
</g>
<g >
<title>tcp_write_xmit (193,755,498 samples, 0.07%)</title><rect x="129.1" y="1205" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="132.13" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,962,889,373 samples, 1.48%)</title><rect x="665.2" y="1237" width="17.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="668.18" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,626,797,477 samples, 1.36%)</title><rect x="772.4" y="1125" width="16.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="775.40" y="1135.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (65,023,082 samples, 0.02%)</title><rect x="124.7" y="1141" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="127.68" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (50,842,179 samples, 0.02%)</title><rect x="1108.6" y="757" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1111.61" y="767.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (60,383,573 samples, 0.02%)</title><rect x="1097.1" y="1045" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1100.07" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,268,710 samples, 0.01%)</title><rect x="966.3" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.33" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (29,470,856 samples, 0.01%)</title><rect x="347.3" y="325" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.30" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (59,671,522 samples, 0.02%)</title><rect x="769.5" y="1205" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="772.47" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (49,410,674 samples, 0.02%)</title><rect x="771.2" y="597" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="774.16" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (34,746,262 samples, 0.01%)</title><rect x="829.7" y="1285" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="832.72" y="1295.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (35,392,334 samples, 0.01%)</title><rect x="62.1" y="1125" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="65.07" y="1135.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (29,229,154 samples, 0.01%)</title><rect x="926.7" y="949" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="929.68" y="959.5" ></text>
</g>
<g >
<title>std::function&lt;void  (879,893,792 samples, 0.33%)</title><rect x="689.9" y="1413" width="3.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="692.86" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (253,458,630 samples, 0.09%)</title><rect x="1017.8" y="1013" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1020.78" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,637,121,886 samples, 1.36%)</title><rect x="1056.0" y="1109" width="16.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1058.98" y="1119.5" ></text>
</g>
<g >
<title>sock_close (192,608,208 samples, 0.07%)</title><rect x="1117.4" y="1093" width="0.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1120.44" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (80,526,037 samples, 0.03%)</title><rect x="423.4" y="1669" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="426.38" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (31,213,485 samples, 0.01%)</title><rect x="820.1" y="1093" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="823.10" y="1103.5" ></text>
</g>
<g >
<title>Server::Start (10,033,016,653 samples, 3.76%)</title><rect x="1143.7" y="1653" width="44.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1146.70" y="1663.5" >Serv..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (224,356,101 samples, 0.08%)</title><rect x="935.4" y="1013" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="938.41" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (42,346,110 samples, 0.02%)</title><rect x="629.5" y="629" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.50" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (35,304,762 samples, 0.01%)</title><rect x="259.9" y="597" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="262.90" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_read (75,674,432 samples, 0.03%)</title><rect x="405.2" y="1381" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="408.25" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (99,869,880 samples, 0.04%)</title><rect x="1046.5" y="1093" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1049.45" y="1103.5" ></text>
</g>
<g >
<title>ip_list_rcv (24,102,976 samples, 0.01%)</title><rect x="161.6" y="917" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="164.56" y="927.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (192,575,648 samples, 0.07%)</title><rect x="1081.5" y="981" width="0.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1084.47" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (165,495,549 samples, 0.06%)</title><rect x="1054.4" y="949" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.36" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,437,635 samples, 0.01%)</title><rect x="400.8" y="549" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.76" y="559.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,412,966,371 samples, 10.27%)</title><rect x="1000.9" y="1637" width="121.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1003.91" y="1647.5" >std::thread::_I..</text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (44,498,967 samples, 0.02%)</title><rect x="937.9" y="1013" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="940.88" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (36,925,206 samples, 0.01%)</title><rect x="966.3" y="661" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="969.32" y="671.5" ></text>
</g>
<g >
<title>down_write_killable (38,626,186 samples, 0.01%)</title><rect x="408.6" y="1093" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="411.57" y="1103.5" ></text>
</g>
<g >
<title>vfs_open (23,761,431 samples, 0.01%)</title><rect x="417.0" y="1541" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="419.99" y="1551.5" ></text>
</g>
<g >
<title>__ip_finish_output (81,464,748 samples, 0.03%)</title><rect x="271.1" y="1093" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="274.08" y="1103.5" ></text>
</g>
<g >
<title>__fput_sync (287,190,452 samples, 0.11%)</title><rect x="974.7" y="1125" width="1.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="977.74" y="1135.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (1,663,693,232 samples, 0.62%)</title><rect x="405.7" y="1477" width="7.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="408.70" y="1487.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (22,889,319 samples, 0.01%)</title><rect x="867.7" y="949" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="870.74" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (35,873,077 samples, 0.01%)</title><rect x="1085.0" y="1029" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1087.97" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (23,118,325 samples, 0.01%)</title><rect x="272.6" y="1509" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="275.58" y="1519.5" ></text>
</g>
<g >
<title>ip_local_deliver (23,941,159 samples, 0.01%)</title><rect x="727.0" y="869" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="729.98" y="879.5" ></text>
</g>
<g >
<title>__ip_finish_output (47,606,195 samples, 0.02%)</title><rect x="127.3" y="869" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="130.26" y="879.5" ></text>
</g>
<g >
<title>inet_release (183,506,054 samples, 0.07%)</title><rect x="409.5" y="1061" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="412.47" y="1071.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (419,757,267 samples, 0.16%)</title><rect x="770.1" y="1381" width="1.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="773.07" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,799,901,293 samples, 2.92%)</title><rect x="913.1" y="1269" width="34.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="916.12" y="1279.5" >st..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (88,409,525 samples, 0.03%)</title><rect x="754.5" y="1061" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="757.54" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (193,742,708 samples, 0.07%)</title><rect x="347.2" y="933" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.23" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (43,743,687 samples, 0.02%)</title><rect x="206.0" y="565" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.96" y="575.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (35,135,987 samples, 0.01%)</title><rect x="685.5" y="1365" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="688.55" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (146,359,515 samples, 0.05%)</title><rect x="761.7" y="1093" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="764.68" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (24,507,466 samples, 0.01%)</title><rect x="488.0" y="277" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="490.96" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (26,350,455 samples, 0.01%)</title><rect x="289.7" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="292.73" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,257,942,999 samples, 4.22%)</title><rect x="435.4" y="1301" width="49.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="438.41" y="1311.5" >std::..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (139,554,603 samples, 0.05%)</title><rect x="678.9" y="1077" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="681.93" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,169,707 samples, 0.03%)</title><rect x="259.8" y="1285" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.82" y="1295.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (28,804,730 samples, 0.01%)</title><rect x="716.3" y="1525" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="719.30" y="1535.5" ></text>
</g>
<g >
<title>path_lookupat (39,465,685 samples, 0.01%)</title><rect x="968.4" y="1253" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="971.42" y="1263.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (24,340,746,155 samples, 9.12%)</title><rect x="577.3" y="1413" width="107.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="580.35" y="1423.5" >HttpRequest::..</text>
</g>
<g >
<title>__close (29,821,722 samples, 0.01%)</title><rect x="262.2" y="1397" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="265.18" y="1407.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (28,089,836 samples, 0.01%)</title><rect x="642.2" y="933" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="645.24" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (76,680,205 samples, 0.03%)</title><rect x="62.0" y="1237" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="64.96" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (24,247,623 samples, 0.01%)</title><rect x="761.1" y="1093" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="764.06" y="1103.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (23,647,789 samples, 0.01%)</title><rect x="923.6" y="917" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="926.62" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (27,577,577 samples, 0.01%)</title><rect x="953.4" y="1013" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="956.42" y="1023.5" ></text>
</g>
<g >
<title>malloc (54,385,790 samples, 0.02%)</title><rect x="178.3" y="1013" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="181.26" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,726,007,482 samples, 1.40%)</title><rect x="947.9" y="1141" width="16.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="950.94" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (41,051,890 samples, 0.02%)</title><rect x="334.9" y="1029" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="337.93" y="1039.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (687,484,362 samples, 0.26%)</title><rect x="1027.4" y="1045" width="3.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1030.39" y="1055.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (85,766,454 samples, 0.03%)</title><rect x="926.3" y="917" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="929.27" y="927.5" ></text>
</g>
<g >
<title>[unknown] (24,929,266 samples, 0.01%)</title><rect x="838.6" y="1445" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (111,551,467 samples, 0.04%)</title><rect x="1124.7" y="1653" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1127.66" y="1663.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (98,565,878 samples, 0.04%)</title><rect x="547.5" y="1429" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="550.50" y="1439.5" ></text>
</g>
<g >
<title>handle_mm_fault (36,898,752 samples, 0.01%)</title><rect x="694.4" y="1157" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="697.43" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (75,487,103 samples, 0.03%)</title><rect x="1108.6" y="1125" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1111.55" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (24,336,762 samples, 0.01%)</title><rect x="543.3" y="389" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="546.27" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (50,105,104 samples, 0.02%)</title><rect x="52.6" y="1093" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="55.62" y="1103.5" ></text>
</g>
<g >
<title>do_epoll_ctl (46,715,277 samples, 0.02%)</title><rect x="689.4" y="1221" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="692.37" y="1231.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (27,620,378 samples, 0.01%)</title><rect x="727.0" y="949" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="729.97" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (28,008,566 samples, 0.01%)</title><rect x="795.6" y="1029" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="798.58" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (61,886,034 samples, 0.02%)</title><rect x="436.5" y="1205" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="439.49" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,606,398 samples, 0.01%)</title><rect x="684.1" y="261" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="687.06" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (162,428,177 samples, 0.06%)</title><rect x="1054.4" y="885" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.37" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (40,309,816 samples, 0.02%)</title><rect x="766.5" y="1157" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="769.49" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (30,855,373 samples, 0.01%)</title><rect x="769.9" y="1381" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="772.91" y="1391.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (24,409,183 samples, 0.01%)</title><rect x="1155.7" y="1093" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1158.69" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (88,777,885 samples, 0.03%)</title><rect x="910.2" y="1269" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="913.21" y="1279.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (867,655,510 samples, 0.32%)</title><rect x="1114.6" y="1269" width="3.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1117.61" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (22,740,322 samples, 0.01%)</title><rect x="771.2" y="197" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="774.21" y="207.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (233,238,720 samples, 0.09%)</title><rect x="956.5" y="1029" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="959.54" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (39,170,629 samples, 0.01%)</title><rect x="770.7" y="549" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.71" y="559.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (23,850,023 samples, 0.01%)</title><rect x="986.9" y="1653" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="989.88" y="1663.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (45,618,798 samples, 0.02%)</title><rect x="151.0" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="154.01" y="1663.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (32,017,182 samples, 0.01%)</title><rect x="823.6" y="1189" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="826.56" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (36,574,906 samples, 0.01%)</title><rect x="1054.4" y="357" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.43" y="367.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (269,568,069 samples, 0.10%)</title><rect x="1169.3" y="1285" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1172.27" y="1295.5" ></text>
</g>
<g >
<title>x64_sys_call (547,391,634 samples, 0.20%)</title><rect x="1153.8" y="1205" width="2.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1156.84" y="1215.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (56,285,735 samples, 0.02%)</title><rect x="816.8" y="1029" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="819.83" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (46,936,657 samples, 0.02%)</title><rect x="1062.1" y="933" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1065.12" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (27,770,927 samples, 0.01%)</title><rect x="788.6" y="1061" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="791.64" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (23,689,968 samples, 0.01%)</title><rect x="360.2" y="933" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="363.20" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (47,998,699 samples, 0.02%)</title><rect x="343.6" y="1141" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="346.61" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (44,409,962 samples, 0.02%)</title><rect x="861.3" y="1269" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="864.28" y="1279.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (851,575,515 samples, 0.32%)</title><rect x="406.7" y="1269" width="3.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="409.69" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (43,126,284 samples, 0.02%)</title><rect x="485.2" y="1301" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="488.18" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (68,272,507 samples, 0.03%)</title><rect x="1019.4" y="1013" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1022.39" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (96,555,294 samples, 0.04%)</title><rect x="1108.5" y="1301" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1111.51" y="1311.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (90,786,869 samples, 0.03%)</title><rect x="676.4" y="1045" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="679.45" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (71,555,228 samples, 0.03%)</title><rect x="400.7" y="997" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="403.71" y="1007.5" ></text>
</g>
<g >
<title>HttpRequest::~HttpRequest (23,301,251 samples, 0.01%)</title><rect x="549.1" y="1189" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="552.07" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,804,665,565 samples, 1.42%)</title><rect x="1072.8" y="1205" width="16.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1075.82" y="1215.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (172,127,065 samples, 0.06%)</title><rect x="943.7" y="1061" width="0.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="946.70" y="1071.5" ></text>
</g>
<g >
<title>ip_local_out (94,975,508 samples, 0.04%)</title><rect x="1117.6" y="917" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1120.63" y="927.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (80,269,904 samples, 0.03%)</title><rect x="80.2" y="981" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="83.22" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (64,890,300 samples, 0.02%)</title><rect x="1053.2" y="1237" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1056.19" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (95,155,406 samples, 0.04%)</title><rect x="153.7" y="1157" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="156.66" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_Compiler (24,256,367 samples, 0.01%)</title><rect x="769.1" y="1349" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="772.07" y="1359.5" ></text>
</g>
<g >
<title>_int_free (202,684,123 samples, 0.08%)</title><rect x="851.9" y="1685" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="854.85" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (97,862,482 samples, 0.04%)</title><rect x="824.0" y="1189" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="826.98" y="1199.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (39,669,399 samples, 0.01%)</title><rect x="355.8" y="885" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="358.77" y="895.5" ></text>
</g>
<g >
<title>osq_lock (56,639,567 samples, 0.02%)</title><rect x="263.4" y="1253" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="266.37" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (110,919,823 samples, 0.04%)</title><rect x="205.7" y="805" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.75" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,566,306,653 samples, 4.33%)</title><rect x="435.3" y="1365" width="51.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="438.34" y="1375.5" >std::..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (1,938,401,278 samples, 0.73%)</title><rect x="67.4" y="949" width="8.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="70.36" y="959.5" ></text>
</g>
<g >
<title>ip_list_rcv (27,429,978 samples, 0.01%)</title><rect x="716.3" y="1493" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="719.30" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (223,443,084 samples, 0.08%)</title><rect x="246.1" y="1045" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="249.15" y="1055.5" ></text>
</g>
<g >
<title>evict (46,276,353 samples, 0.02%)</title><rect x="268.2" y="1029" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="271.22" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (292,728,988 samples, 0.11%)</title><rect x="629.3" y="1317" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="632.31" y="1327.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (64,981,150 samples, 0.02%)</title><rect x="577.0" y="1349" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="580.01" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (106,580,966 samples, 0.04%)</title><rect x="628.2" y="1381" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="631.16" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (44,196,645 samples, 0.02%)</title><rect x="205.5" y="629" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.51" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (50,801,521 samples, 0.02%)</title><rect x="825.1" y="1397" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="828.14" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (50,580,045 samples, 0.02%)</title><rect x="343.6" y="1173" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="346.61" y="1183.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (23,511,693 samples, 0.01%)</title><rect x="856.8" y="1429" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="859.80" y="1439.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (216,797,020 samples, 0.08%)</title><rect x="215.5" y="885" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="218.52" y="895.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (652,599,760 samples, 0.24%)</title><rect x="1182.6" y="1493" width="2.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1185.64" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (224,460,293 samples, 0.08%)</title><rect x="104.4" y="1045" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="107.35" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_eliminate_dummy (38,971,318 samples, 0.01%)</title><rect x="768.1" y="1333" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="771.08" y="1343.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (110,612,207 samples, 0.04%)</title><rect x="249.3" y="1045" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="252.32" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (43,521,380 samples, 0.02%)</title><rect x="684.0" y="693" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="687.02" y="703.5" ></text>
</g>
<g >
<title>__sock_release (190,334,353 samples, 0.07%)</title><rect x="1117.4" y="1077" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1120.44" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (62,332,766 samples, 0.02%)</title><rect x="400.7" y="869" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="403.72" y="879.5" ></text>
</g>
<g >
<title>do_syscall_64 (312,740,009 samples, 0.12%)</title><rect x="409.0" y="1173" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="412.01" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (55,928,449 samples, 0.02%)</title><rect x="79.2" y="949" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="82.19" y="959.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (43,147,937 samples, 0.02%)</title><rect x="213.3" y="933" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="216.32" y="943.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (941,235,446 samples, 0.35%)</title><rect x="830.0" y="1365" width="4.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="833.00" y="1375.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (158,799,636 samples, 0.06%)</title><rect x="745.7" y="949" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="748.71" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (51,839,120 samples, 0.02%)</title><rect x="629.5" y="789" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.49" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,470,765 samples, 0.01%)</title><rect x="771.0" y="389" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.98" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (69,009,937 samples, 0.03%)</title><rect x="543.2" y="1077" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="546.18" y="1087.5" ></text>
</g>
<g >
<title>EventLoop::DelChannel (159,682,520 samples, 0.06%)</title><rect x="829.2" y="1317" width="0.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="832.17" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (23,071,911 samples, 0.01%)</title><rect x="436.2" y="1157" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="439.19" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (36,629,866 samples, 0.01%)</title><rect x="1054.7" y="597" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.66" y="607.5" ></text>
</g>
<g >
<title>inet_recvmsg (43,378,155 samples, 0.02%)</title><rect x="547.7" y="1301" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="550.71" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (46,966,743 samples, 0.02%)</title><rect x="903.2" y="1077" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="906.23" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (51,948,395 samples, 0.02%)</title><rect x="903.9" y="1077" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="906.93" y="1087.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (43,973,258 samples, 0.02%)</title><rect x="910.3" y="1125" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="913.34" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_any_matcher_ecma&lt;false, false&gt; (33,039,737 samples, 0.01%)</title><rect x="1002.3" y="1141" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1005.31" y="1151.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;EventLoop::AddChannel (25,876,643 samples, 0.01%)</title><rect x="1158.4" y="1253" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1161.39" y="1263.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_whichword (22,737,424 samples, 0.01%)</title><rect x="905.9" y="1077" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="908.89" y="1087.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (214,930,553 samples, 0.08%)</title><rect x="108.3" y="1029" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="111.30" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (251,178,849 samples, 0.09%)</title><rect x="347.1" y="1141" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.15" y="1151.5" ></text>
</g>
<g >
<title>__x64_sys_openat (105,913,215 samples, 0.04%)</title><rect x="699.8" y="1605" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="702.80" y="1615.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (29,900,590 samples, 0.01%)</title><rect x="1148.9" y="1381" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1151.88" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::assign (28,610,316 samples, 0.01%)</title><rect x="62.7" y="1317" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="65.67" y="1327.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (37,953,034 samples, 0.01%)</title><rect x="322.6" y="965" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="325.64" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (23,751,714 samples, 0.01%)</title><rect x="578.3" y="1157" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="581.33" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (47,844,026 samples, 0.02%)</title><rect x="226.5" y="1061" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="229.48" y="1071.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (24,558,896 samples, 0.01%)</title><rect x="234.2" y="981" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="237.19" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,604,640,378 samples, 1.35%)</title><rect x="772.4" y="1093" width="15.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="775.41" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::_M_default_initialize (27,770,480 samples, 0.01%)</title><rect x="487.6" y="1301" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="490.55" y="1311.5" ></text>
</g>
<g >
<title>vfs_fstatat (88,713,904 samples, 0.03%)</title><rect x="402.7" y="1301" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="405.69" y="1311.5" ></text>
</g>
<g >
<title>x64_sys_call (113,597,786 samples, 0.04%)</title><rect x="275.7" y="1621" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="278.73" y="1631.5" ></text>
</g>
<g >
<title>x64_sys_call (28,205,378 samples, 0.01%)</title><rect x="836.9" y="1413" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="839.86" y="1423.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (367,318,151 samples, 0.14%)</title><rect x="1053.8" y="1381" width="1.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1056.80" y="1391.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (24,556,314 samples, 0.01%)</title><rect x="499.8" y="917" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="502.84" y="927.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (208,510,694 samples, 0.08%)</title><rect x="515.6" y="981" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="518.56" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,418,629 samples, 0.02%)</title><rect x="259.9" y="981" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.87" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (34,446,046 samples, 0.01%)</title><rect x="786.4" y="933" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="789.35" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (59,472,918 samples, 0.02%)</title><rect x="347.2" y="837" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.25" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (26,809,932 samples, 0.01%)</title><rect x="630.0" y="165" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="633.01" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (84,393,692 samples, 0.03%)</title><rect x="215.0" y="901" width="0.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="218.00" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (85,590,193 samples, 0.03%)</title><rect x="966.3" y="1189" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.26" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (202,072,178 samples, 0.08%)</title><rect x="770.6" y="965" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.64" y="975.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (221,378,310 samples, 0.08%)</title><rect x="411.8" y="1221" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="414.75" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,857,449 samples, 0.01%)</title><rect x="1108.6" y="373" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.63" y="383.5" ></text>
</g>
<g >
<title>ip_list_rcv (26,060,877 samples, 0.01%)</title><rect x="292.5" y="1493" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="295.45" y="1503.5" ></text>
</g>
<g >
<title>do_sys_openat2 (97,080,308 samples, 0.04%)</title><rect x="840.3" y="1589" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="843.29" y="1599.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (846,189,392 samples, 0.32%)</title><rect x="406.7" y="1253" width="3.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="409.71" y="1263.5" ></text>
</g>
<g >
<title>x64_sys_call (349,923,377 samples, 0.13%)</title><rect x="545.6" y="1349" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="548.56" y="1359.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (52,460,547 samples, 0.02%)</title><rect x="186.1" y="1013" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="189.09" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (42,371,033 samples, 0.02%)</title><rect x="622.4" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="625.42" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (28,711,057 samples, 0.01%)</title><rect x="1044.4" y="1093" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1047.43" y="1103.5" ></text>
</g>
<g >
<title>handle_softirqs (31,027,564 samples, 0.01%)</title><rect x="443.5" y="1029" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="446.48" y="1039.5" ></text>
</g>
<g >
<title>vfs_statx (61,882,132 samples, 0.02%)</title><rect x="120.5" y="1285" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="123.48" y="1295.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (30,020,484 samples, 0.01%)</title><rect x="881.7" y="1045" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="884.75" y="1055.5" ></text>
</g>
<g >
<title>net_rx_action (31,335,829 samples, 0.01%)</title><rect x="432.9" y="1589" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="435.88" y="1599.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (33,538,728 samples, 0.01%)</title><rect x="402.3" y="1365" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="405.32" y="1375.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (25,162,165 samples, 0.01%)</title><rect x="326.3" y="1061" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="329.29" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (44,630,133 samples, 0.02%)</title><rect x="1076.1" y="1045" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1079.11" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (37,102,838 samples, 0.01%)</title><rect x="339.9" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="342.91" y="1087.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (57,656,994 samples, 0.02%)</title><rect x="266.2" y="1125" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="269.18" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,744,240 samples, 0.01%)</title><rect x="488.0" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.96" y="303.5" ></text>
</g>
<g >
<title>TimerManager::Tick (54,347,820 samples, 0.02%)</title><rect x="131.1" y="1557" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="134.10" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (48,349,817 samples, 0.02%)</title><rect x="856.8" y="1589" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="859.77" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (42,503,181 samples, 0.02%)</title><rect x="81.5" y="1157" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="84.54" y="1167.5" ></text>
</g>
<g >
<title>do_vmi_munmap (279,495,747 samples, 0.10%)</title><rect x="830.8" y="1093" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="833.82" y="1103.5" ></text>
</g>
<g >
<title>vfs_fstatat (99,434,765 samples, 0.04%)</title><rect x="1110.5" y="1301" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1113.48" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,325,730 samples, 0.02%)</title><rect x="205.5" y="693" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.51" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,271,730 samples, 0.02%)</title><rect x="1054.7" y="677" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.65" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (30,544,957 samples, 0.01%)</title><rect x="690.1" y="1157" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="693.09" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,809,932 samples, 0.01%)</title><rect x="630.0" y="149" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="633.01" y="159.5" ></text>
</g>
<g >
<title>__inet_accept (76,046,479 samples, 0.03%)</title><rect x="1167.6" y="1333" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1170.61" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (25,410,148 samples, 0.01%)</title><rect x="911.7" y="165" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.65" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (47,448,773 samples, 0.02%)</title><rect x="60.8" y="1333" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="63.79" y="1343.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (98,889,998 samples, 0.04%)</title><rect x="655.9" y="1013" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="658.93" y="1023.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, long, std::shared_ptr&lt;TimerManager::TimerNode&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (31,741,110 samples, 0.01%)</title><rect x="837.4" y="1493" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="840.39" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (43,711,614 samples, 0.02%)</title><rect x="966.3" y="725" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="969.30" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (79,982,705 samples, 0.03%)</title><rect x="375.2" y="997" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="378.21" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,822,759,243 samples, 1.43%)</title><rect x="489.5" y="1189" width="16.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.50" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (47,817,838 samples, 0.02%)</title><rect x="621.7" y="1077" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="624.69" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (288,960,909 samples, 0.11%)</title><rect x="911.4" y="1333" width="1.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="914.41" y="1343.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (110,074,375 samples, 0.04%)</title><rect x="673.5" y="1045" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="676.48" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (55,125,411 samples, 0.02%)</title><rect x="930.0" y="1173" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="933.03" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (69,249,524 samples, 0.03%)</title><rect x="1108.6" y="1109" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.56" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,557,202 samples, 0.01%)</title><rect x="488.4" y="389" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.38" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (432,308,364 samples, 0.16%)</title><rect x="972.6" y="1173" width="1.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="975.62" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (101,867,184 samples, 0.04%)</title><rect x="824.0" y="1237" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="826.96" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (2,007,775,097 samples, 0.75%)</title><rect x="84.4" y="1061" width="8.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="87.42" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (46,896,112 samples, 0.02%)</title><rect x="485.5" y="1333" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="488.53" y="1343.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (31,899,123 samples, 0.01%)</title><rect x="1109.3" y="1381" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1112.30" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (56,654,393 samples, 0.02%)</title><rect x="59.6" y="1173" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="62.56" y="1183.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (85,077,768 samples, 0.03%)</title><rect x="54.2" y="1077" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="57.18" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (259,416,193 samples, 0.10%)</title><rect x="487.7" y="1285" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.72" y="1295.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (75,031,512 samples, 0.03%)</title><rect x="772.0" y="1381" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="774.96" y="1391.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (84,313,991 samples, 0.03%)</title><rect x="694.4" y="1205" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="697.38" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (44,973,449 samples, 0.02%)</title><rect x="634.8" y="933" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="637.78" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (442,184,518 samples, 0.17%)</title><rect x="11.0" y="1285" width="1.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.97" y="1295.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (136,631,007 samples, 0.05%)</title><rect x="958.7" y="1061" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="961.74" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (117,024,768 samples, 0.04%)</title><rect x="332.3" y="1029" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="335.26" y="1039.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (175,177,403 samples, 0.07%)</title><rect x="1048.0" y="1109" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1051.04" y="1119.5" ></text>
</g>
<g >
<title>____fput (36,823,531 samples, 0.01%)</title><rect x="124.7" y="1093" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="127.75" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_close (319,659,402 samples, 0.12%)</title><rect x="832.5" y="1141" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="835.53" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,179,194 samples, 0.02%)</title><rect x="488.4" y="661" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.36" y="671.5" ></text>
</g>
<g >
<title>[unknown] (24,522,518 samples, 0.01%)</title><rect x="838.6" y="1413" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1423.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,127,723,230 samples, 0.42%)</title><rect x="405.7" y="1445" width="5.0" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="408.74" y="1455.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (76,496,641 samples, 0.03%)</title><rect x="1085.4" y="1029" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1088.44" y="1039.5" ></text>
</g>
<g >
<title>__fget_light (25,501,144 samples, 0.01%)</title><rect x="1149.4" y="1349" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1152.41" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (178,169,849 samples, 0.07%)</title><rect x="455.3" y="1077" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="458.32" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,404,868 samples, 0.01%)</title><rect x="1054.9" y="389" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.88" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (32,030,949 samples, 0.01%)</title><rect x="396.6" y="1093" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="399.62" y="1103.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (63,457,320 samples, 0.02%)</title><rect x="910.3" y="1189" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="913.28" y="1199.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (29,724,509 samples, 0.01%)</title><rect x="530.6" y="1077" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="533.60" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (26,624,124 samples, 0.01%)</title><rect x="496.2" y="933" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="499.22" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (31,212,715 samples, 0.01%)</title><rect x="1054.4" y="245" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.44" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (27,230,023 samples, 0.01%)</title><rect x="39.5" y="1045" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="42.53" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (44,804,681 samples, 0.02%)</title><rect x="626.5" y="1253" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="629.47" y="1263.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (57,423,043 samples, 0.02%)</title><rect x="204.3" y="1173" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="207.30" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (103,536,452 samples, 0.04%)</title><rect x="347.5" y="709" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.54" y="719.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (104,049,385 samples, 0.04%)</title><rect x="345.9" y="1317" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="348.85" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (47,718,230 samples, 0.02%)</title><rect x="859.0" y="1285" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="862.01" y="1295.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (175,793,997 samples, 0.07%)</title><rect x="112.8" y="1093" width="0.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="115.81" y="1103.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (36,491,397 samples, 0.01%)</title><rect x="888.0" y="1045" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="891.01" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,234,113,670 samples, 4.21%)</title><rect x="11.0" y="1333" width="49.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.96" y="1343.5" >std::..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (27,915,761 samples, 0.01%)</title><rect x="1104.4" y="1093" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1107.37" y="1103.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (28,044,062 samples, 0.01%)</title><rect x="747.3" y="1045" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="750.31" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (1,743,006,570 samples, 0.65%)</title><rect x="317.8" y="1061" width="7.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="320.79" y="1071.5" ></text>
</g>
<g >
<title>__dynamic_cast (45,507,554 samples, 0.02%)</title><rect x="368.4" y="1045" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="371.41" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (83,616,528 samples, 0.03%)</title><rect x="1080.0" y="1029" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1082.98" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (262,119,556 samples, 0.10%)</title><rect x="629.3" y="1285" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.31" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,687,066 samples, 0.01%)</title><rect x="205.5" y="341" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.54" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,539,892,354 samples, 1.33%)</title><rect x="349.1" y="1029" width="15.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="352.08" y="1039.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (78,100,865 samples, 0.03%)</title><rect x="674.5" y="965" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="677.48" y="975.5" ></text>
</g>
<g >
<title>std::function&lt;void  (69,424,028 samples, 0.03%)</title><rect x="1001.1" y="1397" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1004.06" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (205,482,281 samples, 0.08%)</title><rect x="1054.3" y="1125" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.28" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,808,200 samples, 0.01%)</title><rect x="259.9" y="549" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.90" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,474,667 samples, 0.02%)</title><rect x="487.9" y="693" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.91" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,476,817,748 samples, 4.30%)</title><rect x="577.4" y="1381" width="50.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="580.44" y="1391.5" >std::..</text>
</g>
<g >
<title>__tcp_close (160,996,969 samples, 0.06%)</title><rect x="975.2" y="1029" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="978.21" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,696,142 samples, 0.01%)</title><rect x="118.4" y="581" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.37" y="591.5" ></text>
</g>
<g >
<title>operator delete (68,634,731 samples, 0.03%)</title><rect x="1129.9" y="1669" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1132.93" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,632,318 samples, 0.01%)</title><rect x="629.5" y="389" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.54" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (55,926,804 samples, 0.02%)</title><rect x="400.7" y="789" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="403.73" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (29,796,535 samples, 0.01%)</title><rect x="191.1" y="1013" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="194.05" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (151,931,520 samples, 0.06%)</title><rect x="175.2" y="1045" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="178.24" y="1055.5" ></text>
</g>
<g >
<title>rep_movs_alternative (100,239,624 samples, 0.04%)</title><rect x="411.3" y="1221" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="414.26" y="1231.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_destroy (23,281,961 samples, 0.01%)</title><rect x="346.1" y="1077" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="349.13" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (5,500,210,304 samples, 2.06%)</title><rect x="586.4" y="1093" width="24.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="589.44" y="1103.5" >s..</text>
</g>
<g >
<title>sysvec_hyperv_callback (34,507,917 samples, 0.01%)</title><rect x="443.5" y="1077" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="446.47" y="1087.5" ></text>
</g>
<g >
<title>irq_exit_rcu (33,514,702 samples, 0.01%)</title><rect x="161.5" y="1061" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="164.55" y="1071.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (38,475,437 samples, 0.01%)</title><rect x="513.2" y="1045" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="516.18" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,741,394,081 samples, 1.40%)</title><rect x="913.2" y="1093" width="16.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="916.21" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (26,599,687 samples, 0.01%)</title><rect x="966.3" y="437" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="969.34" y="447.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (342,379,439 samples, 0.13%)</title><rect x="1084.3" y="1061" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1087.33" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (22,694,107 samples, 0.01%)</title><rect x="767.9" y="1221" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="770.86" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (42,803,615 samples, 0.02%)</title><rect x="259.9" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.89" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (40,352,106 samples, 0.02%)</title><rect x="347.3" y="549" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.29" y="559.5" ></text>
</g>
<g >
<title>handle_softirqs (35,270,288 samples, 0.01%)</title><rect x="292.4" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="295.45" y="1615.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (25,134,318 samples, 0.01%)</title><rect x="774.4" y="949" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="777.44" y="959.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="565" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="575.5" ></text>
</g>
<g >
<title>napi_complete_done (28,415,830 samples, 0.01%)</title><rect x="831.4" y="869" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="834.43" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (223,914,283 samples, 0.08%)</title><rect x="1054.2" y="1237" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1057.22" y="1247.5" ></text>
</g>
<g >
<title>ksys_read (99,261,027 samples, 0.04%)</title><rect x="828.5" y="1365" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="831.51" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,909,862,211 samples, 4.46%)</title><rect x="913.1" y="1381" width="52.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="916.09" y="1391.5" >std::..</text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (34,821,460 samples, 0.01%)</title><rect x="943.4" y="997" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="946.42" y="1007.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (27,740,805 samples, 0.01%)</title><rect x="768.8" y="1253" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="771.75" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,213,861 samples, 0.01%)</title><rect x="400.8" y="405" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.77" y="415.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (12,146,513,927 samples, 4.55%)</title><rect x="718.6" y="1397" width="53.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="721.62" y="1407.5" >HttpR..</text>
</g>
<g >
<title>net_rx_action (32,269,264 samples, 0.01%)</title><rect x="408.1" y="917" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="411.05" y="927.5" ></text>
</g>
<g >
<title>___slab_alloc (48,599,290 samples, 0.02%)</title><rect x="1175.5" y="1253" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1178.46" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (231,418,573 samples, 0.09%)</title><rect x="1054.2" y="1269" width="1.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1057.20" y="1279.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (26,524,536 samples, 0.01%)</title><rect x="537.4" y="1045" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="540.35" y="1055.5" ></text>
</g>
<g >
<title>HttpResponse::~HttpResponse (34,278,781 samples, 0.01%)</title><rect x="124.4" y="1189" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="127.44" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::~_BracketMatcher (26,404,456 samples, 0.01%)</title><rect x="907.1" y="1157" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="910.14" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (28,126,832 samples, 0.01%)</title><rect x="556.9" y="1557" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (103,838,011 samples, 0.04%)</title><rect x="400.7" y="1317" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="403.67" y="1327.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (65,991,699 samples, 0.02%)</title><rect x="859.0" y="1349" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="861.98" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (293,700,626 samples, 0.11%)</title><rect x="126.5" y="1173" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="129.48" y="1183.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (42,018,356 samples, 0.02%)</title><rect x="14.7" y="1109" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="17.67" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (64,974,209 samples, 0.02%)</title><rect x="684.0" y="981" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="686.99" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (233,008,802 samples, 0.09%)</title><rect x="743.0" y="1029" width="1.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="745.98" y="1039.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (24,934,780 samples, 0.01%)</title><rect x="993.6" y="1589" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="996.58" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,718,294 samples, 0.02%)</title><rect x="259.9" y="917" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.88" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (27,650,152 samples, 0.01%)</title><rect x="1054.7" y="405" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.68" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,507,946 samples, 0.02%)</title><rect x="63.2" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.22" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (45,631,658 samples, 0.02%)</title><rect x="544.3" y="1365" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="547.25" y="1375.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (12,035,265,740 samples, 4.51%)</title><rect x="207.1" y="1397" width="53.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="210.06" y="1407.5" >HttpR..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (2,218,703,514 samples, 0.83%)</title><rect x="456.4" y="1077" width="9.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="459.44" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (190,949,616 samples, 0.07%)</title><rect x="347.2" y="901" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.24" y="911.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (56,792,077 samples, 0.02%)</title><rect x="361.0" y="917" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="364.04" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (26,110,057 samples, 0.01%)</title><rect x="220.9" y="949" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="223.91" y="959.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (80,154,280 samples, 0.03%)</title><rect x="29.6" y="1077" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="32.59" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (951,981,098 samples, 0.36%)</title><rect x="565.5" y="1669" width="4.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="568.51" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,714,706,135 samples, 4.01%)</title><rect x="12.9" y="1285" width="47.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="15.95" y="1295.5" >std:..</text>
</g>
<g >
<title>__dynamic_cast (52,245,248 samples, 0.02%)</title><rect x="84.9" y="1045" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="87.92" y="1055.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*&gt; (39,944,133 samples, 0.01%)</title><rect x="1033.2" y="1045" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1036.24" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (44,417,714 samples, 0.02%)</title><rect x="824.1" y="597" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.06" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,898,930,593 samples, 1.46%)</title><rect x="913.1" y="1221" width="17.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="916.12" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (49,379,824 samples, 0.02%)</title><rect x="195.0" y="1093" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="198.01" y="1103.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (55,201,011 samples, 0.02%)</title><rect x="671.6" y="1077" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="674.65" y="1087.5" ></text>
</g>
<g >
<title>do_epoll_ctl (39,399,519 samples, 0.01%)</title><rect x="434.9" y="1237" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="437.87" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (88,658,741 samples, 0.03%)</title><rect x="547.5" y="1413" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="550.54" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (32,734,807 samples, 0.01%)</title><rect x="803.7" y="1061" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="806.69" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (45,957,621 samples, 0.02%)</title><rect x="12.2" y="1141" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="15.16" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (41,496,904 samples, 0.02%)</title><rect x="414.9" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="417.93" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (26,795,167 samples, 0.01%)</title><rect x="379.9" y="1061" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="382.90" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,179,053 samples, 0.01%)</title><rect x="63.2" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.24" y="591.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (201,589,768 samples, 0.08%)</title><rect x="1119.7" y="1221" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1122.70" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (47,803,771 samples, 0.02%)</title><rect x="934.5" y="1045" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="937.50" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (347,536,147 samples, 0.13%)</title><rect x="352.8" y="933" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="355.82" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (49,370,939 samples, 0.02%)</title><rect x="205.5" y="709" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.50" y="719.5" ></text>
</g>
<g >
<title>do_user_addr_fault (78,769,898 samples, 0.03%)</title><rect x="694.4" y="1173" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="697.39" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (85,437,649 samples, 0.03%)</title><rect x="628.2" y="1253" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="631.24" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (255,997,371 samples, 0.10%)</title><rect x="629.3" y="1253" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.33" y="1263.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (87,984,242 samples, 0.03%)</title><rect x="691.0" y="1045" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="694.04" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (71,023,801 samples, 0.03%)</title><rect x="400.7" y="981" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.71" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (81,255,131 samples, 0.03%)</title><rect x="118.3" y="1125" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="121.30" y="1135.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (391,121,334 samples, 0.15%)</title><rect x="1028.3" y="981" width="1.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1031.31" y="991.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (33,436,991 samples, 0.01%)</title><rect x="774.7" y="933" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="777.66" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (25,054,162 samples, 0.01%)</title><rect x="488.2" y="437" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="491.22" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,799,076,945 samples, 2.92%)</title><rect x="64.8" y="1285" width="34.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="67.82" y="1295.5" >st..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,678,229,468 samples, 1.38%)</title><rect x="65.0" y="1061" width="16.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="67.96" y="1071.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (2,299,854,398 samples, 0.86%)</title><rect x="1151.7" y="1365" width="10.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1154.72" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_State&lt;char&gt; &gt;::construct&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt; &gt; (24,813,328 samples, 0.01%)</title><rect x="295.2" y="1013" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="298.20" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (63,587,087 samples, 0.02%)</title><rect x="1002.8" y="1189" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1005.79" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_add_char (36,751,064 samples, 0.01%)</title><rect x="13.4" y="1157" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="16.37" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (30,375,348 samples, 0.01%)</title><rect x="667.2" y="1093" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="670.17" y="1103.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (29,861,603 samples, 0.01%)</title><rect x="270.8" y="1093" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="273.84" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,670,416,824 samples, 1.37%)</title><rect x="207.2" y="1093" width="16.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="210.22" y="1103.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (29,065,150 samples, 0.01%)</title><rect x="950.2" y="1077" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="953.15" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (46,986,427 samples, 0.02%)</title><rect x="792.4" y="1045" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="795.38" y="1055.5" ></text>
</g>
<g >
<title>__dynamic_cast (47,936,342 samples, 0.02%)</title><rect x="792.0" y="1045" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="795.00" y="1055.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (217,978,081 samples, 0.08%)</title><rect x="1067.2" y="933" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1070.23" y="943.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (51,920,981 samples, 0.02%)</title><rect x="1175.5" y="1269" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1178.46" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,841,218,621 samples, 1.44%)</title><rect x="1072.8" y="1237" width="17.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1075.81" y="1247.5" ></text>
</g>
<g >
<title>EventLoop::Loop (27,408,746,954 samples, 10.26%)</title><rect x="1000.9" y="1573" width="121.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1003.91" y="1583.5" >EventLoop::Loop</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (105,014,334 samples, 0.04%)</title><rect x="130.3" y="1525" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="133.35" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (40,037,773 samples, 0.01%)</title><rect x="930.0" y="1093" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="933.04" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (27,648,181 samples, 0.01%)</title><rect x="295.8" y="1157" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="298.82" y="1167.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (36,408,873 samples, 0.01%)</title><rect x="432.9" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="435.87" y="1663.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::erase (32,195,074 samples, 0.01%)</title><rect x="265.5" y="1301" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="268.53" y="1311.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (62,859,095 samples, 0.02%)</title><rect x="116.0" y="1109" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="118.97" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (27,770,691 samples, 0.01%)</title><rect x="680.0" y="1093" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="682.98" y="1103.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (426,395,193 samples, 0.16%)</title><rect x="346.6" y="1381" width="1.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="349.60" y="1391.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (29,942,767 samples, 0.01%)</title><rect x="745.0" y="981" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="747.98" y="991.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (249,508,176 samples, 0.09%)</title><rect x="656.4" y="1013" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="659.44" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (27,284,693 samples, 0.01%)</title><rect x="42.4" y="1061" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="45.39" y="1071.5" ></text>
</g>
<g >
<title>vfs_writev (422,397,757 samples, 0.16%)</title><rect x="128.4" y="1349" width="1.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="131.35" y="1359.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (393,380,467 samples, 0.15%)</title><rect x="185.1" y="1061" width="1.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="188.12" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_less_val (46,302,429 samples, 0.02%)</title><rect x="301.7" y="1093" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="304.68" y="1103.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (25,586,145,911 samples, 9.58%)</title><rect x="10.4" y="1493" width="113.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.36" y="1503.5" >std::__invoke..</text>
</g>
<g >
<title>__dynamic_cast (84,043,930 samples, 0.03%)</title><rect x="841.6" y="1637" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="844.57" y="1647.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (233,618,499 samples, 0.09%)</title><rect x="1098.4" y="1045" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1101.42" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,809,626 samples, 0.01%)</title><rect x="911.7" y="101" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.66" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (26,381,256 samples, 0.01%)</title><rect x="325.1" y="997" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="328.14" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,487,051,680 samples, 1.31%)</title><rect x="665.9" y="1109" width="15.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="668.94" y="1119.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (28,415,830 samples, 0.01%)</title><rect x="831.4" y="853" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="834.43" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (31,019,793 samples, 0.01%)</title><rect x="667.3" y="1093" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="670.30" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (33,849,928 samples, 0.01%)</title><rect x="226.1" y="1061" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="229.15" y="1071.5" ></text>
</g>
<g >
<title>_int_free (192,124,834 samples, 0.07%)</title><rect x="145.9" y="1685" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="148.86" y="1695.5" ></text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (419,274,612 samples, 0.16%)</title><rect x="770.1" y="1365" width="1.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="773.08" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,762,880,515 samples, 1.41%)</title><rect x="348.9" y="1253" width="16.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="351.92" y="1263.5" ></text>
</g>
<g >
<title>x64_sys_call (61,589,229 samples, 0.02%)</title><rect x="548.4" y="1253" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="551.39" y="1263.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (844,542,747 samples, 0.32%)</title><rect x="689.9" y="1269" width="3.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="692.93" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (34,381,320 samples, 0.01%)</title><rect x="248.1" y="1077" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="251.11" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (36,629,866 samples, 0.01%)</title><rect x="1054.7" y="581" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.66" y="591.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (41,393,473 samples, 0.02%)</title><rect x="259.4" y="1205" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="262.37" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (104,955,264 samples, 0.04%)</title><rect x="165.7" y="1077" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="168.73" y="1087.5" ></text>
</g>
<g >
<title>ip_queue_xmit (92,112,244 samples, 0.03%)</title><rect x="692.9" y="949" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="695.88" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (25,642,113 samples, 0.01%)</title><rect x="1051.6" y="1253" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1054.63" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (3,246,510,795 samples, 1.22%)</title><rect x="131.5" y="1685" width="14.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="134.47" y="1695.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (25,876,520 samples, 0.01%)</title><rect x="595.7" y="1077" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="598.71" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (837,900,862 samples, 0.31%)</title><rect x="690.0" y="1221" width="3.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="692.95" y="1231.5" ></text>
</g>
<g >
<title>getname_flags (28,124,780 samples, 0.01%)</title><rect x="825.9" y="1285" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="828.94" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,096,734 samples, 0.01%)</title><rect x="63.7" y="389" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.71" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (41,770,166 samples, 0.02%)</title><rect x="1119.3" y="1157" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1122.32" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (194,693,954 samples, 0.07%)</title><rect x="347.2" y="949" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.22" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (45,940,481 samples, 0.02%)</title><rect x="543.2" y="725" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="546.23" y="735.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,615,638,547 samples, 0.61%)</title><rect x="264.9" y="1509" width="7.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="267.87" y="1519.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::AddChannel (118,231,844 samples, 0.04%)</title><rect x="696.0" y="1493" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="698.98" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,472,724 samples, 0.02%)</title><rect x="771.2" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="774.18" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (61,675,343 samples, 0.02%)</title><rect x="824.0" y="837" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="827.03" y="847.5" ></text>
</g>
<g >
<title>__destroy_inode (26,257,390 samples, 0.01%)</title><rect x="832.7" y="997" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="835.69" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (61,618,946 samples, 0.02%)</title><rect x="510.0" y="1045" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="513.03" y="1055.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (105,039,043 samples, 0.04%)</title><rect x="769.3" y="1333" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="772.32" y="1343.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (76,654,547 samples, 0.03%)</title><rect x="957.0" y="965" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="959.96" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (159,316,099 samples, 0.06%)</title><rect x="616.9" y="1045" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="619.87" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,122,564 samples, 0.01%)</title><rect x="771.2" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="774.20" y="303.5" ></text>
</g>
<g >
<title>operator new (46,670,334 samples, 0.02%)</title><rect x="884.4" y="1013" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="887.39" y="1023.5" ></text>
</g>
<g >
<title>std::function&lt;void  (67,689,924 samples, 0.03%)</title><rect x="577.0" y="1397" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="579.99" y="1407.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (116,393,323 samples, 0.04%)</title><rect x="1086.1" y="1045" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1089.08" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,269,192 samples, 0.02%)</title><rect x="824.1" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.06" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,710,172,286 samples, 1.39%)</title><rect x="348.9" y="1205" width="16.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="351.92" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (26,250,389 samples, 0.01%)</title><rect x="206.0" y="197" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="208.98" y="207.5" ></text>
</g>
<g >
<title>do_iter_write (431,601,680 samples, 0.16%)</title><rect x="270.0" y="1333" width="1.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="272.99" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (47,299,334 samples, 0.02%)</title><rect x="965.8" y="1253" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="968.77" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (26,669,584 samples, 0.01%)</title><rect x="488.0" y="325" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="490.95" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (32,230,418 samples, 0.01%)</title><rect x="504.5" y="949" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="507.46" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (83,203,506 samples, 0.03%)</title><rect x="400.7" y="1157" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="403.70" y="1167.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (37,036,969 samples, 0.01%)</title><rect x="585.6" y="1093" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="588.57" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,536,339 samples, 0.01%)</title><rect x="684.0" y="549" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.04" y="559.5" ></text>
</g>
<g >
<title>operator delete[] (44,184,153 samples, 0.02%)</title><rect x="564.1" y="1669" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="567.13" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;,  (47,359,521 samples, 0.02%)</title><rect x="768.7" y="1285" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="771.71" y="1295.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (42,290,728 samples, 0.02%)</title><rect x="151.0" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="154.01" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (30,516,420 samples, 0.01%)</title><rect x="1108.6" y="469" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1111.63" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (45,938,103 samples, 0.02%)</title><rect x="788.6" y="1173" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="791.59" y="1183.5" ></text>
</g>
<g >
<title>get_unmapped_area (29,332,627 samples, 0.01%)</title><rect x="121.1" y="1269" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="124.07" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (78,566,566 samples, 0.03%)</title><rect x="1009.2" y="1093" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1012.18" y="1103.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (60,966,428 samples, 0.02%)</title><rect x="1115.0" y="1125" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1118.02" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (10,558,366,269 samples, 3.95%)</title><rect x="1003.9" y="1173" width="46.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1006.90" y="1183.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,558,461 samples, 0.01%)</title><rect x="400.8" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.78" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (45,328,690 samples, 0.02%)</title><rect x="667.5" y="1093" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="670.53" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (27,847,781 samples, 0.01%)</title><rect x="106.3" y="1061" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="109.28" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (294,686,431 samples, 0.11%)</title><rect x="549.6" y="1125" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="552.64" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (194,412,143 samples, 0.07%)</title><rect x="205.4" y="1013" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.44" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (206,965,234 samples, 0.08%)</title><rect x="205.4" y="1077" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.42" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (39,337,761 samples, 0.01%)</title><rect x="626.1" y="1125" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="629.10" y="1135.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (324,488,975 samples, 0.12%)</title><rect x="500.8" y="949" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="503.84" y="959.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (112,363,021 samples, 0.04%)</title><rect x="813.8" y="1045" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="816.76" y="1055.5" ></text>
</g>
<g >
<title>__strlen_avx2 (206,788,492 samples, 0.08%)</title><rect x="285.2" y="1653" width="0.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="288.17" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (26,899,480 samples, 0.01%)</title><rect x="205.5" y="197" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.55" y="207.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (23,195,903 samples, 0.01%)</title><rect x="1107.8" y="1301" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1110.78" y="1311.5" ></text>
</g>
<g >
<title>sock_read_iter (58,386,143 samples, 0.02%)</title><rect x="1113.3" y="1333" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1116.26" y="1343.5" ></text>
</g>
<g >
<title>__ip_local_out (52,418,204 samples, 0.02%)</title><rect x="129.2" y="1125" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="132.19" y="1135.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (23,212,463 samples, 0.01%)</title><rect x="1082.0" y="901" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1084.99" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (35,524,214 samples, 0.01%)</title><rect x="400.2" y="1237" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="403.23" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (350,709,583 samples, 0.13%)</title><rect x="1031.1" y="1045" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1034.08" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,476,358 samples, 0.02%)</title><rect x="770.7" y="693" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.67" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1,031,585,783 samples, 0.39%)</title><rect x="732.4" y="1077" width="4.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="735.36" y="1087.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (27,461,525,407 samples, 10.28%)</title><rect x="434.6" y="1669" width="121.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="437.62" y="1679.5" >std::thread::_S..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::emplace_back&lt;char&gt; (33,194,360 samples, 0.01%)</title><rect x="1004.0" y="1125" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1007.04" y="1135.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (25,436,004 samples, 0.01%)</title><rect x="543.9" y="1365" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="546.95" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (83,941,040 samples, 0.03%)</title><rect x="400.7" y="1221" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.69" y="1231.5" ></text>
</g>
<g >
<title>do_epoll_wait (28,742,462 samples, 0.01%)</title><rect x="837.2" y="1461" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="840.17" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (190,736,373 samples, 0.07%)</title><rect x="918.1" y="885" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="921.11" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (38,509,998 samples, 0.01%)</title><rect x="309.8" y="1061" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="312.85" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (92,764,070 samples, 0.03%)</title><rect x="683.9" y="1269" width="0.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="686.94" y="1279.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (84,755,664 samples, 0.03%)</title><rect x="97.9" y="1093" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="100.92" y="1103.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (24,051,575 samples, 0.01%)</title><rect x="400.3" y="1125" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="403.26" y="1135.5" ></text>
</g>
<g >
<title>std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, TimerManager::TimerCmp&gt; (33,500,371 samples, 0.01%)</title><rect x="413.7" y="1525" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="416.75" y="1535.5" ></text>
</g>
<g >
<title>__strxfrm_l (240,288,435 samples, 0.09%)</title><rect x="144.6" y="1653" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="147.64" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,780,375,736 samples, 4.41%)</title><rect x="913.1" y="1317" width="52.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="916.12" y="1327.5" >std::..</text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (225,075,793 samples, 0.08%)</title><rect x="656.6" y="997" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="659.55" y="1007.5" ></text>
</g>
<g >
<title>malloc_consolidate (49,816,123 samples, 0.02%)</title><rect x="1189.4" y="1685" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.43" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (640,514,559 samples, 0.24%)</title><rect x="955.5" y="1061" width="2.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="958.48" y="1071.5" ></text>
</g>
<g >
<title>ip_finish_output2 (69,450,580 samples, 0.03%)</title><rect x="977.7" y="1077" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="980.74" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (212,896,226 samples, 0.08%)</title><rect x="229.0" y="1013" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="232.04" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (24,624,614 samples, 0.01%)</title><rect x="244.9" y="1077" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="247.90" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,788,907,901 samples, 1.42%)</title><rect x="1055.9" y="1221" width="16.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1058.88" y="1231.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (235,987,985 samples, 0.09%)</title><rect x="797.4" y="997" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="800.43" y="1007.5" ></text>
</g>
<g >
<title>security_file_alloc (55,242,135 samples, 0.02%)</title><rect x="1175.0" y="1269" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1178.00" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,775,454 samples, 0.02%)</title><rect x="966.3" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.30" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (49,182,421 samples, 0.02%)</title><rect x="1054.4" y="741" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.40" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (103,089,990 samples, 0.04%)</title><rect x="911.9" y="725" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.87" y="735.5" ></text>
</g>
<g >
<title>malloc (663,565,399 samples, 0.25%)</title><rect x="572.4" y="1685" width="2.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="575.36" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (26,860,771 samples, 0.01%)</title><rect x="672.1" y="1061" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="675.11" y="1071.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (501,095,501 samples, 0.19%)</title><rect x="473.5" y="1093" width="2.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="476.49" y="1103.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (69,804,914 samples, 0.03%)</title><rect x="859.0" y="1413" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="861.97" y="1423.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (78,072,524 samples, 0.03%)</title><rect x="500.2" y="901" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="503.20" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (23,184,472 samples, 0.01%)</title><rect x="202.7" y="1237" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="205.71" y="1247.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (71,267,048 samples, 0.03%)</title><rect x="322.2" y="933" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="325.22" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (351,796,487 samples, 0.13%)</title><rect x="1145.4" y="1413" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1148.43" y="1423.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (41,041,035 samples, 0.02%)</title><rect x="577.8" y="1045" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="580.75" y="1055.5" ></text>
</g>
<g >
<title>vfs_read (91,648,982 samples, 0.03%)</title><rect x="828.5" y="1349" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="831.55" y="1359.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char*&gt; (24,480,490 samples, 0.01%)</title><rect x="463.4" y="965" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="466.43" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (89,496,346 samples, 0.03%)</title><rect x="405.2" y="1429" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="408.19" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,732,953 samples, 0.01%)</title><rect x="400.8" y="485" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.77" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (361,603,193 samples, 0.14%)</title><rect x="386.4" y="1077" width="1.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="389.35" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (67,541,321 samples, 0.03%)</title><rect x="92.9" y="997" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="95.90" y="1007.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (27,063,542,207 samples, 10.13%)</title><rect x="718.1" y="1685" width="119.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="721.06" y="1695.5" >[libstdc++.so...</text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (218,050,987 samples, 0.08%)</title><rect x="891.4" y="1045" width="1.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="894.41" y="1055.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*&gt; (37,143,466 samples, 0.01%)</title><rect x="326.0" y="1045" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="329.02" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (390,659,658 samples, 0.15%)</title><rect x="952.0" y="1077" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="955.01" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,955,350 samples, 0.02%)</title><rect x="1054.4" y="661" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.42" y="671.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (76,995,250 samples, 0.03%)</title><rect x="294.3" y="1381" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="297.30" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,996,131,882 samples, 1.50%)</title><rect x="665.2" y="1269" width="17.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="668.17" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::operator= (23,943,862 samples, 0.01%)</title><rect x="64.2" y="1285" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="67.18" y="1295.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (232,795,790 samples, 0.09%)</title><rect x="817.7" y="1077" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="820.72" y="1087.5" ></text>
</g>
<g >
<title>Channel::OnEvents (26,823,727,647 samples, 10.05%)</title><rect x="718.1" y="1557" width="118.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="721.08" y="1567.5" >Channel::OnEve..</text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (56,408,585 samples, 0.02%)</title><rect x="767.0" y="1141" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="770.05" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (30,069,101 samples, 0.01%)</title><rect x="487.9" y="405" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="490.94" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (45,540,244 samples, 0.02%)</title><rect x="774.6" y="949" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="777.61" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (126,114,739 samples, 0.05%)</title><rect x="1110.4" y="1365" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1113.36" y="1375.5" ></text>
</g>
<g >
<title>sock_read_iter (66,463,543 samples, 0.02%)</title><rect x="264.5" y="1333" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="267.49" y="1343.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (90,635,884 samples, 0.03%)</title><rect x="121.9" y="1269" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="124.89" y="1279.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (85,447,721 samples, 0.03%)</title><rect x="1119.3" y="1205" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1122.28" y="1215.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (47,012,408 samples, 0.02%)</title><rect x="1052.5" y="1317" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1055.48" y="1327.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (225,301,115 samples, 0.08%)</title><rect x="1047.8" y="1125" width="1.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1050.82" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (90,779,595 samples, 0.03%)</title><rect x="259.8" y="1301" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="262.81" y="1311.5" ></text>
</g>
<g >
<title>Channel::OnEvents (26,901,964,237 samples, 10.07%)</title><rect x="294.2" y="1557" width="118.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="297.18" y="1567.5" >Channel::OnEve..</text>
</g>
<g >
<title>vm_unmapped_area (29,800,077 samples, 0.01%)</title><rect x="686.7" y="1221" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="689.72" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (33,236,197 samples, 0.01%)</title><rect x="504.2" y="933" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="507.18" y="943.5" ></text>
</g>
<g >
<title>ip_local_deliver (26,289,388 samples, 0.01%)</title><rect x="1170.6" y="1077" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1173.58" y="1087.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (26,286,502 samples, 0.01%)</title><rect x="125.5" y="789" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="128.50" y="799.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,212,497,324 samples, 10.19%)</title><rect x="152.8" y="1653" width="120.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="155.81" y="1663.5" >std::thread::_..</text>
</g>
<g >
<title>__netif_receive_skb_list_core (34,071,873 samples, 0.01%)</title><rect x="1141.3" y="1509" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1144.32" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,424,634 samples, 0.02%)</title><rect x="118.3" y="1061" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.32" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (40,661,797 samples, 0.02%)</title><rect x="194.8" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="197.82" y="1087.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (128,650,873 samples, 0.05%)</title><rect x="374.1" y="949" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="377.05" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (33,149,941 samples, 0.01%)</title><rect x="157.3" y="1109" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="160.28" y="1119.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (162,818,065 samples, 0.06%)</title><rect x="1119.7" y="1189" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1122.74" y="1199.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (26,626,221 samples, 0.01%)</title><rect x="1009.9" y="949" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1012.91" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (117,314,511 samples, 0.04%)</title><rect x="74.3" y="901" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="77.34" y="911.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (38,856,198 samples, 0.01%)</title><rect x="292.4" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="295.44" y="1663.5" ></text>
</g>
<g >
<title>__fput (33,826,857 samples, 0.01%)</title><rect x="1115.1" y="1077" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1118.09" y="1087.5" ></text>
</g>
<g >
<title>tcp_write_xmit (143,705,161 samples, 0.05%)</title><rect x="268.7" y="981" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="271.65" y="991.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (243,646,974 samples, 0.09%)</title><rect x="942.5" y="1045" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="945.50" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (26,096,766 samples, 0.01%)</title><rect x="908.4" y="1205" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="911.38" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (54,215,763 samples, 0.02%)</title><rect x="719.0" y="1109" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="722.01" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (42,425,351 samples, 0.02%)</title><rect x="824.1" y="565" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.06" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (85,226,416 samples, 0.03%)</title><rect x="904.2" y="1093" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="907.17" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,709,345,076 samples, 1.39%)</title><rect x="507.1" y="1109" width="16.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="510.07" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,698,885,030 samples, 1.39%)</title><rect x="365.6" y="1157" width="16.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="368.62" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (25,295,792 samples, 0.01%)</title><rect x="918.7" y="869" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="921.71" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (31,951,881 samples, 0.01%)</title><rect x="521.7" y="1061" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="524.71" y="1071.5" ></text>
</g>
<g >
<title>__handle_mm_fault (35,242,904 samples, 0.01%)</title><rect x="977.0" y="1141" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="980.00" y="1151.5" ></text>
</g>
<g >
<title>ip_queue_xmit (94,450,747 samples, 0.04%)</title><rect x="551.7" y="949" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="554.74" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (24,232,626 samples, 0.01%)</title><rect x="1187.1" y="1605" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1190.11" y="1615.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (164,775,161 samples, 0.06%)</title><rect x="270.8" y="1189" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="273.78" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (93,828,766 samples, 0.04%)</title><rect x="476.9" y="1093" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="479.90" y="1103.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,136,907,429 samples, 0.43%)</title><rect x="1113.7" y="1445" width="5.0" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1116.69" y="1455.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (120,460,965 samples, 0.05%)</title><rect x="1098.8" y="981" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1101.77" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (33,674,713 samples, 0.01%)</title><rect x="296.7" y="1237" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="299.73" y="1247.5" ></text>
</g>
<g >
<title>vfs_statx (53,355,451 samples, 0.02%)</title><rect x="261.9" y="1285" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="264.88" y="1295.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (141,110,473 samples, 0.05%)</title><rect x="359.2" y="917" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="362.15" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (29,857,155 samples, 0.01%)</title><rect x="371.9" y="1029" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="374.94" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (55,614,207 samples, 0.02%)</title><rect x="1054.4" y="821" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1057.38" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (203,791,681 samples, 0.08%)</title><rect x="911.5" y="1077" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.53" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (116,767,950 samples, 0.04%)</title><rect x="1014.6" y="1077" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1017.63" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (46,332,187 samples, 0.02%)</title><rect x="484.4" y="1125" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="487.40" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (257,592,220 samples, 0.10%)</title><rect x="205.3" y="1237" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="208.32" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (33,726,409 samples, 0.01%)</title><rect x="1109.1" y="1349" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1112.05" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,975,464 samples, 0.01%)</title><rect x="911.6" y="453" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.63" y="463.5" ></text>
</g>
<g >
<title>std::function&lt;void  (107,030,211 samples, 0.04%)</title><rect x="130.3" y="1541" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="133.34" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (51,086,366 samples, 0.02%)</title><rect x="436.5" y="1157" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="439.50" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (27,039,297 samples, 0.01%)</title><rect x="911.7" y="245" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.65" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,470,856 samples, 0.01%)</title><rect x="347.3" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.30" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (53,103,380 samples, 0.02%)</title><rect x="294.3" y="1285" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="297.35" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (329,896,426 samples, 0.12%)</title><rect x="268.0" y="1189" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="271.02" y="1199.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (78,192,144 samples, 0.03%)</title><rect x="1189.7" y="1685" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.65" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (239,667,760 samples, 0.09%)</title><rect x="487.8" y="1157" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="490.79" y="1167.5" ></text>
</g>
<g >
<title>tcp_send_fin (157,456,518 samples, 0.06%)</title><rect x="409.5" y="1013" width="0.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="412.53" y="1023.5" ></text>
</g>
<g >
<title>task_work_run (49,170,604 samples, 0.02%)</title><rect x="972.8" y="1109" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="975.76" y="1119.5" ></text>
</g>
<g >
<title>x64_sys_call (437,509,393 samples, 0.16%)</title><rect x="128.3" y="1397" width="1.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="131.30" y="1407.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (368,537,944 samples, 0.14%)</title><rect x="553.0" y="1253" width="1.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="556.03" y="1263.5" ></text>
</g>
<g >
<title>nf_conntrack_in (28,741,530 samples, 0.01%)</title><rect x="694.9" y="1077" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="697.92" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (49,520,600 samples, 0.02%)</title><rect x="539.8" y="1093" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="542.85" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (70,388,915 samples, 0.03%)</title><rect x="565.2" y="1669" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="568.20" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (47,070,607 samples, 0.02%)</title><rect x="769.5" y="1157" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="772.51" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (24,754,264 samples, 0.01%)</title><rect x="915.1" y="949" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="918.13" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,679,648,110 samples, 4.00%)</title><rect x="861.5" y="1285" width="47.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="864.49" y="1295.5" >std:..</text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (154,240,011 samples, 0.06%)</title><rect x="38.0" y="949" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="40.95" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (25,447,417 samples, 0.01%)</title><rect x="761.3" y="1093" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="764.27" y="1103.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (201,920,764 samples, 0.08%)</title><rect x="321.6" y="965" width="0.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="324.65" y="975.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (626,088,638 samples, 0.23%)</title><rect x="320.6" y="1029" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="323.63" y="1039.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (24,623,102 samples, 0.01%)</title><rect x="693.1" y="805" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="696.09" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (59,625,290 samples, 0.02%)</title><rect x="259.8" y="1109" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.85" y="1119.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (34,390,482 samples, 0.01%)</title><rect x="401.5" y="1397" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="404.51" y="1407.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (28,812,720 samples, 0.01%)</title><rect x="936.7" y="1045" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="939.71" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (28,866,533 samples, 0.01%)</title><rect x="911.6" y="325" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.65" y="335.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (40,246,268 samples, 0.02%)</title><rect x="1052.5" y="1269" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1055.50" y="1279.5" ></text>
</g>
<g >
<title>__ip_finish_output (72,476,264 samples, 0.03%)</title><rect x="835.7" y="1093" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="838.67" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::vector (34,541,268 samples, 0.01%)</title><rect x="1054.0" y="1317" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1057.01" y="1327.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (24,923,039 samples, 0.01%)</title><rect x="694.6" y="1157" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="697.60" y="1167.5" ></text>
</g>
<g >
<title>__fput_sync (258,170,320 samples, 0.10%)</title><rect x="551.2" y="1125" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="554.20" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (307,487,270 samples, 0.12%)</title><rect x="770.5" y="1317" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="773.47" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1,055,081,544 samples, 0.40%)</title><rect x="24.6" y="1077" width="4.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="27.56" y="1087.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (25,940,916 samples, 0.01%)</title><rect x="452.5" y="981" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="455.48" y="991.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (787,309,575 samples, 0.29%)</title><rect x="549.0" y="1333" width="3.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="551.99" y="1343.5" ></text>
</g>
<g >
<title>x64_sys_call (45,997,070 samples, 0.02%)</title><rect x="294.4" y="1269" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="297.38" y="1279.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (32,548,491 samples, 0.01%)</title><rect x="1092.2" y="1077" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1095.16" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (82,866,037 samples, 0.03%)</title><rect x="1022.5" y="1077" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1025.53" y="1087.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (25,453,371,876 samples, 9.53%)</title><rect x="858.9" y="1509" width="112.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="861.87" y="1519.5" >std::_Functio..</text>
</g>
<g >
<title>netif_receive_skb_list_internal (26,426,867 samples, 0.01%)</title><rect x="292.5" y="1525" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="295.45" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (60,567,720 samples, 0.02%)</title><rect x="251.4" y="1029" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="254.41" y="1039.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (39,744,820 samples, 0.01%)</title><rect x="769.5" y="1141" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="772.54" y="1151.5" ></text>
</g>
<g >
<title>EventLoop::Loop (27,204,702,246 samples, 10.19%)</title><rect x="576.8" y="1573" width="120.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="579.81" y="1583.5" >EventLoop::Loop</text>
</g>
<g >
<title>netvsc_poll (35,711,844 samples, 0.01%)</title><rect x="1182.2" y="1381" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1185.18" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (40,139,111 samples, 0.02%)</title><rect x="344.3" y="1285" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="347.34" y="1295.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (98,228,424 samples, 0.04%)</title><rect x="684.9" y="1413" width="0.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="687.93" y="1423.5" ></text>
</g>
<g >
<title>vfs_writev (426,325,481 samples, 0.16%)</title><rect x="552.9" y="1349" width="1.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="555.89" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (25,129,185 samples, 0.01%)</title><rect x="1107.1" y="1173" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1110.06" y="1183.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (23,012,040 samples, 0.01%)</title><rect x="70.4" y="869" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="73.38" y="879.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (324,243,954 samples, 0.12%)</title><rect x="817.4" y="1093" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="820.38" y="1103.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (869,609,423 samples, 0.33%)</title><rect x="972.3" y="1301" width="3.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="975.29" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (26,255,802 samples, 0.01%)</title><rect x="544.6" y="1349" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="547.62" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (38,329,317 samples, 0.01%)</title><rect x="911.6" y="565" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.62" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (107,316,726 samples, 0.04%)</title><rect x="769.3" y="1381" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="772.31" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (68,889,548 samples, 0.03%)</title><rect x="516.9" y="997" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="519.93" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (41,750,350 samples, 0.02%)</title><rect x="488.4" y="469" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.37" y="479.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="693" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (63,661,536 samples, 0.02%)</title><rect x="230.7" y="1045" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="233.67" y="1055.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::function&lt;void  (38,382,122 samples, 0.01%)</title><rect x="1157.9" y="1173" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1160.88" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::_M_default_initialize (29,244,247 samples, 0.01%)</title><rect x="62.9" y="1301" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="65.89" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (33,197,203 samples, 0.01%)</title><rect x="63.5" y="597" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.50" y="607.5" ></text>
</g>
<g >
<title>irq_exit_rcu (35,677,873 samples, 0.01%)</title><rect x="691.1" y="965" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="694.14" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (65,035,131 samples, 0.02%)</title><rect x="640.6" y="885" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="643.58" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (59,812,065 samples, 0.02%)</title><rect x="502.8" y="901" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="505.84" y="911.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (138,316,569 samples, 0.05%)</title><rect x="941.4" y="1029" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="944.43" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (58,754,430 samples, 0.02%)</title><rect x="684.0" y="885" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="686.99" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (627,027,962 samples, 0.23%)</title><rect x="655.6" y="1029" width="2.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="658.55" y="1039.5" ></text>
</g>
<g >
<title>__munmap (404,615,351 samples, 0.15%)</title><rect x="407.0" y="1189" width="1.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="410.04" y="1199.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (28,386,632 samples, 0.01%)</title><rect x="779.1" y="885" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="782.12" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (40,965,978 samples, 0.02%)</title><rect x="763.6" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="766.58" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,135,874 samples, 0.02%)</title><rect x="630.0" y="389" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.97" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,149,086,932 samples, 4.18%)</title><rect x="718.8" y="1333" width="49.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="721.78" y="1343.5" >std:..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (23,595,521 samples, 0.01%)</title><rect x="251.5" y="1013" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="254.53" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (219,300,685 samples, 0.08%)</title><rect x="370.1" y="1013" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="373.14" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (10,615,467,209 samples, 3.98%)</title><rect x="297.0" y="1253" width="46.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="300.00" y="1263.5" >std:..</text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (32,587,860 samples, 0.01%)</title><rect x="823.6" y="1221" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="826.56" y="1231.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (343,459,158 samples, 0.13%)</title><rect x="694.3" y="1253" width="1.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="697.28" y="1263.5" ></text>
</g>
<g >
<title>EventLoop::DelChannel (183,301,454 samples, 0.07%)</title><rect x="264.9" y="1413" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="267.94" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (37,428,809 samples, 0.01%)</title><rect x="771.0" y="629" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.96" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (107,707,365 samples, 0.04%)</title><rect x="911.9" y="757" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.86" y="767.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (53,625,684 samples, 0.02%)</title><rect x="61.2" y="1333" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="64.21" y="1343.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,369,714,639 samples, 10.25%)</title><rect x="858.8" y="1637" width="120.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="861.80" y="1647.5" >std::thread::_I..</text>
</g>
<g >
<title>sock_recvmsg (65,937,075 samples, 0.02%)</title><rect x="971.0" y="1317" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="973.97" y="1327.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (42,771,619 samples, 0.02%)</title><rect x="260.6" y="1397" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="263.56" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,544,915,971 samples, 1.33%)</title><rect x="207.4" y="1013" width="15.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="210.42" y="1023.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (75,326,744 samples, 0.03%)</title><rect x="814.8" y="965" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="817.82" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (83,975,400 samples, 0.03%)</title><rect x="543.2" y="1221" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.15" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,308,032,857 samples, 1.24%)</title><rect x="1056.4" y="981" width="14.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1059.35" y="991.5" ></text>
</g>
<g >
<title>operator new (39,403,503 samples, 0.01%)</title><rect x="320.0" y="1013" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="323.02" y="1023.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (109,969,008 samples, 0.04%)</title><rect x="120.3" y="1317" width="0.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="123.26" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (41,355,486 samples, 0.02%)</title><rect x="825.2" y="1365" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="828.17" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (98,189,116 samples, 0.04%)</title><rect x="402.7" y="1333" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="405.65" y="1343.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (104,691,948 samples, 0.04%)</title><rect x="373.2" y="1013" width="0.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="376.19" y="1023.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (144,248,063 samples, 0.05%)</title><rect x="685.8" y="1397" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="688.79" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (708,803,580 samples, 0.27%)</title><rect x="26.1" y="1061" width="3.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="29.09" y="1071.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (370,316,290 samples, 0.14%)</title><rect x="124.6" y="1173" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="127.61" y="1183.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (811,171,054 samples, 0.30%)</title><rect x="549.0" y="1365" width="3.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="551.97" y="1375.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (159,853,899 samples, 0.06%)</title><rect x="129.1" y="1189" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="132.14" y="1199.5" ></text>
</g>
<g >
<title>security_file_permission (68,965,795 samples, 0.03%)</title><rect x="1155.9" y="1125" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1158.87" y="1135.5" ></text>
</g>
<g >
<title>do_epoll_ctl (25,256,071 samples, 0.01%)</title><rect x="555.1" y="1381" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="558.10" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (95,508,781 samples, 0.04%)</title><rect x="153.7" y="1173" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="156.66" y="1183.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (66,478,932 samples, 0.02%)</title><rect x="576.0" y="1653" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="579.04" y="1663.5" ></text>
</g>
<g >
<title>__ip_finish_output (68,434,583 samples, 0.03%)</title><rect x="1120.0" y="1093" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1123.05" y="1103.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (34,185,309 samples, 0.01%)</title><rect x="1115.4" y="1045" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1118.45" y="1055.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_M_getword (26,428,992 samples, 0.01%)</title><rect x="116.1" y="1093" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="119.09" y="1103.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;,  (37,890,375 samples, 0.01%)</title><rect x="909.6" y="1285" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="912.62" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (626,176,464 samples, 0.23%)</title><rect x="796.5" y="1029" width="2.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="799.48" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (121,416,669 samples, 0.05%)</title><rect x="1082.6" y="1013" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1085.58" y="1023.5" ></text>
</g>
<g >
<title>malloc (49,054,496 samples, 0.02%)</title><rect x="884.2" y="1013" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="887.18" y="1023.5" ></text>
</g>
<g >
<title>tcp_recvmsg (53,950,376 samples, 0.02%)</title><rect x="264.5" y="1285" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="267.52" y="1295.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (59,138,262 samples, 0.02%)</title><rect x="965.7" y="1317" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="968.73" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (53,717,917 samples, 0.02%)</title><rect x="204.3" y="1157" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="207.32" y="1167.5" ></text>
</g>
<g >
<title>TimerManager::Tick (48,088,926 samples, 0.02%)</title><rect x="979.4" y="1557" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="982.39" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (184,273,332 samples, 0.07%)</title><rect x="1054.3" y="1077" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.32" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (24,261,160 samples, 0.01%)</title><rect x="384.1" y="1093" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="387.06" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,337,430 samples, 0.02%)</title><rect x="629.5" y="837" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.48" y="847.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (845,383,307 samples, 0.32%)</title><rect x="265.8" y="1301" width="3.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="268.81" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,251,027 samples, 0.02%)</title><rect x="911.6" y="837" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.60" y="847.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (26,756,775 samples, 0.01%)</title><rect x="148.3" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="151.31" y="1679.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (57,538,161 samples, 0.02%)</title><rect x="672.7" y="1045" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="675.65" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (3,175,634,221 samples, 1.19%)</title><rect x="273.1" y="1685" width="14.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="276.06" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (38,468,219 samples, 0.01%)</title><rect x="487.9" y="565" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="490.93" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,665,667 samples, 0.01%)</title><rect x="770.7" y="229" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.74" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (87,003,421 samples, 0.03%)</title><rect x="1053.1" y="1285" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1056.10" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,197,207 samples, 0.02%)</title><rect x="487.9" y="805" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.90" y="815.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (346,399,035 samples, 0.13%)</title><rect x="253.0" y="1093" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="255.97" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,624,011,113 samples, 1.36%)</title><rect x="1056.0" y="1077" width="16.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1059.04" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (67,569,315 samples, 0.03%)</title><rect x="620.2" y="1093" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="623.21" y="1103.5" ></text>
</g>
<g >
<title>x64_sys_call (98,910,488 samples, 0.04%)</title><rect x="122.9" y="1397" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="125.92" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,108,117 samples, 0.02%)</title><rect x="259.9" y="1029" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.87" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (32,457,251 samples, 0.01%)</title><rect x="221.0" y="949" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="224.03" y="959.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (264,529,096 samples, 0.10%)</title><rect x="840.8" y="1669" width="1.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="843.78" y="1679.5" ></text>
</g>
<g >
<title>_copy_from_iter (122,311,644 samples, 0.05%)</title><rect x="553.1" y="1237" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="556.08" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (49,800,841 samples, 0.02%)</title><rect x="589.3" y="1077" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="592.29" y="1087.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (99,860,657 samples, 0.04%)</title><rect x="643.8" y="917" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="646.76" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (24,876,863 samples, 0.01%)</title><rect x="800.9" y="1029" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="803.95" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (24,232,909 samples, 0.01%)</title><rect x="219.8" y="933" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="222.77" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,843,456 samples, 0.01%)</title><rect x="118.4" y="421" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="121.39" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (429,010,204 samples, 0.16%)</title><rect x="1148.1" y="1429" width="1.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1151.14" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (53,685,041 samples, 0.02%)</title><rect x="912.1" y="565" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="915.06" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (48,851,472 samples, 0.02%)</title><rect x="202.6" y="1301" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="205.65" y="1311.5" ></text>
</g>
<g >
<title>napi_complete_done (26,426,867 samples, 0.01%)</title><rect x="292.5" y="1541" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="295.45" y="1551.5" ></text>
</g>
<g >
<title>do_accept (2,434,779,747 samples, 0.91%)</title><rect x="1167.1" y="1365" width="10.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1170.15" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (26,869,310 samples, 0.01%)</title><rect x="824.5" y="1349" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="827.55" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,855,233,083 samples, 1.44%)</title><rect x="99.5" y="1141" width="17.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="102.50" y="1151.5" ></text>
</g>
<g >
<title>[web-server] (30,094,247 samples, 0.01%)</title><rect x="1092.7" y="1077" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1095.67" y="1087.5" ></text>
</g>
<g >
<title>ip_finish_output (72,932,898 samples, 0.03%)</title><rect x="977.7" y="1109" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="980.72" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (4,055,548,195 samples, 1.52%)</title><rect x="99.3" y="1285" width="17.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="102.29" y="1295.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (58,147,899 samples, 0.02%)</title><rect x="963.9" y="1109" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="966.87" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (46,072,403 samples, 0.02%)</title><rect x="1068.8" y="901" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1071.79" y="911.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (41,838,372 samples, 0.02%)</title><rect x="834.2" y="1429" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="837.17" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (423,619,406 samples, 0.16%)</title><rect x="972.7" y="1157" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="975.65" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (38,850,952 samples, 0.01%)</title><rect x="347.5" y="661" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="350.54" y="671.5" ></text>
</g>
<g >
<title>netvsc_poll (31,707,765 samples, 0.01%)</title><rect x="19.3" y="981" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="22.26" y="991.5" ></text>
</g>
<g >
<title>tcp_push (199,863,608 samples, 0.07%)</title><rect x="129.1" y="1237" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="132.11" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (24,899,664 samples, 0.01%)</title><rect x="911.7" y="117" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.66" y="127.5" ></text>
</g>
<g >
<title>__handle_mm_fault (32,442,773 samples, 0.01%)</title><rect x="553.3" y="1141" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="556.27" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (129,794,302 samples, 0.05%)</title><rect x="578.0" y="1237" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="581.03" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (310,175,362 samples, 0.12%)</title><rect x="974.7" y="1173" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="977.70" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (59,310,421 samples, 0.02%)</title><rect x="824.0" y="805" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="827.04" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (43,474,306 samples, 0.02%)</title><rect x="367.8" y="1061" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="370.77" y="1071.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (42,671,731 samples, 0.02%)</title><rect x="322.0" y="933" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="325.02" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (632,463,380 samples, 0.24%)</title><rect x="749.4" y="1077" width="2.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="752.41" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (32,361,216 samples, 0.01%)</title><rect x="12.2" y="1125" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="15.21" y="1135.5" ></text>
</g>
<g >
<title>__munmap (438,423,146 samples, 0.16%)</title><rect x="830.4" y="1189" width="1.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="833.41" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (243,120,954 samples, 0.09%)</title><rect x="487.8" y="1205" width="1.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="490.77" y="1215.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (72,288,738 samples, 0.03%)</title><rect x="38.3" y="933" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="41.31" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,598,925,783 samples, 4.34%)</title><rect x="348.9" y="1365" width="51.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="351.89" y="1375.5" >std::..</text>
</g>
<g >
<title>vm_unmapped_area (27,348,877 samples, 0.01%)</title><rect x="262.5" y="1221" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="265.49" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (40,987,013 samples, 0.02%)</title><rect x="543.2" y="661" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="546.25" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,355,389 samples, 0.01%)</title><rect x="63.5" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.52" y="383.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (49,709,294 samples, 0.02%)</title><rect x="61.2" y="1301" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="64.22" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (150,346,790 samples, 0.06%)</title><rect x="846.2" y="1669" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="849.21" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (50,311,314 samples, 0.02%)</title><rect x="384.5" y="1093" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="387.51" y="1103.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (71,448,130 samples, 0.03%)</title><rect x="749.7" y="1061" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="752.72" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (23,735,330 samples, 0.01%)</title><rect x="556.9" y="1077" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (45,451,740 samples, 0.02%)</title><rect x="488.4" y="533" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="491.37" y="543.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (939,507,041 samples, 0.35%)</title><rect x="830.0" y="1349" width="4.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="833.00" y="1359.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (236,825,170 samples, 0.09%)</title><rect x="111.7" y="1077" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="114.68" y="1087.5" ></text>
</g>
<g >
<title>x64_sys_call (68,962,227 samples, 0.03%)</title><rect x="406.0" y="1253" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="409.01" y="1263.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (31,063,003 samples, 0.01%)</title><rect x="746.8" y="981" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="749.77" y="991.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (25,557,981 samples, 0.01%)</title><rect x="609.0" y="1061" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="612.02" y="1071.5" ></text>
</g>
<g >
<title>netvsc_poll (31,864,168 samples, 0.01%)</title><rect x="161.6" y="981" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="164.55" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (200,411,909 samples, 0.08%)</title><rect x="635.7" y="885" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="638.74" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (28,654,673 samples, 0.01%)</title><rect x="205.8" y="549" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.79" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (712,797,712 samples, 0.27%)</title><rect x="1153.1" y="1237" width="3.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1156.13" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (189,428,756 samples, 0.07%)</title><rect x="347.2" y="885" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.24" y="895.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (26,572,329 samples, 0.01%)</title><rect x="151.0" y="1525" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="154.04" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (38,226,503 samples, 0.01%)</title><rect x="543.7" y="1365" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="546.68" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (52,497,954 samples, 0.02%)</title><rect x="1108.6" y="805" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1111.60" y="815.5" ></text>
</g>
<g >
<title>__dentry_kill (75,313,558 samples, 0.03%)</title><rect x="832.6" y="1077" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="835.56" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (75,812,183 samples, 0.03%)</title><rect x="337.8" y="1093" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="340.75" y="1103.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (51,931,516 samples, 0.02%)</title><rect x="108.7" y="949" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="111.74" y="959.5" ></text>
</g>
<g >
<title>x64_sys_call (58,396,156 samples, 0.02%)</title><rect x="123.7" y="1253" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="126.74" y="1263.5" ></text>
</g>
<g >
<title>mmap_region (148,001,380 samples, 0.06%)</title><rect x="686.9" y="1269" width="0.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="689.88" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (284,982,972 samples, 0.11%)</title><rect x="63.0" y="1333" width="1.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="66.03" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (57,422,579 samples, 0.02%)</title><rect x="117.8" y="1381" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="120.79" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_resize (38,144,253 samples, 0.01%)</title><rect x="628.9" y="1333" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="631.95" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,908,141,249 samples, 1.46%)</title><rect x="81.9" y="1253" width="17.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="84.94" y="1263.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (32,817,343 samples, 0.01%)</title><rect x="878.3" y="1077" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="881.27" y="1087.5" ></text>
</g>
<g >
<title>do_epoll_ctl (38,032,241 samples, 0.01%)</title><rect x="859.0" y="1237" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="862.04" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (203,116,607 samples, 0.08%)</title><rect x="770.6" y="981" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.63" y="991.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (38,566,972 samples, 0.01%)</title><rect x="526.7" y="1077" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="529.72" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (205,803,057 samples, 0.08%)</title><rect x="793.8" y="1013" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="796.78" y="1023.5" ></text>
</g>
<g >
<title>do_user_addr_fault (81,597,511 samples, 0.03%)</title><rect x="1119.3" y="1173" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1122.29" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,392,667,569 samples, 1.27%)</title><rect x="365.9" y="1093" width="15.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="368.93" y="1103.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (49,070,501 samples, 0.02%)</title><rect x="172.4" y="1077" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="175.42" y="1087.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (899,199,731 samples, 0.34%)</title><rect x="972.2" y="1381" width="4.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="975.24" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (29,644,738 samples, 0.01%)</title><rect x="239.0" y="1045" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="241.96" y="1055.5" ></text>
</g>
<g >
<title>__close (348,620,048 samples, 0.13%)</title><rect x="268.0" y="1205" width="1.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="270.98" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (218,818,088 samples, 0.08%)</title><rect x="511.7" y="1013" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="514.69" y="1023.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (69,588,052 samples, 0.03%)</title><rect x="266.9" y="1029" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="269.87" y="1039.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (22,920,876 samples, 0.01%)</title><rect x="127.3" y="805" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="130.35" y="815.5" ></text>
</g>
<g >
<title>_int_malloc (41,636,469 samples, 0.02%)</title><rect x="712.0" y="1685" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="715.04" y="1695.5" ></text>
</g>
<g >
<title>netvsc_xmit (27,330,277 samples, 0.01%)</title><rect x="695.3" y="997" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="698.31" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (543,774,692 samples, 0.20%)</title><rect x="1017.4" y="1029" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1020.35" y="1039.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (158,625,654 samples, 0.06%)</title><rect x="411.8" y="1157" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="414.84" y="1167.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (186,814,205 samples, 0.07%)</title><rect x="559.2" y="1637" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="562.24" y="1647.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (39,491,866 samples, 0.01%)</title><rect x="501.8" y="917" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="504.77" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,058,124 samples, 0.01%)</title><rect x="63.3" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.25" y="463.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (82,404,403 samples, 0.03%)</title><rect x="1020.2" y="1077" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1023.15" y="1087.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (392,059,593 samples, 0.15%)</title><rect x="411.1" y="1253" width="1.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="414.13" y="1263.5" ></text>
</g>
<g >
<title>epoll_ctl (102,027,615 samples, 0.04%)</title><rect x="405.9" y="1301" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="408.93" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,309,221,408 samples, 4.24%)</title><rect x="435.4" y="1317" width="50.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="438.40" y="1327.5" >std::..</text>
</g>
<g >
<title>get_unmapped_area (29,546,772 samples, 0.01%)</title><rect x="969.0" y="1269" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="971.97" y="1279.5" ></text>
</g>
<g >
<title>netvsc_poll (24,934,780 samples, 0.01%)</title><rect x="993.6" y="1525" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="996.58" y="1535.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_maskbit (45,422,154 samples, 0.02%)</title><rect x="342.2" y="1109" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="345.18" y="1119.5" ></text>
</g>
<g >
<title>napi_complete_done (27,620,378 samples, 0.01%)</title><rect x="727.0" y="965" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="729.97" y="975.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (110,558,653 samples, 0.04%)</title><rect x="638.6" y="901" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="641.64" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,534,437,179 samples, 1.32%)</title><rect x="82.3" y="1093" width="15.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="85.30" y="1103.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;,  (22,637,889 samples, 0.01%)</title><rect x="1107.8" y="1285" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1110.78" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,515,049 samples, 0.01%)</title><rect x="63.3" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.26" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,906,444 samples, 0.01%)</title><rect x="979.2" y="1509" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="982.20" y="1519.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (113,780,708 samples, 0.04%)</title><rect x="596.7" y="1077" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="599.72" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (49,053,075 samples, 0.02%)</title><rect x="662.9" y="1061" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="665.94" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,704,182,103 samples, 1.39%)</title><rect x="489.7" y="1045" width="16.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="492.67" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (98,297,404 samples, 0.04%)</title><rect x="1054.6" y="821" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.64" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,702,955 samples, 0.01%)</title><rect x="771.0" y="613" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.97" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (32,176,822 samples, 0.01%)</title><rect x="118.4" y="565" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="121.37" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,761,734,411 samples, 1.41%)</title><rect x="947.9" y="1157" width="16.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="950.90" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (201,645,935 samples, 0.08%)</title><rect x="370.2" y="997" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="373.22" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (50,375,338 samples, 0.02%)</title><rect x="1050.8" y="1141" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1053.78" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (91,940,193 samples, 0.03%)</title><rect x="295.0" y="1173" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="298.03" y="1183.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (61,693,752 samples, 0.02%)</title><rect x="312.2" y="1013" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="315.19" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (101,951,130 samples, 0.04%)</title><rect x="295.0" y="1221" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="298.01" y="1231.5" ></text>
</g>
<g >
<title>x64_sys_call (96,448,509 samples, 0.04%)</title><rect x="970.8" y="1397" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="973.84" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (26,262,531 samples, 0.01%)</title><rect x="496.1" y="917" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="499.10" y="927.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (65,390,432 samples, 0.02%)</title><rect x="577.0" y="1365" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="580.01" y="1375.5" ></text>
</g>
<g >
<title>do_filp_open (66,130,016 samples, 0.02%)</title><rect x="275.7" y="1573" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="278.74" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="517" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="527.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (82,179,723 samples, 0.03%)</title><rect x="402.2" y="1397" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="405.19" y="1407.5" ></text>
</g>
<g >
<title>ip_list_rcv (28,675,433 samples, 0.01%)</title><rect x="575.1" y="1493" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="578.09" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (5,526,195,392 samples, 2.07%)</title><rect x="162.4" y="1093" width="24.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="165.44" y="1103.5" >s..</text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (35,173,147 samples, 0.01%)</title><rect x="174.9" y="1061" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="177.87" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,919,698 samples, 0.02%)</title><rect x="347.7" y="629" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.74" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (48,532,011 samples, 0.02%)</title><rect x="630.0" y="485" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.96" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (35,830,873 samples, 0.01%)</title><rect x="1075.0" y="1061" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1078.04" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (49,883,742 samples, 0.02%)</title><rect x="860.7" y="1141" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="863.73" y="1151.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (147,718,800 samples, 0.06%)</title><rect x="92.6" y="1029" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="95.64" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,200,610 samples, 0.02%)</title><rect x="487.9" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.90" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (239,073,622 samples, 0.09%)</title><rect x="875.3" y="1013" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="878.32" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (22,841,524 samples, 0.01%)</title><rect x="203.6" y="1237" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="206.64" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_any_matcher_ecma&lt;false, false&gt; (31,865,331 samples, 0.01%)</title><rect x="436.0" y="1141" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="439.04" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (87,086,341 samples, 0.03%)</title><rect x="212.2" y="869" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="215.22" y="879.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (145,763,271 samples, 0.05%)</title><rect x="180.4" y="949" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="183.40" y="959.5" ></text>
</g>
<g >
<title>inet_recvmsg (45,667,371 samples, 0.02%)</title><rect x="405.4" y="1301" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="408.36" y="1311.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long&gt; (29,223,330 samples, 0.01%)</title><rect x="911.3" y="1269" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="914.25" y="1279.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (848,869,287 samples, 0.32%)</title><rect x="689.9" y="1317" width="3.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="692.91" y="1327.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (76,918,527 samples, 0.03%)</title><rect x="27.9" y="997" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="30.88" y="1007.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TimerManager::TimerCmp&gt; &gt; (32,537,508 samples, 0.01%)</title><rect x="555.6" y="1509" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="558.63" y="1519.5" ></text>
</g>
<g >
<title>ip_queue_xmit (144,769,203 samples, 0.05%)</title><rect x="553.7" y="1173" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="556.73" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (66,195,834 samples, 0.02%)</title><rect x="543.2" y="1029" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.19" y="1039.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (471,511,095 samples, 0.18%)</title><rect x="49.0" y="1093" width="2.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="52.05" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,745,676 samples, 0.01%)</title><rect x="118.4" y="405" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.39" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (222,077,418 samples, 0.08%)</title><rect x="232.6" y="1013" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="235.64" y="1023.5" ></text>
</g>
<g >
<title>__close (301,085,189 samples, 0.11%)</title><rect x="551.1" y="1205" width="1.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="554.10" y="1215.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (75,434,882 samples, 0.03%)</title><rect x="926.8" y="949" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="929.81" y="959.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (1,613,760,247 samples, 0.60%)</title><rect x="264.9" y="1493" width="7.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="267.87" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,729,735 samples, 0.01%)</title><rect x="629.5" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.53" y="511.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (54,176,532 samples, 0.02%)</title><rect x="856.8" y="1653" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="859.76" y="1663.5" ></text>
</g>
<g >
<title>__napi_poll (36,968,700 samples, 0.01%)</title><rect x="831.4" y="901" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="834.43" y="911.5" ></text>
</g>
<g >
<title>[unknown] (24,206,978 samples, 0.01%)</title><rect x="556.9" y="1317" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (182,154,688 samples, 0.07%)</title><rect x="205.5" y="885" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.47" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,851,527,317 samples, 1.44%)</title><rect x="64.8" y="1237" width="17.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="67.83" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (54,083,555 samples, 0.02%)</title><rect x="336.8" y="1093" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="339.80" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (213,128,986 samples, 0.08%)</title><rect x="629.4" y="1077" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.39" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,830,303 samples, 0.01%)</title><rect x="911.6" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.62" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (38,549,088 samples, 0.01%)</title><rect x="493.3" y="933" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="496.28" y="943.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (199,602,050 samples, 0.07%)</title><rect x="417.3" y="1637" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="420.27" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,410,148 samples, 0.01%)</title><rect x="911.7" y="149" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.65" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (98,397,499 samples, 0.04%)</title><rect x="488.2" y="789" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.17" y="799.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (51,775,097 samples, 0.02%)</title><rect x="801.5" y="1013" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="804.47" y="1023.5" ></text>
</g>
<g >
<title>__strxfrm_l (235,231,117 samples, 0.09%)</title><rect x="992.7" y="1653" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="995.66" y="1663.5" ></text>
</g>
<g >
<title>HttpResponse::~HttpResponse (37,229,448 samples, 0.01%)</title><rect x="690.1" y="1189" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="693.07" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (35,192,711 samples, 0.01%)</title><rect x="195.9" y="1093" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="198.92" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;ProtocolHandler&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;ProtocolHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (155,838,156 samples, 0.06%)</title><rect x="1162.9" y="1429" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1165.86" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (197,370,065 samples, 0.07%)</title><rect x="629.4" y="1029" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.43" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (44,119,791 samples, 0.02%)</title><rect x="68.2" y="933" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="71.21" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (122,948,206 samples, 0.05%)</title><rect x="436.5" y="1253" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="439.48" y="1263.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (854,826,083 samples, 0.32%)</title><rect x="972.3" y="1237" width="3.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="975.34" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (75,655,505 samples, 0.03%)</title><rect x="763.1" y="1093" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="766.09" y="1103.5" ></text>
</g>
<g >
<title>handle_softirqs (27,676,735 samples, 0.01%)</title><rect x="1148.9" y="1317" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1151.89" y="1327.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (841,924,832 samples, 0.32%)</title><rect x="689.9" y="1253" width="3.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="692.93" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::base (23,259,246 samples, 0.01%)</title><rect x="19.1" y="1077" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="22.10" y="1087.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (198,384,564 samples, 0.07%)</title><rect x="1098.6" y="1013" width="0.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1101.56" y="1023.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (229,263,167 samples, 0.09%)</title><rect x="939.2" y="997" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="942.21" y="1007.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (24,058,597 samples, 0.01%)</title><rect x="653.9" y="1045" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="656.92" y="1055.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (26,132,395 samples, 0.01%)</title><rect x="267.0" y="805" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="270.02" y="815.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (60,602,023 samples, 0.02%)</title><rect x="1106.3" y="1125" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1109.32" y="1135.5" ></text>
</g>
<g >
<title>epoll_wait (26,892,529 samples, 0.01%)</title><rect x="413.6" y="1541" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="416.56" y="1551.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (25,189,586 samples, 0.01%)</title><rect x="613.6" y="1061" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="616.62" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (276,975,403 samples, 0.10%)</title><rect x="770.5" y="1285" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.48" y="1295.5" ></text>
</g>
<g >
<title>Channel::OnEvents (26,963,623,873 samples, 10.10%)</title><rect x="576.8" y="1557" width="119.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="579.81" y="1567.5" >Channel::OnEve..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,726,165,594 samples, 1.40%)</title><rect x="631.1" y="1205" width="16.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="634.15" y="1215.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (77,617,694 samples, 0.03%)</title><rect x="505.0" y="981" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="508.03" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,749,407,676 samples, 1.40%)</title><rect x="64.8" y="1157" width="16.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="67.83" y="1167.5" ></text>
</g>
<g >
<title>__strlen_avx2 (164,211,967 samples, 0.06%)</title><rect x="560.5" y="1669" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="563.52" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,558,981 samples, 0.04%)</title><rect x="770.9" y="741" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.95" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (25,881,538 samples, 0.01%)</title><rect x="607.6" y="997" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="610.58" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (275,583,485 samples, 0.10%)</title><rect x="153.5" y="1253" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="156.53" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (223,577,025 samples, 0.08%)</title><rect x="770.6" y="1109" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.60" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (89,811,339 samples, 0.03%)</title><rect x="543.1" y="1269" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="546.13" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (52,157,089 samples, 0.02%)</title><rect x="859.0" y="1301" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="862.00" y="1311.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (76,144,754 samples, 0.03%)</title><rect x="1148.8" y="1397" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1151.84" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (10,611,910,857 samples, 3.97%)</title><rect x="297.0" y="1237" width="46.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="300.01" y="1247.5" >std:..</text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (25,125,144 samples, 0.01%)</title><rect x="784.0" y="901" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="787.02" y="911.5" ></text>
</g>
<g >
<title>____fput (37,245,590 samples, 0.01%)</title><rect x="266.2" y="1093" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="269.24" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (71,839,796 samples, 0.03%)</title><rect x="49.3" y="1077" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="52.27" y="1087.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (29,123,498 samples, 0.01%)</title><rect x="425.7" y="1637" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="428.72" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,665,667 samples, 0.01%)</title><rect x="770.7" y="213" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.74" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,809,932 samples, 0.01%)</title><rect x="630.0" y="181" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="633.01" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (28,656,489 samples, 0.01%)</title><rect x="770.7" y="325" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.73" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (23,034,954 samples, 0.01%)</title><rect x="932.4" y="1061" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="935.44" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (26,403,395 samples, 0.01%)</title><rect x="118.4" y="469" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="121.38" y="479.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (32,898,315 samples, 0.01%)</title><rect x="1149.0" y="1381" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1152.03" y="1391.5" ></text>
</g>
<g >
<title>ip_output (49,532,261 samples, 0.02%)</title><rect x="551.9" y="901" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="554.92" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (173,638,787 samples, 0.07%)</title><rect x="353.6" y="885" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="356.57" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (64,037,018 samples, 0.02%)</title><rect x="339.8" y="1093" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="342.80" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (237,923,487 samples, 0.09%)</title><rect x="535.2" y="1077" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="538.15" y="1087.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (61,148,443 samples, 0.02%)</title><rect x="859.7" y="1077" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="862.69" y="1087.5" ></text>
</g>
<g >
<title>netvsc_poll (37,926,989 samples, 0.01%)</title><rect x="716.3" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="719.30" y="1567.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (34,591,091 samples, 0.01%)</title><rect x="406.4" y="1285" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="409.42" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (39,240,739 samples, 0.01%)</title><rect x="951.6" y="1077" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="954.59" y="1087.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (26,479,479 samples, 0.01%)</title><rect x="230.2" y="1045" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="233.19" y="1055.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (25,382,370,012 samples, 9.51%)</title><rect x="576.9" y="1493" width="112.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="579.92" y="1503.5" >std::__invoke..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (108,154,320 samples, 0.04%)</title><rect x="361.6" y="933" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="364.61" y="943.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (37,372,478 samples, 0.01%)</title><rect x="89.2" y="997" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="92.20" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,060,745 samples, 0.01%)</title><rect x="1054.4" y="421" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.43" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (175,420,058 samples, 0.07%)</title><rect x="494.5" y="885" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="497.46" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,328,534 samples, 0.01%)</title><rect x="630.0" y="293" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.98" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (247,825,994 samples, 0.09%)</title><rect x="451.5" y="1013" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="454.53" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (23,461,284 samples, 0.01%)</title><rect x="1054.5" y="117" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.45" y="127.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (255,001,848 samples, 0.10%)</title><rect x="1084.7" y="1045" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1087.65" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,298,182,460 samples, 1.24%)</title><rect x="490.2" y="965" width="14.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="493.24" y="975.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (29,093,726 samples, 0.01%)</title><rect x="575.1" y="1525" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="578.09" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,181,012 samples, 0.02%)</title><rect x="1108.6" y="821" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.59" y="831.5" ></text>
</g>
<g >
<title>__strlen_avx2 (224,425,415 samples, 0.08%)</title><rect x="567.7" y="1653" width="1.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="570.72" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (8,090,559,511 samples, 3.03%)</title><rect x="1144.0" y="1493" width="35.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1146.96" y="1503.5" >std..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (68,068,267 samples, 0.03%)</title><rect x="972.7" y="1141" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="975.68" y="1151.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (67,158,619 samples, 0.03%)</title><rect x="125.4" y="1029" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="128.40" y="1039.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (31,822,484 samples, 0.01%)</title><rect x="262.5" y="1237" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="265.47" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,806,638,374 samples, 1.43%)</title><rect x="1055.9" y="1237" width="16.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1058.88" y="1247.5" ></text>
</g>
<g >
<title>operator delete[] (51,713,128 samples, 0.02%)</title><rect x="705.4" y="1669" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="708.36" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (54,707,796 samples, 0.02%)</title><rect x="542.6" y="1381" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="545.65" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (59,518,330 samples, 0.02%)</title><rect x="25.5" y="1061" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="28.48" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,492,730 samples, 0.01%)</title><rect x="347.3" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.29" y="511.5" ></text>
</g>
<g >
<title>epoll_ctl (90,336,608 samples, 0.03%)</title><rect x="1113.9" y="1301" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1116.89" y="1311.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (27,369,714,639 samples, 10.25%)</title><rect x="858.8" y="1605" width="120.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="861.80" y="1615.5" >std::__invoke_i..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,854,103,691 samples, 1.44%)</title><rect x="82.0" y="1189" width="17.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="84.99" y="1199.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (63,560,654 samples, 0.02%)</title><rect x="362.2" y="949" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="365.20" y="959.5" ></text>
</g>
<g >
<title>handle_softirqs (40,588,919 samples, 0.02%)</title><rect x="831.4" y="933" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="834.42" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,414,640 samples, 0.01%)</title><rect x="770.7" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.72" y="511.5" ></text>
</g>
<g >
<title>perf_iterate_sb (26,070,335 samples, 0.01%)</title><rect x="546.2" y="1237" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="549.16" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (26,986,689 samples, 0.01%)</title><rect x="397.2" y="1093" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="400.17" y="1103.5" ></text>
</g>
<g >
<title>napi_complete_done (28,804,730 samples, 0.01%)</title><rect x="716.3" y="1541" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="719.30" y="1551.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (161,133,567 samples, 0.06%)</title><rect x="604.4" y="949" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="607.39" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (340,691,203 samples, 0.13%)</title><rect x="1111.2" y="1333" width="1.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1114.16" y="1343.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (96,967,302 samples, 0.04%)</title><rect x="1184.3" y="1173" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1187.34" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (23,413,962 samples, 0.01%)</title><rect x="647.4" y="1045" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="650.45" y="1055.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (38,538,331 samples, 0.01%)</title><rect x="1009.9" y="1077" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1012.89" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector (26,405,519 samples, 0.01%)</title><rect x="1161.2" y="1301" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1164.24" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,131,060 samples, 0.04%)</title><rect x="824.0" y="1285" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="826.95" y="1295.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (39,314,837 samples, 0.01%)</title><rect x="716.3" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="719.29" y="1631.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::construct&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (25,202,171 samples, 0.01%)</title><rect x="61.3" y="1221" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="64.28" y="1231.5" ></text>
</g>
<g >
<title>__tcp_close (177,911,437 samples, 0.07%)</title><rect x="268.5" y="1029" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="271.52" y="1039.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (28,070,581 samples, 0.01%)</title><rect x="259.4" y="1109" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="262.42" y="1119.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (52,072,641 samples, 0.02%)</title><rect x="1029.0" y="933" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1032.03" y="943.5" ></text>
</g>
<g >
<title>__fget_light (41,169,492 samples, 0.02%)</title><rect x="1166.9" y="1349" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1169.93" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,941,423 samples, 0.01%)</title><rect x="1054.7" y="565" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.67" y="575.5" ></text>
</g>
<g >
<title>std::function&lt;void  (71,920,833 samples, 0.03%)</title><rect x="153.0" y="1397" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="155.95" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (42,553,435 samples, 0.02%)</title><rect x="485.2" y="1285" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="488.18" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (58,133,006 samples, 0.02%)</title><rect x="265.2" y="1237" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="268.17" y="1247.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (66,834,006 samples, 0.03%)</title><rect x="643.1" y="917" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="646.07" y="927.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (69,424,028 samples, 0.03%)</title><rect x="1001.1" y="1381" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1004.06" y="1391.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,665,057,519 samples, 0.62%)</title><rect x="405.7" y="1509" width="7.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="408.70" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (59,677,737 samples, 0.02%)</title><rect x="296.2" y="1205" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="299.16" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (61,601,834 samples, 0.02%)</title><rect x="433.8" y="1669" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="436.84" y="1679.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (111,151,366 samples, 0.04%)</title><rect x="926.2" y="933" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="929.17" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (23,981,163 samples, 0.01%)</title><rect x="484.8" y="1205" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="487.84" y="1215.5" ></text>
</g>
<g >
<title>__ep_remove (33,284,830 samples, 0.01%)</title><rect x="548.4" y="1205" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="551.45" y="1215.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (35,821,745 samples, 0.01%)</title><rect x="991.5" y="1637" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="994.54" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (365,526,132 samples, 0.14%)</title><rect x="1059.9" y="933" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1062.87" y="943.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (94,747,420 samples, 0.04%)</title><rect x="454.1" y="1077" width="0.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="457.14" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (31,525,977 samples, 0.01%)</title><rect x="770.7" y="405" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.72" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (31,498,826 samples, 0.01%)</title><rect x="192.8" y="1045" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="195.76" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (25,099,792 samples, 0.01%)</title><rect x="169.9" y="997" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="172.89" y="1007.5" ></text>
</g>
<g >
<title>x64_sys_call (99,933,301 samples, 0.04%)</title><rect x="968.2" y="1349" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="971.23" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (90,577,549 samples, 0.03%)</title><rect x="867.3" y="1093" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="870.32" y="1103.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (40,993,226 samples, 0.02%)</title><rect x="502.0" y="901" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="505.00" y="911.5" ></text>
</g>
<g >
<title>tcp_send_fin (153,533,667 samples, 0.06%)</title><rect x="975.2" y="1013" width="0.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="978.24" y="1023.5" ></text>
</g>
<g >
<title>Channel::OnRead (25,501,338,711 samples, 9.55%)</title><rect x="1000.9" y="1541" width="112.7" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1003.94" y="1551.5" >Channel::OnRead</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,721,255 samples, 0.01%)</title><rect x="205.5" y="421" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.54" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (27,230,667 samples, 0.01%)</title><rect x="735.4" y="997" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="738.42" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (89,352,988 samples, 0.03%)</title><rect x="338.7" y="1093" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="341.73" y="1103.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (114,362,421 samples, 0.04%)</title><rect x="122.9" y="1429" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="125.85" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (27,471,296 samples, 0.01%)</title><rect x="638.8" y="869" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="641.85" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (59,282,283 samples, 0.02%)</title><rect x="1108.6" y="901" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1111.58" y="911.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (31,520,935 samples, 0.01%)</title><rect x="628.4" y="1093" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="631.40" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::vector (24,421,471 samples, 0.01%)</title><rect x="487.3" y="1285" width="0.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="490.35" y="1295.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (56,991,404 samples, 0.02%)</title><rect x="1141.3" y="1669" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1144.30" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (24,961,771 samples, 0.01%)</title><rect x="936.3" y="981" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="939.28" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (45,944,159 samples, 0.02%)</title><rect x="901.8" y="1093" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="904.79" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (30,189,935 samples, 0.01%)</title><rect x="203.2" y="1317" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="206.24" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (47,352,804 samples, 0.02%)</title><rect x="647.4" y="1189" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="650.40" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (49,715,444 samples, 0.02%)</title><rect x="480.6" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="483.62" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (101,526,103 samples, 0.04%)</title><rect x="63.5" y="741" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.48" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (32,078,900 samples, 0.01%)</title><rect x="218.9" y="917" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="221.87" y="927.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (30,364,890 samples, 0.01%)</title><rect x="763.9" y="1109" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="766.89" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,958,633 samples, 0.01%)</title><rect x="912.1" y="149" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="915.12" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (43,018,009 samples, 0.02%)</title><rect x="696.2" y="1429" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="699.18" y="1439.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::ModChannel (57,482,853 samples, 0.02%)</title><rect x="10.4" y="1349" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="13.44" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (42,829,889 samples, 0.02%)</title><rect x="369.1" y="1045" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="372.12" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (44,891,114 samples, 0.02%)</title><rect x="337.9" y="1077" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="340.87" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (40,544,047 samples, 0.02%)</title><rect x="930.0" y="1125" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="933.04" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,754,079 samples, 0.01%)</title><rect x="205.5" y="373" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.54" y="383.5" ></text>
</g>
<g >
<title>napi_complete_done (26,572,329 samples, 0.01%)</title><rect x="151.0" y="1541" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="154.04" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (2,201,738,585 samples, 0.82%)</title><rect x="315.8" y="1077" width="9.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="318.80" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (32,826,929 samples, 0.01%)</title><rect x="79.8" y="949" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="82.85" y="959.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (67,558,632 samples, 0.03%)</title><rect x="220.5" y="949" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="223.49" y="959.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (206,904,871 samples, 0.08%)</title><rect x="780.4" y="869" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="783.39" y="879.5" ></text>
</g>
<g >
<title>net_rx_action (29,660,140 samples, 0.01%)</title><rect x="267.0" y="917" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="270.01" y="927.5" ></text>
</g>
<g >
<title>sch_direct_xmit (47,093,973 samples, 0.02%)</title><rect x="271.2" y="1045" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="274.23" y="1055.5" ></text>
</g>
<g >
<title>nf_hook_slow (49,950,165 samples, 0.02%)</title><rect x="694.9" y="1109" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="697.91" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (181,860,449 samples, 0.07%)</title><rect x="324.6" y="1029" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="327.60" y="1039.5" ></text>
</g>
<g >
<title>release_sock (25,139,936 samples, 0.01%)</title><rect x="1146.5" y="1269" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1149.49" y="1279.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (849,996,473 samples, 0.32%)</title><rect x="689.9" y="1333" width="3.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="692.90" y="1343.5" ></text>
</g>
<g >
<title>napi_complete_done (25,735,128 samples, 0.01%)</title><rect x="408.1" y="869" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="411.05" y="879.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (53,705,127 samples, 0.02%)</title><rect x="71.9" y="901" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="74.86" y="911.5" ></text>
</g>
<g >
<title>unmap_single_vma (24,571,483 samples, 0.01%)</title><rect x="267.3" y="1029" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="270.30" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (30,122,237 samples, 0.01%)</title><rect x="502.4" y="933" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="505.38" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (96,681,435 samples, 0.04%)</title><rect x="1094.9" y="1013" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1097.92" y="1023.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (27,412,966,371 samples, 10.27%)</title><rect x="1000.9" y="1621" width="121.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1003.91" y="1631.5" >std::__invoke&lt;v..</text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (426,265,156 samples, 0.16%)</title><rect x="487.2" y="1365" width="1.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="490.23" y="1375.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,557,091,768 samples, 0.58%)</title><rect x="123.4" y="1525" width="6.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="126.43" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Channel&gt;, std::allocator&lt;std::shared_ptr&lt;Channel&gt; &gt; &gt;::_M_erase_at_end (22,861,455 samples, 0.01%)</title><rect x="1187.9" y="1605" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1190.86" y="1615.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (31,488,326 samples, 0.01%)</title><rect x="960.2" y="1061" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="963.20" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (36,211,334 samples, 0.01%)</title><rect x="12.7" y="1237" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="15.70" y="1247.5" ></text>
</g>
<g >
<title>x64_sys_call (438,508,528 samples, 0.16%)</title><rect x="552.8" y="1397" width="2.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="555.84" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (24,206,978 samples, 0.01%)</title><rect x="556.9" y="1237" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,391,964 samples, 0.01%)</title><rect x="347.5" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.54" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (68,889,175 samples, 0.03%)</title><rect x="55.7" y="1093" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="58.72" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (87,685,099 samples, 0.03%)</title><rect x="18.5" y="1093" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="21.49" y="1103.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (876,804,770 samples, 0.33%)</title><rect x="689.9" y="1397" width="3.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="692.88" y="1407.5" ></text>
</g>
<g >
<title>vfs_statx (55,820,339 samples, 0.02%)</title><rect x="402.8" y="1285" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="405.83" y="1295.5" ></text>
</g>
<g >
<title>handle_softirqs (49,440,563 samples, 0.02%)</title><rect x="856.8" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="859.77" y="1615.5" ></text>
</g>
<g >
<title>do_mmap (186,765,724 samples, 0.07%)</title><rect x="121.1" y="1285" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="124.06" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (57,761,475 samples, 0.02%)</title><rect x="1072.3" y="1189" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1075.31" y="1199.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (22,757,369 samples, 0.01%)</title><rect x="781.4" y="901" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="784.40" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (51,039,321 samples, 0.02%)</title><rect x="733.3" y="1061" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="736.28" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (56,158,348 samples, 0.02%)</title><rect x="12.7" y="1269" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="15.67" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (24,700,886 samples, 0.01%)</title><rect x="632.9" y="949" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="635.86" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (24,883,842 samples, 0.01%)</title><rect x="945.4" y="1061" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="948.42" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (84,559,729 samples, 0.03%)</title><rect x="11.1" y="1205" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="14.08" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (69,249,524 samples, 0.03%)</title><rect x="1108.6" y="1093" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1111.56" y="1103.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (66,201,774 samples, 0.02%)</title><rect x="238.0" y="1061" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="240.99" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (37,849,544 samples, 0.01%)</title><rect x="1054.9" y="613" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.86" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,449,155 samples, 0.01%)</title><rect x="347.6" y="389" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.56" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (74,601,947 samples, 0.03%)</title><rect x="45.5" y="1077" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="48.47" y="1087.5" ></text>
</g>
<g >
<title>unmap_vmas (23,553,770 samples, 0.01%)</title><rect x="125.8" y="1045" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="128.80" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (26,198,805 samples, 0.01%)</title><rect x="488.2" y="485" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="491.22" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (183,431,910 samples, 0.07%)</title><rect x="63.2" y="949" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.18" y="959.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (31,791,804 samples, 0.01%)</title><rect x="1115.9" y="981" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1118.95" y="991.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (181,109,106 samples, 0.07%)</title><rect x="51.5" y="1093" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="54.46" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (109,318,172 samples, 0.04%)</title><rect x="347.5" y="741" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.54" y="751.5" ></text>
</g>
<g >
<title>__ep_remove (32,050,590 samples, 0.01%)</title><rect x="971.7" y="1205" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="974.69" y="1215.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (24,213,671,687 samples, 9.07%)</title><rect x="294.7" y="1413" width="107.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="297.72" y="1423.5" >HttpRequest::..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (135,736,242 samples, 0.05%)</title><rect x="922.8" y="901" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="925.85" y="911.5" ></text>
</g>
<g >
<title>[web-server] (83,708,159 samples, 0.03%)</title><rect x="1011.6" y="1077" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1014.59" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (33,448,753 samples, 0.01%)</title><rect x="236.8" y="997" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="239.77" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (25,285,740 samples, 0.01%)</title><rect x="921.2" y="869" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="924.21" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (45,693,048 samples, 0.02%)</title><rect x="626.1" y="1157" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="629.09" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (38,342,452 samples, 0.01%)</title><rect x="617.4" y="1029" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="620.36" y="1039.5" ></text>
</g>
<g >
<title>HttpRequest::Parse (24,458,310,488 samples, 9.16%)</title><rect x="1001.4" y="1413" width="108.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1004.43" y="1423.5" >HttpRequest::..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (10,363,817,610 samples, 3.88%)</title><rect x="721.1" y="1173" width="45.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="724.06" y="1183.5" >std:..</text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (74,546,820 samples, 0.03%)</title><rect x="656.9" y="933" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="659.93" y="943.5" ></text>
</g>
<g >
<title>__ip_finish_output (40,543,058 samples, 0.02%)</title><rect x="975.5" y="869" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="978.52" y="879.5" ></text>
</g>
<g >
<title>HttpResponse::~HttpResponse (31,672,476 samples, 0.01%)</title><rect x="265.9" y="1189" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="268.94" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (168,645,836 samples, 0.06%)</title><rect x="898.6" y="1045" width="0.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="901.61" y="1055.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (95,407,743 samples, 0.04%)</title><rect x="944.0" y="1029" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="947.01" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (78,535,053 samples, 0.03%)</title><rect x="338.3" y="1077" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="341.35" y="1087.5" ></text>
</g>
<g >
<title>HttpConn::Close (1,090,209,531 samples, 0.41%)</title><rect x="971.4" y="1429" width="4.8" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="974.41" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,877,922,061 samples, 1.45%)</title><rect x="805.8" y="1269" width="17.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="808.82" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,336,637 samples, 0.01%)</title><rect x="771.2" y="357" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="774.18" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (54,707,443 samples, 0.02%)</title><rect x="347.3" y="757" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.26" y="767.5" ></text>
</g>
<g >
<title>__dentry_kill (68,480,380 samples, 0.03%)</title><rect x="126.5" y="1077" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="129.55" y="1087.5" ></text>
</g>
<g >
<title>__destroy_inode (74,487,459 samples, 0.03%)</title><rect x="1165.8" y="1237" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1168.85" y="1247.5" ></text>
</g>
<g >
<title>__fput (285,628,803 samples, 0.11%)</title><rect x="692.2" y="1109" width="1.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="695.24" y="1119.5" ></text>
</g>
<g >
<title>sock_recvmsg (57,757,152 samples, 0.02%)</title><rect x="1113.3" y="1317" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1116.26" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,846,072,423 samples, 1.44%)</title><rect x="947.8" y="1205" width="17.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="950.77" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (122,420,144 samples, 0.05%)</title><rect x="120.2" y="1365" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="123.22" y="1375.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (75,922,222 samples, 0.03%)</title><rect x="961.9" y="1093" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="964.90" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,629,866 samples, 0.01%)</title><rect x="1054.7" y="613" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.66" y="623.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (114,224,728 samples, 0.04%)</title><rect x="802.0" y="1045" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="804.96" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (112,933,866 samples, 0.04%)</title><rect x="216.7" y="901" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="219.68" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (35,105,807 samples, 0.01%)</title><rect x="684.0" y="565" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="687.04" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,878,009,786 samples, 1.45%)</title><rect x="947.8" y="1221" width="17.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="950.76" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (239,028,852 samples, 0.09%)</title><rect x="1100.3" y="1077" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1103.28" y="1087.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (27,422,297,457 samples, 10.27%)</title><rect x="10.3" y="1589" width="121.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="13.29" y="1599.5" >EventLoopThread..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (74,639,089 samples, 0.03%)</title><rect x="1002.8" y="1205" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1005.79" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (41,674,982 samples, 0.02%)</title><rect x="118.4" y="741" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.36" y="751.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (27,146,022 samples, 0.01%)</title><rect x="691.2" y="805" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="694.15" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (99,439,311 samples, 0.04%)</title><rect x="771.0" y="693" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.96" y="703.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (25,589,062 samples, 0.01%)</title><rect x="567.6" y="1621" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="570.59" y="1631.5" ></text>
</g>
<g >
<title>evict (37,013,995 samples, 0.01%)</title><rect x="1117.2" y="1029" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1120.18" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (54,722,716 samples, 0.02%)</title><rect x="966.3" y="869" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="969.29" y="879.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (30,562,528 samples, 0.01%)</title><rect x="737.1" y="1077" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="740.10" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (537,854,901 samples, 0.20%)</title><rect x="26.8" y="1029" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="29.77" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (29,600,975 samples, 0.01%)</title><rect x="66.8" y="949" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="69.78" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+= (47,481,675 samples, 0.02%)</title><rect x="331.7" y="1029" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="334.67" y="1039.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (237,586,465 samples, 0.09%)</title><rect x="1184.0" y="1445" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.04" y="1455.5" ></text>
</g>
<g >
<title>do_user_addr_fault (88,576,032 samples, 0.03%)</title><rect x="270.3" y="1173" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="273.28" y="1183.5" ></text>
</g>
<g >
<title>operator delete (65,321,728 samples, 0.02%)</title><rect x="563.8" y="1669" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="566.84" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (32,548,996 samples, 0.01%)</title><rect x="63.3" y="485" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.25" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (86,057,016 samples, 0.03%)</title><rect x="517.8" y="1013" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="520.84" y="1023.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (45,443,712 samples, 0.02%)</title><rect x="30.3" y="1077" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="33.31" y="1087.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (54,176,768 samples, 0.02%)</title><rect x="823.5" y="1365" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="826.49" y="1375.5" ></text>
</g>
<g >
<title>malloc (85,588,317 samples, 0.03%)</title><rect x="1123.1" y="1653" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1126.11" y="1663.5" ></text>
</g>
<g >
<title>operator delete[] (46,268,509 samples, 0.02%)</title><rect x="988.0" y="1669" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="990.97" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (46,071,057 samples, 0.02%)</title><rect x="760.2" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="763.22" y="1087.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (77,880,292 samples, 0.03%)</title><rect x="577.0" y="1429" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="579.98" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (93,456,551 samples, 0.03%)</title><rect x="824.0" y="1141" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="826.99" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (55,400,932 samples, 0.02%)</title><rect x="447.6" y="1077" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="450.61" y="1087.5" ></text>
</g>
<g >
<title>x64_sys_call (302,957,689 samples, 0.11%)</title><rect x="974.7" y="1157" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="977.73" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,079,668 samples, 0.01%)</title><rect x="911.6" y="421" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.64" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (25,961,111 samples, 0.01%)</title><rect x="328.6" y="1093" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="331.60" y="1103.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (25,887,519 samples, 0.01%)</title><rect x="400.3" y="1141" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="403.26" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (1,896,532,163 samples, 0.71%)</title><rect x="633.5" y="949" width="8.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="636.49" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (37,940,769 samples, 0.01%)</title><rect x="210.9" y="933" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="213.91" y="943.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (61,293,100 samples, 0.02%)</title><rect x="152.1" y="1653" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="155.07" y="1663.5" ></text>
</g>
<g >
<title>epoll_ctl (46,452,839 samples, 0.02%)</title><rect x="836.8" y="1461" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="839.81" y="1471.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (112,996,231 samples, 0.04%)</title><rect x="1122.1" y="1669" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1125.08" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (76,198,186 samples, 0.03%)</title><rect x="259.8" y="1221" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.83" y="1231.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (25,122,786,257 samples, 9.41%)</title><rect x="577.3" y="1429" width="111.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="580.33" y="1439.5" >HttpConn::OnP..</text>
</g>
<g >
<title>__irq_exit_rcu (27,157,656 samples, 0.01%)</title><rect x="550.2" y="949" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="553.21" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (24,853,317 samples, 0.01%)</title><rect x="768.4" y="1317" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="771.43" y="1327.5" ></text>
</g>
<g >
<title>std::function&lt;void  (178,545,522 samples, 0.07%)</title><rect x="405.8" y="1381" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="408.80" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (73,926,083 samples, 0.03%)</title><rect x="11.1" y="1173" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="14.09" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (37,548,645 samples, 0.01%)</title><rect x="1054.4" y="437" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.43" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,641,608,048 samples, 0.61%)</title><rect x="971.4" y="1509" width="7.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="974.35" y="1519.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (32,291,749 samples, 0.01%)</title><rect x="824.8" y="1365" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="827.79" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (23,969,886 samples, 0.01%)</title><rect x="822.7" y="1189" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="825.68" y="1199.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (128,607,643 samples, 0.05%)</title><rect x="281.8" y="1669" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="284.82" y="1679.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (73,111,669 samples, 0.03%)</title><rect x="604.8" y="933" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="607.78" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (31,840,633 samples, 0.01%)</title><rect x="786.8" y="949" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="789.82" y="959.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (225,012,745 samples, 0.08%)</title><rect x="1028.6" y="965" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1031.63" y="975.5" ></text>
</g>
<g >
<title>[unknown] (44,865,941 samples, 0.02%)</title><rect x="282.4" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="285.39" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (476,663,590 samples, 0.18%)</title><rect x="556.5" y="1669" width="2.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.53" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (115,037,897 samples, 0.04%)</title><rect x="63.5" y="837" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.45" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (41,188,744 samples, 0.02%)</title><rect x="60.0" y="1253" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="62.99" y="1263.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (68,655,900 samples, 0.03%)</title><rect x="472.1" y="1045" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="475.11" y="1055.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (72,873,693 samples, 0.03%)</title><rect x="255.4" y="1093" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="258.40" y="1103.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (864,427,124 samples, 0.32%)</title><rect x="1114.6" y="1253" width="3.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1117.62" y="1263.5" ></text>
</g>
<g >
<title>accept (3,594,690,792 samples, 1.35%)</title><rect x="1163.8" y="1461" width="15.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1166.76" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (22,903,218 samples, 0.01%)</title><rect x="966.9" y="1333" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="969.87" y="1343.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (27,461,525,407 samples, 10.28%)</title><rect x="434.6" y="1589" width="121.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="437.62" y="1599.5" >EventLoopThread..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (91,584,829 samples, 0.03%)</title><rect x="810.9" y="1013" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="813.86" y="1023.5" ></text>
</g>
<g >
<title>vfs_read (72,954,438 samples, 0.03%)</title><rect x="688.7" y="1349" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="691.68" y="1359.5" ></text>
</g>
<g >
<title>ip_local_deliver (22,853,376 samples, 0.01%)</title><rect x="716.3" y="1445" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="719.31" y="1455.5" ></text>
</g>
<g >
<title>std::function&lt;void  (67,064,920 samples, 0.03%)</title><rect x="859.0" y="1397" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="861.98" y="1407.5" ></text>
</g>
<g >
<title>netvsc_poll (39,449,318 samples, 0.01%)</title><rect x="151.0" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="154.03" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (179,414,269 samples, 0.07%)</title><rect x="1054.3" y="1045" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.34" y="1055.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (48,769,721 samples, 0.02%)</title><rect x="1085.5" y="1013" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1088.54" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (10,344,380,239 samples, 3.87%)</title><rect x="1004.2" y="1157" width="45.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1007.19" y="1167.5" >std:..</text>
</g>
<g >
<title>vm_mmap_pgoff (320,530,433 samples, 0.12%)</title><rect x="826.6" y="1301" width="1.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="829.63" y="1311.5" ></text>
</g>
<g >
<title>malloc (601,837,795 samples, 0.23%)</title><rect x="854.4" y="1685" width="2.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="857.41" y="1695.5" ></text>
</g>
<g >
<title>EventLoop::DelChannel (180,948,893 samples, 0.07%)</title><rect x="971.4" y="1413" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="974.41" y="1423.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Channel, std::allocator&lt;Channel&gt;, int&amp;&gt; (180,510,932 samples, 0.07%)</title><rect x="1160.3" y="1285" width="0.7" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1163.25" y="1295.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (62,681,187 samples, 0.02%)</title><rect x="1120.1" y="1061" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1123.06" y="1071.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (52,603,350 samples, 0.02%)</title><rect x="1083.8" y="997" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1086.79" y="1007.5" ></text>
</g>
<g >
<title>ip_output (54,929,655 samples, 0.02%)</title><rect x="127.3" y="901" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="130.25" y="911.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (164,199,073 samples, 0.06%)</title><rect x="361.4" y="949" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="364.38" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (47,497,690 samples, 0.02%)</title><rect x="347.7" y="453" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.75" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (208,614,006 samples, 0.08%)</title><rect x="609.5" y="1045" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="612.47" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (34,166,694 samples, 0.01%)</title><rect x="112.0" y="1061" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="114.97" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_less_val (41,960,607 samples, 0.02%)</title><rect x="17.9" y="1093" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="20.88" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (57,369,820 samples, 0.02%)</title><rect x="770.7" y="789" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.67" y="799.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (26,770,243 samples, 0.01%)</title><rect x="968.3" y="1269" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="971.28" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,608,728 samples, 0.02%)</title><rect x="771.2" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="774.16" y="591.5" ></text>
</g>
<g >
<title>exc_page_fault (83,412,911 samples, 0.03%)</title><rect x="128.7" y="1189" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="131.69" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,958,360 samples, 0.01%)</title><rect x="205.6" y="133" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.56" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (57,496,551 samples, 0.02%)</title><rect x="400.7" y="837" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="403.73" y="847.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (169,226,696 samples, 0.06%)</title><rect x="1028.9" y="949" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1031.88" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (32,079,668 samples, 0.01%)</title><rect x="911.6" y="405" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.64" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (257,896,533 samples, 0.10%)</title><rect x="1077.4" y="1029" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1080.44" y="1039.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (51,499,016 samples, 0.02%)</title><rect x="540.9" y="1109" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="543.90" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (49,293,960 samples, 0.02%)</title><rect x="118.8" y="1397" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="121.81" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (206,402,382 samples, 0.08%)</title><rect x="911.5" y="1109" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.52" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (381,027,990 samples, 0.14%)</title><rect x="11.0" y="1269" width="1.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.97" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (54,018,311 samples, 0.02%)</title><rect x="1003.4" y="1269" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1006.39" y="1279.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::find (53,000,433 samples, 0.02%)</title><rect x="1186.4" y="1605" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1189.41" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (348,113,326 samples, 0.13%)</title><rect x="1111.1" y="1365" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1114.14" y="1375.5" ></text>
</g>
<g >
<title>iput (44,339,372 samples, 0.02%)</title><rect x="1117.2" y="1045" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1120.17" y="1055.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (86,515,089 samples, 0.03%)</title><rect x="152.9" y="1429" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="155.93" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (44,102,819 samples, 0.02%)</title><rect x="846.9" y="1669" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="849.88" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (34,391,521 samples, 0.01%)</title><rect x="66.9" y="949" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="69.91" y="959.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (125,894,270 samples, 0.05%)</title><rect x="261.6" y="1397" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="264.61" y="1407.5" ></text>
</g>
<g >
<title>dput (84,159,180 samples, 0.03%)</title><rect x="974.8" y="1093" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="977.78" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (23,816,386 samples, 0.01%)</title><rect x="626.8" y="1253" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="629.85" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (238,991,947 samples, 0.09%)</title><rect x="629.4" y="1125" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.37" y="1135.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (39,663,674 samples, 0.01%)</title><rect x="183.7" y="1013" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="186.72" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (27,899,833 samples, 0.01%)</title><rect x="118.4" y="501" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="121.38" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (24,123,622 samples, 0.01%)</title><rect x="868.5" y="1093" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="871.45" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (55,105,056 samples, 0.02%)</title><rect x="720.0" y="1173" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="722.96" y="1183.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (194,686,519 samples, 0.07%)</title><rect x="335.6" y="1093" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="338.61" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,852,776,505 samples, 1.44%)</title><rect x="506.9" y="1221" width="17.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="509.87" y="1231.5" ></text>
</g>
<g >
<title>Channel::OnRead (25,455,383,926 samples, 9.53%)</title><rect x="858.9" y="1541" width="112.4" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="861.86" y="1551.5" >Channel::OnRead</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,842,739 samples, 0.01%)</title><rect x="488.4" y="181" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.40" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (25,632,318 samples, 0.01%)</title><rect x="629.5" y="405" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.54" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (108,346,781 samples, 0.04%)</title><rect x="435.4" y="1237" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="438.42" y="1247.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (228,250,815 samples, 0.09%)</title><rect x="125.0" y="1077" width="1.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="127.98" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (65,008,401 samples, 0.02%)</title><rect x="966.3" y="1013" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="969.28" y="1023.5" ></text>
</g>
<g >
<title>do_sys_openat2 (99,207,527 samples, 0.04%)</title><rect x="982.3" y="1589" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="985.30" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (108,701,588 samples, 0.04%)</title><rect x="840.2" y="1653" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="843.25" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (34,911,579 samples, 0.01%)</title><rect x="1087.8" y="1061" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1090.83" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (42,131,557 samples, 0.02%)</title><rect x="439.0" y="1109" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="441.95" y="1119.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (130,395,432 samples, 0.05%)</title><rect x="641.3" y="917" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="644.30" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (32,696,933 samples, 0.01%)</title><rect x="659.8" y="1045" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="662.78" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (27,266,076 samples, 0.01%)</title><rect x="539.9" y="1077" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="542.94" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (28,726,910 samples, 0.01%)</title><rect x="539.2" y="1093" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="542.17" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (88,966,727 samples, 0.03%)</title><rect x="684.0" y="1173" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="686.96" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (90,575,751 samples, 0.03%)</title><rect x="1054.6" y="741" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.65" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (41,817,581 samples, 0.02%)</title><rect x="629.5" y="597" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.51" y="607.5" ></text>
</g>
<g >
<title>[unknown] (23,162,380 samples, 0.01%)</title><rect x="556.9" y="869" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="879.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (207,379,678 samples, 0.08%)</title><rect x="373.8" y="981" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="376.81" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (308,279,592 samples, 0.12%)</title><rect x="205.3" y="1317" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="208.26" y="1327.5" ></text>
</g>
<g >
<title>inet_release (196,106,891 samples, 0.07%)</title><rect x="833.0" y="1061" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="835.96" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (31,462,308 samples, 0.01%)</title><rect x="384.2" y="1093" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="387.17" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (24,911,467 samples, 0.01%)</title><rect x="43.5" y="1013" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="46.53" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (60,638,138 samples, 0.02%)</title><rect x="782.6" y="885" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="785.59" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (183,246,340 samples, 0.07%)</title><rect x="387.1" y="1029" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="390.12" y="1039.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (162,463,260 samples, 0.06%)</title><rect x="193.9" y="1093" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="196.95" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,722,716 samples, 0.02%)</title><rect x="966.3" y="885" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.29" y="895.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (50,251,162 samples, 0.02%)</title><rect x="345.2" y="1269" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="348.24" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (29,181,783 samples, 0.01%)</title><rect x="488.2" y="581" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="491.22" y="591.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (190,057,669 samples, 0.07%)</title><rect x="818.8" y="1093" width="0.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="821.84" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,078,517 samples, 0.02%)</title><rect x="63.2" y="837" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.22" y="847.5" ></text>
</g>
<g >
<title>std::search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*&gt; (33,647,545 samples, 0.01%)</title><rect x="1109.3" y="1397" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1112.29" y="1407.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (56,821,906 samples, 0.02%)</title><rect x="1081.8" y="917" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1084.84" y="927.5" ></text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (146,813,947 samples, 0.05%)</title><rect x="400.5" y="1365" width="0.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="403.50" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (39,163,114 samples, 0.01%)</title><rect x="63.7" y="517" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.69" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (51,155,624 samples, 0.02%)</title><rect x="889.4" y="1013" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="892.38" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (43,369,631 samples, 0.02%)</title><rect x="860.2" y="1157" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="863.19" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (86,911,511 samples, 0.03%)</title><rect x="866.9" y="1093" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="869.94" y="1103.5" ></text>
</g>
<g >
<title>ip_output (60,889,162 samples, 0.02%)</title><rect x="409.8" y="901" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="412.81" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (53,357,027 samples, 0.02%)</title><rect x="347.7" y="565" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.74" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (46,644,071 samples, 0.02%)</title><rect x="911.6" y="741" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.61" y="751.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (8,114,889,064 samples, 3.04%)</title><rect x="1143.9" y="1541" width="35.9" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1146.91" y="1551.5" >std..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (91,106,924 samples, 0.03%)</title><rect x="174.0" y="1077" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="177.03" y="1087.5" ></text>
</g>
<g >
<title>__strxfrm_l (248,703,176 samples, 0.09%)</title><rect x="709.9" y="1653" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="712.87" y="1663.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (28,336,973 samples, 0.01%)</title><rect x="213.1" y="933" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="216.13" y="943.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (143,470,835 samples, 0.05%)</title><rect x="110.5" y="1061" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="113.50" y="1071.5" ></text>
</g>
<g >
<title>vfs_writev (444,991,828 samples, 0.17%)</title><rect x="834.6" y="1349" width="1.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="837.56" y="1359.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (29,689,215 samples, 0.01%)</title><rect x="41.3" y="1013" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="44.31" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_end (93,238,066 samples, 0.03%)</title><rect x="295.0" y="1189" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="298.03" y="1199.5" ></text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (146,484,513 samples, 0.05%)</title><rect x="823.8" y="1365" width="0.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="826.81" y="1375.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (97,644,065 samples, 0.04%)</title><rect x="486.5" y="1301" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="489.50" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (43,185,048 samples, 0.02%)</title><rect x="63.2" y="629" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.24" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (52,432,421 samples, 0.02%)</title><rect x="565.0" y="1669" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="567.96" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (40,316,358 samples, 0.02%)</title><rect x="295.6" y="1157" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="298.63" y="1167.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (809,962,472 samples, 0.30%)</title><rect x="549.0" y="1349" width="3.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="551.97" y="1359.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (108,254,830 samples, 0.04%)</title><rect x="127.1" y="965" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="130.05" y="975.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (142,323,246 samples, 0.05%)</title><rect x="482.5" y="1125" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="485.48" y="1135.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (23,688,025 samples, 0.01%)</title><rect x="882.0" y="1061" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="884.97" y="1071.5" ></text>
</g>
<g >
<title>__ip_finish_output (70,748,761 samples, 0.03%)</title><rect x="977.7" y="1093" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="980.73" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4,010,614,556 samples, 1.50%)</title><rect x="524.2" y="1237" width="17.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="527.20" y="1247.5" ></text>
</g>
<g >
<title>__GI___libc_open (121,213,729 samples, 0.05%)</title><rect x="840.2" y="1669" width="0.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="843.23" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,228,583 samples, 0.01%)</title><rect x="488.2" y="565" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.22" y="575.5" ></text>
</g>
<g >
<title>filemap_map_pages (23,504,589 samples, 0.01%)</title><rect x="553.3" y="1109" width="0.1" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="556.30" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (84,706,242 samples, 0.03%)</title><rect x="187.9" y="1077" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="190.94" y="1087.5" ></text>
</g>
<g >
<title>__mmap (367,416,823 samples, 0.14%)</title><rect x="686.6" y="1397" width="1.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="689.56" y="1407.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (50,809,667 samples, 0.02%)</title><rect x="117.8" y="1301" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="120.81" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,009,556 samples, 0.01%)</title><rect x="347.8" y="133" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.78" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (28,126,986 samples, 0.01%)</title><rect x="328.2" y="1045" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="331.20" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (66,636,154 samples, 0.02%)</title><rect x="661.6" y="1013" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="664.64" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (318,870,631 samples, 0.12%)</title><rect x="1117.0" y="1189" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1119.95" y="1199.5" ></text>
</g>
<g >
<title>do_mmap (192,731,034 samples, 0.07%)</title><rect x="545.6" y="1285" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="548.59" y="1295.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (57,966,794 samples, 0.02%)</title><rect x="259.3" y="1317" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="262.30" y="1327.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (63,180,338 samples, 0.02%)</title><rect x="77.1" y="917" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="80.13" y="927.5" ></text>
</g>
<g >
<title>[unknown] (29,507,745 samples, 0.01%)</title><rect x="587.1" y="1077" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="590.13" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,532,411 samples, 0.02%)</title><rect x="205.5" y="805" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.49" y="815.5" ></text>
</g>
<g >
<title>handle_softirqs (35,677,873 samples, 0.01%)</title><rect x="691.1" y="933" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="694.14" y="943.5" ></text>
</g>
<g >
<title>[unknown] (264,529,096 samples, 0.10%)</title><rect x="840.8" y="1653" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="843.78" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (239,394,338 samples, 0.09%)</title><rect x="911.5" y="1221" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.46" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (25,687,341 samples, 0.01%)</title><rect x="771.2" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="774.20" y="287.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (23,184,673 samples, 0.01%)</title><rect x="121.1" y="1237" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="124.09" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,780,534,246 samples, 1.42%)</title><rect x="241.4" y="1157" width="16.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="244.40" y="1167.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (153,610,999 samples, 0.06%)</title><rect x="457.2" y="1045" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="460.23" y="1055.5" ></text>
</g>
<g >
<title>vfs_open (26,648,325 samples, 0.01%)</title><rect x="840.5" y="1541" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="843.51" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,724,755,461 samples, 4.39%)</title><rect x="631.1" y="1317" width="51.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="634.13" y="1327.5" >std::..</text>
</g>
<g >
<title>d_alloc_pseudo (182,604,963 samples, 0.07%)</title><rect x="1176.0" y="1317" width="0.8" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1178.98" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (44,197,663 samples, 0.02%)</title><rect x="118.4" y="837" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="121.35" y="847.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (170,470,856 samples, 0.06%)</title><rect x="784.5" y="949" width="0.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="787.51" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (53,767,235 samples, 0.02%)</title><rect x="388.7" y="1077" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="391.72" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_end (76,185,470 samples, 0.03%)</title><rect x="11.1" y="1189" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="14.09" y="1199.5" ></text>
</g>
<g >
<title>rep_movs_alternative (104,507,658 samples, 0.04%)</title><rect x="553.2" y="1221" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="556.16" y="1231.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (26,762,412 samples, 0.01%)</title><rect x="687.2" y="1221" width="0.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="690.25" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_less_val (39,608,004 samples, 0.01%)</title><rect x="1008.6" y="1093" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1011.56" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (238,578,496 samples, 0.09%)</title><rect x="911.5" y="1205" width="1.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="914.47" y="1215.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (27,122,733,743 samples, 10.16%)</title><rect x="294.2" y="1621" width="119.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="297.17" y="1631.5" >std::__invoke&lt;..</text>
</g>
<g >
<title>__x64_sys_mmap (324,678,321 samples, 0.12%)</title><rect x="968.9" y="1333" width="1.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="971.92" y="1343.5" ></text>
</g>
<g >
<title>rep_movs_alternative (102,508,134 samples, 0.04%)</title><rect x="834.8" y="1221" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="837.81" y="1231.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (23,424,399 samples, 0.01%)</title><rect x="772.1" y="1349" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="775.07" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (79,169,707 samples, 0.03%)</title><rect x="259.8" y="1269" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="262.82" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,210,133,579 samples, 4.20%)</title><rect x="577.5" y="1317" width="49.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="580.50" y="1327.5" >std:..</text>
</g>
<g >
<title>tlb_finish_mmu (95,630,098 samples, 0.04%)</title><rect x="973.6" y="1045" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="976.56" y="1055.5" ></text>
</g>
<g >
<title>napi_complete_done (31,328,092 samples, 0.01%)</title><rect x="125.5" y="869" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="128.49" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (32,993,858 samples, 0.01%)</title><rect x="337.6" y="1093" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="340.61" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_begin (27,632,024 samples, 0.01%)</title><rect x="767.9" y="1269" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="770.85" y="1279.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (91,049,993 samples, 0.03%)</title><rect x="551.7" y="933" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="554.74" y="943.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (24,251,973 samples, 0.01%)</title><rect x="22.2" y="1077" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="25.16" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (26,903,335 samples, 0.01%)</title><rect x="629.8" y="437" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.79" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (53,017,298 samples, 0.02%)</title><rect x="629.9" y="597" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.94" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (10,543,171,606 samples, 3.95%)</title><rect x="155.7" y="1237" width="46.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="158.65" y="1247.5" >std:..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (84,110,085 samples, 0.03%)</title><rect x="471.2" y="1061" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="474.25" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (36,308,144 samples, 0.01%)</title><rect x="256.5" y="1093" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="259.53" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (26,604,446 samples, 0.01%)</title><rect x="768.3" y="1301" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="771.30" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,880,771,222 samples, 4.45%)</title><rect x="64.8" y="1333" width="52.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="67.82" y="1343.5" >std::..</text>
</g>
<g >
<title>getname_flags.part.0 (33,507,615 samples, 0.01%)</title><rect x="1110.5" y="1269" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1113.48" y="1279.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (52,022,589 samples, 0.02%)</title><rect x="216.0" y="805" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="218.98" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (12,011,891,426 samples, 4.50%)</title><rect x="489.5" y="1349" width="53.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="492.46" y="1359.5" >std::..</text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (27,407,856 samples, 0.01%)</title><rect x="261.3" y="1365" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="264.35" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (30,080,253 samples, 0.01%)</title><rect x="223.8" y="1045" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="226.76" y="1055.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (643,413,256 samples, 0.24%)</title><rect x="36.6" y="1045" width="2.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="39.56" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::base (25,260,207 samples, 0.01%)</title><rect x="726.5" y="1077" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="729.52" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,966,710 samples, 0.02%)</title><rect x="824.1" y="645" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.05" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (173,566,416 samples, 0.06%)</title><rect x="911.6" y="853" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.60" y="863.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (67,247,014 samples, 0.03%)</title><rect x="910.3" y="1221" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="913.26" y="1231.5" ></text>
</g>
<g >
<title>do_filp_open (65,394,897 samples, 0.02%)</title><rect x="558.7" y="1573" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="561.74" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (334,918,671 samples, 0.13%)</title><rect x="403.3" y="1381" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="406.31" y="1391.5" ></text>
</g>
<g >
<title>rndis_filter_receive (23,684,261 samples, 0.01%)</title><rect x="1184.9" y="1301" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1187.88" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (44,422,044 samples, 0.02%)</title><rect x="911.6" y="677" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="914.62" y="687.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (23,315,609 samples, 0.01%)</title><rect x="517.4" y="1029" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="520.45" y="1039.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (132,643,179 samples, 0.05%)</title><rect x="533.6" y="981" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="536.61" y="991.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (52,179,371 samples, 0.02%)</title><rect x="683.5" y="1301" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="686.47" y="1311.5" ></text>
</g>
<g >
<title>tcp_setsockopt (149,773,608 samples, 0.06%)</title><rect x="1146.1" y="1317" width="0.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1149.07" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (244,595,296 samples, 0.09%)</title><rect x="911.4" y="1237" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="914.45" y="1247.5" ></text>
</g>
<g >
<title>down_write_killable (109,677,489 samples, 0.04%)</title><rect x="969.8" y="1285" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="972.77" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (56,852,481 samples, 0.02%)</title><rect x="629.9" y="645" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.94" y="655.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (23,659,804 samples, 0.01%)</title><rect x="75.6" y="869" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="78.63" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,923,872,882 samples, 1.47%)</title><rect x="241.2" y="1237" width="17.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="244.21" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,680,688,634 samples, 3.63%)</title><rect x="298.0" y="1125" width="42.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="300.99" y="1135.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (92,600,362 samples, 0.03%)</title><rect x="205.8" y="693" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.77" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (683,649,402 samples, 0.26%)</title><rect x="1032.8" y="1077" width="3.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1035.77" y="1087.5" ></text>
</g>
<g >
<title>tcp_write_xmit (132,335,552 samples, 0.05%)</title><rect x="692.8" y="981" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="695.83" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (10,437,536,076 samples, 3.91%)</title><rect x="861.7" y="1189" width="46.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="864.71" y="1199.5" >std:..</text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (148,025,819 samples, 0.06%)</title><rect x="758.3" y="1045" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="761.32" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,836,146 samples, 0.01%)</title><rect x="543.3" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.26" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (41,749,942 samples, 0.02%)</title><rect x="312.0" y="1013" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="315.00" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,407,912 samples, 0.01%)</title><rect x="912.1" y="357" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.08" y="367.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (187,788,735 samples, 0.07%)</title><rect x="921.8" y="853" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="924.76" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,405,286 samples, 0.02%)</title><rect x="824.1" y="549" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.07" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_close (301,549,970 samples, 0.11%)</title><rect x="974.7" y="1141" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="977.74" y="1151.5" ></text>
</g>
<g >
<title>netvsc_poll (23,764,110 samples, 0.01%)</title><rect x="996.4" y="1557" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="999.43" y="1567.5" ></text>
</g>
<g >
<title>std::function&lt;void  (25,224,308,149 samples, 9.45%)</title><rect x="294.2" y="1525" width="111.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="297.22" y="1535.5" >std::function..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (70,225,001 samples, 0.03%)</title><rect x="1100.9" y="1029" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1103.89" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,580,861,110 samples, 4.34%)</title><rect x="348.9" y="1349" width="51.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="351.89" y="1359.5" >std::..</text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (101,885,385 samples, 0.04%)</title><rect x="175.5" y="1029" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="178.47" y="1039.5" ></text>
</g>
<g >
<title>do_iter_write (437,818,011 samples, 0.16%)</title><rect x="976.6" y="1333" width="2.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="979.62" y="1343.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (53,354,849 samples, 0.02%)</title><rect x="222.5" y="965" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="225.48" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (33,606,429 samples, 0.01%)</title><rect x="83.7" y="1061" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="86.73" y="1071.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (321,032,300 samples, 0.12%)</title><rect x="409.0" y="1189" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="411.97" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (65,168,800 samples, 0.02%)</title><rect x="824.0" y="869" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.03" y="879.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (160,019,512 samples, 0.06%)</title><rect x="219.7" y="949" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="222.70" y="959.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (43,616,853 samples, 0.02%)</title><rect x="394.8" y="1061" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="397.75" y="1071.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (45,774,231 samples, 0.02%)</title><rect x="787.6" y="981" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="790.65" y="991.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (26,507,690 samples, 0.01%)</title><rect x="679.6" y="1093" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="682.57" y="1103.5" ></text>
</g>
<g >
<title>ip_finish_output2 (79,678,226 samples, 0.03%)</title><rect x="271.1" y="1077" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="274.09" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (26,600,567 samples, 0.01%)</title><rect x="896.8" y="1013" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="899.75" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (43,150,849 samples, 0.02%)</title><rect x="683.5" y="1253" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="686.51" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (30,231,922 samples, 0.01%)</title><rect x="838.6" y="1621" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,346,871 samples, 0.01%)</title><rect x="966.3" y="549" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.33" y="559.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (226,354,928 samples, 0.08%)</title><rect x="357.0" y="901" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="360.01" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (10,727,769,742 samples, 4.02%)</title><rect x="1003.7" y="1253" width="47.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1006.69" y="1263.5" >std:..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (33,575,392 samples, 0.01%)</title><rect x="94.2" y="1029" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="97.20" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (38,529,356 samples, 0.01%)</title><rect x="205.8" y="661" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="208.77" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (42,803,615 samples, 0.02%)</title><rect x="259.9" y="805" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="262.89" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_fill_assign (33,267,689 samples, 0.01%)</title><rect x="487.3" y="1301" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="490.32" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (91,770,166 samples, 0.03%)</title><rect x="613.0" y="1061" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="616.00" y="1071.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (628,906,857 samples, 0.24%)</title><rect x="1037.2" y="1077" width="2.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1040.15" y="1087.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (143,030,070 samples, 0.05%)</title><rect x="797.7" y="949" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="800.67" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,522,665 samples, 0.01%)</title><rect x="771.0" y="533" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.97" y="543.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (125,747,961 samples, 0.05%)</title><rect x="61.8" y="1333" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="64.77" y="1343.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (27,163,381 samples, 0.01%)</title><rect x="801.3" y="1013" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="804.26" y="1023.5" ></text>
</g>
<g >
<title>tcp_push (205,996,654 samples, 0.08%)</title><rect x="694.8" y="1237" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="697.79" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,407,616,184 samples, 3.52%)</title><rect x="1005.7" y="1109" width="41.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1008.67" y="1119.5" >std..</text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (75,509,904 samples, 0.03%)</title><rect x="462.8" y="933" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="465.83" y="943.5" ></text>
</g>
<g >
<title>handle_mm_fault (44,377,857 samples, 0.02%)</title><rect x="411.4" y="1157" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="414.35" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,968,474,648 samples, 1.49%)</title><rect x="241.2" y="1269" width="17.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="244.18" y="1279.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (27,330,513 samples, 0.01%)</title><rect x="1119.5" y="1157" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1122.51" y="1167.5" ></text>
</g>
<g >
<title>nf_conntrack_in (30,683,869 samples, 0.01%)</title><rect x="553.8" y="1077" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="556.75" y="1087.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (219,029,176 samples, 0.08%)</title><rect x="56.6" y="1125" width="1.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="59.63" y="1135.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (56,709,365 samples, 0.02%)</title><rect x="683.5" y="1365" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="686.46" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (30,516,420 samples, 0.01%)</title><rect x="1108.6" y="421" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1111.63" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (95,682,648 samples, 0.04%)</title><rect x="538.3" y="1061" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="541.29" y="1071.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (24,221,586 samples, 0.01%)</title><rect x="181.0" y="965" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="184.05" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (31,077,601 samples, 0.01%)</title><rect x="803.1" y="1061" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="806.12" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (42,514,125 samples, 0.02%)</title><rect x="106.9" y="1029" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="109.87" y="1039.5" ></text>
</g>
<g >
<title>getname_flags (25,884,577 samples, 0.01%)</title><rect x="545.0" y="1285" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="547.99" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (42,746,513 samples, 0.02%)</title><rect x="506.4" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="509.41" y="1087.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (89,761,424 samples, 0.03%)</title><rect x="975.3" y="933" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="978.34" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,773,891,570 samples, 1.41%)</title><rect x="1072.9" y="1157" width="16.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1075.87" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (609,095,379 samples, 0.23%)</title><rect x="356.1" y="917" width="2.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="359.12" y="927.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (53,874,937 samples, 0.02%)</title><rect x="920.3" y="901" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="923.32" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (59,876,908 samples, 0.02%)</title><rect x="1002.3" y="1173" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1005.28" y="1183.5" ></text>
</g>
<g >
<title>net_rx_action (23,302,839 samples, 0.01%)</title><rect x="285.0" y="1557" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="288.05" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (31,255,802 samples, 0.01%)</title><rect x="579.2" y="1237" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="582.18" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (191,141,963 samples, 0.07%)</title><rect x="911.6" y="997" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.57" y="1007.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (632,751,385 samples, 0.24%)</title><rect x="744.4" y="1029" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="747.37" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (959,287,583 samples, 0.36%)</title><rect x="1131.9" y="1669" width="4.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1134.85" y="1679.5" ></text>
</g>
<g >
<title>__dentry_kill (62,542,479 samples, 0.02%)</title><rect x="551.2" y="1077" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="554.22" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (24,191,962 samples, 0.01%)</title><rect x="539.7" y="1093" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="542.74" y="1103.5" ></text>
</g>
<g >
<title>operator new[] (33,713,730 samples, 0.01%)</title><rect x="415.9" y="1653" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="418.92" y="1663.5" ></text>
</g>
<g >
<title>destroy_inode (29,948,620 samples, 0.01%)</title><rect x="975.0" y="1013" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="977.96" y="1023.5" ></text>
</g>
<g >
<title>HttpConn::Close (1,002,015,685 samples, 0.38%)</title><rect x="548.1" y="1429" width="4.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="551.14" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (29,418,233 samples, 0.01%)</title><rect x="629.8" y="517" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="632.78" y="527.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (53,258,549 samples, 0.02%)</title><rect x="823.5" y="1333" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="826.50" y="1343.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (34,749,273 samples, 0.01%)</title><rect x="1147.7" y="1413" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1150.68" y="1423.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (51,480,987 samples, 0.02%)</title><rect x="974.3" y="1077" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="977.28" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (998,236,878 samples, 0.37%)</title><rect x="308.5" y="1077" width="4.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="311.49" y="1087.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (66,516,513 samples, 0.02%)</title><rect x="170.2" y="997" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="173.15" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (131,413,291 samples, 0.05%)</title><rect x="1110.3" y="1381" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1113.34" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (10,116,029,767 samples, 3.79%)</title><rect x="862.1" y="1141" width="44.7" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="865.14" y="1151.5" >std:..</text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (214,887,360 samples, 0.08%)</title><rect x="462.2" y="965" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="465.22" y="975.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (23,430,571 samples, 0.01%)</title><rect x="887.8" y="1045" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="890.81" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (59,488,550 samples, 0.02%)</title><rect x="487.9" y="837" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.89" y="847.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (182,197,998 samples, 0.07%)</title><rect x="215.7" y="853" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="218.66" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,724,650 samples, 0.02%)</title><rect x="63.2" y="693" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.24" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (211,486,890 samples, 0.08%)</title><rect x="670.2" y="1029" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="673.24" y="1039.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (66,990,941 samples, 0.03%)</title><rect x="594.3" y="997" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="597.32" y="1007.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (267,090,675 samples, 0.10%)</title><rect x="334.0" y="1061" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="337.01" y="1071.5" ></text>
</g>
<g >
<title>filename_lookup (44,400,362 samples, 0.02%)</title><rect x="1110.6" y="1269" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1113.65" y="1279.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (76,040,189 samples, 0.03%)</title><rect x="78.3" y="949" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.29" y="959.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (27,175,016 samples, 0.01%)</title><rect x="788.6" y="1013" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="791.64" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,463,827 samples, 0.02%)</title><rect x="771.2" y="549" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="774.17" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (130,615,234 samples, 0.05%)</title><rect x="719.3" y="1221" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="722.32" y="1231.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (703,187,071 samples, 0.26%)</title><rect x="461.0" y="1045" width="3.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="463.95" y="1055.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,539,025,956 samples, 0.58%)</title><rect x="548.1" y="1525" width="6.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="551.06" y="1535.5" ></text>
</g>
<g >
<title>x64_sys_call (77,752,406 samples, 0.03%)</title><rect x="405.2" y="1397" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="408.24" y="1407.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (33,219,726 samples, 0.01%)</title><rect x="1120.2" y="1029" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1123.17" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (30,860,157 samples, 0.01%)</title><rect x="804.0" y="1061" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="806.95" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (28,854,849 samples, 0.01%)</title><rect x="650.0" y="1061" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="653.00" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (98,322,259 samples, 0.04%)</title><rect x="911.9" y="693" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.88" y="703.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (161,819,614 samples, 0.06%)</title><rect x="123.5" y="1397" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="126.51" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (86,313,558 samples, 0.03%)</title><rect x="54.9" y="1093" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="57.95" y="1103.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::DelChannel (164,528,492 samples, 0.06%)</title><rect x="548.2" y="1333" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="551.18" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (91,693,036 samples, 0.03%)</title><rect x="118.3" y="1285" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.26" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (46,950,446 samples, 0.02%)</title><rect x="1054.4" y="709" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.41" y="719.5" ></text>
</g>
<g >
<title>loopthread3 (32,174,457,087 samples, 12.05%)</title><rect x="434.5" y="1701" width="142.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="437.52" y="1711.5" >loopthread3</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (166,142,259 samples, 0.06%)</title><rect x="185.8" y="1029" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="188.77" y="1039.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (48,229,852 samples, 0.02%)</title><rect x="596.5" y="1077" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="599.51" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (54,108,117 samples, 0.02%)</title><rect x="259.9" y="997" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="262.87" y="1007.5" ></text>
</g>
<g >
<title>operator new (82,932,352 samples, 0.03%)</title><rect x="1123.5" y="1653" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1126.49" y="1663.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (192,799,673 samples, 0.07%)</title><rect x="533.5" y="997" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="536.48" y="1007.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (35,137,744 samples, 0.01%)</title><rect x="965.8" y="1173" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="968.81" y="1183.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (900,445,148 samples, 0.34%)</title><rect x="1114.6" y="1349" width="3.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1117.56" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (24,485,406 samples, 0.01%)</title><rect x="484.8" y="1237" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="487.84" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (29,358,023 samples, 0.01%)</title><rect x="680.9" y="1093" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="683.86" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,658,248 samples, 0.02%)</title><rect x="543.2" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.22" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (37,218,238 samples, 0.01%)</title><rect x="630.0" y="309" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.98" y="319.5" ></text>
</g>
<g >
<title>[unknown] (26,426,802 samples, 0.01%)</title><rect x="556.9" y="1509" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1519.5" ></text>
</g>
<g >
<title>inet_release (189,606,551 samples, 0.07%)</title><rect x="268.5" y="1061" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="271.50" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (56,222,501 samples, 0.02%)</title><rect x="912.8" y="1365" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="915.82" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (26,269,349 samples, 0.01%)</title><rect x="347.3" y="245" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.31" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (39,237,600 samples, 0.01%)</title><rect x="292.4" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="295.44" y="1679.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (25,669,909 samples, 0.01%)</title><rect x="1083.3" y="1029" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1086.28" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (177,552,431 samples, 0.07%)</title><rect x="212.1" y="885" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="215.09" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,502,805 samples, 0.01%)</title><rect x="1108.6" y="405" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.63" y="415.5" ></text>
</g>
<g >
<title>__GI___writev (484,099,394 samples, 0.18%)</title><rect x="552.7" y="1445" width="2.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="555.71" y="1455.5" ></text>
</g>
<g >
<title>sock_alloc_inode (124,179,869 samples, 0.05%)</title><rect x="1173.9" y="1301" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1176.86" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (131,096,973 samples, 0.05%)</title><rect x="196.4" y="1093" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="199.44" y="1103.5" ></text>
</g>
<g >
<title>__dynamic_cast (86,317,443 samples, 0.03%)</title><rect x="701.0" y="1637" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="704.02" y="1647.5" ></text>
</g>
<g >
<title>__ip_finish_output (77,239,252 samples, 0.03%)</title><rect x="412.1" y="1093" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="415.12" y="1103.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_maskbit (23,439,911 samples, 0.01%)</title><rect x="116.4" y="1109" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="119.38" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (25,211,106 samples, 0.01%)</title><rect x="155.4" y="1237" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="158.39" y="1247.5" ></text>
</g>
<g >
<title>__close (321,960,825 samples, 0.12%)</title><rect x="126.4" y="1205" width="1.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="129.41" y="1215.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (375,403,259 samples, 0.14%)</title><rect x="745.1" y="981" width="1.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="748.11" y="991.5" ></text>
</g>
<g >
<title>____fput (326,110,907 samples, 0.12%)</title><rect x="1165.3" y="1365" width="1.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1168.33" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (83,975,400 samples, 0.03%)</title><rect x="543.2" y="1205" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="546.15" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (43,804,080 samples, 0.02%)</title><rect x="50.8" y="1029" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="53.79" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::vector (38,945,158 samples, 0.01%)</title><rect x="62.9" y="1317" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="65.86" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (143,258,625 samples, 0.05%)</title><rect x="716.6" y="1685" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="719.65" y="1695.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (610,006,124 samples, 0.23%)</title><rect x="470.5" y="1077" width="2.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="473.48" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (46,054,757 samples, 0.02%)</title><rect x="629.5" y="709" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.50" y="719.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (1,555,082,844 samples, 0.58%)</title><rect x="123.4" y="1493" width="6.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="126.44" y="1503.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (43,233,134 samples, 0.02%)</title><rect x="1001.9" y="1045" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1004.86" y="1055.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (1,641,819,476 samples, 0.61%)</title><rect x="1113.7" y="1477" width="7.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1116.65" y="1487.5" ></text>
</g>
<g >
<title>task_work_run (339,048,831 samples, 0.13%)</title><rect x="1165.3" y="1381" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1168.31" y="1391.5" ></text>
</g>
<g >
<title>malloc (88,430,223 samples, 0.03%)</title><rect x="838.8" y="1653" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="841.85" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,488,880,430 samples, 4.30%)</title><rect x="294.8" y="1349" width="50.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="297.82" y="1359.5" >std::..</text>
</g>
<g >
<title>syscall_return_via_sysret (70,371,471 samples, 0.03%)</title><rect x="1147.3" y="1429" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1150.29" y="1439.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (26,008,506 samples, 0.01%)</title><rect x="409.9" y="789" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="412.87" y="799.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (61,160,581 samples, 0.02%)</title><rect x="639.7" y="805" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="642.66" y="815.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (72,092,848 samples, 0.03%)</title><rect x="639.6" y="821" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="642.62" y="831.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (168,489,129 samples, 0.06%)</title><rect x="829.2" y="1365" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="832.15" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (48,599,488 samples, 0.02%)</title><rect x="689.4" y="1237" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="692.36" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,906,547,540 samples, 4.46%)</title><rect x="913.1" y="1365" width="52.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="916.09" y="1375.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,650,505 samples, 0.01%)</title><rect x="912.1" y="245" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.10" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (33,175,108 samples, 0.01%)</title><rect x="861.9" y="1141" width="0.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="864.89" y="1151.5" ></text>
</g>
<g >
<title>_int_free (219,364,205 samples, 0.08%)</title><rect x="287.1" y="1685" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="290.15" y="1695.5" ></text>
</g>
<g >
<title>__sock_release (178,911,350 samples, 0.07%)</title><rect x="975.2" y="1077" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="978.19" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (28,934,450 samples, 0.01%)</title><rect x="1069.6" y="949" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1072.63" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::operator= (25,611,571 samples, 0.01%)</title><rect x="912.6" y="1285" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="915.55" y="1295.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (43,607,442 samples, 0.02%)</title><rect x="531.9" y="1029" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="534.93" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (32,577,438 samples, 0.01%)</title><rect x="376.9" y="1045" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="379.87" y="1055.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (161,122,081 samples, 0.06%)</title><rect x="694.8" y="1189" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="697.83" y="1199.5" ></text>
</g>
<g >
<title>ep_poll_callback (97,296,946 samples, 0.04%)</title><rect x="1155.0" y="1093" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1158.01" y="1103.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (800,245,662 samples, 0.30%)</title><rect x="124.3" y="1301" width="3.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="127.32" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (3,183,347,154 samples, 1.19%)</title><rect x="697.0" y="1685" width="14.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="700.04" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (69,705,810 samples, 0.03%)</title><rect x="11.1" y="1125" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="14.11" y="1135.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (35,557,112 samples, 0.01%)</title><rect x="226.5" y="1045" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="229.53" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (789,651,908 samples, 0.30%)</title><rect x="124.3" y="1221" width="3.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="127.35" y="1231.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (25,072,834,976 samples, 9.39%)</title><rect x="153.3" y="1429" width="110.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="156.31" y="1439.5" >HttpConn::OnP..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (27,252,802 samples, 0.01%)</title><rect x="179.0" y="1029" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="181.98" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (55,817,640 samples, 0.02%)</title><rect x="1147.9" y="1429" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1150.89" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,876,656 samples, 0.01%)</title><rect x="684.0" y="517" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.04" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (30,727,374 samples, 0.01%)</title><rect x="20.9" y="1061" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="23.91" y="1071.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (35,264,148 samples, 0.01%)</title><rect x="991.5" y="1621" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="994.54" y="1631.5" ></text>
</g>
<g >
<title>rw_verify_area (82,459,796 samples, 0.03%)</title><rect x="1155.9" y="1141" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1158.86" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,716,993 samples, 0.01%)</title><rect x="488.2" y="645" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.21" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,281,772,771 samples, 3.48%)</title><rect x="157.5" y="1109" width="41.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="160.51" y="1119.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (39,047,248 samples, 0.01%)</title><rect x="1054.4" y="485" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.43" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (461,204,202 samples, 0.17%)</title><rect x="552.7" y="1429" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="555.75" y="1439.5" ></text>
</g>
<g >
<title>filename_lookup (41,987,310 samples, 0.02%)</title><rect x="402.8" y="1269" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="405.84" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (83,044,462 samples, 0.03%)</title><rect x="824.0" y="1077" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="827.00" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::function&lt;void  (29,429,870 samples, 0.01%)</title><rect x="1157.4" y="1237" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1160.40" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (49,447,110 samples, 0.02%)</title><rect x="338.9" y="1077" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="341.89" y="1087.5" ></text>
</g>
<g >
<title>netvsc_poll (27,383,605 samples, 0.01%)</title><rect x="443.5" y="981" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="446.49" y="991.5" ></text>
</g>
<g >
<title>__munmap (449,857,739 samples, 0.17%)</title><rect x="972.6" y="1189" width="2.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="975.60" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,620,939,850 samples, 1.36%)</title><rect x="365.7" y="1125" width="16.0" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="368.74" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,717,931,425 samples, 1.39%)</title><rect x="789.1" y="1141" width="16.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="792.06" y="1151.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (67,228,505 samples, 0.03%)</title><rect x="577.0" y="1381" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="580.00" y="1391.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (50,528,992 samples, 0.02%)</title><rect x="823.5" y="1301" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="826.50" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (47,117,690 samples, 0.02%)</title><rect x="930.0" y="1141" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="933.04" y="1151.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (27,348,219 samples, 0.01%)</title><rect x="425.7" y="1589" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="428.72" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (73,512,473 samples, 0.03%)</title><rect x="400.7" y="1109" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.70" y="1119.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (44,970,436 samples, 0.02%)</title><rect x="973.7" y="997" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="976.68" y="1007.5" ></text>
</g>
<g >
<title>__GI___writev (499,765,796 samples, 0.19%)</title><rect x="976.4" y="1445" width="2.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="979.40" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (38,937,766 samples, 0.01%)</title><rect x="206.0" y="453" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.97" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (103,797,649 samples, 0.04%)</title><rect x="486.5" y="1317" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="489.49" y="1327.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (186,602,332 samples, 0.07%)</title><rect x="674.3" y="997" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="677.27" y="1007.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (27,412,966,371 samples, 10.27%)</title><rect x="1000.9" y="1653" width="121.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1003.91" y="1663.5" >std::thread::_I..</text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (157,811,733 samples, 0.06%)</title><rect x="902.4" y="1093" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="905.38" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (83,346,762 samples, 0.03%)</title><rect x="544.9" y="1333" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="547.94" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (96,236,310 samples, 0.04%)</title><rect x="794.0" y="981" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="797.02" y="991.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (24,848,791 samples, 0.01%)</title><rect x="1129.1" y="1637" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1132.14" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (36,424,521 samples, 0.01%)</title><rect x="775.6" y="933" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="778.61" y="943.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (31,224,462 samples, 0.01%)</title><rect x="650.3" y="1045" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="653.28" y="1055.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (36,990,088 samples, 0.01%)</title><rect x="965.8" y="1205" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="968.80" y="1215.5" ></text>
</g>
<g >
<title>ip_output (91,115,999 samples, 0.03%)</title><rect x="412.1" y="1125" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="415.11" y="1135.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (380,885,378 samples, 0.14%)</title><rect x="994.9" y="1685" width="1.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="997.89" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (247,060,572 samples, 0.09%)</title><rect x="629.4" y="1189" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.36" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,566,455,063 samples, 1.34%)</title><rect x="349.1" y="1077" width="15.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="352.06" y="1087.5" ></text>
</g>
<g >
<title>EventLoop::Loop (27,209,473,659 samples, 10.19%)</title><rect x="152.8" y="1573" width="120.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="155.81" y="1583.5" >EventLoop::Loop</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (38,151,667 samples, 0.01%)</title><rect x="680.2" y="1093" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="683.19" y="1103.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (121,464,104 samples, 0.05%)</title><rect x="471.9" y="1061" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="474.91" y="1071.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (58,973,582 samples, 0.02%)</title><rect x="628.3" y="1221" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="631.31" y="1231.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (70,957,096 samples, 0.03%)</title><rect x="153.8" y="1061" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="156.75" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,913,701 samples, 0.02%)</title><rect x="1054.4" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.42" y="591.5" ></text>
</g>
<g >
<title>down_write_killable (120,898,239 samples, 0.05%)</title><rect x="1112.0" y="1285" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1115.01" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (106,072,538 samples, 0.04%)</title><rect x="859.5" y="1237" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="862.53" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (32,857,425 samples, 0.01%)</title><rect x="720.0" y="1109" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="723.05" y="1119.5" ></text>
</g>
<g >
<title>inet_release (171,693,638 samples, 0.06%)</title><rect x="975.2" y="1061" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="978.20" y="1071.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (79,450,625 samples, 0.03%)</title><rect x="921.1" y="885" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="924.14" y="895.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::AddChannel (108,485,741 samples, 0.04%)</title><rect x="836.6" y="1509" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="839.63" y="1519.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (66,695,100 samples, 0.02%)</title><rect x="94.7" y="1029" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="97.67" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (70,818,013 samples, 0.03%)</title><rect x="628.3" y="1237" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="631.30" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (30,992,017 samples, 0.01%)</title><rect x="911.6" y="357" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.64" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (53,656,338 samples, 0.02%)</title><rect x="1032.2" y="1013" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1035.24" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (70,602,961 samples, 0.03%)</title><rect x="329.4" y="1077" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="332.37" y="1087.5" ></text>
</g>
<g >
<title>__napi_poll (39,564,408 samples, 0.01%)</title><rect x="727.0" y="997" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="729.97" y="1007.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (132,140,031 samples, 0.05%)</title><rect x="614.5" y="1045" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="617.51" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (163,123,244 samples, 0.06%)</title><rect x="1143.0" y="1685" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.98" y="1695.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (32,889,886 samples, 0.01%)</title><rect x="860.8" y="1093" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="863.80" y="1103.5" ></text>
</g>
<g >
<title>do_syscall_64 (31,922,648 samples, 0.01%)</title><rect x="555.1" y="1429" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="558.07" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (10,530,962,498 samples, 3.94%)</title><rect x="720.8" y="1253" width="46.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="723.84" y="1263.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,843,600,812 samples, 1.44%)</title><rect x="947.8" y="1189" width="17.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="950.77" y="1199.5" ></text>
</g>
<g >
<title>__stpncpy_avx2 (312,929,255 samples, 0.12%)</title><rect x="424.5" y="1653" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="427.48" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (243,120,954 samples, 0.09%)</title><rect x="487.8" y="1221" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.77" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (122,120,717 samples, 0.05%)</title><rect x="448.4" y="1077" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="451.40" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (36,719,767 samples, 0.01%)</title><rect x="668.7" y="1077" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="671.66" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (101,867,184 samples, 0.04%)</title><rect x="824.0" y="1253" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="826.96" y="1263.5" ></text>
</g>
<g >
<title>__napi_poll (47,618,820 samples, 0.02%)</title><rect x="856.8" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="859.78" y="1583.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (60,516,108 samples, 0.02%)</title><rect x="266.2" y="1141" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="269.17" y="1151.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (267,327,439 samples, 0.10%)</title><rect x="35.2" y="1045" width="1.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="38.19" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,829,138,929 samples, 1.43%)</title><rect x="382.4" y="1205" width="16.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="385.38" y="1215.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_M_getword (39,972,557 samples, 0.01%)</title><rect x="341.5" y="1093" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="344.48" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (173,681,987 samples, 0.07%)</title><rect x="1054.3" y="1029" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.34" y="1039.5" ></text>
</g>
<g >
<title>ip_finish_output2 (75,502,919 samples, 0.03%)</title><rect x="412.1" y="1077" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="415.12" y="1087.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (42,080,204 samples, 0.02%)</title><rect x="11.2" y="1045" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="14.20" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (39,170,629 samples, 0.01%)</title><rect x="770.7" y="517" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.71" y="527.5" ></text>
</g>
<g >
<title>down_write_killable (110,164,501 samples, 0.04%)</title><rect x="687.6" y="1285" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="690.56" y="1295.5" ></text>
</g>
<g >
<title>destroy_inode (85,769,474 samples, 0.03%)</title><rect x="1165.8" y="1253" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1168.85" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (50,356,357 samples, 0.02%)</title><rect x="528.5" y="1077" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="531.50" y="1087.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (36,288,235 samples, 0.01%)</title><rect x="161.5" y="1077" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="164.54" y="1087.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (24,303,243 samples, 0.01%)</title><rect x="296.3" y="1061" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="299.27" y="1071.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (79,958,335 samples, 0.03%)</title><rect x="796.9" y="997" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="799.94" y="1007.5" ></text>
</g>
<g >
<title>down_write_killable (46,795,413 samples, 0.02%)</title><rect x="550.7" y="1093" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="553.73" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (31,498,813 samples, 0.01%)</title><rect x="63.5" y="549" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.51" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (252,013,521 samples, 0.09%)</title><rect x="487.8" y="1269" width="1.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="490.75" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (64,974,209 samples, 0.02%)</title><rect x="684.0" y="965" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="686.99" y="975.5" ></text>
</g>
<g >
<title>__stpncpy_avx2 (318,566,045 samples, 0.12%)</title><rect x="566.3" y="1653" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="569.31" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,582,203,510 samples, 4.34%)</title><rect x="772.3" y="1381" width="51.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="775.31" y="1391.5" >std::..</text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (196,514,570 samples, 0.07%)</title><rect x="1125.2" y="1637" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1128.20" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,537,323,724 samples, 3.95%)</title><rect x="861.7" y="1221" width="46.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="864.69" y="1231.5" >std:..</text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (56,180,646 samples, 0.02%)</title><rect x="117.8" y="1365" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="120.80" y="1375.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (26,353,759 samples, 0.01%)</title><rect x="869.4" y="1029" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="872.36" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (24,745,676 samples, 0.01%)</title><rect x="118.4" y="389" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="121.39" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (45,565,152 samples, 0.02%)</title><rect x="727.0" y="1093" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="729.96" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (48,532,011 samples, 0.02%)</title><rect x="630.0" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.96" y="511.5" ></text>
</g>
<g >
<title>std::function&lt;void  (25,591,209,357 samples, 9.58%)</title><rect x="10.3" y="1525" width="113.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="13.34" y="1535.5" >std::function..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (250,942,631 samples, 0.09%)</title><rect x="810.5" y="1061" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="813.51" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (33,533,729 samples, 0.01%)</title><rect x="860.8" y="1125" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="863.80" y="1135.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (31,438,491 samples, 0.01%)</title><rect x="460.7" y="1045" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="463.75" y="1055.5" ></text>
</g>
<g >
<title>[web-server] (32,549,437 samples, 0.01%)</title><rect x="67.7" y="933" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="70.65" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (46,390,246 samples, 0.02%)</title><rect x="908.7" y="1285" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="911.72" y="1295.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (26,563,080 samples, 0.01%)</title><rect x="260.6" y="1365" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="263.63" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (250,333,152 samples, 0.09%)</title><rect x="911.4" y="1269" width="1.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="914.43" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (43,243,374 samples, 0.02%)</title><rect x="911.6" y="629" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.62" y="639.5" ></text>
</g>
<g >
<title>rwsem_wake.isra.0 (23,834,709 samples, 0.01%)</title><rect x="122.3" y="1269" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="125.34" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (64,207,347 samples, 0.02%)</title><rect x="123.7" y="1269" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="126.71" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (102,717,092 samples, 0.04%)</title><rect x="133.7" y="1653" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="136.70" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (49,690,126 samples, 0.02%)</title><rect x="201.9" y="1141" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="204.94" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (225,825,729 samples, 0.08%)</title><rect x="1094.7" y="1045" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1097.70" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (34,642,804 samples, 0.01%)</title><rect x="63.2" y="517" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.25" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,079,668 samples, 0.01%)</title><rect x="911.6" y="389" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.64" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (34,521,161 samples, 0.01%)</title><rect x="683.5" y="1221" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="686.54" y="1231.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (325,036,444 samples, 0.12%)</title><rect x="429.1" y="1685" width="1.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="432.06" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (31,544,036 samples, 0.01%)</title><rect x="1122.9" y="1653" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1125.90" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (193,481,073 samples, 0.07%)</title><rect x="205.4" y="981" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.44" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (32,141,219 samples, 0.01%)</title><rect x="927.4" y="949" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="930.37" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::~_BracketMatcher (26,445,023 samples, 0.01%)</title><rect x="766.3" y="1157" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="769.28" y="1167.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (37,655,580 samples, 0.01%)</title><rect x="1102.8" y="1045" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1105.85" y="1055.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (46,478,170 samples, 0.02%)</title><rect x="371.6" y="1045" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="374.56" y="1055.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (1,553,889,347 samples, 0.58%)</title><rect x="123.4" y="1461" width="6.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="126.45" y="1471.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (25,758,755 samples, 0.01%)</title><rect x="77.0" y="901" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="80.01" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28,627,937 samples, 0.01%)</title><rect x="403.1" y="1381" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="406.15" y="1391.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (90,090,028 samples, 0.03%)</title><rect x="550.1" y="1045" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="553.09" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (32,887,152 samples, 0.01%)</title><rect x="945.7" y="1061" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="948.72" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (152,669,085 samples, 0.06%)</title><rect x="620.5" y="1093" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="623.51" y="1103.5" ></text>
</g>
<g >
<title>Channel::OnWrite (1,556,379,775 samples, 0.58%)</title><rect x="689.1" y="1541" width="6.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="692.08" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28,866,533 samples, 0.01%)</title><rect x="911.6" y="309" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="914.65" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (764,182,704 samples, 0.29%)</title><rect x="549.1" y="1221" width="3.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="552.06" y="1231.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (303,136,827 samples, 0.11%)</title><rect x="783.1" y="949" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="786.14" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (96,092,233 samples, 0.04%)</title><rect x="614.7" y="1029" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="617.66" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (30,068,721 samples, 0.01%)</title><rect x="1079.6" y="1045" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1082.56" y="1055.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (57,190,448 samples, 0.02%)</title><rect x="549.4" y="1125" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="552.38" y="1135.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (840,511,134 samples, 0.31%)</title><rect x="265.8" y="1253" width="3.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="268.82" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (38,421,206 samples, 0.01%)</title><rect x="555.1" y="1445" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="558.05" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (42,486,406 samples, 0.02%)</title><rect x="347.3" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.28" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (175,985,125 samples, 0.07%)</title><rect x="63.2" y="901" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.20" y="911.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (877,093,319 samples, 0.33%)</title><rect x="893.2" y="1093" width="3.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="896.25" y="1103.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (25,151,172 samples, 0.01%)</title><rect x="466.0" y="1013" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="468.99" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,457,794,725 samples, 4.29%)</title><rect x="859.4" y="1365" width="50.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="862.44" y="1375.5" >std::..</text>
</g>
<g >
<title>std::_Destroy&lt;char*&gt; (36,029,973 samples, 0.01%)</title><rect x="608.5" y="1045" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="611.55" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (85,952,258 samples, 0.03%)</title><rect x="903.1" y="1093" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="906.07" y="1103.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (82,376,010 samples, 0.03%)</title><rect x="1033.1" y="1061" width="0.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1036.10" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (53,885,150 samples, 0.02%)</title><rect x="824.0" y="725" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="827.04" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,700,570,337 samples, 4.38%)</title><rect x="207.1" y="1317" width="51.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="210.12" y="1327.5" >std::..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (37,774,604 samples, 0.01%)</title><rect x="706.3" y="1669" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="709.27" y="1679.5" ></text>
</g>
<g >
<title>do_syscall_64 (99,758,059 samples, 0.04%)</title><rect x="688.6" y="1413" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="691.57" y="1423.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (78,934,871 samples, 0.03%)</title><rect x="584.9" y="1093" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="587.86" y="1103.5" ></text>
</g>
<g >
<title>ip_finish_output2 (37,326,500 samples, 0.01%)</title><rect x="551.9" y="853" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="554.93" y="863.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (77,400,058 samples, 0.03%)</title><rect x="838.2" y="1653" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="841.23" y="1663.5" ></text>
</g>
<g >
<title>_int_free (376,243,242 samples, 0.14%)</title><rect x="137.4" y="1669" width="1.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="140.42" y="1679.5" ></text>
</g>
<g >
<title>do_sys_openat2 (101,338,521 samples, 0.04%)</title><rect x="558.7" y="1589" width="0.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="561.73" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (25,161,597 samples, 0.01%)</title><rect x="1057.7" y="949" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1060.69" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+= (40,153,715 samples, 0.02%)</title><rect x="47.7" y="1029" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="50.73" y="1039.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (102,442,238 samples, 0.04%)</title><rect x="979.8" y="1669" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="982.77" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,408,713,538 samples, 1.28%)</title><rect x="490.0" y="981" width="15.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="492.96" y="991.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (33,465,530 samples, 0.01%)</title><rect x="1141.3" y="1477" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1144.33" y="1487.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (90,584,154 samples, 0.03%)</title><rect x="302.3" y="1093" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="305.31" y="1103.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (38,667,939 samples, 0.01%)</title><rect x="389.5" y="1029" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="392.48" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (43,319,485 samples, 0.02%)</title><rect x="620.3" y="1077" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="623.30" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (402,868,586 samples, 0.15%)</title><rect x="294.9" y="1269" width="1.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="297.89" y="1279.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (90,639,466 samples, 0.03%)</title><rect x="727.4" y="1077" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="730.42" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (101,604,248 samples, 0.04%)</title><rect x="511.9" y="981" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="514.91" y="991.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (36,974,187 samples, 0.01%)</title><rect x="486.7" y="1125" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="489.72" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (27,367,482 samples, 0.01%)</title><rect x="203.1" y="1301" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="206.11" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (113,859,078 samples, 0.04%)</title><rect x="251.2" y="1045" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="254.17" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (30,756,475 samples, 0.01%)</title><rect x="915.2" y="949" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="918.24" y="959.5" ></text>
</g>
<g >
<title>netvsc_start_xmit (33,705,655 samples, 0.01%)</title><rect x="129.6" y="1013" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="132.58" y="1023.5" ></text>
</g>
<g >
<title>__ep_remove (34,459,603 samples, 0.01%)</title><rect x="1114.0" y="1205" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1117.00" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::operator= (25,827,758 samples, 0.01%)</title><rect x="630.5" y="1285" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="633.48" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (26,222,812 samples, 0.01%)</title><rect x="189.4" y="1045" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="192.45" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (49,017,271 samples, 0.02%)</title><rect x="488.4" y="565" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="491.37" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,160,503 samples, 0.01%)</title><rect x="966.3" y="485" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.34" y="495.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (27,584,329 samples, 0.01%)</title><rect x="794.3" y="965" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="797.32" y="975.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (234,827,314 samples, 0.09%)</title><rect x="108.2" y="1045" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="111.21" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (31,191,442 samples, 0.01%)</title><rect x="254.6" y="1077" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="257.62" y="1087.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (44,102,819 samples, 0.02%)</title><rect x="846.9" y="1637" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="849.88" y="1647.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (25,542,511 samples, 0.01%)</title><rect x="311.9" y="981" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="314.86" y="991.5" ></text>
</g>
<g >
<title>tcp_write_xmit (124,568,525 samples, 0.05%)</title><rect x="551.7" y="981" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="554.69" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::construct&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt; &gt; (27,778,076 samples, 0.01%)</title><rect x="1001.9" y="1029" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1004.90" y="1039.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (48,834,954 samples, 0.02%)</title><rect x="253.9" y="1061" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="256.92" y="1071.5" ></text>
</g>
<g >
<title>ip_queue_xmit (158,826,634 samples, 0.06%)</title><rect x="835.4" y="1173" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="838.36" y="1183.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (51,196,309 samples, 0.02%)</title><rect x="779.0" y="901" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="782.02" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (36,617,220 samples, 0.01%)</title><rect x="369.3" y="1045" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="372.31" y="1055.5" ></text>
</g>
<g >
<title>vfs_open (22,888,485 samples, 0.01%)</title><rect x="558.9" y="1541" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="561.91" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (27,518,033 samples, 0.01%)</title><rect x="1069.9" y="949" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1072.88" y="959.5" ></text>
</g>
<g >
<title>ip_queue_xmit (108,818,273 samples, 0.04%)</title><rect x="268.7" y="949" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="271.69" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (101,225,815 samples, 0.04%)</title><rect x="195.2" y="1093" width="0.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="198.23" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (30,325,668 samples, 0.01%)</title><rect x="1143.0" y="1557" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.99" y="1567.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (41,592,605 samples, 0.02%)</title><rect x="796.1" y="997" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="799.14" y="1007.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (361,876,867 samples, 0.14%)</title><rect x="1137.4" y="1685" width="1.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1140.38" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,743,687 samples, 0.02%)</title><rect x="206.0" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.96" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (77,260,758 samples, 0.03%)</title><rect x="1108.5" y="1205" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1111.55" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (29,001,713 samples, 0.01%)</title><rect x="924.7" y="933" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="927.72" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (102,535,307 samples, 0.04%)</title><rect x="860.0" y="1205" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="863.05" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,168,694 samples, 0.01%)</title><rect x="771.0" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.97" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,490,473,106 samples, 3.93%)</title><rect x="721.0" y="1221" width="46.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="724.01" y="1231.5" >std:..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (25,649,854 samples, 0.01%)</title><rect x="1096.7" y="1077" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1099.67" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (34,968,462 samples, 0.01%)</title><rect x="347.8" y="309" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.76" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,252,547 samples, 0.01%)</title><rect x="488.4" y="213" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.40" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (33,636,261 samples, 0.01%)</title><rect x="541.8" y="1205" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="544.76" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (27,522,081 samples, 0.01%)</title><rect x="1155.7" y="1125" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1158.68" y="1135.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;,  (55,250,259 samples, 0.02%)</title><rect x="345.2" y="1285" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="348.23" y="1295.5" ></text>
</g>
<g >
<title>path_openat (69,933,584 samples, 0.03%)</title><rect x="699.8" y="1557" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="702.83" y="1567.5" ></text>
</g>
<g >
<title>[web-server] (30,038,764 samples, 0.01%)</title><rect x="775.1" y="933" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="778.14" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (86,226,272 samples, 0.03%)</title><rect x="543.1" y="1237" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="546.15" y="1247.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (12,147,832,733 samples, 4.55%)</title><rect x="577.4" y="1397" width="53.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="580.37" y="1407.5" >HttpR..</text>
</g>
<g >
<title>operator delete (43,020,422 samples, 0.02%)</title><rect x="468.5" y="1013" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="471.49" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (27,980,838 samples, 0.01%)</title><rect x="205.5" y="245" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.54" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,147,776 samples, 0.01%)</title><rect x="205.8" y="469" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.80" y="479.5" ></text>
</g>
<g >
<title>x64_sys_call (38,138,182 samples, 0.01%)</title><rect x="10.5" y="1269" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="13.49" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (83,854,899 samples, 0.03%)</title><rect x="753.3" y="1077" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="756.35" y="1087.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (27,074,997 samples, 0.01%)</title><rect x="708.8" y="1621" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="711.82" y="1631.5" ></text>
</g>
<g >
<title>ip_local_out (87,654,101 samples, 0.03%)</title><rect x="692.9" y="917" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="695.89" y="927.5" ></text>
</g>
<g >
<title>__GI___writev (500,910,926 samples, 0.19%)</title><rect x="834.4" y="1445" width="2.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="837.39" y="1455.5" ></text>
</g>
<g >
<title>std::function&lt;void  (104,324,215 samples, 0.04%)</title><rect x="1158.2" y="1285" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1161.22" y="1295.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (59,932,771 samples, 0.02%)</title><rect x="47.7" y="1045" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="50.65" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,643,155,569 samples, 1.36%)</title><rect x="772.3" y="1157" width="16.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="775.34" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (32,053,984 samples, 0.01%)</title><rect x="824.1" y="389" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.08" y="399.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_M_getword (51,331,863 samples, 0.02%)</title><rect x="623.9" y="1093" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="626.87" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_openat (108,215,818 samples, 0.04%)</title><rect x="558.7" y="1605" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="561.71" y="1615.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (202,014,501 samples, 0.08%)</title><rect x="215.6" y="869" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="218.57" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (53,970,788 samples, 0.02%)</title><rect x="347.3" y="741" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.26" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (67,372,621 samples, 0.03%)</title><rect x="824.0" y="917" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.02" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (69,222,717 samples, 0.03%)</title><rect x="118.3" y="1093" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="121.31" y="1103.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (37,869,411 samples, 0.01%)</title><rect x="1062.9" y="885" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1065.86" y="895.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (47,510,386 samples, 0.02%)</title><rect x="1079.1" y="1045" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1082.09" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (26,879,379 samples, 0.01%)</title><rect x="239.3" y="1061" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="242.25" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (47,854,012 samples, 0.02%)</title><rect x="347.3" y="645" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.28" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (24,597,613 samples, 0.01%)</title><rect x="555.4" y="1509" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="558.39" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (67,713,023 samples, 0.03%)</title><rect x="406.0" y="1237" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="409.02" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (772,896,224 samples, 0.29%)</title><rect x="355.4" y="933" width="3.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="358.41" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (101,096,540 samples, 0.04%)</title><rect x="295.0" y="1205" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="298.01" y="1215.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (24,848,791 samples, 0.01%)</title><rect x="1129.1" y="1653" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1132.14" y="1663.5" ></text>
</g>
<g >
<title>malloc (583,084,081 samples, 0.22%)</title><rect x="430.5" y="1685" width="2.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="433.49" y="1695.5" ></text>
</g>
<g >
<title>Channel::OnEvents (27,157,634,167 samples, 10.17%)</title><rect x="1000.9" y="1557" width="120.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1003.91" y="1567.5" >Channel::OnEve..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (108,594,767 samples, 0.04%)</title><rect x="911.9" y="789" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.85" y="799.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (48,989,835 samples, 0.02%)</title><rect x="1116.5" y="1077" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1119.49" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,250,389 samples, 0.01%)</title><rect x="206.0" y="181" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.98" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (107,250,422 samples, 0.04%)</title><rect x="629.7" y="757" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.74" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (169,146,606 samples, 0.06%)</title><rect x="63.2" y="869" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.22" y="879.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (8,124,466,540 samples, 3.04%)</title><rect x="1143.9" y="1573" width="35.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1146.87" y="1583.5" >std..</text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (118,230,367 samples, 0.04%)</title><rect x="836.6" y="1557" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="839.62" y="1567.5" ></text>
</g>
<g >
<title>__strlen_avx2 (205,513,235 samples, 0.08%)</title><rect x="425.9" y="1653" width="0.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="428.87" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (5,601,021,704 samples, 2.10%)</title><rect x="444.3" y="1093" width="24.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="447.28" y="1103.5" >s..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_end (71,761,892 samples, 0.03%)</title><rect x="718.9" y="1189" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="721.94" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (28,009,659 samples, 0.01%)</title><rect x="101.2" y="1093" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="104.22" y="1103.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (86,715,004 samples, 0.03%)</title><rect x="254.9" y="1061" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="257.88" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,323,759 samples, 0.01%)</title><rect x="487.9" y="469" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="490.94" y="479.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (31,686,968 samples, 0.01%)</title><rect x="384.6" y="1077" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="387.60" y="1087.5" ></text>
</g>
<g >
<title>HttpRouter::Route (639,759,740 samples, 0.24%)</title><rect x="119.7" y="1413" width="2.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="122.73" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (170,301,378 samples, 0.06%)</title><rect x="1054.4" y="965" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.35" y="975.5" ></text>
</g>
<g >
<title>__GI___libc_open (135,987,268 samples, 0.05%)</title><rect x="558.6" y="1669" width="0.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="561.63" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::_M_default_initialize (30,293,991 samples, 0.01%)</title><rect x="911.3" y="1301" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="914.25" y="1311.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (62,223,816 samples, 0.02%)</title><rect x="784.1" y="917" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="787.14" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,711,334 samples, 0.01%)</title><rect x="205.8" y="613" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.78" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (123,209,559 samples, 0.05%)</title><rect x="447.9" y="1077" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="450.86" y="1087.5" ></text>
</g>
<g >
<title>__dynamic_cast (41,298,877 samples, 0.02%)</title><rect x="633.9" y="933" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="636.95" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (237,031,731 samples, 0.09%)</title><rect x="658.3" y="1045" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="661.34" y="1055.5" ></text>
</g>
<g >
<title>tcp_close (168,464,456 samples, 0.06%)</title><rect x="551.6" y="1045" width="0.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="554.57" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (40,550,794 samples, 0.02%)</title><rect x="401.9" y="1365" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="404.95" y="1375.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (28,675,433 samples, 0.01%)</title><rect x="575.1" y="1477" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="578.09" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (125,862,592 samples, 0.05%)</title><rect x="719.9" y="1253" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="722.94" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (60,022,174 samples, 0.02%)</title><rect x="88.5" y="1045" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="91.45" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (890,687,165 samples, 0.33%)</title><rect x="830.1" y="1221" width="3.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="833.11" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (23,735,330 samples, 0.01%)</title><rect x="556.9" y="1061" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (71,583,691 samples, 0.03%)</title><rect x="1000.1" y="1669" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1003.12" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (59,733,560 samples, 0.02%)</title><rect x="154.8" y="1173" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="157.80" y="1183.5" ></text>
</g>
<g >
<title>malloc (621,647,627 samples, 0.23%)</title><rect x="713.8" y="1685" width="2.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="716.76" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,632,546 samples, 0.02%)</title><rect x="630.0" y="469" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.96" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (31,675,211 samples, 0.01%)</title><rect x="1121.1" y="1397" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1124.15" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (37,414,529 samples, 0.01%)</title><rect x="130.5" y="1429" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="133.54" y="1439.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (33,114,993 samples, 0.01%)</title><rect x="749.1" y="1013" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="752.12" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (25,843,456 samples, 0.01%)</title><rect x="118.4" y="437" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="121.39" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,745,536 samples, 0.01%)</title><rect x="771.2" y="245" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="774.21" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (74,561,216 samples, 0.03%)</title><rect x="824.0" y="965" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.02" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (40,164,542 samples, 0.02%)</title><rect x="397.6" y="1093" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="400.64" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (223,092,613 samples, 0.08%)</title><rect x="770.6" y="1093" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.60" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (481,400,047 samples, 0.18%)</title><rect x="132.0" y="1669" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="135.05" y="1679.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (118,326,599 samples, 0.04%)</title><rect x="643.7" y="933" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="646.69" y="943.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (41,383,204 samples, 0.02%)</title><rect x="633.3" y="933" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="636.29" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (387,483,618 samples, 0.15%)</title><rect x="718.8" y="1269" width="1.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="721.79" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (65,073,520 samples, 0.02%)</title><rect x="118.3" y="1045" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="121.32" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (207,613,989 samples, 0.08%)</title><rect x="1060.5" y="901" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1063.54" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (50,297,667 samples, 0.02%)</title><rect x="296.2" y="1157" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="299.17" y="1167.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (59,861,627 samples, 0.02%)</title><rect x="662.1" y="1061" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="665.05" y="1071.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (396,994,093 samples, 0.15%)</title><rect x="1165.1" y="1397" width="1.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1168.06" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (63,720,597 samples, 0.02%)</title><rect x="452.8" y="1013" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="455.81" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (26,232,931 samples, 0.01%)</title><rect x="330.8" y="1045" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="333.83" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (27,727,000 samples, 0.01%)</title><rect x="363.5" y="949" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="366.46" y="959.5" ></text>
</g>
<g >
<title>__dynamic_cast (126,391,406 samples, 0.05%)</title><rect x="305.3" y="1077" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="308.26" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (47,335,061 samples, 0.02%)</title><rect x="63.7" y="597" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.67" y="607.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (97,850,546 samples, 0.04%)</title><rect x="1103.5" y="1061" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1106.47" y="1071.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (24,177,340 samples, 0.01%)</title><rect x="965.8" y="1109" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="968.85" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (73,158,820 samples, 0.03%)</title><rect x="436.5" y="1221" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="439.49" y="1231.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (34,447,577 samples, 0.01%)</title><rect x="972.0" y="1285" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="975.00" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (32,975,464 samples, 0.01%)</title><rect x="911.6" y="437" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.63" y="447.5" ></text>
</g>
<g >
<title>tcp_write_xmit (146,910,994 samples, 0.06%)</title><rect x="833.1" y="981" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="836.11" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (413,793,678 samples, 0.15%)</title><rect x="669.4" y="1077" width="1.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="672.38" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (35,139,012 samples, 0.01%)</title><rect x="347.3" y="469" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.29" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (186,008,670 samples, 0.07%)</title><rect x="1054.3" y="1109" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.31" y="1119.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (24,062,054 samples, 0.01%)</title><rect x="170.3" y="981" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="173.31" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,387,924 samples, 0.02%)</title><rect x="1108.6" y="853" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.59" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (30,004,098 samples, 0.01%)</title><rect x="347.8" y="261" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.76" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (34,521,161 samples, 0.01%)</title><rect x="683.5" y="1205" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="686.54" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (23,305,777 samples, 0.01%)</title><rect x="928.0" y="933" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="930.98" y="943.5" ></text>
</g>
<g >
<title>x64_sys_call (1,091,043,310 samples, 0.41%)</title><rect x="1181.0" y="1557" width="4.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1184.02" y="1567.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (28,883,258 samples, 0.01%)</title><rect x="486.7" y="1093" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="489.75" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (41,226,764 samples, 0.02%)</title><rect x="521.4" y="1061" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="524.36" y="1071.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::AddChannel (103,992,768 samples, 0.04%)</title><rect x="554.9" y="1493" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="557.88" y="1503.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (91,373,429 samples, 0.03%)</title><rect x="115.8" y="1125" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="118.84" y="1135.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (118,892,740 samples, 0.04%)</title><rect x="514.9" y="1013" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="517.86" y="1023.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (134,452,476 samples, 0.05%)</title><rect x="819.1" y="1077" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="822.07" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (40,078,620 samples, 0.02%)</title><rect x="206.0" y="533" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.97" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (72,197,585 samples, 0.03%)</title><rect x="824.0" y="949" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.02" y="959.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (890,599,756 samples, 0.33%)</title><rect x="1036.2" y="1093" width="4.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1039.22" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_Scanner (25,387,231 samples, 0.01%)</title><rect x="203.4" y="1333" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="206.41" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_writev (434,300,680 samples, 0.16%)</title><rect x="128.3" y="1381" width="1.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="131.30" y="1391.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (67,435,448 samples, 0.03%)</title><rect x="486.6" y="1205" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="489.62" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (30,091,017 samples, 0.01%)</title><rect x="797.0" y="981" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="800.00" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (238,717,989 samples, 0.09%)</title><rect x="487.8" y="1141" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.79" y="1151.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (97,659,112 samples, 0.04%)</title><rect x="825.9" y="1317" width="0.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="828.89" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (43,622,864 samples, 0.02%)</title><rect x="907.3" y="1157" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="910.34" y="1167.5" ></text>
</g>
<g >
<title>[libc.so.6] (32,627,550 samples, 0.01%)</title><rect x="424.3" y="1653" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="427.34" y="1663.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (52,541,174 samples, 0.02%)</title><rect x="577.0" y="1301" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="580.02" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (267,609,517 samples, 0.10%)</title><rect x="347.1" y="1269" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="350.09" y="1279.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (910,167,139 samples, 0.34%)</title><rect x="830.0" y="1285" width="4.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="833.03" y="1295.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (26,331,805 samples, 0.01%)</title><rect x="689.7" y="1285" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="692.66" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,850,952 samples, 0.01%)</title><rect x="347.5" y="645" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.54" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (241,578,545 samples, 0.09%)</title><rect x="494.2" y="917" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="497.19" y="927.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (23,252,887 samples, 0.01%)</title><rect x="484.5" y="1061" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="487.50" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (244,872,526 samples, 0.09%)</title><rect x="63.1" y="1253" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.06" y="1263.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (33,193,943 samples, 0.01%)</title><rect x="746.5" y="965" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="749.50" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,786,637,245 samples, 1.42%)</title><rect x="489.5" y="1157" width="16.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.50" y="1167.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (241,792,113 samples, 0.09%)</title><rect x="921.5" y="901" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="924.54" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (50,764,555 samples, 0.02%)</title><rect x="486.7" y="1157" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="489.66" y="1167.5" ></text>
</g>
<g >
<title>sock_write_iter (396,211,373 samples, 0.15%)</title><rect x="552.9" y="1301" width="1.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="555.95" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,995,948,867 samples, 4.49%)</title><rect x="64.8" y="1381" width="53.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="67.78" y="1391.5" >std::..</text>
</g>
<g >
<title>TimerManager::DelTimer (28,940,103 samples, 0.01%)</title><rect x="829.2" y="1301" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="832.18" y="1311.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (25,908,892 samples, 0.01%)</title><rect x="600.1" y="1061" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="603.08" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (27,879,827 samples, 0.01%)</title><rect x="629.8" y="469" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.79" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,499,031 samples, 0.01%)</title><rect x="400.8" y="581" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.75" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (837,900,862 samples, 0.31%)</title><rect x="690.0" y="1237" width="3.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="692.95" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (33,260,215 samples, 0.01%)</title><rect x="400.8" y="501" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="403.77" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (425,750,420 samples, 0.16%)</title><rect x="435.4" y="1285" width="1.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="438.41" y="1295.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (55,029,592 samples, 0.02%)</title><rect x="268.2" y="1061" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="271.20" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::~_BracketMatcher (25,943,226 samples, 0.01%)</title><rect x="1049.9" y="1157" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1052.90" y="1167.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (31,175,334 samples, 0.01%)</title><rect x="991.5" y="1589" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="994.54" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (27,967,699 samples, 0.01%)</title><rect x="465.9" y="997" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="468.85" y="1007.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (25,228,108,950 samples, 9.45%)</title><rect x="1001.4" y="1429" width="111.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1004.41" y="1439.5" >HttpConn::OnP..</text>
</g>
<g >
<title>handle_softirqs (39,809,901 samples, 0.01%)</title><rect x="1182.2" y="1429" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1185.17" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (49,682,724 samples, 0.02%)</title><rect x="680.6" y="1093" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="683.64" y="1103.5" ></text>
</g>
<g >
<title>_int_malloc (54,321,952 samples, 0.02%)</title><rect x="1137.1" y="1685" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1140.14" y="1695.5" ></text>
</g>
<g >
<title>filename_lookup (50,527,052 samples, 0.02%)</title><rect x="686.1" y="1269" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="689.10" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (40,677,963 samples, 0.02%)</title><rect x="1108.1" y="1237" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1111.07" y="1247.5" ></text>
</g>
<g >
<title>irq_exit_rcu (32,951,586 samples, 0.01%)</title><rect x="19.3" y="1061" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="22.26" y="1071.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (24,109,142 samples, 0.01%)</title><rect x="788.7" y="997" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="791.66" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (28,780,346 samples, 0.01%)</title><rect x="220.8" y="949" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="223.79" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (28,526,574 samples, 0.01%)</title><rect x="901.7" y="1093" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="904.66" y="1103.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (94,421,511 samples, 0.04%)</title><rect x="1109.5" y="1413" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1112.52" y="1423.5" ></text>
</g>
<g >
<title>sockopt_lock_sock (28,449,042 samples, 0.01%)</title><rect x="1146.4" y="1285" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1149.36" y="1295.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (25,887,186 samples, 0.01%)</title><rect x="332.9" y="1077" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="335.88" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (31,075,156 samples, 0.01%)</title><rect x="508.6" y="1061" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="511.57" y="1071.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (1,640,178,575 samples, 0.61%)</title><rect x="971.4" y="1493" width="7.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="974.36" y="1503.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (25,337,050,133 samples, 9.49%)</title><rect x="152.9" y="1493" width="112.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="155.89" y="1503.5" >std::__invoke..</text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (71,988,638 samples, 0.03%)</title><rect x="1122.6" y="1653" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1125.58" y="1663.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (280,782,427 samples, 0.11%)</title><rect x="474.4" y="1061" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="477.41" y="1071.5" ></text>
</g>
<g >
<title>EventLoop::GetActiveChannel (54,025,237 samples, 0.02%)</title><rect x="1121.5" y="1557" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1124.48" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (33,496,700 samples, 0.01%)</title><rect x="647.4" y="1109" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="650.41" y="1119.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (38,177,641 samples, 0.01%)</title><rect x="920.4" y="885" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="923.39" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (108,817,910 samples, 0.04%)</title><rect x="347.5" y="725" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.54" y="735.5" ></text>
</g>
<g >
<title>net_rx_action (29,791,285 samples, 0.01%)</title><rect x="1147.7" y="1349" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1150.69" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (40,906,188 samples, 0.02%)</title><rect x="1044.8" y="1077" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1047.79" y="1087.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (26,878,266 samples, 0.01%)</title><rect x="780.9" y="789" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="783.95" y="799.5" ></text>
</g>
<g >
<title>x64_sys_call (475,898,396 samples, 0.18%)</title><rect x="410.9" y="1397" width="2.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="413.88" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (87,907,836 samples, 0.03%)</title><rect x="684.0" y="1141" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="686.96" y="1151.5" ></text>
</g>
<g >
<title>HttpResponse::HttpResponse (24,711,520 samples, 0.01%)</title><rect x="1159.0" y="1301" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1161.99" y="1311.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (24,899,126 samples, 0.01%)</title><rect x="778.0" y="933" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="781.03" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (50,385,356 samples, 0.02%)</title><rect x="343.0" y="1157" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="346.00" y="1167.5" ></text>
</g>
<g >
<title>napi_complete_done (26,132,395 samples, 0.01%)</title><rect x="267.0" y="869" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="270.02" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,424,133,492 samples, 1.28%)</title><rect x="1090.6" y="1109" width="15.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1093.64" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (29,312,882 samples, 0.01%)</title><rect x="1057.9" y="949" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1060.94" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,866,533 samples, 0.01%)</title><rect x="911.6" y="293" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.65" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,793,729 samples, 0.02%)</title><rect x="684.0" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.02" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,296,879,695 samples, 3.48%)</title><rect x="14.9" y="1109" width="41.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="17.94" y="1119.5" >std..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_eliminate_dummy (39,982,691 samples, 0.01%)</title><rect x="627.1" y="1333" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="630.06" y="1343.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (66,698,489 samples, 0.02%)</title><rect x="910.3" y="1205" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="913.27" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (51,640,031 samples, 0.02%)</title><rect x="436.5" y="1173" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="439.50" y="1183.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (875,503,194 samples, 0.33%)</title><rect x="689.9" y="1381" width="3.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="692.88" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (185,255,681 samples, 0.07%)</title><rect x="770.7" y="869" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.66" y="879.5" ></text>
</g>
<g >
<title>HttpRouter::Route (622,640,514 samples, 0.23%)</title><rect x="967.7" y="1413" width="2.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="970.70" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (5,495,128,965 samples, 2.06%)</title><rect x="727.9" y="1093" width="24.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="730.92" y="1103.5" >s..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (110,862,022 samples, 0.04%)</title><rect x="781.6" y="901" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="784.56" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,660,698,816 samples, 1.37%)</title><rect x="207.3" y="1077" width="16.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="210.26" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (47,305,603 samples, 0.02%)</title><rect x="630.0" y="453" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.96" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (29,422,204 samples, 0.01%)</title><rect x="96.3" y="1061" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="99.32" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (80,997,545 samples, 0.03%)</title><rect x="353.7" y="869" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="356.70" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (24,106,051 samples, 0.01%)</title><rect x="485.5" y="1317" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="488.54" y="1327.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (30,221,948 samples, 0.01%)</title><rect x="683.5" y="1173" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="686.55" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (50,706,451 samples, 0.02%)</title><rect x="59.6" y="1125" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="62.58" y="1135.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (1,530,001,840 samples, 0.57%)</title><rect x="548.1" y="1461" width="6.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="551.09" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (24,438,466 samples, 0.01%)</title><rect x="656.1" y="981" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="659.09" y="991.5" ></text>
</g>
<g >
<title>HttpResponse::GetFileType (28,750,952 samples, 0.01%)</title><rect x="825.4" y="1381" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="828.44" y="1391.5" ></text>
</g>
<g >
<title>handle_softirqs (29,612,999 samples, 0.01%)</title><rect x="999.1" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1002.13" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (116,037,307 samples, 0.04%)</title><rect x="911.8" y="805" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.85" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (55,845,512 samples, 0.02%)</title><rect x="59.6" y="1157" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="62.56" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (26,797,888 samples, 0.01%)</title><rect x="542.7" y="1157" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="545.74" y="1167.5" ></text>
</g>
<g >
<title>inet_recvmsg (52,918,323 samples, 0.02%)</title><rect x="123.1" y="1301" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="126.07" y="1311.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (145,025,552 samples, 0.05%)</title><rect x="906.1" y="1125" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="909.10" y="1135.5" ></text>
</g>
<g >
<title>std::function&lt;void  (114,072,355 samples, 0.04%)</title><rect x="272.0" y="1541" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="275.02" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (36,672,143 samples, 0.01%)</title><rect x="647.4" y="1141" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="650.41" y="1151.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (76,390,878 samples, 0.03%)</title><rect x="325.9" y="1061" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="328.89" y="1071.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (45,441,438 samples, 0.02%)</title><rect x="254.2" y="1045" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="257.23" y="1055.5" ></text>
</g>
<g >
<title>HttpRequest::IsKeepAlive (37,669,643 samples, 0.01%)</title><rect x="693.8" y="1429" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="696.76" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (40,855,422 samples, 0.02%)</title><rect x="1108.6" y="661" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1111.61" y="671.5" ></text>
</g>
<g >
<title>operator delete (60,459,439 samples, 0.02%)</title><rect x="845.7" y="1669" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="848.67" y="1679.5" ></text>
</g>
<g >
<title>__tcp_close (167,908,735 samples, 0.06%)</title><rect x="409.5" y="1029" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="412.49" y="1039.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (179,973,255 samples, 0.07%)</title><rect x="73.3" y="853" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="76.34" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (31,848,408 samples, 0.01%)</title><rect x="644.9" y="949" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="647.89" y="959.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (23,583,891 samples, 0.01%)</title><rect x="986.9" y="1637" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="989.88" y="1647.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (102,855,180 samples, 0.04%)</title><rect x="796.8" y="1013" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="799.84" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="469" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="479.5" ></text>
</g>
<g >
<title>HttpResponse::SetHeader (26,312,425 samples, 0.01%)</title><rect x="1110.1" y="1381" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1113.12" y="1391.5" ></text>
</g>
<g >
<title>__ip_local_out (63,789,701 samples, 0.02%)</title><rect x="835.4" y="1125" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="838.38" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (36,458,469 samples, 0.01%)</title><rect x="1107.0" y="1205" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1110.03" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,992,017 samples, 0.01%)</title><rect x="911.6" y="373" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.64" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (41,973,130 samples, 0.02%)</title><rect x="622.1" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="625.07" y="1087.5" ></text>
</g>
<g >
<title>__dynamic_cast (49,523,457 samples, 0.02%)</title><rect x="102.3" y="1077" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="105.32" y="1087.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (45,353,248 samples, 0.02%)</title><rect x="126.6" y="1061" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="129.65" y="1071.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_destroy (24,698,297 samples, 0.01%)</title><rect x="769.6" y="1077" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="772.59" y="1087.5" ></text>
</g>
<g >
<title>iput (45,314,316 samples, 0.02%)</title><rect x="551.3" y="1045" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="554.30" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (353,311,904 samples, 0.13%)</title><rect x="686.6" y="1381" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="689.58" y="1391.5" ></text>
</g>
<g >
<title>ip_output (85,345,071 samples, 0.03%)</title><rect x="977.7" y="1125" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="980.71" y="1135.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (138,481,675 samples, 0.05%)</title><rect x="1083.5" y="1029" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1086.53" y="1039.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (36,858,615 samples, 0.01%)</title><rect x="867.7" y="1093" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="870.73" y="1103.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (348,475,475 samples, 0.13%)</title><rect x="288.3" y="1685" width="1.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="291.33" y="1695.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (44,944,702 samples, 0.02%)</title><rect x="542.7" y="1285" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="545.69" y="1295.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (68,882,086 samples, 0.03%)</title><rect x="129.5" y="1061" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="132.45" y="1071.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (30,009,392 samples, 0.01%)</title><rect x="999.1" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1002.13" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (34,666,819 samples, 0.01%)</title><rect x="1104.6" y="1093" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1107.58" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_writev (409,137,455 samples, 0.15%)</title><rect x="694.1" y="1381" width="1.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="697.08" y="1391.5" ></text>
</g>
<g >
<title>unmap_region.constprop.0 (153,911,918 samples, 0.06%)</title><rect x="1115.6" y="1061" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1118.65" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (10,724,353,628 samples, 4.02%)</title><rect x="437.3" y="1237" width="47.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="440.34" y="1247.5" >std:..</text>
</g>
<g >
<title>x64_sys_call (27,662,396 samples, 0.01%)</title><rect x="696.5" y="1493" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="699.54" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (45,693,048 samples, 0.02%)</title><rect x="626.1" y="1141" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="629.09" y="1151.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (25,589,062 samples, 0.01%)</title><rect x="567.6" y="1637" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="570.59" y="1647.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (91,852,617 samples, 0.03%)</title><rect x="961.4" y="1061" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="964.40" y="1071.5" ></text>
</g>
<g >
<title>getname_flags (26,678,787 samples, 0.01%)</title><rect x="686.0" y="1285" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="688.96" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (39,455,771 samples, 0.01%)</title><rect x="337.2" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="340.22" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (92,941,716 samples, 0.03%)</title><rect x="315.4" y="1077" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="318.39" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (41,983,225 samples, 0.02%)</title><rect x="978.9" y="1397" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="981.87" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (190,820,765 samples, 0.07%)</title><rect x="810.8" y="1029" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="813.76" y="1039.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (26,840,588 samples, 0.01%)</title><rect x="777.9" y="933" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="780.91" y="943.5" ></text>
</g>
<g >
<title>[unknown] (23,162,380 samples, 0.01%)</title><rect x="556.9" y="949" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="959.5" ></text>
</g>
<g >
<title>perf_iterate_sb (23,342,253 samples, 0.01%)</title><rect x="121.6" y="1237" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="124.59" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (86,095,880 samples, 0.03%)</title><rect x="154.2" y="1189" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="157.19" y="1199.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (392,130,000 samples, 0.15%)</title><rect x="891.0" y="1061" width="1.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="893.99" y="1071.5" ></text>
</g>
<g >
<title>sch_direct_xmit (47,629,402 samples, 0.02%)</title><rect x="412.2" y="1045" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="415.24" y="1055.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (26,482,938 samples, 0.01%)</title><rect x="285.0" y="1637" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="288.05" y="1647.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (28,034,697 samples, 0.01%)</title><rect x="957.2" y="933" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="960.18" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (70,409,688 samples, 0.03%)</title><rect x="726.6" y="1093" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="729.65" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (83,464,149 samples, 0.03%)</title><rect x="543.2" y="1157" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="546.16" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,463,377 samples, 0.01%)</title><rect x="63.5" y="533" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.51" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (34,562,543 samples, 0.01%)</title><rect x="1054.4" y="309" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.43" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,823,677,727 samples, 1.43%)</title><rect x="805.9" y="1221" width="16.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="808.89" y="1231.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;HttpConn, std::allocator&lt;HttpConn&gt;, int&amp;, sockaddr_in&amp;, std::shared_ptr&lt;EventLoop&gt;&amp;, int&amp;, Server::HandlerNewConn (2,496,215,158 samples, 0.93%)</title><rect x="1151.3" y="1429" width="11.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1154.34" y="1439.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (32,008,516 samples, 0.01%)</title><rect x="1035.6" y="1045" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1038.65" y="1055.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (253,731,030 samples, 0.10%)</title><rect x="982.8" y="1669" width="1.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="985.79" y="1679.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (26,969,110 samples, 0.01%)</title><rect x="254.0" y="1045" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="257.01" y="1055.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (50,479,211 samples, 0.02%)</title><rect x="98.3" y="1093" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="101.29" y="1103.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (67,173,877 samples, 0.03%)</title><rect x="219.3" y="917" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="222.27" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (265,813,399 samples, 0.10%)</title><rect x="370.0" y="1029" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="372.96" y="1039.5" ></text>
</g>
<g >
<title>epoll_ctl (54,275,592 samples, 0.02%)</title><rect x="1121.1" y="1461" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1124.10" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (66,322,297 samples, 0.02%)</title><rect x="165.4" y="1077" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="168.44" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (51,303,053 samples, 0.02%)</title><rect x="400.7" y="725" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="403.74" y="735.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (25,489,100,193 samples, 9.55%)</title><rect x="1001.0" y="1461" width="112.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1003.99" y="1471.5" >HttpConn::Htt..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (55,136,121 samples, 0.02%)</title><rect x="506.4" y="1173" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="509.40" y="1183.5" ></text>
</g>
<g >
<title>x64_sys_call (58,350,835 samples, 0.02%)</title><rect x="829.4" y="1253" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="832.40" y="1263.5" ></text>
</g>
<g >
<title>ip_finish_output2 (44,893,538 samples, 0.02%)</title><rect x="268.9" y="853" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="271.92" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (32,647,863 samples, 0.01%)</title><rect x="487.9" y="437" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="490.94" y="447.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (23,180,830 samples, 0.01%)</title><rect x="854.3" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="857.30" y="1663.5" ></text>
</g>
<g >
<title>read (130,782,721 samples, 0.05%)</title><rect x="688.5" y="1445" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="691.50" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,397,671 samples, 0.01%)</title><rect x="259.9" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.92" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (29,177,764 samples, 0.01%)</title><rect x="256.4" y="1077" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="259.39" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (192,382,388 samples, 0.07%)</title><rect x="487.8" y="997" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="490.85" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (34,013,117 samples, 0.01%)</title><rect x="1052.0" y="1285" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1055.05" y="1295.5" ></text>
</g>
<g >
<title>handle_softirqs (42,290,728 samples, 0.02%)</title><rect x="151.0" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="154.01" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (39,197,357 samples, 0.01%)</title><rect x="1054.9" y="645" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.85" y="655.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (23,049,479 samples, 0.01%)</title><rect x="553.5" y="1157" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="556.45" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (22,819,687 samples, 0.01%)</title><rect x="619.9" y="1093" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="622.85" y="1103.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (678,121,833 samples, 0.25%)</title><rect x="602.9" y="1045" width="3.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="605.88" y="1055.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (34,856,595 samples, 0.01%)</title><rect x="345.3" y="1253" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="348.27" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (26,973,122 samples, 0.01%)</title><rect x="1091.9" y="1093" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1094.91" y="1103.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (46,340,252 samples, 0.02%)</title><rect x="38.1" y="933" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="41.10" y="943.5" ></text>
</g>
<g >
<title>x64_sys_call (348,648,471 samples, 0.13%)</title><rect x="973.0" y="1141" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="975.99" y="1151.5" ></text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (137,918,331 samples, 0.05%)</title><rect x="1108.4" y="1365" width="0.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1111.35" y="1375.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (166,498,083 samples, 0.06%)</title><rect x="462.4" y="949" width="0.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="465.43" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_setsockopt (278,856,125 samples, 0.10%)</title><rect x="1145.8" y="1381" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1148.75" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (36,320,091 samples, 0.01%)</title><rect x="261.0" y="1365" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="263.98" y="1375.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (89,959,304 samples, 0.03%)</title><rect x="411.3" y="1205" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="414.30" y="1215.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (69,583,318 samples, 0.03%)</title><rect x="108.7" y="965" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="111.66" y="975.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (107,482,073 samples, 0.04%)</title><rect x="955.9" y="1045" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="958.91" y="1055.5" ></text>
</g>
<g >
<title>down_write_killable (106,120,832 samples, 0.04%)</title><rect x="827.5" y="1285" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="830.45" y="1295.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (121,678,491 samples, 0.05%)</title><rect x="1039.4" y="1045" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1042.38" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,276,757 samples, 0.01%)</title><rect x="1054.9" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.88" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (93,948,650 samples, 0.04%)</title><rect x="1002.8" y="1237" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1005.78" y="1247.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (90,814,670 samples, 0.03%)</title><rect x="655.0" y="1029" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="658.05" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_line_begin_assertion (76,754,348 samples, 0.03%)</title><rect x="259.8" y="1237" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="262.82" y="1247.5" ></text>
</g>
<g >
<title>vfs_fstatat (73,318,036 samples, 0.03%)</title><rect x="545.0" y="1301" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="547.98" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (228,392,605 samples, 0.09%)</title><rect x="911.5" y="1125" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.50" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (143,007,214 samples, 0.05%)</title><rect x="292.8" y="1685" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="295.77" y="1695.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (30,743,573 samples, 0.01%)</title><rect x="828.8" y="1269" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="831.77" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,335,061 samples, 0.02%)</title><rect x="63.7" y="629" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.67" y="639.5" ></text>
</g>
<g >
<title>do_mmap (195,469,244 samples, 0.07%)</title><rect x="686.7" y="1285" width="0.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="689.70" y="1295.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (66,199,936 samples, 0.02%)</title><rect x="718.2" y="1365" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="721.22" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (41,926,437 samples, 0.02%)</title><rect x="344.0" y="1253" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="347.02" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (63,198,709 samples, 0.02%)</title><rect x="1108.6" y="965" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1111.57" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (41,969,690 samples, 0.02%)</title><rect x="84.2" y="1061" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="87.22" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (32,024,034 samples, 0.01%)</title><rect x="256.7" y="1093" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="259.69" y="1103.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (37,542,786 samples, 0.01%)</title><rect x="161.5" y="1093" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="164.53" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (103,406,771 samples, 0.04%)</title><rect x="118.3" y="1317" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="121.26" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,719,509,642 samples, 1.39%)</title><rect x="82.1" y="1109" width="16.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="85.13" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (50,864,930 samples, 0.02%)</title><rect x="223.7" y="1141" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="226.70" y="1151.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (27,999,763 samples, 0.01%)</title><rect x="446.6" y="1077" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="449.58" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (34,179,245 samples, 0.01%)</title><rect x="1108.6" y="533" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1111.63" y="543.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (124,205,891 samples, 0.05%)</title><rect x="1184.3" y="1285" width="0.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1187.27" y="1295.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,555,309,559 samples, 0.58%)</title><rect x="689.1" y="1525" width="6.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="692.09" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (57,666,039 samples, 0.02%)</title><rect x="60.3" y="1301" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="63.33" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,718,223 samples, 0.02%)</title><rect x="629.9" y="661" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.94" y="671.5" ></text>
</g>
<g >
<title>[unknown] (24,089,139 samples, 0.01%)</title><rect x="838.6" y="1397" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (26,575,752 samples, 0.01%)</title><rect x="1070.4" y="949" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1073.36" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (43,472,724 samples, 0.02%)</title><rect x="771.2" y="485" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="774.18" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (479,026,312 samples, 0.18%)</title><rect x="269.8" y="1429" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="272.83" y="1439.5" ></text>
</g>
<g >
<title>__vm_munmap (313,314,415 samples, 0.12%)</title><rect x="266.4" y="1109" width="1.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="269.45" y="1119.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (49,187,409 samples, 0.02%)</title><rect x="377.6" y="1029" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="380.58" y="1039.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (32,930,329 samples, 0.01%)</title><rect x="367.8" y="1045" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="370.82" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,443,398,019 samples, 3.91%)</title><rect x="861.7" y="1205" width="46.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="864.71" y="1215.5" >std:..</text>
</g>
<g >
<title>HttpConn::OnProcess (25,326,831,339 samples, 9.48%)</title><rect x="10.8" y="1429" width="111.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.76" y="1439.5" >HttpConn::OnP..</text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (62,483,595 samples, 0.02%)</title><rect x="797.9" y="917" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="800.89" y="927.5" ></text>
</g>
<g >
<title>sch_direct_xmit (30,654,259 samples, 0.01%)</title><rect x="269.0" y="821" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="271.98" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (38,281,885 samples, 0.01%)</title><rect x="761.5" y="1077" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="764.51" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (33,620,668 samples, 0.01%)</title><rect x="114.8" y="1077" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="117.82" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,509,456 samples, 0.02%)</title><rect x="118.3" y="949" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.34" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,431,216 samples, 0.01%)</title><rect x="629.8" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.79" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (209,496,332 samples, 0.08%)</title><rect x="205.4" y="1109" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.42" y="1119.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (12,301,228,066 samples, 4.61%)</title><rect x="1001.5" y="1397" width="54.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1004.46" y="1407.5" >HttpR..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,628,006 samples, 0.01%)</title><rect x="771.0" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.97" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (48,516,071 samples, 0.02%)</title><rect x="1053.2" y="1157" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1056.22" y="1167.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (12,144,621,164 samples, 4.55%)</title><rect x="913.1" y="1397" width="53.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="916.08" y="1407.5" >HttpR..</text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (29,191,257 samples, 0.01%)</title><rect x="942.4" y="1045" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="945.37" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (56,470,387 samples, 0.02%)</title><rect x="400.7" y="805" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="403.73" y="815.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (529,941,560 samples, 0.20%)</title><rect x="744.8" y="997" width="2.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="747.76" y="1007.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (26,027,698 samples, 0.01%)</title><rect x="606.2" y="1029" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="609.24" y="1039.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (31,631,257 samples, 0.01%)</title><rect x="204.4" y="1093" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="207.39" y="1103.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (75,242,503 samples, 0.03%)</title><rect x="660.7" y="1029" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="663.70" y="1039.5" ></text>
</g>
<g >
<title>do_mmap (185,927,609 samples, 0.07%)</title><rect x="1111.2" y="1285" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1114.19" y="1295.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (38,388,752 samples, 0.01%)</title><rect x="1023.4" y="1061" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1026.38" y="1071.5" ></text>
</g>
<g >
<title>call_rcu (25,635,386 samples, 0.01%)</title><rect x="1166.0" y="1205" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1169.03" y="1215.5" ></text>
</g>
<g >
<title>vfs_statx (51,565,069 samples, 0.02%)</title><rect x="826.1" y="1285" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="829.09" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (75,530,883 samples, 0.03%)</title><rect x="859.6" y="1141" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="862.63" y="1151.5" ></text>
</g>
<g >
<title>sock_close (177,041,057 samples, 0.07%)</title><rect x="126.9" y="1093" width="0.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="129.90" y="1103.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (193,364,565 samples, 0.07%)</title><rect x="390.9" y="997" width="0.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="393.94" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (33,565,576 samples, 0.01%)</title><rect x="522.2" y="1061" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="525.20" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (74,663,735 samples, 0.03%)</title><rect x="577.6" y="1157" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="580.63" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (52,364,580 samples, 0.02%)</title><rect x="347.7" y="533" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.74" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,496,895,180 samples, 1.31%)</title><rect x="806.2" y="1125" width="15.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="809.24" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,866,533 samples, 0.01%)</title><rect x="911.6" y="341" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.65" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (62,386,085 samples, 0.02%)</title><rect x="674.6" y="949" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="677.55" y="959.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (41,377,693 samples, 0.02%)</title><rect x="61.2" y="1269" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="64.25" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (791,889,095 samples, 0.30%)</title><rect x="812.7" y="1077" width="3.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="815.71" y="1087.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (63,919,802 samples, 0.02%)</title><rect x="695.2" y="1061" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="698.18" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (31,563,418 samples, 0.01%)</title><rect x="949.6" y="1093" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="952.59" y="1103.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (915,983,921 samples, 0.34%)</title><rect x="752.7" y="1093" width="4.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="755.73" y="1103.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (41,221,580 samples, 0.02%)</title><rect x="1085.3" y="1029" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1088.26" y="1039.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (33,366,556 samples, 0.01%)</title><rect x="117.9" y="1205" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="120.87" y="1215.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (59,684,145 samples, 0.02%)</title><rect x="1053.2" y="1205" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1056.19" y="1215.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (27,074,997 samples, 0.01%)</title><rect x="708.8" y="1637" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="711.82" y="1647.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (57,528,294 samples, 0.02%)</title><rect x="1108.0" y="1349" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1111.00" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (230,563,203 samples, 0.09%)</title><rect x="911.5" y="1141" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.50" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (25,947,970 samples, 0.01%)</title><rect x="114.6" y="1093" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="117.61" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,675,343 samples, 0.02%)</title><rect x="824.0" y="853" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.03" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (61,432,629 samples, 0.02%)</title><rect x="489.2" y="1365" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="492.15" y="1375.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (215,626,885 samples, 0.08%)</title><rect x="76.5" y="933" width="0.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="79.45" y="943.5" ></text>
</g>
<g >
<title>[unknown] (27,423,599 samples, 0.01%)</title><rect x="1143.0" y="1509" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1145.99" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,824,022,688 samples, 1.43%)</title><rect x="930.5" y="1205" width="16.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="933.53" y="1215.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (370,199,148 samples, 0.14%)</title><rect x="1119.1" y="1253" width="1.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1122.09" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,825,908,708 samples, 1.43%)</title><rect x="382.4" y="1189" width="16.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="385.38" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (102,748,963 samples, 0.04%)</title><rect x="544.9" y="1381" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="547.86" y="1391.5" ></text>
</g>
<g >
<title>__mmap (346,728,155 samples, 0.13%)</title><rect x="403.3" y="1397" width="1.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="406.29" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (27,067,037 samples, 0.01%)</title><rect x="484.5" y="1109" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="487.48" y="1119.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (58,392,621 samples, 0.02%)</title><rect x="548.4" y="1237" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="551.40" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (74,143,166 samples, 0.03%)</title><rect x="618.8" y="1093" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="621.81" y="1103.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (26,572,329 samples, 0.01%)</title><rect x="151.0" y="1509" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="154.04" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (42,743,792 samples, 0.02%)</title><rect x="630.0" y="373" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.97" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,422,044 samples, 0.02%)</title><rect x="911.6" y="693" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.62" y="703.5" ></text>
</g>
<g >
<title>[unknown] (23,735,330 samples, 0.01%)</title><rect x="556.9" y="1045" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (30,687,066 samples, 0.01%)</title><rect x="205.5" y="277" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.54" y="287.5" ></text>
</g>
<g >
<title>[unknown] (27,282,558 samples, 0.01%)</title><rect x="838.6" y="1605" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1615.5" ></text>
</g>
<g >
<title>__strlen_avx2 (210,163,670 samples, 0.08%)</title><rect x="708.9" y="1653" width="1.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="711.94" y="1663.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (158,136,359 samples, 0.06%)</title><rect x="623.5" y="1109" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="626.49" y="1119.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (1,638,703,457 samples, 0.61%)</title><rect x="971.4" y="1461" width="7.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="974.37" y="1471.5" ></text>
</g>
<g >
<title>EventLoopThread::ThreadFunction (27,122,733,743 samples, 10.16%)</title><rect x="294.2" y="1589" width="119.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="297.17" y="1599.5" >EventLoopThrea..</text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (74,962,214 samples, 0.03%)</title><rect x="522.8" y="1093" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="525.83" y="1103.5" ></text>
</g>
<g >
<title>x64_sys_call (99,676,157 samples, 0.04%)</title><rect x="402.6" y="1349" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="405.64" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (48,992,105 samples, 0.02%)</title><rect x="1087.6" y="1061" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1090.61" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (35,351,585 samples, 0.01%)</title><rect x="97.4" y="1061" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="100.44" y="1071.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (116,832,273 samples, 0.04%)</title><rect x="402.6" y="1381" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="405.57" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (77,909,210 samples, 0.03%)</title><rect x="719.9" y="1221" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="722.95" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (1,668,343,868 samples, 0.62%)</title><rect x="34.2" y="1061" width="7.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="37.19" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (372,239,673 samples, 0.14%)</title><rect x="228.4" y="1045" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="231.35" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,849,969,433 samples, 1.44%)</title><rect x="647.9" y="1205" width="17.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="650.87" y="1215.5" ></text>
</g>
<g >
<title>__ip_finish_output (70,339,141 samples, 0.03%)</title><rect x="695.2" y="1093" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="698.15" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (44,972,572 samples, 0.02%)</title><rect x="506.4" y="1109" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="509.40" y="1119.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (175,347,249 samples, 0.07%)</title><rect x="43.3" y="1029" width="0.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="46.31" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (26,974,983 samples, 0.01%)</title><rect x="643.6" y="933" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="646.56" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (42,219,401 samples, 0.02%)</title><rect x="261.0" y="1381" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="263.96" y="1391.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (35,676,999 samples, 0.01%)</title><rect x="247.4" y="1077" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="250.43" y="1087.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (23,987,600 samples, 0.01%)</title><rect x="826.1" y="1237" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="829.15" y="1247.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (118,883,395 samples, 0.04%)</title><rect x="544.8" y="1397" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="547.84" y="1407.5" ></text>
</g>
<g >
<title>move_addr_to_user (34,733,439 samples, 0.01%)</title><rect x="1172.0" y="1349" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1175.00" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (42,710,932 samples, 0.02%)</title><rect x="911.6" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.62" y="623.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (48,757,080 samples, 0.02%)</title><rect x="1052.5" y="1333" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1055.47" y="1343.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (104,683,866 samples, 0.04%)</title><rect x="95.4" y="1029" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="98.40" y="1039.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (29,301,187 samples, 0.01%)</title><rect x="972.5" y="1157" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="975.46" y="1167.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (83,505,192 samples, 0.03%)</title><rect x="746.0" y="933" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="749.04" y="943.5" ></text>
</g>
<g >
<title>_raw_write_unlock_irq (46,172,161 samples, 0.02%)</title><rect x="1182.2" y="1509" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1185.16" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (314,788,549 samples, 0.12%)</title><rect x="692.2" y="1173" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="695.19" y="1183.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (205,628,942 samples, 0.08%)</title><rect x="694.8" y="1221" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="697.79" y="1231.5" ></text>
</g>
<g >
<title>inet_sendmsg (359,467,462 samples, 0.13%)</title><rect x="694.2" y="1285" width="1.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="697.21" y="1295.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (52,180,217 samples, 0.02%)</title><rect x="604.5" y="933" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="607.54" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (28,326,638 samples, 0.01%)</title><rect x="616.3" y="1061" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="619.31" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (30,687,066 samples, 0.01%)</title><rect x="205.5" y="325" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.54" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (29,095,042 samples, 0.01%)</title><rect x="259.9" y="389" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="262.92" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (42,346,110 samples, 0.02%)</title><rect x="629.5" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.50" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (48,118,730 samples, 0.02%)</title><rect x="493.4" y="933" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="496.45" y="943.5" ></text>
</g>
<g >
<title>down_write_killable (67,379,124 samples, 0.03%)</title><rect x="267.5" y="1093" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="270.53" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (96,563,761 samples, 0.04%)</title><rect x="879.7" y="1077" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="882.75" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,275,764,535 samples, 1.23%)</title><rect x="772.8" y="981" width="14.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="775.82" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (278,179,598 samples, 0.10%)</title><rect x="670.0" y="1061" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="672.98" y="1071.5" ></text>
</g>
<g >
<title>std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (133,481,999 samples, 0.05%)</title><rect x="259.7" y="1365" width="0.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="262.65" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (42,942,056 samples, 0.02%)</title><rect x="945.5" y="1061" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="948.53" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,709,054,588 samples, 1.39%)</title><rect x="64.9" y="1093" width="16.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="67.91" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (241,181,377 samples, 0.09%)</title><rect x="386.9" y="1061" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="389.88" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (210,908,789 samples, 0.08%)</title><rect x="810.7" y="1045" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="813.67" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (184,477,344 samples, 0.07%)</title><rect x="629.5" y="917" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.46" y="927.5" ></text>
</g>
<g >
<title>thp_get_unmapped_area (32,705,491 samples, 0.01%)</title><rect x="545.6" y="1253" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="548.62" y="1263.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (141,564,822 samples, 0.05%)</title><rect x="75.3" y="917" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="78.30" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,669,584 samples, 0.01%)</title><rect x="488.0" y="309" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="490.95" y="319.5" ></text>
</g>
<g >
<title>__dynamic_cast (53,393,178 samples, 0.02%)</title><rect x="808.8" y="1077" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="811.82" y="1087.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*&gt; (35,128,912 samples, 0.01%)</title><rect x="749.9" y="1045" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="752.85" y="1055.5" ></text>
</g>
<g >
<title>std::priority_queue&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt;, TimerManager::TimerCmp&gt;::pop (32,320,728 samples, 0.01%)</title><rect x="272.8" y="1541" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="275.78" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (360,733,213 samples, 0.14%)</title><rect x="1053.8" y="1349" width="1.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1056.82" y="1359.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (384,654,595 samples, 0.14%)</title><rect x="461.9" y="981" width="1.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="464.90" y="991.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (126,957,298 samples, 0.05%)</title><rect x="697.1" y="1669" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="700.06" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (103,304,507 samples, 0.04%)</title><rect x="23.6" y="1077" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="26.56" y="1087.5" ></text>
</g>
<g >
<title>mas_store_gfp (42,910,729 samples, 0.02%)</title><rect x="830.9" y="1061" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="833.93" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (31,690,135 samples, 0.01%)</title><rect x="296.2" y="1109" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="299.24" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (23,762,007 samples, 0.01%)</title><rect x="727.8" y="1093" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="730.82" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (28,561,386 samples, 0.01%)</title><rect x="519.2" y="1029" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="522.20" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (431,296,870 samples, 0.16%)</title><rect x="577.5" y="1285" width="1.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="580.52" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (307,884,266 samples, 0.12%)</title><rect x="690.6" y="1125" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="693.58" y="1135.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (41,815,075 samples, 0.02%)</title><rect x="259.4" y="1221" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="262.37" y="1231.5" ></text>
</g>
<g >
<title>ip_local_deliver (29,868,869 samples, 0.01%)</title><rect x="1141.3" y="1445" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1144.34" y="1455.5" ></text>
</g>
<g >
<title>__close (29,421,875 samples, 0.01%)</title><rect x="545.4" y="1397" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="548.38" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (28,296,526 samples, 0.01%)</title><rect x="966.3" y="501" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="969.33" y="511.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (168,209,395 samples, 0.06%)</title><rect x="1085.9" y="1061" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1088.88" y="1071.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (73,865,127 samples, 0.03%)</title><rect x="973.6" y="1029" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="976.58" y="1039.5" ></text>
</g>
<g >
<title>vfs_read (74,759,474 samples, 0.03%)</title><rect x="1113.2" y="1349" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1116.19" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (26,340,233 samples, 0.01%)</title><rect x="1009.1" y="1077" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1012.05" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::construct&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (27,133,432 samples, 0.01%)</title><rect x="345.3" y="1221" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="348.29" y="1231.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (25,085,297,016 samples, 9.39%)</title><rect x="294.3" y="1445" width="110.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="297.26" y="1455.5" >HttpConn::Han..</text>
</g>
<g >
<title>__ip_local_out (28,957,085 samples, 0.01%)</title><rect x="692.9" y="901" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="695.89" y="911.5" ></text>
</g>
<g >
<title>do_vmi_munmap (244,638,312 samples, 0.09%)</title><rect x="549.6" y="1093" width="1.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="552.64" y="1103.5" ></text>
</g>
<g >
<title>path_openat (69,927,146 samples, 0.03%)</title><rect x="982.3" y="1557" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="985.31" y="1567.5" ></text>
</g>
<g >
<title>do_dentry_open (25,652,198 samples, 0.01%)</title><rect x="982.5" y="1525" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="985.50" y="1535.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (39,372,625 samples, 0.01%)</title><rect x="808.2" y="1077" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="811.19" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (40,557,601 samples, 0.02%)</title><rect x="352.6" y="933" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="355.64" y="943.5" ></text>
</g>
<g >
<title>std::function&lt;void  (25,659,118,059 samples, 9.61%)</title><rect x="434.7" y="1525" width="113.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="437.67" y="1535.5" >std::function&lt;..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (47,718,294 samples, 0.02%)</title><rect x="259.9" y="901" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="262.88" y="911.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (118,332,657 samples, 0.04%)</title><rect x="978.6" y="1525" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="981.63" y="1535.5" ></text>
</g>
<g >
<title>netvsc_poll (27,432,738 samples, 0.01%)</title><rect x="999.1" y="1557" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1002.14" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (30,725,744 samples, 0.01%)</title><rect x="118.9" y="1333" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="121.86" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (25,914,972 samples, 0.01%)</title><rect x="979.2" y="1477" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="982.20" y="1487.5" ></text>
</g>
<g >
<title>__fput (29,595,697 samples, 0.01%)</title><rect x="830.6" y="1077" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="833.58" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (202,252,386 samples, 0.08%)</title><rect x="347.2" y="981" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.21" y="991.5" ></text>
</g>
<g >
<title>nf_hook_slow (47,582,447 samples, 0.02%)</title><rect x="129.2" y="1109" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="132.21" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,727,307,503 samples, 1.40%)</title><rect x="789.0" y="1173" width="16.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="792.04" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (55,955,811 samples, 0.02%)</title><rect x="543.2" y="885" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.21" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_realloc_insert&lt;char&gt; (26,661,324 samples, 0.01%)</title><rect x="156.0" y="1109" width="0.1" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="159.03" y="1119.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (845,397,856 samples, 0.32%)</title><rect x="689.9" y="1285" width="3.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="692.92" y="1295.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (27,461,525,407 samples, 10.28%)</title><rect x="434.6" y="1605" width="121.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="437.62" y="1615.5" >std::__invoke_i..</text>
</g>
<g >
<title>__slab_alloc.constprop.0 (42,234,816 samples, 0.02%)</title><rect x="1173.4" y="1253" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1176.43" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,756,004,571 samples, 4.40%)</title><rect x="913.1" y="1301" width="52.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="916.12" y="1311.5" >std::..</text>
</g>
<g >
<title>std::priority_queue&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt;, TimerManager::TimerCmp&gt;::pop (33,500,371 samples, 0.01%)</title><rect x="413.7" y="1541" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="416.75" y="1551.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (12,202,698,690 samples, 4.57%)</title><rect x="10.8" y="1397" width="53.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="13.82" y="1407.5" >HttpR..</text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (50,651,115 samples, 0.02%)</title><rect x="822.0" y="1125" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="825.03" y="1135.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (304,363,046 samples, 0.11%)</title><rect x="393.9" y="1093" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="396.93" y="1103.5" ></text>
</g>
<g >
<title>ip_queue_xmit (149,656,583 samples, 0.06%)</title><rect x="129.2" y="1173" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="132.18" y="1183.5" ></text>
</g>
<g >
<title>ip_local_out (85,716,886 samples, 0.03%)</title><rect x="975.4" y="917" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="978.36" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (26,250,389 samples, 0.01%)</title><rect x="206.0" y="165" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.98" y="175.5" ></text>
</g>
<g >
<title>__dynamic_cast (86,508,822 samples, 0.03%)</title><rect x="135.7" y="1637" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="138.69" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (44,712,838 samples, 0.02%)</title><rect x="874.0" y="1061" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="876.98" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (23,365,994 samples, 0.01%)</title><rect x="1054.7" y="309" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.70" y="319.5" ></text>
</g>
<g >
<title>operator new (78,324,498 samples, 0.03%)</title><rect x="839.2" y="1653" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="842.24" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,982,823 samples, 0.01%)</title><rect x="205.8" y="645" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.78" y="655.5" ></text>
</g>
<g >
<title>do_mmap (200,032,647 samples, 0.07%)</title><rect x="262.4" y="1285" width="0.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="265.43" y="1295.5" ></text>
</g>
<g >
<title>ip_local_deliver (26,286,502 samples, 0.01%)</title><rect x="125.5" y="773" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="128.50" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (131,596,805 samples, 0.05%)</title><rect x="1002.1" y="1237" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1005.15" y="1247.5" ></text>
</g>
<g >
<title>operator new[] (33,971,480 samples, 0.01%)</title><rect x="133.5" y="1653" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="136.48" y="1663.5" ></text>
</g>
<g >
<title>__fput (23,858,157 samples, 0.01%)</title><rect x="407.2" y="1077" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="410.20" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (48,736,318 samples, 0.02%)</title><rect x="904.3" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="907.33" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_less_val (45,452,069 samples, 0.02%)</title><rect x="584.3" y="1093" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="587.27" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (24,977,734 samples, 0.01%)</title><rect x="630.0" y="117" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="633.01" y="127.5" ></text>
</g>
<g >
<title>__ep_remove (33,192,124 samples, 0.01%)</title><rect x="406.1" y="1205" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="409.07" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,380,933,460 samples, 1.27%)</title><rect x="1073.5" y="1077" width="14.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1076.47" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (97,204,442 samples, 0.04%)</title><rect x="653.0" y="981" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="655.99" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,709,762,947 samples, 4.01%)</title><rect x="579.5" y="1285" width="47.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="582.45" y="1295.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,084,600 samples, 0.02%)</title><rect x="347.7" y="677" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.72" y="687.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (304,140,474 samples, 0.11%)</title><rect x="218.3" y="949" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="221.32" y="959.5" ></text>
</g>
<g >
<title>std::function&lt;void  (8,131,076,235 samples, 3.04%)</title><rect x="1143.8" y="1589" width="36.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1146.84" y="1599.5" >std..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (29,145,996 samples, 0.01%)</title><rect x="548.8" y="1269" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="551.76" y="1279.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (95,589,195 samples, 0.04%)</title><rect x="270.3" y="1205" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="273.26" y="1215.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (32,517,930 samples, 0.01%)</title><rect x="977.5" y="1093" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="980.46" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (32,771,543 samples, 0.01%)</title><rect x="771.2" y="341" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="774.19" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (396,517,919 samples, 0.15%)</title><rect x="326.6" y="1061" width="1.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="329.58" y="1071.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (32,544,655 samples, 0.01%)</title><rect x="263.6" y="1253" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="266.62" y="1263.5" ></text>
</g>
<g >
<title>do_writev (444,053,539 samples, 0.17%)</title><rect x="1118.9" y="1365" width="1.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1121.87" y="1375.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (68,106,542 samples, 0.03%)</title><rect x="96.0" y="1061" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="99.02" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (63,815,524 samples, 0.02%)</title><rect x="685.1" y="1397" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="688.08" y="1407.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (115,368,854 samples, 0.04%)</title><rect x="1178.0" y="1365" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1180.97" y="1375.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (57,710,279 samples, 0.02%)</title><rect x="955.1" y="1045" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="958.07" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (115,776,152 samples, 0.04%)</title><rect x="61.8" y="1301" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="64.79" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (27,968,862 samples, 0.01%)</title><rect x="362.9" y="949" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="365.92" y="959.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (36,725,391 samples, 0.01%)</title><rect x="408.0" y="997" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="411.03" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,671,975 samples, 0.01%)</title><rect x="206.0" y="389" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.97" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (60,833,449 samples, 0.02%)</title><rect x="346.0" y="1221" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="349.00" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (40,837,813 samples, 0.02%)</title><rect x="722.5" y="1109" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="725.51" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,806,720,632 samples, 1.43%)</title><rect x="207.1" y="1205" width="16.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="210.12" y="1215.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (83,263,926 samples, 0.03%)</title><rect x="1001.0" y="1429" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1004.04" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (28,217,141 samples, 0.01%)</title><rect x="1105.1" y="1077" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1108.08" y="1087.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (24,969,629 samples, 0.01%)</title><rect x="176.1" y="1061" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="179.07" y="1071.5" ></text>
</g>
<g >
<title>__GI___libc_write (33,910,938 samples, 0.01%)</title><rect x="1143.2" y="1621" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1146.23" y="1631.5" ></text>
</g>
<g >
<title>tcp_send_fin (161,322,172 samples, 0.06%)</title><rect x="1117.5" y="1013" width="0.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1120.50" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (24,168,223 samples, 0.01%)</title><rect x="923.3" y="869" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="926.26" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,707,760,891 samples, 1.39%)</title><rect x="489.7" y="1061" width="16.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="492.67" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,590,470,548 samples, 1.34%)</title><rect x="489.8" y="997" width="15.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="492.81" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (26,101,885 samples, 0.01%)</title><rect x="1069.4" y="949" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1072.45" y="959.5" ></text>
</g>
<g >
<title>__dynamic_cast (54,932,660 samples, 0.02%)</title><rect x="244.2" y="1077" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="247.22" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_eliminate_dummy (38,733,997 samples, 0.01%)</title><rect x="202.9" y="1333" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="205.91" y="1343.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (114,940,792 samples, 0.04%)</title><rect x="1120.9" y="1525" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1123.94" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (62,185,262 samples, 0.02%)</title><rect x="1001.8" y="1109" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1004.80" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,592,479,416 samples, 1.35%)</title><rect x="1056.1" y="1029" width="15.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1059.06" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,261,057,092 samples, 1.22%)</title><rect x="65.6" y="965" width="14.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="68.58" y="975.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (47,198,965 samples, 0.02%)</title><rect x="946.5" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="949.54" y="1087.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (68,500,323 samples, 0.03%)</title><rect x="1176.3" y="1269" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1179.32" y="1279.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (34,791,911 samples, 0.01%)</title><rect x="1078.9" y="1045" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1081.87" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (47,766,225 samples, 0.02%)</title><rect x="803.5" y="1061" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="806.48" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,391,951,068 samples, 3.89%)</title><rect x="721.0" y="1205" width="45.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="724.02" y="1215.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (247,290,882 samples, 0.09%)</title><rect x="770.6" y="1125" width="1.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.58" y="1135.5" ></text>
</g>
<g >
<title>net_rx_action (32,006,997 samples, 0.01%)</title><rect x="19.3" y="1013" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="22.26" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (102,697,065 samples, 0.04%)</title><rect x="416.8" y="1637" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="419.77" y="1647.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (409,966,817 samples, 0.15%)</title><rect x="270.0" y="1317" width="1.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="273.02" y="1327.5" ></text>
</g>
<g >
<title>mmap_region (143,013,251 samples, 0.05%)</title><rect x="121.2" y="1269" width="0.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="124.21" y="1279.5" ></text>
</g>
<g >
<title>_int_malloc (50,791,853 samples, 0.02%)</title><rect x="852.7" y="1685" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="855.75" y="1695.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (58,769,798 samples, 0.02%)</title><rect x="1001.8" y="1077" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1004.81" y="1087.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (72,055,812 samples, 0.03%)</title><rect x="73.6" y="821" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="76.61" y="831.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (77,519,525 samples, 0.03%)</title><rect x="1182.8" y="1477" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1185.76" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::emplace_back&lt;char&gt; (41,216,718 samples, 0.02%)</title><rect x="721.2" y="1125" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="724.20" y="1135.5" ></text>
</g>
<g >
<title>dput (78,420,859 samples, 0.03%)</title><rect x="832.6" y="1093" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="835.56" y="1103.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_iter&lt;char const*&gt; &gt; (30,785,356 samples, 0.01%)</title><rect x="119.2" y="1365" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="122.16" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,597,994 samples, 0.02%)</title><rect x="400.8" y="709" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="403.75" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (237,476,133 samples, 0.09%)</title><rect x="435.4" y="1253" width="1.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="438.41" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (89,757,140 samples, 0.03%)</title><rect x="141.2" y="1669" width="0.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="144.15" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,447,947,838 samples, 4.29%)</title><rect x="718.7" y="1365" width="50.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="721.70" y="1375.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,004,103 samples, 0.02%)</title><rect x="912.1" y="469" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.07" y="479.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (34,000,717 samples, 0.01%)</title><rect x="354.8" y="933" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="357.80" y="943.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (33,192,672 samples, 0.01%)</title><rect x="683.5" y="1189" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="686.54" y="1199.5" ></text>
</g>
<g >
<title>sch_direct_xmit (31,176,147 samples, 0.01%)</title><rect x="693.1" y="821" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="696.09" y="831.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (31,274,410 samples, 0.01%)</title><rect x="95.9" y="1061" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="98.88" y="1071.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (30,717,590 samples, 0.01%)</title><rect x="799.4" y="1029" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="802.36" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (48,974,219 samples, 0.02%)</title><rect x="630.0" y="533" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.95" y="543.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (144,403,551 samples, 0.05%)</title><rect x="1117.6" y="997" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1120.56" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (26,039,257 samples, 0.01%)</title><rect x="530.2" y="1013" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="533.18" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (43,541,948 samples, 0.02%)</title><rect x="683.5" y="1269" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="686.51" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,690,697,807 samples, 1.38%)</title><rect x="207.2" y="1125" width="16.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="210.21" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (41,610,645 samples, 0.02%)</title><rect x="1002.3" y="1157" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1005.29" y="1167.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (24,903,814 samples, 0.01%)</title><rect x="512.9" y="1045" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="515.85" y="1055.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (170,235,243 samples, 0.06%)</title><rect x="548.2" y="1397" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="551.15" y="1407.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (93,651,059 samples, 0.04%)</title><rect x="61.9" y="1285" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="64.89" y="1295.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (27,360,641 samples, 0.01%)</title><rect x="377.7" y="1013" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="380.67" y="1023.5" ></text>
</g>
<g >
<title>std::function&lt;void  (165,638,993 samples, 0.06%)</title><rect x="264.9" y="1381" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="267.95" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (76,791,752 samples, 0.03%)</title><rect x="1108.5" y="1173" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1111.55" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (66,844,253 samples, 0.03%)</title><rect x="684.0" y="997" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="686.99" y="1007.5" ></text>
</g>
<g >
<title>__dynamic_cast (142,362,710 samples, 0.05%)</title><rect x="1012.0" y="1077" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1014.96" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (25,165,489 samples, 0.01%)</title><rect x="203.1" y="1285" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="206.12" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (29,896,900 samples, 0.01%)</title><rect x="334.3" y="1045" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="337.33" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,833,868,361 samples, 1.44%)</title><rect x="665.4" y="1157" width="16.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="668.36" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (32,248,520 samples, 0.01%)</title><rect x="130.9" y="1509" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="133.87" y="1519.5" ></text>
</g>
<g >
<title>dput (230,430,933 samples, 0.09%)</title><rect x="1165.4" y="1333" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1168.43" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,579,047,723 samples, 4.34%)</title><rect x="772.3" y="1365" width="51.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="775.31" y="1375.5" >std::..</text>
</g>
<g >
<title>__ip_queue_xmit (148,821,809 samples, 0.06%)</title><rect x="129.2" y="1157" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="132.18" y="1167.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (139,288,684 samples, 0.05%)</title><rect x="1150.6" y="1429" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1153.55" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,677,297 samples, 0.02%)</title><rect x="911.6" y="773" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.61" y="783.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (26,289,388 samples, 0.01%)</title><rect x="1170.6" y="1061" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1173.58" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; &gt;::_M_default_initialize (23,281,587 samples, 0.01%)</title><rect x="1054.0" y="1301" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1057.04" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (80,204,639 samples, 0.03%)</title><rect x="18.9" y="1093" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="21.88" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,364,261 samples, 0.02%)</title><rect x="1054.4" y="533" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.43" y="543.5" ></text>
</g>
<g >
<title>epoll_wait (28,820,503 samples, 0.01%)</title><rect x="1121.5" y="1541" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1124.51" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (37,674,946 samples, 0.01%)</title><rect x="788.6" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="791.60" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (61,620,452 samples, 0.02%)</title><rect x="203.1" y="1333" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="206.11" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (38,085,111 samples, 0.01%)</title><rect x="49.4" y="1061" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="52.41" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (26,209,203 samples, 0.01%)</title><rect x="1084.5" y="1045" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1087.53" y="1055.5" ></text>
</g>
<g >
<title>do_filp_open (72,692,977 samples, 0.03%)</title><rect x="982.3" y="1573" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="985.30" y="1583.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (27,059,464,734 samples, 10.13%)</title><rect x="718.1" y="1669" width="119.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="721.08" y="1679.5" >std::thread::_..</text>
</g>
<g >
<title>___slab_alloc (38,857,597 samples, 0.01%)</title><rect x="1173.4" y="1237" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1176.43" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (73,512,473 samples, 0.03%)</title><rect x="400.7" y="1077" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="403.70" y="1087.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (25,381,447,376 samples, 9.50%)</title><rect x="576.9" y="1461" width="112.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="579.92" y="1471.5" >HttpConn::Htt..</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (99,758,632 samples, 0.04%)</title><rect x="1053.0" y="1301" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1056.04" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (34,204,909 samples, 0.01%)</title><rect x="115.4" y="1093" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="118.45" y="1103.5" ></text>
</g>
<g >
<title>TimerManager::Tick (113,803,261 samples, 0.04%)</title><rect x="1186.7" y="1621" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1189.71" y="1631.5" ></text>
</g>
<g >
<title>netvsc_poll (30,348,679 samples, 0.01%)</title><rect x="408.1" y="885" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="411.05" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (2,019,810,166 samples, 0.76%)</title><rect x="1075.2" y="1061" width="8.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1078.22" y="1071.5" ></text>
</g>
<g >
<title>__strxfrm_l (93,411,863 samples, 0.03%)</title><rect x="419.3" y="1669" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="422.32" y="1679.5" ></text>
</g>
<g >
<title>perf_event_mmap (60,297,257 samples, 0.02%)</title><rect x="546.0" y="1253" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="549.01" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,588,607,649 samples, 3.97%)</title><rect x="437.5" y="1205" width="46.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="440.48" y="1215.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (45,150,263 samples, 0.02%)</title><rect x="140.9" y="1669" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="143.95" y="1679.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (84,122,816 samples, 0.03%)</title><rect x="797.8" y="933" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="800.79" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,482,558,999 samples, 4.30%)</title><rect x="348.9" y="1333" width="50.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="351.91" y="1343.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,350,794 samples, 0.04%)</title><rect x="205.7" y="789" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.75" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,735,222,339 samples, 1.40%)</title><rect x="489.6" y="1109" width="16.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="492.62" y="1119.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (79,793,894 samples, 0.03%)</title><rect x="71.8" y="917" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="74.82" y="927.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (24,815,635 samples, 0.01%)</title><rect x="189.8" y="1061" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="192.82" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (23,081,993 samples, 0.01%)</title><rect x="555.4" y="1477" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="558.40" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (213,201,668 samples, 0.08%)</title><rect x="217.2" y="933" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="220.22" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (25,260,117 samples, 0.01%)</title><rect x="87.6" y="981" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="90.59" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (25,743,717 samples, 0.01%)</title><rect x="209.0" y="949" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="212.02" y="959.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (141,258,170 samples, 0.05%)</title><rect x="563.2" y="1669" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="566.22" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (25,211,994 samples, 0.01%)</title><rect x="72.7" y="869" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="75.73" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (30,857,899 samples, 0.01%)</title><rect x="771.2" y="309" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="774.20" y="319.5" ></text>
</g>
<g >
<title>EventLoopThreadPool::GetNextLoop (117,823,988 samples, 0.04%)</title><rect x="1144.2" y="1445" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1147.19" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (30,243,782 samples, 0.01%)</title><rect x="231.0" y="1045" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="233.95" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (37,343,332 samples, 0.01%)</title><rect x="1054.9" y="565" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1057.86" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (88,487,647 samples, 0.03%)</title><rect x="1001.7" y="1205" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1004.72" y="1215.5" ></text>
</g>
<g >
<title>netvsc_poll (28,098,133 samples, 0.01%)</title><rect x="1116.0" y="885" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1118.96" y="895.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (874,366,464 samples, 0.33%)</title><rect x="406.7" y="1349" width="3.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="409.67" y="1359.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,707,678,412 samples, 0.64%)</title><rect x="829.1" y="1509" width="7.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="832.06" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (69,980,597 samples, 0.03%)</title><rect x="543.2" y="1109" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.17" y="1119.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (248,304,018 samples, 0.09%)</title><rect x="674.0" y="1045" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="677.02" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (51,818,385 samples, 0.02%)</title><rect x="347.7" y="501" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.74" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (55,358,875 samples, 0.02%)</title><rect x="544.2" y="1397" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="547.22" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (55,926,277 samples, 0.02%)</title><rect x="347.2" y="773" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.25" y="783.5" ></text>
</g>
<g >
<title>[unknown] (23,613,548 samples, 0.01%)</title><rect x="838.6" y="1365" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (45,334,223 samples, 0.02%)</title><rect x="776.1" y="933" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="779.09" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (45,453,154 samples, 0.02%)</title><rect x="763.2" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="766.22" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (28,518,595 samples, 0.01%)</title><rect x="556.8" y="1573" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (25,433,869 samples, 0.01%)</title><rect x="823.6" y="1157" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="826.58" y="1167.5" ></text>
</g>
<g >
<title>_int_free (202,463,576 samples, 0.08%)</title><rect x="711.1" y="1685" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="714.15" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (196,871,050 samples, 0.07%)</title><rect x="1184.2" y="1429" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1187.16" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (47,969,371 samples, 0.02%)</title><rect x="101.7" y="1093" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="104.67" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,793,107,842 samples, 1.42%)</title><rect x="789.0" y="1253" width="16.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="791.98" y="1263.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (569,137,857 samples, 0.21%)</title><rect x="179.2" y="1013" width="2.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="182.24" y="1023.5" ></text>
</g>
<g >
<title>x64_sys_call (39,364,088 samples, 0.01%)</title><rect x="696.2" y="1413" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="699.20" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,778,683,933 samples, 4.41%)</title><rect x="1055.9" y="1349" width="52.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1058.86" y="1359.5" >std::..</text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (28,937,033 samples, 0.01%)</title><rect x="83.9" y="1061" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="86.88" y="1071.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (53,081,400 samples, 0.02%)</title><rect x="1001.8" y="1061" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1004.83" y="1071.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char const*&gt; (25,779,586 samples, 0.01%)</title><rect x="29.2" y="1077" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="32.22" y="1087.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (86,490,710 samples, 0.03%)</title><rect x="877.9" y="1077" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="880.89" y="1087.5" ></text>
</g>
<g >
<title>__strlen_avx2 (219,924,128 samples, 0.08%)</title><rect x="1134.1" y="1653" width="0.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1137.05" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (847,904,864 samples, 0.32%)</title><rect x="689.9" y="1301" width="3.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="692.91" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (113,475,114 samples, 0.04%)</title><rect x="153.6" y="1221" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="156.63" y="1231.5" ></text>
</g>
<g >
<title>perf_iterate_sb (22,817,445 samples, 0.01%)</title><rect x="403.9" y="1237" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="406.92" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (84,718,610 samples, 0.03%)</title><rect x="480.1" y="1093" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="483.10" y="1103.5" ></text>
</g>
<g >
<title>EventLoop::DelChannel (182,587,804 samples, 0.07%)</title><rect x="829.1" y="1413" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="832.13" y="1423.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (875,699,642 samples, 0.33%)</title><rect x="406.7" y="1365" width="3.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="409.67" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (145,060,011 samples, 0.05%)</title><rect x="823.8" y="1349" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="826.82" y="1359.5" ></text>
</g>
<g >
<title>____fput (32,345,926 samples, 0.01%)</title><rect x="690.4" y="1093" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="693.39" y="1103.5" ></text>
</g>
<g >
<title>do_syscall_64 (492,224,566 samples, 0.18%)</title><rect x="410.8" y="1413" width="2.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="413.80" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (29,643,721 samples, 0.01%)</title><rect x="487.9" y="357" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="490.94" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (71,243,201 samples, 0.03%)</title><rect x="118.3" y="1109" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.30" y="1119.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (31,948,028 samples, 0.01%)</title><rect x="606.4" y="1045" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="609.37" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,948,689 samples, 0.02%)</title><rect x="966.3" y="853" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.30" y="863.5" ></text>
</g>
<g >
<title>schedule (492,262,392 samples, 0.18%)</title><rect x="1183.3" y="1477" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1186.35" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (192,602,225 samples, 0.07%)</title><rect x="770.7" y="901" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.66" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (25,665,667 samples, 0.01%)</title><rect x="770.7" y="245" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.74" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,205,161 samples, 0.02%)</title><rect x="543.2" y="917" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.20" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,503,152 samples, 0.02%)</title><rect x="205.5" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.52" y="591.5" ></text>
</g>
<g >
<title>ip_finish_output2 (68,232,768 samples, 0.03%)</title><rect x="695.2" y="1077" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="698.16" y="1087.5" ></text>
</g>
<g >
<title>std::function&lt;void  (150,282,845 samples, 0.06%)</title><rect x="1159.6" y="1301" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1162.55" y="1311.5" ></text>
</g>
<g >
<title>tcp_close (179,221,689 samples, 0.07%)</title><rect x="692.7" y="1045" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="695.69" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (102,768,642 samples, 0.04%)</title><rect x="1097.9" y="1045" width="0.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1100.87" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (78,255,677 samples, 0.03%)</title><rect x="259.8" y="1253" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.82" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,448,179 samples, 0.01%)</title><rect x="488.2" y="613" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.22" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,681,169,592 samples, 1.38%)</title><rect x="806.0" y="1141" width="16.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="809.03" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (39,407,912 samples, 0.01%)</title><rect x="912.1" y="341" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="915.08" y="351.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (868,867,480 samples, 0.33%)</title><rect x="1114.6" y="1285" width="3.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1117.61" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,878,796,303 samples, 1.45%)</title><rect x="382.3" y="1237" width="17.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="385.31" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,460,817,793 samples, 4.29%)</title><rect x="348.9" y="1301" width="50.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="351.91" y="1311.5" >std::..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (52,840,445 samples, 0.02%)</title><rect x="690.3" y="1141" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="693.33" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (200,237,036 samples, 0.07%)</title><rect x="911.5" y="1061" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="914.54" y="1071.5" ></text>
</g>
<g >
<title>netvsc_poll (34,887,855 samples, 0.01%)</title><rect x="691.1" y="885" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="694.14" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Executor (40,064,731 samples, 0.02%)</title><rect x="1054.0" y="1333" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1056.98" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (57,543,195 samples, 0.02%)</title><rect x="767.0" y="1157" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="770.04" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (630,837,939 samples, 0.24%)</title><rect x="889.9" y="1077" width="2.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="892.94" y="1087.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (123,459,661 samples, 0.05%)</title><rect x="48.2" y="1045" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="51.17" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (3,125,472,307 samples, 1.17%)</title><rect x="556.0" y="1685" width="13.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="558.97" y="1695.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (56,284,083 samples, 0.02%)</title><rect x="435.6" y="1077" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="438.58" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (86,415,642 samples, 0.03%)</title><rect x="706.4" y="1669" width="0.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="709.45" y="1679.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (42,733,653 samples, 0.02%)</title><rect x="1097.2" y="1029" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1100.15" y="1039.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (39,125,988 samples, 0.01%)</title><rect x="219.1" y="917" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="222.10" y="927.5" ></text>
</g>
<g >
<title>irq_exit_rcu (40,676,410 samples, 0.02%)</title><rect x="1182.2" y="1461" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1185.17" y="1471.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (99,524,996 samples, 0.04%)</title><rect x="968.2" y="1317" width="0.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="971.23" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (31,212,715 samples, 0.01%)</title><rect x="1054.4" y="229" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.44" y="239.5" ></text>
</g>
<g >
<title>tcp_push (221,930,505 samples, 0.08%)</title><rect x="977.3" y="1237" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="980.33" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,813,310,514 samples, 4.42%)</title><rect x="207.1" y="1381" width="52.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="210.09" y="1391.5" >std::..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (51,027,074 samples, 0.02%)</title><rect x="619.6" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="622.61" y="1087.5" ></text>
</g>
<g >
<title>x64_sys_call (23,247,422 samples, 0.01%)</title><rect x="413.6" y="1493" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="416.57" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,304,762 samples, 0.01%)</title><rect x="259.9" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.90" y="591.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (211,187,390 samples, 0.08%)</title><rect x="656.6" y="981" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="659.60" y="991.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (26,189,718 samples, 0.01%)</title><rect x="936.0" y="965" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="939.00" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (223,152,678 samples, 0.08%)</title><rect x="652.8" y="1013" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="655.77" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (53,518,699 samples, 0.02%)</title><rect x="195.4" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="198.41" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (23,949,652 samples, 0.01%)</title><rect x="911.9" y="485" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.90" y="495.5" ></text>
</g>
<g >
<title>[unknown] (38,639,239 samples, 0.01%)</title><rect x="988.9" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.91" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (30,314,824 samples, 0.01%)</title><rect x="991.5" y="1557" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="994.55" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver (98,690,435 samples, 0.04%)</title><rect x="1184.3" y="1205" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1187.34" y="1215.5" ></text>
</g>
<g >
<title>std::priority_queue&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt;, TimerManager::TimerCmp&gt;::pop (35,832,614 samples, 0.01%)</title><rect x="1121.7" y="1541" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1124.73" y="1551.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (88,528,015 samples, 0.03%)</title><rect x="737.5" y="1077" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="740.51" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (253,672,501 samples, 0.09%)</title><rect x="635.5" y="917" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="638.54" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (95,375,739 samples, 0.04%)</title><rect x="330.6" y="1061" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="333.56" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (200,999,895 samples, 0.08%)</title><rect x="652.9" y="997" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="655.87" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (466,113,834 samples, 0.17%)</title><rect x="294.9" y="1285" width="2.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="297.89" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (110,422,721 samples, 0.04%)</title><rect x="828.5" y="1413" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="831.47" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="805" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="815.5" ></text>
</g>
<g >
<title>sock_recvmsg (51,765,013 samples, 0.02%)</title><rect x="688.8" y="1317" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="691.78" y="1327.5" ></text>
</g>
<g >
<title>operator new (40,911,193 samples, 0.02%)</title><rect x="36.2" y="1013" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="39.20" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,357,798 samples, 0.01%)</title><rect x="912.1" y="213" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.11" y="223.5" ></text>
</g>
<g >
<title>HttpRequest::ParseRequestLine (12,259,576,889 samples, 4.59%)</title><rect x="489.4" y="1397" width="54.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="492.43" y="1407.5" >HttpR..</text>
</g>
<g >
<title>ip_queue_xmit (92,465,778 samples, 0.03%)</title><rect x="975.3" y="949" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="978.34" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (53,749,094 samples, 0.02%)</title><rect x="937.2" y="1045" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="940.16" y="1055.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (53,228,235 samples, 0.02%)</title><rect x="182.1" y="1045" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="185.10" y="1055.5" ></text>
</g>
<g >
<title>x64_sys_call (104,007,614 samples, 0.04%)</title><rect x="1124.7" y="1621" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1127.70" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (46,401,831 samples, 0.02%)</title><rect x="401.9" y="1381" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="404.92" y="1391.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (28,028,262 samples, 0.01%)</title><rect x="87.9" y="1045" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="90.90" y="1055.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (27,296,102 samples, 0.01%)</title><rect x="782.2" y="917" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="785.18" y="927.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (22,933,106 samples, 0.01%)</title><rect x="991.5" y="1493" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="994.55" y="1503.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (222,231,983 samples, 0.08%)</title><rect x="360.3" y="933" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="363.31" y="943.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (59,366,448 samples, 0.02%)</title><rect x="957.0" y="949" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="960.04" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (81,850,487 samples, 0.03%)</title><rect x="443.1" y="1093" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="446.11" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (37,556,657 samples, 0.01%)</title><rect x="244.7" y="1077" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="247.67" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (23,162,380 samples, 0.01%)</title><rect x="556.9" y="837" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="847.5" ></text>
</g>
<g >
<title>x64_sys_call (295,719,767 samples, 0.11%)</title><rect x="549.6" y="1141" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="552.64" y="1151.5" ></text>
</g>
<g >
<title>__GI___setsockopt (621,969,109 samples, 0.23%)</title><rect x="1144.8" y="1445" width="2.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1147.85" y="1455.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (30,193,961 samples, 0.01%)</title><rect x="720.1" y="1077" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="723.05" y="1087.5" ></text>
</g>
<g >
<title>operator new (22,708,802 samples, 0.01%)</title><rect x="108.1" y="1013" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="111.05" y="1023.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (51,553,454 samples, 0.02%)</title><rect x="233.1" y="917" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="236.11" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Epoller, std::default_delete&lt;Epoller&gt; &gt;::get (23,528,620 samples, 0.01%)</title><rect x="1186.3" y="1589" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1189.29" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (89,149,273 samples, 0.03%)</title><rect x="201.8" y="1205" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="204.83" y="1215.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (41,714,794 samples, 0.02%)</title><rect x="628.4" y="1125" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="631.37" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (59,182,247 samples, 0.02%)</title><rect x="259.8" y="1061" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.85" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (34,914,945 samples, 0.01%)</title><rect x="248.6" y="1029" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="251.65" y="1039.5" ></text>
</g>
<g >
<title>__ip_finish_output (45,318,698 samples, 0.02%)</title><rect x="833.4" y="869" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="836.39" y="879.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (130,243,591 samples, 0.05%)</title><rect x="259.7" y="1349" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="262.67" y="1359.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (25,220,446 samples, 0.01%)</title><rect x="686.0" y="1269" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="688.96" y="1279.5" ></text>
</g>
<g >
<title>__strlen_avx2 (176,250,402 samples, 0.07%)</title><rect x="701.5" y="1669" width="0.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="704.46" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (27,283,275 samples, 0.01%)</title><rect x="206.0" y="229" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.98" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (31,726,316 samples, 0.01%)</title><rect x="613.2" y="1045" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="616.24" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (32,743,898 samples, 0.01%)</title><rect x="111.5" y="1077" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="114.52" y="1087.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (1,552,766,887 samples, 0.58%)</title><rect x="689.1" y="1477" width="6.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="692.10" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (35,154,330 samples, 0.01%)</title><rect x="786.5" y="949" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="789.51" y="959.5" ></text>
</g>
<g >
<title>perf_ctx_disable (35,734,605 samples, 0.01%)</title><rect x="1183.6" y="1429" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1186.56" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,275,569 samples, 0.01%)</title><rect x="629.5" y="533" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.51" y="543.5" ></text>
</g>
<g >
<title>irq_exit_rcu (51,181,506 samples, 0.02%)</title><rect x="1141.3" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1144.31" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (34,256,125 samples, 0.01%)</title><rect x="629.5" y="517" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.52" y="527.5" ></text>
</g>
<g >
<title>ip_output (82,789,416 samples, 0.03%)</title><rect x="1120.0" y="1125" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1123.04" y="1135.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (30,368,637 samples, 0.01%)</title><rect x="38.7" y="965" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="41.71" y="975.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (110,904,930 samples, 0.04%)</title><rect x="89.9" y="1013" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="92.89" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (108,643,261 samples, 0.04%)</title><rect x="416.7" y="1653" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="419.74" y="1663.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (182,054,666 samples, 0.07%)</title><rect x="1064.2" y="853" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1067.22" y="863.5" ></text>
</g>
<g >
<title>all (267,032,844,734 samples, 100%)</title><rect x="10.0" y="1717" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,715,318,658 samples, 1.39%)</title><rect x="365.6" y="1189" width="16.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="368.61" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (73,787,230 samples, 0.03%)</title><rect x="684.0" y="1093" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="686.97" y="1103.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (103,418,369 samples, 0.04%)</title><rect x="740.7" y="1029" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="743.72" y="1039.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (38,956,524 samples, 0.01%)</title><rect x="119.9" y="1365" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="122.90" y="1375.5" ></text>
</g>
<g >
<title>ip_output (82,324,451 samples, 0.03%)</title><rect x="835.7" y="1125" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="838.67" y="1135.5" ></text>
</g>
<g >
<title>sch_direct_xmit (42,308,342 samples, 0.02%)</title><rect x="129.6" y="1045" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="132.57" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (90,313,167 samples, 0.03%)</title><rect x="1097.0" y="1061" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1100.02" y="1071.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (71,920,833 samples, 0.03%)</title><rect x="153.0" y="1381" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="155.95" y="1391.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (25,839,097 samples, 0.01%)</title><rect x="148.3" y="1653" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="151.31" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (58,534,109 samples, 0.02%)</title><rect x="499.4" y="885" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="502.39" y="895.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (107,942,498 samples, 0.04%)</title><rect x="268.7" y="933" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="271.69" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (23,010,896 samples, 0.01%)</title><rect x="485.2" y="1253" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="488.23" y="1263.5" ></text>
</g>
<g >
<title>epoll_wait (33,954,453 samples, 0.01%)</title><rect x="837.2" y="1541" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="840.16" y="1551.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long&gt; (25,069,579 samples, 0.01%)</title><rect x="346.9" y="1269" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="349.92" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (23,171,281 samples, 0.01%)</title><rect x="838.6" y="1301" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1311.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long, std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt; &gt; (23,953,329 samples, 0.01%)</title><rect x="629.2" y="1285" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="632.18" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,648,116 samples, 0.02%)</title><rect x="487.9" y="661" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.92" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (43,977,708 samples, 0.02%)</title><rect x="117.8" y="1285" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="120.84" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (26,843,504 samples, 0.01%)</title><rect x="106.4" y="1077" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="109.41" y="1087.5" ></text>
</g>
<g >
<title>tcp_write_xmit (198,358,660 samples, 0.07%)</title><rect x="1119.7" y="1205" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1122.72" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (26,147,776 samples, 0.01%)</title><rect x="205.8" y="517" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="208.80" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (25,750,085 samples, 0.01%)</title><rect x="663.2" y="1061" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="666.16" y="1071.5" ></text>
</g>
<g >
<title>perf_event_mmap (65,841,417 samples, 0.02%)</title><rect x="687.1" y="1253" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="690.08" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,713,391,394 samples, 1.39%)</title><rect x="648.1" y="1109" width="16.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="651.09" y="1119.5" ></text>
</g>
<g >
<title>clear_bhb_loop (42,616,159 samples, 0.02%)</title><rect x="1148.5" y="1413" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1151.54" y="1423.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (170,453,691 samples, 0.06%)</title><rect x="1181.4" y="1509" width="0.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1184.40" y="1519.5" ></text>
</g>
<g >
<title>HttpRequest::ParseHeader (12,151,585,910 samples, 4.55%)</title><rect x="153.4" y="1397" width="53.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="156.36" y="1407.5" >HttpR..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (49,399,767 samples, 0.02%)</title><rect x="770.7" y="629" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="773.68" y="639.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (76,889,668 samples, 0.03%)</title><rect x="379.1" y="1061" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="382.07" y="1071.5" ></text>
</g>
<g >
<title>unmap_single_vma (25,653,098 samples, 0.01%)</title><rect x="408.3" y="1029" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="411.34" y="1039.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (114,086,737 samples, 0.04%)</title><rect x="47.4" y="1061" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="50.43" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (133,703,832 samples, 0.05%)</title><rect x="217.6" y="917" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="220.57" y="927.5" ></text>
</g>
<g >
<title>__GI___libc_write (894,967,597 samples, 0.34%)</title><rect x="1153.0" y="1253" width="3.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1155.96" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (191,441,286 samples, 0.07%)</title><rect x="347.2" y="917" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.23" y="927.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (31,630,359 samples, 0.01%)</title><rect x="371.4" y="1045" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="374.36" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_close (312,506,855 samples, 0.12%)</title><rect x="268.1" y="1141" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="271.09" y="1151.5" ></text>
</g>
<g >
<title>__stpncpy_avx2 (333,005,696 samples, 0.12%)</title><rect x="990.2" y="1653" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="993.23" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (43,463,187 samples, 0.02%)</title><rect x="1072.3" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1075.33" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (69,011,673 samples, 0.03%)</title><rect x="1113.9" y="1269" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1116.93" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (3,841,361,248 samples, 1.44%)</title><rect x="524.4" y="1141" width="17.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="527.42" y="1151.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (247,088,182 samples, 0.09%)</title><rect x="249.9" y="1045" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="252.88" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (277,219,822 samples, 0.10%)</title><rect x="294.9" y="1253" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="297.90" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (46,584,083 samples, 0.02%)</title><rect x="684.0" y="725" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="687.02" y="735.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (73,140,683 samples, 0.03%)</title><rect x="1081.8" y="933" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1084.77" y="943.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (25,219,259,471 samples, 9.44%)</title><rect x="294.2" y="1477" width="111.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="297.24" y="1487.5" >std::__invoke..</text>
</g>
<g >
<title>std::__shared_count&lt; (107,370,144 samples, 0.04%)</title><rect x="1053.0" y="1333" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1056.04" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (43,484,266 samples, 0.02%)</title><rect x="721.2" y="1141" width="0.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="724.19" y="1151.5" ></text>
</g>
<g >
<title>TimerManager::GetNextTick (45,617,753 samples, 0.02%)</title><rect x="1180.1" y="1605" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1183.07" y="1615.5" ></text>
</g>
<g >
<title>__mmap (365,430,928 samples, 0.14%)</title><rect x="1111.1" y="1397" width="1.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1114.09" y="1407.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (83,456,602 samples, 0.03%)</title><rect x="184.4" y="1061" width="0.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="187.43" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (50,308,602 samples, 0.02%)</title><rect x="55.5" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="58.46" y="1087.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (155,147,828 samples, 0.06%)</title><rect x="658.7" y="1029" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="661.70" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (23,296,643 samples, 0.01%)</title><rect x="609.9" y="1013" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="612.86" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (98,365,007 samples, 0.04%)</title><rect x="497.4" y="901" width="0.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="500.35" y="911.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (62,413,453 samples, 0.02%)</title><rect x="215.1" y="885" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="218.10" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (30,404,868 samples, 0.01%)</title><rect x="1054.9" y="373" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.88" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (27,915,683 samples, 0.01%)</title><rect x="1171.1" y="1301" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1174.13" y="1311.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (117,686,869 samples, 0.04%)</title><rect x="599.4" y="1029" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="602.35" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (25,399,689 samples, 0.01%)</title><rect x="1011.5" y="1061" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1014.48" y="1071.5" ></text>
</g>
<g >
<title>operator delete (65,710,186 samples, 0.02%)</title><rect x="422.0" y="1669" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="424.95" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (4,010,614,556 samples, 1.50%)</title><rect x="524.2" y="1253" width="17.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="527.20" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (35,651,165 samples, 0.01%)</title><rect x="980.6" y="1653" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="983.57" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (89,292,546 samples, 0.03%)</title><rect x="69.8" y="869" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="72.83" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (36,507,031 samples, 0.01%)</title><rect x="1052.0" y="1317" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1055.04" y="1327.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (57,457,742 samples, 0.02%)</title><rect x="235.0" y="997" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="238.01" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (1,962,630,927 samples, 0.73%)</title><rect x="226.7" y="1061" width="8.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="229.71" y="1071.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (54,158,770 samples, 0.02%)</title><rect x="832.6" y="1061" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="835.64" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (619,984,951 samples, 0.23%)</title><rect x="249.0" y="1061" width="2.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="251.97" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (244,313,149 samples, 0.09%)</title><rect x="734.9" y="1013" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="737.90" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,223,296 samples, 0.04%)</title><rect x="488.2" y="741" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.18" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::~basic_regex (107,863,708 samples, 0.04%)</title><rect x="486.5" y="1381" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="489.48" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (29,758,977 samples, 0.01%)</title><rect x="963.2" y="1093" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="966.20" y="1103.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (69,788,748 samples, 0.03%)</title><rect x="1083.7" y="1013" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1086.71" y="1023.5" ></text>
</g>
<g >
<title>operator delete (40,396,576 samples, 0.02%)</title><rect x="751.7" y="1013" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="754.71" y="1023.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (45,869,211 samples, 0.02%)</title><rect x="859.7" y="1045" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="862.74" y="1055.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (82,334,959 samples, 0.03%)</title><rect x="638.8" y="885" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="641.77" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (70,587,758 samples, 0.03%)</title><rect x="595.1" y="1013" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="598.08" y="1023.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,709,497,638 samples, 0.64%)</title><rect x="829.1" y="1525" width="7.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="832.06" y="1535.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (55,474,420 samples, 0.02%)</title><rect x="657.0" y="917" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="660.01" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (90,794,198 samples, 0.03%)</title><rect x="543.1" y="1285" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.13" y="1295.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (41,098,541 samples, 0.02%)</title><rect x="236.5" y="1029" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="239.47" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (55,767,178 samples, 0.02%)</title><rect x="378.7" y="1013" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="381.68" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (74,533,692 samples, 0.03%)</title><rect x="971.6" y="1269" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="974.60" y="1279.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (32,683,438 samples, 0.01%)</title><rect x="1160.0" y="1285" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1163.05" y="1295.5" ></text>
</g>
<g >
<title>do_epoll_ctl (56,434,665 samples, 0.02%)</title><rect x="971.7" y="1221" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="974.66" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (222,626,125 samples, 0.08%)</title><rect x="816.2" y="1077" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="819.21" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (26,442,293 samples, 0.01%)</title><rect x="1031.6" y="1029" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1034.60" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (62,187,896 samples, 0.02%)</title><rect x="619.1" y="1093" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="622.14" y="1103.5" ></text>
</g>
<g >
<title>__napi_poll (30,348,679 samples, 0.01%)</title><rect x="408.1" y="901" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="411.05" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (90,416,405 samples, 0.03%)</title><rect x="295.0" y="1157" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="298.03" y="1167.5" ></text>
</g>
<g >
<title>security_inode_alloc (150,246,133 samples, 0.06%)</title><rect x="1173.1" y="1285" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1176.10" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (127,585,188 samples, 0.05%)</title><rect x="154.2" y="1221" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="157.17" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (62,350,082 samples, 0.02%)</title><rect x="152.1" y="1685" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="155.07" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (511,627,560 samples, 0.19%)</title><rect x="875.0" y="1029" width="2.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="877.95" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (269,331,652 samples, 0.10%)</title><rect x="205.3" y="1285" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.28" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_write (525,517,478 samples, 0.20%)</title><rect x="1153.9" y="1189" width="2.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1156.91" y="1199.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (24,888,167 samples, 0.01%)</title><rect x="542.4" y="1333" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="545.38" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (37,285,588 samples, 0.01%)</title><rect x="620.0" y="1093" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="623.04" y="1103.5" ></text>
</g>
<g >
<title>irq_exit_rcu (22,870,840 samples, 0.01%)</title><rect x="143.6" y="1605" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="146.56" y="1615.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (64,947,141 samples, 0.02%)</title><rect x="486.6" y="1189" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="489.62" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,790,328,600 samples, 1.42%)</title><rect x="805.9" y="1205" width="16.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="808.90" y="1215.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (31,739,307 samples, 0.01%)</title><rect x="602.7" y="1045" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="605.69" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+= (37,360,228 samples, 0.01%)</title><rect x="896.0" y="1029" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="898.96" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,958,633 samples, 0.01%)</title><rect x="912.1" y="181" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.12" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_resize (32,011,104 samples, 0.01%)</title><rect x="62.7" y="1333" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="65.66" y="1343.5" ></text>
</g>
<g >
<title>operator delete (37,646,161 samples, 0.01%)</title><rect x="610.2" y="1013" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="613.23" y="1023.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (24,636,112 samples, 0.01%)</title><rect x="125.5" y="741" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="128.50" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (34,968,462 samples, 0.01%)</title><rect x="347.8" y="341" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="350.76" y="351.5" ></text>
</g>
<g >
<title>Channel::OnWrite (1,644,099,716 samples, 0.62%)</title><rect x="971.3" y="1541" width="7.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="974.34" y="1551.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (164,324,508 samples, 0.06%)</title><rect x="1146.0" y="1333" width="0.7" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1149.00" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (48,926,795 samples, 0.02%)</title><rect x="966.3" y="821" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.30" y="831.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (933,533,071 samples, 0.35%)</title><rect x="611.2" y="1093" width="4.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="614.21" y="1103.5" ></text>
</g>
<g >
<title>handle_softirqs (51,181,506 samples, 0.02%)</title><rect x="1141.3" y="1605" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1144.31" y="1615.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (135,387,208 samples, 0.05%)</title><rect x="816.6" y="1061" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="819.60" y="1071.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (32,487,109 samples, 0.01%)</title><rect x="615.2" y="1077" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="618.19" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_State&lt;char&gt; &gt;::construct&lt;std::__detail::_State&lt;char&gt;, std::__detail::_State&lt;char&gt; &gt; (24,670,370 samples, 0.01%)</title><rect x="11.2" y="1013" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="14.23" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (80,412,831 samples, 0.03%)</title><rect x="72.7" y="885" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="75.65" y="895.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,643,627,742 samples, 0.62%)</title><rect x="1113.6" y="1509" width="7.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1116.64" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,421,605,657 samples, 1.28%)</title><rect x="507.5" y="1077" width="15.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="510.48" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (27,744,892 samples, 0.01%)</title><rect x="204.7" y="1381" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="207.71" y="1391.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (28,473,724 samples, 0.01%)</title><rect x="481.0" y="1109" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="484.00" y="1119.5" ></text>
</g>
<g >
<title>down_write_killable (109,394,143 samples, 0.04%)</title><rect x="263.3" y="1285" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="266.31" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (250,563,914 samples, 0.09%)</title><rect x="63.0" y="1285" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.05" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (29,951,623 samples, 0.01%)</title><rect x="115.2" y="1093" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="118.16" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (209,160,257 samples, 0.08%)</title><rect x="918.0" y="901" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="921.03" y="911.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (172,348,290 samples, 0.06%)</title><rect x="829.1" y="1397" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="832.14" y="1407.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (42,756,994 samples, 0.02%)</title><rect x="268.9" y="837" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="271.92" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (22,801,980 samples, 0.01%)</title><rect x="524.1" y="1269" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="527.08" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (27,618,678 samples, 0.01%)</title><rect x="1087.7" y="1045" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1090.70" y="1055.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (23,475,534 samples, 0.01%)</title><rect x="117.6" y="1317" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="120.58" y="1327.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (247,717,931 samples, 0.09%)</title><rect x="659.9" y="1045" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="662.93" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (32,130,331 samples, 0.01%)</title><rect x="518.7" y="1045" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="521.72" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (10,559,014,132 samples, 3.95%)</title><rect x="437.5" y="1173" width="46.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="440.53" y="1183.5" >std:..</text>
</g>
<g >
<title>HttpResponse::GetFileType (23,905,837 samples, 0.01%)</title><rect x="261.2" y="1381" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="264.23" y="1391.5" ></text>
</g>
<g >
<title>nf_hook_slow (56,172,713 samples, 0.02%)</title><rect x="835.4" y="1109" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="838.40" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end (29,938,529 samples, 0.01%)</title><rect x="380.3" y="1061" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="383.32" y="1071.5" ></text>
</g>
<g >
<title>__strlen_avx2 (168,543,965 samples, 0.06%)</title><rect x="1126.5" y="1669" width="0.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1129.50" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,766,810,961 samples, 1.41%)</title><rect x="913.2" y="1125" width="16.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="916.21" y="1135.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (24,102,976 samples, 0.01%)</title><rect x="161.6" y="949" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="164.56" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (180,800,500 samples, 0.07%)</title><rect x="487.9" y="901" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.87" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (85,911,875 samples, 0.03%)</title><rect x="1054.7" y="693" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.65" y="703.5" ></text>
</g>
<g >
<title>[web-server] (43,412,296 samples, 0.02%)</title><rect x="933.3" y="1045" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="936.31" y="1055.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (67,222,373 samples, 0.03%)</title><rect x="204.3" y="1221" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="207.27" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (63,456,516 samples, 0.02%)</title><rect x="739.1" y="1061" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="742.15" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (36,649,596 samples, 0.01%)</title><rect x="813.1" y="1029" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="816.06" y="1039.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;,  (40,370,743 samples, 0.02%)</title><rect x="203.6" y="1285" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="206.59" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,470,878 samples, 0.01%)</title><rect x="1054.4" y="181" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.45" y="191.5" ></text>
</g>
<g >
<title>__GI___writev (494,562,994 samples, 0.19%)</title><rect x="1118.7" y="1445" width="2.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1121.72" y="1455.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (42,660,597 samples, 0.02%)</title><rect x="831.4" y="981" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="834.41" y="991.5" ></text>
</g>
<g >
<title>_int_free (354,046,558 samples, 0.13%)</title><rect x="419.7" y="1669" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="422.73" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (76,292,367 samples, 0.03%)</title><rect x="161.2" y="1093" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="164.19" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_less_val (42,116,719 samples, 0.02%)</title><rect x="160.3" y="1093" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="163.25" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (9,655,289,416 samples, 3.62%)</title><rect x="580.5" y="1125" width="42.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="583.53" y="1135.5" >std:..</text>
</g>
<g >
<title>HttpRouter::Route (648,520,000 samples, 0.24%)</title><rect x="685.4" y="1413" width="2.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="688.36" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="389" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_compile (11,993,244,279 samples, 4.49%)</title><rect x="64.8" y="1365" width="53.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="67.79" y="1375.5" >std::..</text>
</g>
<g >
<title>std::_Base_bitset&lt;4ul&gt;::_S_maskbit (52,610,688 samples, 0.02%)</title><rect x="58.0" y="1109" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="60.98" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (33,826,799 samples, 0.01%)</title><rect x="488.2" y="661" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="491.20" y="671.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (69,052,628 samples, 0.03%)</title><rect x="153.0" y="1333" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="155.96" y="1343.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (54,784,019 samples, 0.02%)</title><rect x="505.1" y="965" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="508.13" y="975.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (85,552,614 samples, 0.03%)</title><rect x="784.9" y="917" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="787.87" y="927.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (24,965,027,686 samples, 9.35%)</title><rect x="294.7" y="1429" width="110.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="297.70" y="1439.5" >HttpConn::OnP..</text>
</g>
<g >
<title>do_filp_open (67,179,416 samples, 0.03%)</title><rect x="416.8" y="1573" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="419.81" y="1583.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (56,713,390 samples, 0.02%)</title><rect x="796.1" y="1013" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="799.07" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (104,780,096 samples, 0.04%)</title><rect x="966.2" y="1301" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="969.24" y="1311.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (117,242,068 samples, 0.04%)</title><rect x="910.1" y="1333" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="913.10" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (59,166,290 samples, 0.02%)</title><rect x="11.6" y="1173" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="14.60" y="1183.5" ></text>
</g>
<g >
<title>x64_sys_call (39,971,391 samples, 0.01%)</title><rect x="718.3" y="1269" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="721.26" y="1279.5" ></text>
</g>
<g >
<title>__ip_finish_output (39,047,194 samples, 0.01%)</title><rect x="551.9" y="869" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="554.92" y="879.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (56,103,294 samples, 0.02%)</title><rect x="692.4" y="1061" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="695.37" y="1071.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (33,437,156 samples, 0.01%)</title><rect x="939.8" y="901" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="942.80" y="911.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (77,593,707 samples, 0.03%)</title><rect x="532.9" y="1029" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="535.85" y="1039.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (40,266,468 samples, 0.02%)</title><rect x="1108.1" y="1221" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1111.07" y="1231.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (30,886,156 samples, 0.01%)</title><rect x="627.7" y="1253" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="630.67" y="1263.5" ></text>
</g>
<g >
<title>[web-server] (38,119,346 samples, 0.01%)</title><rect x="527.2" y="1077" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="530.24" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,370,939 samples, 0.02%)</title><rect x="205.5" y="725" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.50" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (611,488,937 samples, 0.23%)</title><rect x="89.5" y="1029" width="2.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="92.52" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (10,607,287,724 samples, 3.97%)</title><rect x="579.5" y="1237" width="46.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="582.51" y="1247.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (134,245,244 samples, 0.05%)</title><rect x="295.5" y="1221" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="298.51" y="1231.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (57,912,694 samples, 0.02%)</title><rect x="465.7" y="1013" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="468.73" y="1023.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (61,613,907 samples, 0.02%)</title><rect x="374.2" y="917" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="377.21" y="927.5" ></text>
</g>
<g >
<title>malloc (635,586,792 samples, 0.24%)</title><rect x="148.4" y="1685" width="2.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="151.45" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,468,219 samples, 0.01%)</title><rect x="487.9" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.93" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (64,735,562 samples, 0.02%)</title><rect x="400.7" y="901" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="403.72" y="911.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (29,113,551 samples, 0.01%)</title><rect x="1095.9" y="1077" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1098.85" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (79,531,229 samples, 0.03%)</title><rect x="763.4" y="1093" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="766.42" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (39,109,585 samples, 0.01%)</title><rect x="824.5" y="1397" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="827.52" y="1407.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (44,859,279 samples, 0.02%)</title><rect x="236.7" y="1013" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="239.72" y="1023.5" ></text>
</g>
<g >
<title>x64_sys_call (343,780,396 samples, 0.13%)</title><rect x="1111.2" y="1349" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1114.16" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (27,165,179 samples, 0.01%)</title><rect x="684.1" y="341" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="687.05" y="351.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (75,604,415 samples, 0.03%)</title><rect x="239.8" y="1093" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="242.83" y="1103.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (545,661,363 samples, 0.20%)</title><rect x="1028.0" y="997" width="2.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1030.96" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (136,947,837 samples, 0.05%)</title><rect x="11.5" y="1237" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="14.47" y="1247.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (900,865,887 samples, 0.34%)</title><rect x="1114.6" y="1365" width="3.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1117.56" y="1375.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (24,271,898 samples, 0.01%)</title><rect x="611.0" y="1093" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="614.01" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (43,959,913 samples, 0.02%)</title><rect x="491.9" y="949" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="494.86" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,681,778,489 samples, 1.38%)</title><rect x="224.3" y="1125" width="16.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="227.34" y="1135.5" ></text>
</g>
<g >
<title>do_syscall_64 (424,812,348 samples, 0.16%)</title><rect x="694.0" y="1413" width="1.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="697.02" y="1423.5" ></text>
</g>
<g >
<title>__fput_sync (297,152,742 samples, 0.11%)</title><rect x="268.1" y="1125" width="1.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="271.09" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (198,509,006 samples, 0.07%)</title><rect x="911.5" y="1045" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.55" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (40,037,773 samples, 0.01%)</title><rect x="930.0" y="1109" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="933.04" y="1119.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (27,217,308,758 samples, 10.19%)</title><rect x="152.8" y="1685" width="120.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="155.79" y="1695.5" >[libstdc++.so...</text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (33,706,580 samples, 0.01%)</title><rect x="542.7" y="1189" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="545.73" y="1199.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (118,688,943 samples, 0.04%)</title><rect x="910.1" y="1365" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="913.10" y="1375.5" ></text>
</g>
<g >
<title>__napi_poll (49,292,514 samples, 0.02%)</title><rect x="1141.3" y="1573" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1144.31" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,470,856 samples, 0.01%)</title><rect x="347.3" y="341" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.30" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (264,441,504 samples, 0.10%)</title><rect x="347.1" y="1253" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.10" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (31,996,939 samples, 0.01%)</title><rect x="671.0" y="1013" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="673.99" y="1023.5" ></text>
</g>
<g >
<title>sock_write_iter (409,193,953 samples, 0.15%)</title><rect x="834.6" y="1301" width="1.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="837.63" y="1311.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (72,456,648 samples, 0.03%)</title><rect x="678.3" y="1061" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="681.28" y="1071.5" ></text>
</g>
<g >
<title>__dynamic_cast (48,420,000 samples, 0.02%)</title><rect x="950.8" y="1077" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="953.79" y="1087.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (83,553,235 samples, 0.03%)</title><rect x="1115.8" y="1045" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1118.81" y="1055.5" ></text>
</g>
<g >
<title>std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;*, std::vector&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt;, std::allocator&lt;std::shared_ptr&lt;TimerManager::TimerNode&gt; &gt; &gt; &gt;, TimerManager::TimerCmp&gt; (37,988,602 samples, 0.01%)</title><rect x="131.1" y="1525" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="134.12" y="1535.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (400,064,101 samples, 0.15%)</title><rect x="552.9" y="1317" width="1.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="555.93" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (25,393,847 samples, 0.01%)</title><rect x="556.9" y="1381" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11,479,278,998 samples, 4.30%)</title><rect x="772.3" y="1333" width="50.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="775.33" y="1343.5" >std::..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (2,127,856,722 samples, 0.80%)</title><rect x="32.2" y="1077" width="9.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="35.21" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="629" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="639.5" ></text>
</g>
<g >
<title>__tcp_close (156,959,160 samples, 0.06%)</title><rect x="551.6" y="1029" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="554.57" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::str (25,704,039 samples, 0.01%)</title><rect x="1053.6" y="1365" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1056.64" y="1375.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (57,755,628 samples, 0.02%)</title><rect x="514.1" y="1013" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="517.08" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,986,453 samples, 0.01%)</title><rect x="684.0" y="485" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.04" y="495.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (24,626,341 samples, 0.01%)</title><rect x="756.7" y="1077" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="759.67" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::base (23,619,917 samples, 0.01%)</title><rect x="443.0" y="1077" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="445.99" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (112,837,179 samples, 0.04%)</title><rect x="233.9" y="1013" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="236.85" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (111,176,587 samples, 0.04%)</title><rect x="402.6" y="1365" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="405.59" y="1375.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (25,018,832 samples, 0.01%)</title><rect x="468.9" y="1045" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="471.92" y="1055.5" ></text>
</g>
<g >
<title>exc_page_fault (95,106,076 samples, 0.04%)</title><rect x="270.3" y="1189" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="273.26" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (411,195,640 samples, 0.15%)</title><rect x="770.1" y="1349" width="1.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="773.11" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (37,027,835 samples, 0.01%)</title><rect x="488.4" y="373" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="491.38" y="383.5" ></text>
</g>
<g >
<title>do_mmap (181,937,060 samples, 0.07%)</title><rect x="403.4" y="1285" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="406.40" y="1295.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (24,281,862 samples, 0.01%)</title><rect x="1161.2" y="1285" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1164.25" y="1295.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (68,726,506 samples, 0.03%)</title><rect x="1066.3" y="901" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1069.28" y="911.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::erase (28,665,156 samples, 0.01%)</title><rect x="124.1" y="1301" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="127.08" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (47,753,819 samples, 0.02%)</title><rect x="365.1" y="1141" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="368.09" y="1151.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (24,292,256 samples, 0.01%)</title><rect x="1012.7" y="1077" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1015.67" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (30,628,006 samples, 0.01%)</title><rect x="771.0" y="485" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.97" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (48,661,908 samples, 0.02%)</title><rect x="434.8" y="1301" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="437.85" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,202,032,536 samples, 1.20%)</title><rect x="1056.6" y="965" width="14.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1059.61" y="975.5" ></text>
</g>
<g >
<title>netvsc_send (24,529,241 samples, 0.01%)</title><rect x="271.3" y="981" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="274.30" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,721,255 samples, 0.01%)</title><rect x="205.5" y="389" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="208.54" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (27,122,733,743 samples, 10.16%)</title><rect x="294.2" y="1605" width="119.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="297.17" y="1615.5" >std::__invoke_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,690,357 samples, 0.02%)</title><rect x="347.7" y="421" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.75" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (233,479,785 samples, 0.09%)</title><rect x="1054.2" y="1285" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.19" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (100,644,479 samples, 0.04%)</title><rect x="477.6" y="1093" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="480.59" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (36,932,532 samples, 0.01%)</title><rect x="684.0" y="597" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="687.04" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (24,158,699 samples, 0.01%)</title><rect x="1107.1" y="1125" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1110.06" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (237,844,119 samples, 0.09%)</title><rect x="211.9" y="917" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="214.85" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (86,255,995 samples, 0.03%)</title><rect x="405.9" y="1285" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="408.94" y="1295.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (126,398,382 samples, 0.05%)</title><rect x="402.6" y="1397" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="405.56" y="1407.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (54,862,104 samples, 0.02%)</title><rect x="496.6" y="901" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="499.62" y="911.5" ></text>
</g>
<g >
<title>HttpResponse::SetContentFromFile (88,381,452 samples, 0.03%)</title><rect x="119.8" y="1397" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.78" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (23,171,281 samples, 0.01%)</title><rect x="838.6" y="1333" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1343.5" ></text>
</g>
<g >
<title>x64_sys_call (32,499,931 samples, 0.01%)</title><rect x="1121.1" y="1413" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1124.15" y="1423.5" ></text>
</g>
<g >
<title>std::function&lt;void  (164,168,215 samples, 0.06%)</title><rect x="971.4" y="1381" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="974.44" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (39,070,684 samples, 0.01%)</title><rect x="861.3" y="1253" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="864.28" y="1263.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; (48,576,682 samples, 0.02%)</title><rect x="965.8" y="1285" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="968.77" y="1295.5" ></text>
</g>
<g >
<title>x64_sys_call (340,400,896 samples, 0.13%)</title><rect x="686.6" y="1349" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="689.64" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (25,684,635 samples, 0.01%)</title><rect x="88.6" y="1029" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="91.60" y="1039.5" ></text>
</g>
<g >
<title>do_iter_write (421,837,652 samples, 0.16%)</title><rect x="1119.0" y="1333" width="1.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1121.96" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (56,914,237 samples, 0.02%)</title><rect x="504.1" y="949" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="507.08" y="959.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (139,597,636 samples, 0.05%)</title><rect x="1108.3" y="1381" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1111.34" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (44,955,350 samples, 0.02%)</title><rect x="1054.4" y="645" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.42" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (25,771,327 samples, 0.01%)</title><rect x="1109.1" y="1333" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1112.07" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (26,839,622 samples, 0.01%)</title><rect x="488.2" y="517" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="491.22" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (31,795,111 samples, 0.01%)</title><rect x="629.8" y="549" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.78" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (70,048,220 samples, 0.03%)</title><rect x="339.5" y="1093" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="342.49" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (105,676,735 samples, 0.04%)</title><rect x="966.2" y="1317" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="969.23" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (62,221,405 samples, 0.02%)</title><rect x="477.3" y="1093" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="480.31" y="1103.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (51,393,614 samples, 0.02%)</title><rect x="400.2" y="1317" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="403.16" y="1327.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (60,841,176 samples, 0.02%)</title><rect x="62.0" y="1189" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="64.99" y="1199.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (113,683,111 samples, 0.04%)</title><rect x="189.9" y="1061" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="192.93" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,372,987,958 samples, 1.26%)</title><rect x="65.3" y="981" width="14.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="68.31" y="991.5" ></text>
</g>
<g >
<title>std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt; (411,804,571 samples, 0.15%)</title><rect x="628.9" y="1381" width="1.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="631.88" y="1391.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (47,058,445 samples, 0.02%)</title><rect x="691.7" y="1077" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="694.72" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (24,264,541 samples, 0.01%)</title><rect x="192.3" y="1061" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="195.32" y="1071.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;false&gt;::__uninit_default_n&lt;std::pair&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int&gt;*, unsigned long&gt; (26,703,782 samples, 0.01%)</title><rect x="911.3" y="1253" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="914.27" y="1263.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (199,836,714 samples, 0.07%)</title><rect x="108.3" y="1013" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="111.34" y="1023.5" ></text>
</g>
<g >
<title>tcp_send_fin (151,270,911 samples, 0.06%)</title><rect x="127.0" y="1013" width="0.6" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="129.96" y="1023.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (190,081,144 samples, 0.07%)</title><rect x="614.3" y="1061" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="617.27" y="1071.5" ></text>
</g>
<g >
<title>Channel::OnWrite (1,540,050,439 samples, 0.58%)</title><rect x="548.1" y="1541" width="6.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="551.05" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (42,803,615 samples, 0.02%)</title><rect x="259.9" y="789" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="262.89" y="799.5" ></text>
</g>
<g >
<title>std::function&lt;void  (832,509,124 samples, 0.31%)</title><rect x="124.3" y="1413" width="3.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="127.28" y="1423.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (60,827,942 samples, 0.02%)</title><rect x="965.7" y="1333" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="968.73" y="1343.5" ></text>
</g>
<g >
<title>unmap_region.constprop.0 (151,174,834 samples, 0.06%)</title><rect x="550.0" y="1061" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="552.95" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (54,831,856 samples, 0.02%)</title><rect x="778.4" y="933" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="781.39" y="943.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,646,452,312 samples, 0.62%)</title><rect x="1113.6" y="1525" width="7.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1116.63" y="1535.5" ></text>
</g>
<g >
<title>do_filp_open (68,586,041 samples, 0.03%)</title><rect x="1124.7" y="1573" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1127.72" y="1583.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (27,372,502,451 samples, 10.25%)</title><rect x="858.8" y="1685" width="120.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="861.79" y="1695.5" >[libstdc++.so.6..</text>
</g>
<g >
<title>__dev_queue_xmit (65,740,412 samples, 0.02%)</title><rect x="977.7" y="1061" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="980.75" y="1071.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (25,650,167 samples, 0.01%)</title><rect x="104.9" y="997" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="107.92" y="1007.5" ></text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (112,711,377 samples, 0.04%)</title><rect x="413.1" y="1557" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="416.06" y="1567.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (25,755,012 samples, 0.01%)</title><rect x="306.1" y="1077" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="309.05" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (69,160,535 samples, 0.03%)</title><rect x="91.9" y="997" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="94.89" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,586,357 samples, 0.03%)</title><rect x="684.0" y="1189" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="686.96" y="1199.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (23,558,225 samples, 0.01%)</title><rect x="890.9" y="1061" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="893.89" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (41,287,961 samples, 0.02%)</title><rect x="488.4" y="421" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.37" y="431.5" ></text>
</g>
<g >
<title>__sock_release (189,240,563 samples, 0.07%)</title><rect x="692.7" y="1077" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="695.66" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (71,205,845 samples, 0.03%)</title><rect x="435.5" y="1125" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="438.52" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (131,342,775 samples, 0.05%)</title><rect x="307.9" y="1077" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="310.91" y="1087.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (4,423,532,945 samples, 1.66%)</title><rect x="1144.1" y="1461" width="19.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1147.07" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (35,546,577 samples, 0.01%)</title><rect x="1003.2" y="1237" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1006.20" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (22,762,450 samples, 0.01%)</title><rect x="777.7" y="869" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="780.69" y="879.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (67,064,920 samples, 0.03%)</title><rect x="859.0" y="1381" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="861.98" y="1391.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (71,114,443 samples, 0.03%)</title><rect x="434.8" y="1381" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="437.82" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (23,052,238 samples, 0.01%)</title><rect x="627.3" y="1317" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="630.27" y="1327.5" ></text>
</g>
<g >
<title>release_sock (34,102,968 samples, 0.01%)</title><rect x="1171.5" y="1333" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1174.49" y="1343.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (27,422,297,457 samples, 10.27%)</title><rect x="10.3" y="1605" width="121.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="13.29" y="1615.5" >std::__invoke_i..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (266,658,308 samples, 0.10%)</title><rect x="757.8" y="1061" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="760.83" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (59,695,060 samples, 0.02%)</title><rect x="154.3" y="1173" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="157.30" y="1183.5" ></text>
</g>
<g >
<title>mas_store_gfp (31,463,537 samples, 0.01%)</title><rect x="690.7" y="1061" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="693.73" y="1071.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (25,647,170,668 samples, 9.60%)</title><rect x="434.7" y="1477" width="113.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="437.72" y="1487.5" >std::__invoke_..</text>
</g>
<g >
<title>perf_event_mmap (56,110,661 samples, 0.02%)</title><rect x="403.8" y="1253" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="406.78" y="1263.5" ></text>
</g>
<g >
<title>hyperv_flush_tlb_multi (54,225,198 samples, 0.02%)</title><rect x="1115.9" y="1013" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1118.87" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,925,980 samples, 0.02%)</title><rect x="912.1" y="549" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="915.06" y="559.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (23,301,251 samples, 0.01%)</title><rect x="549.1" y="1173" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="552.07" y="1183.5" ></text>
</g>
<g >
<title>irq_exit_rcu (39,314,837 samples, 0.01%)</title><rect x="716.3" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="719.29" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,581,672,344 samples, 3.96%)</title><rect x="579.6" y="1221" width="46.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="582.61" y="1231.5" >std:..</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (106,722,435 samples, 0.04%)</title><rect x="910.1" y="1301" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="913.13" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::~_NFA (84,179,884 samples, 0.03%)</title><rect x="1053.1" y="1253" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1056.10" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (53,654,983 samples, 0.02%)</title><rect x="436.5" y="1189" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="439.50" y="1199.5" ></text>
</g>
<g >
<title>operator delete (38,648,533 samples, 0.01%)</title><rect x="327.8" y="1013" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="330.83" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (3,187,830,048 samples, 1.19%)</title><rect x="1122.0" y="1685" width="14.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1125.05" y="1695.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (38,737,647 samples, 0.01%)</title><rect x="486.7" y="1141" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="489.72" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (37,393,153 samples, 0.01%)</title><rect x="911.6" y="517" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.62" y="527.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (865,839,983 samples, 0.32%)</title><rect x="265.8" y="1365" width="3.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="268.78" y="1375.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;,  (43,694,281 samples, 0.02%)</title><rect x="1052.5" y="1285" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1055.49" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (55,041,651 samples, 0.02%)</title><rect x="484.4" y="1157" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="487.38" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (254,957,200 samples, 0.10%)</title><rect x="347.1" y="1189" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.13" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (27,850,446 samples, 0.01%)</title><rect x="756.4" y="1013" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="759.40" y="1023.5" ></text>
</g>
<g >
<title>perf_iterate_sb (24,327,085 samples, 0.01%)</title><rect x="827.1" y="1237" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="830.15" y="1247.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (52,134,150 samples, 0.02%)</title><rect x="719.0" y="1077" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="722.01" y="1087.5" ></text>
</g>
<g >
<title>netvsc_xmit (27,747,900 samples, 0.01%)</title><rect x="1120.2" y="997" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1123.19" y="1007.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;HttpConn::HttpConn (28,192,234 samples, 0.01%)</title><rect x="1158.5" y="1253" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1161.55" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (97,743,250 samples, 0.04%)</title><rect x="370.4" y="981" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="373.36" y="991.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (51,806,049 samples, 0.02%)</title><rect x="821.8" y="1109" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="824.80" y="1119.5" ></text>
</g>
<g >
<title>__mmap (349,629,977 samples, 0.13%)</title><rect x="120.9" y="1397" width="1.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="123.94" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (48,926,795 samples, 0.02%)</title><rect x="966.3" y="805" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="969.30" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (84,590,423 samples, 0.03%)</title><rect x="1045.2" y="1077" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1048.24" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (208,064,715 samples, 0.08%)</title><rect x="205.4" y="1093" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.42" y="1103.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (35,270,288 samples, 0.01%)</title><rect x="292.4" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="295.45" y="1631.5" ></text>
</g>
<g >
<title>ip_list_rcv (25,735,128 samples, 0.01%)</title><rect x="408.1" y="821" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="411.05" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (25,404,651 samples, 0.01%)</title><rect x="730.2" y="1077" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="733.21" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (281,272,045 samples, 0.11%)</title><rect x="134.8" y="1653" width="1.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="137.83" y="1663.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (147,910,942 samples, 0.06%)</title><rect x="704.4" y="1669" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="707.44" y="1679.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (649,466,270 samples, 0.24%)</title><rect x="612.2" y="1077" width="2.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="615.24" y="1087.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (26,502,578 samples, 0.01%)</title><rect x="266.0" y="1173" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="268.96" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (97,703,416 samples, 0.04%)</title><rect x="1108.5" y="1317" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1111.50" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (68,036,895 samples, 0.03%)</title><rect x="966.3" y="1045" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="969.28" y="1055.5" ></text>
</g>
<g >
<title>inet_sendmsg (398,555,151 samples, 0.15%)</title><rect x="270.0" y="1285" width="1.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="273.05" y="1295.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (140,259,664 samples, 0.05%)</title><rect x="409.6" y="997" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="412.59" y="1007.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (57,108,697 samples, 0.02%)</title><rect x="960.7" y="1061" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="963.71" y="1071.5" ></text>
</g>
<g >
<title>__vm_munmap (344,423,782 samples, 0.13%)</title><rect x="973.0" y="1109" width="1.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="975.99" y="1119.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (25,529,317 samples, 0.01%)</title><rect x="1175.8" y="1285" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1178.79" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (155,135,362 samples, 0.06%)</title><rect x="857.2" y="1685" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="860.22" y="1695.5" ></text>
</g>
<g >
<title>vfs_open (26,037,735 samples, 0.01%)</title><rect x="982.5" y="1541" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="985.50" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (25,079,901 samples, 0.01%)</title><rect x="62.4" y="1381" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="65.43" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,637,394,968 samples, 1.36%)</title><rect x="789.2" y="1125" width="16.0" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="792.16" y="1135.5" ></text>
</g>
<g >
<title>get_unmapped_area (35,669,873 samples, 0.01%)</title><rect x="545.6" y="1269" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="548.60" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (26,353,759 samples, 0.01%)</title><rect x="869.4" y="1061" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="872.36" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (31,053,969 samples, 0.01%)</title><rect x="155.2" y="1237" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="158.19" y="1247.5" ></text>
</g>
<g >
<title>__fput (31,652,643 samples, 0.01%)</title><rect x="266.2" y="1077" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="269.24" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_end (77,156,103 samples, 0.03%)</title><rect x="435.5" y="1189" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="438.51" y="1199.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt; &gt; (30,539,647 samples, 0.01%)</title><rect x="1108.1" y="1173" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1111.09" y="1183.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (127,974,492 samples, 0.05%)</title><rect x="551.7" y="997" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="554.68" y="1007.5" ></text>
</g>
<g >
<title>read (136,399,384 samples, 0.05%)</title><rect x="970.7" y="1445" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="973.74" y="1455.5" ></text>
</g>
<g >
<title>std::function&lt;void  (59,308,554 samples, 0.02%)</title><rect x="10.4" y="1397" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="13.44" y="1407.5" ></text>
</g>
<g >
<title>HttpResponse::SetHeader (38,210,754 samples, 0.01%)</title><rect x="825.6" y="1381" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="828.57" y="1391.5" ></text>
</g>
<g >
<title>sock_alloc (443,582,834 samples, 0.17%)</title><rect x="1172.5" y="1349" width="2.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1175.53" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator (34,764,848 samples, 0.01%)</title><rect x="55.8" y="1077" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="58.85" y="1087.5" ></text>
</g>
<g >
<title>operator delete (42,182,077 samples, 0.02%)</title><rect x="186.3" y="1013" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="189.32" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (34,146,080 samples, 0.01%)</title><rect x="309.7" y="1061" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="312.69" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (35,509,736 samples, 0.01%)</title><rect x="63.7" y="453" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.69" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (212,683,800 samples, 0.08%)</title><rect x="939.3" y="981" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="942.26" y="991.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (245,411,276 samples, 0.09%)</title><rect x="700.3" y="1669" width="1.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="703.31" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (10,580,930,594 samples, 3.96%)</title><rect x="297.1" y="1221" width="46.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="300.13" y="1231.5" >std:..</text>
</g>
<g >
<title>std::__invoke_r&lt;void, Server::HandlerNewConn (812,756,694 samples, 0.30%)</title><rect x="549.0" y="1381" width="3.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="551.97" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (37,268,057 samples, 0.01%)</title><rect x="205.5" y="437" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.53" y="447.5" ></text>
</g>
<g >
<title>do_iter_write (412,146,700 samples, 0.15%)</title><rect x="128.4" y="1333" width="1.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="131.38" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (36,061,633 samples, 0.01%)</title><rect x="164.6" y="1077" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="167.63" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (23,439,279 samples, 0.01%)</title><rect x="830.1" y="1125" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="833.14" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (79,299,602 samples, 0.03%)</title><rect x="197.8" y="1093" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="200.83" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (26,556,851 samples, 0.01%)</title><rect x="962.7" y="1093" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="965.69" y="1103.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*&gt; (57,917,307 samples, 0.02%)</title><rect x="628.3" y="1205" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="631.31" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (24,167,778 samples, 0.01%)</title><rect x="601.5" y="1029" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="604.53" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (83,941,040 samples, 0.03%)</title><rect x="400.7" y="1205" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="403.69" y="1215.5" ></text>
</g>
<g >
<title>ip_local_out (97,969,335 samples, 0.04%)</title><rect x="833.2" y="917" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="836.19" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (58,348,450 samples, 0.02%)</title><rect x="170.9" y="1013" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="173.91" y="1023.5" ></text>
</g>
<g >
<title>handle_softirqs (24,257,110 samples, 0.01%)</title><rect x="285.0" y="1573" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="288.05" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_line_begin (23,549,147 samples, 0.01%)</title><rect x="485.2" y="1269" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="488.23" y="1279.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (52,217,219 samples, 0.02%)</title><rect x="768.7" y="1333" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="771.69" y="1343.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (91,463,909 samples, 0.03%)</title><rect x="407.9" y="1045" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="410.91" y="1055.5" ></text>
</g>
<g >
<title>std::function&lt;void  (120,592,541 samples, 0.05%)</title><rect x="696.0" y="1541" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="698.97" y="1551.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;ProtocolHandler,  (871,652,851 samples, 0.33%)</title><rect x="972.3" y="1317" width="3.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="975.28" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (52,371,747 samples, 0.02%)</title><rect x="770.7" y="677" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="773.68" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,110,199 samples, 0.01%)</title><rect x="205.5" y="533" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.53" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (34,210,429 samples, 0.01%)</title><rect x="771.0" y="549" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.97" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (31,876,656 samples, 0.01%)</title><rect x="684.0" y="501" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="687.04" y="511.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (26,399,222 samples, 0.01%)</title><rect x="676.7" y="1013" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="679.66" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (182,232,175 samples, 0.07%)</title><rect x="911.6" y="885" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.59" y="895.5" ></text>
</g>
<g >
<title>std::function&lt;void  (105,069,904 samples, 0.04%)</title><rect x="413.1" y="1541" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="416.06" y="1551.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (109,186,350 samples, 0.04%)</title><rect x="556.0" y="1669" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="559.04" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (23,736,544 samples, 0.01%)</title><rect x="303.1" y="949" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="306.10" y="959.5" ></text>
</g>
<g >
<title>__fput (25,750,375 samples, 0.01%)</title><rect x="690.4" y="1077" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="693.39" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,917,786 samples, 0.01%)</title><rect x="63.3" y="389" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.26" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (28,851,437 samples, 0.01%)</title><rect x="1103.2" y="1077" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1106.22" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,539,504,438 samples, 1.33%)</title><rect x="948.1" y="1125" width="15.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="951.14" y="1135.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (364,983,369 samples, 0.14%)</title><rect x="609.1" y="1061" width="1.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="612.13" y="1071.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (22,933,106 samples, 0.01%)</title><rect x="991.5" y="1477" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="994.55" y="1487.5" ></text>
</g>
<g >
<title>Server::HandlerNewConn (897,425,307 samples, 0.34%)</title><rect x="972.2" y="1349" width="4.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="975.25" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (54,756,841 samples, 0.02%)</title><rect x="684.0" y="837" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="687.00" y="847.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (27,788,688 samples, 0.01%)</title><rect x="922.2" y="789" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="925.20" y="799.5" ></text>
</g>
<g >
<title>HttpConn::HandleRead (25,298,529,757 samples, 9.47%)</title><rect x="858.9" y="1445" width="111.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="861.92" y="1455.5" >HttpConn::Han..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (54,183,395 samples, 0.02%)</title><rect x="1096.4" y="1077" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1099.43" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (67,887,341 samples, 0.03%)</title><rect x="543.2" y="1045" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="546.18" y="1055.5" ></text>
</g>
<g >
<title>ip_local_out (98,513,910 samples, 0.04%)</title><rect x="409.6" y="917" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="412.65" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (107,090,722 samples, 0.04%)</title><rect x="558.1" y="1653" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="561.12" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,730,220,940 samples, 1.40%)</title><rect x="64.9" y="1141" width="16.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="67.91" y="1151.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (946,539,669 samples, 0.35%)</title><rect x="830.0" y="1397" width="4.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="832.98" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,638,293,965 samples, 1.36%)</title><rect x="207.3" y="1045" width="16.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="210.27" y="1055.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (25,110,647 samples, 0.01%)</title><rect x="498.5" y="789" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="501.50" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (26,196,716 samples, 0.01%)</title><rect x="1074.6" y="1061" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1077.65" y="1071.5" ></text>
</g>
<g >
<title>irq_exit_rcu (30,463,932 samples, 0.01%)</title><rect x="999.1" y="1637" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1002.13" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,849,969,433 samples, 1.44%)</title><rect x="647.9" y="1221" width="17.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="650.87" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (27,418,699 samples, 0.01%)</title><rect x="504.3" y="949" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="507.34" y="959.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (170,178,538 samples, 0.06%)</title><rect x="835.3" y="1189" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="838.32" y="1199.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (41,840,874 samples, 0.02%)</title><rect x="575.1" y="1621" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="578.07" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (207,343,939 samples, 0.08%)</title><rect x="487.8" y="1109" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.82" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (26,053,580 samples, 0.01%)</title><rect x="771.0" y="405" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.98" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (24,578,080 samples, 0.01%)</title><rect x="1107.1" y="1157" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1110.06" y="1167.5" ></text>
</g>
<g >
<title>_int_free (361,678,599 samples, 0.14%)</title><rect x="985.4" y="1669" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="988.41" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (84,559,729 samples, 0.03%)</title><rect x="11.1" y="1221" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="14.08" y="1231.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::erase (26,997,355 samples, 0.01%)</title><rect x="689.7" y="1301" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="692.66" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (219,135,304 samples, 0.08%)</title><rect x="347.2" y="1109" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.18" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (136,531,595 samples, 0.05%)</title><rect x="585.8" y="1093" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="588.75" y="1103.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (23,658,189 samples, 0.01%)</title><rect x="854.3" y="1669" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="857.30" y="1679.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (25,585,155,612 samples, 9.58%)</title><rect x="10.4" y="1461" width="113.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="13.37" y="1471.5" >HttpConn::Htt..</text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (53,723,163 samples, 0.02%)</title><rect x="910.3" y="1157" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="913.30" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,727,775,282 samples, 1.40%)</title><rect x="913.3" y="1077" width="16.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="916.27" y="1087.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (88,169,093 samples, 0.03%)</title><rect x="1144.3" y="1397" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1147.32" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (10,068,695,482 samples, 3.77%)</title><rect x="721.5" y="1141" width="44.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="724.48" y="1151.5" >std:..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (90,970,275 samples, 0.03%)</title><rect x="760.7" y="1093" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="763.66" y="1103.5" ></text>
</g>
<g >
<title>ip_finish_output (47,606,195 samples, 0.02%)</title><rect x="127.3" y="885" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="130.26" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (59,292,440 samples, 0.02%)</title><rect x="781.8" y="885" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="784.79" y="895.5" ></text>
</g>
<g >
<title>sock_write_iter (408,630,251 samples, 0.15%)</title><rect x="270.0" y="1301" width="1.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="273.02" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (31,214,731 samples, 0.01%)</title><rect x="239.5" y="1061" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="242.50" y="1071.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,194,394,775 samples, 0.45%)</title><rect x="1180.6" y="1573" width="5.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1183.56" y="1583.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (61,218,678 samples, 0.02%)</title><rect x="468.2" y="1013" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="471.22" y="1023.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::DelChannel (177,587,654 samples, 0.07%)</title><rect x="405.8" y="1333" width="0.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="408.80" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (1,943,004,903 samples, 0.73%)</title><rect x="492.1" y="949" width="8.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="495.07" y="959.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35,550,666 samples, 0.01%)</title><rect x="413.3" y="1445" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="416.26" y="1455.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (82,879,431 samples, 0.03%)</title><rect x="859.0" y="1429" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="861.96" y="1439.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (25,285,109 samples, 0.01%)</title><rect x="64.6" y="1349" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="67.56" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (81,730,510 samples, 0.03%)</title><rect x="436.5" y="1237" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="439.49" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (24,542,371 samples, 0.01%)</title><rect x="1051.6" y="1237" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1054.63" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (276,456,954 samples, 0.10%)</title><rect x="551.2" y="1173" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="554.16" y="1183.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (33,507,709 samples, 0.01%)</title><rect x="1170.6" y="1141" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1173.57" y="1151.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::is (31,110,843 samples, 0.01%)</title><rect x="84.3" y="1045" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="87.27" y="1055.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (55,442,315 samples, 0.02%)</title><rect x="10.4" y="1333" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="13.45" y="1343.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;HttpConn&gt; &gt;::destroy&lt;HttpConn&gt; (857,495,315 samples, 0.32%)</title><rect x="1114.6" y="1237" width="3.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1117.65" y="1247.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (27,208,287,959 samples, 10.19%)</title><rect x="576.8" y="1605" width="120.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="579.81" y="1615.5" >std::__invoke_..</text>
</g>
<g >
<title>HttpConn::Close (1,095,697,568 samples, 0.41%)</title><rect x="1113.7" y="1429" width="4.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1116.71" y="1439.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (55,505,905 samples, 0.02%)</title><rect x="522.9" y="1077" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="525.92" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,910,073 samples, 0.01%)</title><rect x="1054.4" y="453" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.43" y="463.5" ></text>
</g>
<g >
<title>__close (358,911,331 samples, 0.13%)</title><rect x="832.5" y="1205" width="1.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="835.45" y="1215.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (34,714,213 samples, 0.01%)</title><rect x="313.9" y="1077" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="316.91" y="1087.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (104,728,334 samples, 0.04%)</title><rect x="1053.0" y="1317" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1056.04" y="1327.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (23,633,028 samples, 0.01%)</title><rect x="747.2" y="1045" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="750.21" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (75,140,082 samples, 0.03%)</title><rect x="1055.5" y="1365" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1058.48" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (40,544,469 samples, 0.02%)</title><rect x="423.2" y="1653" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="426.19" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (55,495,093 samples, 0.02%)</title><rect x="543.2" y="869" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="546.21" y="879.5" ></text>
</g>
<g >
<title>path_openat (77,335,790 samples, 0.03%)</title><rect x="134.3" y="1557" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="137.31" y="1567.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, HttpConn::HttpConn (1,532,141,665 samples, 0.57%)</title><rect x="548.1" y="1493" width="6.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="551.08" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,708,221,565 samples, 1.39%)</title><rect x="207.1" y="1157" width="16.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="210.14" y="1167.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (42,095,368 samples, 0.02%)</title><rect x="967.1" y="1381" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="970.09" y="1391.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (24,771,210 samples, 0.01%)</title><rect x="603.0" y="1029" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="606.01" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (32,654,376 samples, 0.01%)</title><rect x="347.6" y="517" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="350.55" y="527.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (93,366,979 samples, 0.03%)</title><rect x="553.2" y="1205" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="556.21" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,650,152 samples, 0.01%)</title><rect x="1054.7" y="421" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.68" y="431.5" ></text>
</g>
<g >
<title>sch_direct_xmit (29,664,802 samples, 0.01%)</title><rect x="127.3" y="821" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="130.33" y="831.5" ></text>
</g>
<g >
<title>__strxfrm_l (229,791,122 samples, 0.09%)</title><rect x="850.6" y="1653" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="853.63" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (31,970,758 samples, 0.01%)</title><rect x="367.3" y="1061" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="370.29" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7,554,100,023 samples, 2.83%)</title><rect x="348.9" y="1285" width="33.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="351.91" y="1295.5" >st..</text>
</g>
<g >
<title>__dynamic_cast (81,847,378 samples, 0.03%)</title><rect x="1126.1" y="1637" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1129.07" y="1647.5" ></text>
</g>
<g >
<title>__ip_local_out (36,604,070 samples, 0.01%)</title><rect x="127.1" y="901" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="130.09" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (171,996,824 samples, 0.06%)</title><rect x="465.3" y="1029" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="468.34" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (50,573,432 samples, 0.02%)</title><rect x="488.4" y="613" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="491.36" y="623.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (35,244,018 samples, 0.01%)</title><rect x="542.7" y="1221" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="545.72" y="1231.5" ></text>
</g>
<g >
<title>pick_next_task_fair (29,306,580 samples, 0.01%)</title><rect x="1185.1" y="1445" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1188.10" y="1455.5" ></text>
</g>
<g >
<title>timerqueue_add (42,075,621 samples, 0.02%)</title><rect x="1182.9" y="1445" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1185.91" y="1455.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (35,028,380 samples, 0.01%)</title><rect x="1029.7" y="965" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1032.71" y="975.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (37,638,159 samples, 0.01%)</title><rect x="889.6" y="1013" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="892.60" y="1023.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (123,523,097 samples, 0.05%)</title><rect x="414.0" y="1669" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="417.05" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (22,984,433 samples, 0.01%)</title><rect x="805.6" y="1221" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="808.60" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,801,745,793 samples, 4.42%)</title><rect x="1055.8" y="1381" width="52.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1058.85" y="1391.5" >std::..</text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (245,896,046 samples, 0.09%)</title><rect x="880.9" y="1061" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="883.88" y="1071.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (54,168,590 samples, 0.02%)</title><rect x="80.6" y="981" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="83.57" y="991.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (214,642,073 samples, 0.08%)</title><rect x="1064.1" y="885" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1067.10" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (44,081,542 samples, 0.02%)</title><rect x="506.4" y="1093" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="509.40" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (32,323,976 samples, 0.01%)</title><rect x="1108.6" y="501" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1111.63" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (51,142,625 samples, 0.02%)</title><rect x="487.9" y="725" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="490.91" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (81,866,124 samples, 0.03%)</title><rect x="400.7" y="1125" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="403.70" y="1135.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (81,811,493 samples, 0.03%)</title><rect x="544.9" y="1317" width="0.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="547.94" y="1327.5" ></text>
</g>
<g >
<title>operator delete (65,230,831 samples, 0.02%)</title><rect x="987.7" y="1669" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="990.68" y="1679.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (182,025,596 samples, 0.07%)</title><rect x="108.4" y="997" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="111.42" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (39,170,629 samples, 0.01%)</title><rect x="770.7" y="565" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.71" y="575.5" ></text>
</g>
<g >
<title>__sock_release (177,942,332 samples, 0.07%)</title><rect x="551.5" y="1077" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="554.54" y="1087.5" ></text>
</g>
<g >
<title>epoll_wait (35,411,298 samples, 0.01%)</title><rect x="130.9" y="1541" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="133.86" y="1551.5" ></text>
</g>
<g >
<title>tcp_sendmsg (379,695,983 samples, 0.14%)</title><rect x="553.0" y="1269" width="1.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="555.98" y="1279.5" ></text>
</g>
<g >
<title>ip_finish_output (77,239,252 samples, 0.03%)</title><rect x="412.1" y="1109" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="415.12" y="1119.5" ></text>
</g>
<g >
<title>loopthread0 (32,250,777,014 samples, 12.08%)</title><rect x="10.2" y="1701" width="142.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="13.18" y="1711.5" >loopthread0</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (87,532,855 samples, 0.03%)</title><rect x="907.9" y="1205" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="910.86" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,492,960,042 samples, 3.93%)</title><rect x="579.6" y="1205" width="46.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="582.63" y="1215.5" >std:..</text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (27,262,562 samples, 0.01%)</title><rect x="683.6" y="1157" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="686.55" y="1167.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (27,423,609 samples, 0.01%)</title><rect x="186.7" y="1045" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="189.73" y="1055.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (25,261,147 samples, 0.01%)</title><rect x="230.0" y="1045" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="233.03" y="1055.5" ></text>
</g>
<g >
<title>x64_sys_call (323,897,394 samples, 0.12%)</title><rect x="403.4" y="1349" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="406.36" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (49,529,007 samples, 0.02%)</title><rect x="206.0" y="645" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.95" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (110,916,427 samples, 0.04%)</title><rect x="588.8" y="1077" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="591.80" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,353,516 samples, 0.01%)</title><rect x="629.8" y="645" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.77" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,395,220,777 samples, 1.27%)</title><rect x="931.2" y="1077" width="15.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="934.21" y="1087.5" ></text>
</g>
<g >
<title>x64_sys_call (36,241,229 samples, 0.01%)</title><rect x="272.2" y="1413" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="275.22" y="1423.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (45,226,825 samples, 0.02%)</title><rect x="71.0" y="933" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="73.95" y="943.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (46,147,152 samples, 0.02%)</title><rect x="910.3" y="1141" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="913.33" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (55,561,235 samples, 0.02%)</title><rect x="447.4" y="1077" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="450.37" y="1087.5" ></text>
</g>
<g >
<title>netvsc_poll (23,302,839 samples, 0.01%)</title><rect x="285.0" y="1525" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="288.05" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (40,397,487 samples, 0.02%)</title><rect x="488.4" y="405" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="491.38" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (370,655,323 samples, 0.14%)</title><rect x="793.1" y="1045" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="796.09" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,571,939 samples, 0.01%)</title><rect x="347.3" y="229" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.31" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (59,866,072 samples, 0.02%)</title><rect x="1108.6" y="917" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.58" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,764,039,813 samples, 1.41%)</title><rect x="365.6" y="1237" width="16.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="368.56" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (103,228,164 samples, 0.04%)</title><rect x="1077.8" y="981" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1080.82" y="991.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (25,186,795 samples, 0.01%)</title><rect x="182.2" y="1029" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="185.21" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::str (25,347,383 samples, 0.01%)</title><rect x="204.7" y="1365" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="207.71" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector (221,874,054 samples, 0.08%)</title><rect x="1083.2" y="1045" width="0.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1086.16" y="1055.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (117,868,077 samples, 0.04%)</title><rect x="755.2" y="1061" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="758.23" y="1071.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (23,137,234 samples, 0.01%)</title><rect x="518.1" y="981" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="521.06" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (30,136,582 samples, 0.01%)</title><rect x="219.4" y="885" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="222.41" y="895.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt; &gt; (59,684,145 samples, 0.02%)</title><rect x="1053.2" y="1221" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1056.19" y="1231.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (27,422,297,457 samples, 10.27%)</title><rect x="10.3" y="1621" width="121.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.29" y="1631.5" >std::__invoke&lt;v..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (40,262,376 samples, 0.02%)</title><rect x="1042.0" y="1029" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1045.04" y="1039.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (44,570,204 samples, 0.02%)</title><rect x="660.5" y="1029" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="663.50" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,573,432 samples, 0.02%)</title><rect x="488.4" y="597" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="491.36" y="607.5" ></text>
</g>
<g >
<title>tcp_write_xmit (211,103,533 samples, 0.08%)</title><rect x="270.7" y="1205" width="1.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="273.74" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (529,370,364 samples, 0.20%)</title><rect x="734.5" y="1029" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="737.52" y="1039.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (81,155,990 samples, 0.03%)</title><rect x="1029.3" y="933" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1032.27" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (98,605,665 samples, 0.04%)</title><rect x="825.9" y="1333" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="828.89" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (278,361,948 samples, 0.10%)</title><rect x="1125.2" y="1653" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1128.20" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (185,174,870 samples, 0.07%)</title><rect x="205.5" y="933" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.46" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (24,009,556 samples, 0.01%)</title><rect x="347.8" y="117" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="350.78" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (341,505,204 samples, 0.13%)</title><rect x="826.5" y="1365" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="829.54" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (30,516,420 samples, 0.01%)</title><rect x="1108.6" y="437" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1111.63" y="447.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (30,544,957 samples, 0.01%)</title><rect x="690.1" y="1173" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="693.09" y="1183.5" ></text>
</g>
<g >
<title>iput (160,315,452 samples, 0.06%)</title><rect x="1165.7" y="1285" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1168.66" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (10,132,274,223 samples, 3.79%)</title><rect x="13.6" y="1141" width="44.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="16.60" y="1151.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (109,986,978 samples, 0.04%)</title><rect x="347.5" y="773" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="350.53" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (22,941,717 samples, 0.01%)</title><rect x="767.2" y="1093" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="770.16" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex (11,510,752,429 samples, 4.31%)</title><rect x="10.9" y="1381" width="50.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="13.90" y="1391.5" >std::..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, HttpConn::HttpConn (25,586,145,911 samples, 9.58%)</title><rect x="10.4" y="1477" width="113.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="13.36" y="1487.5" >std::__invoke..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (124,277,249 samples, 0.05%)</title><rect x="443.7" y="1093" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="446.66" y="1103.5" ></text>
</g>
<g >
<title>getname_flags (27,285,620 samples, 0.01%)</title><rect x="968.3" y="1285" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="971.28" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,697,329,546 samples, 1.38%)</title><rect x="913.3" y="1029" width="16.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="916.32" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (85,694,377 samples, 0.03%)</title><rect x="1062.7" y="917" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.73" y="927.5" ></text>
</g>
<g >
<title>ip_finish_output2 (70,028,551 samples, 0.03%)</title><rect x="554.0" y="1077" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="556.99" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (640,989,891 samples, 0.24%)</title><rect x="532.3" y="1061" width="2.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="535.31" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,377,676 samples, 0.02%)</title><rect x="824.1" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="827.05" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (775,318,286 samples, 0.29%)</title><rect x="549.0" y="1253" width="3.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="552.02" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (24,206,978 samples, 0.01%)</title><rect x="556.9" y="1221" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (28,566,205 samples, 0.01%)</title><rect x="660.3" y="1029" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="663.28" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (151,763,709 samples, 0.06%)</title><rect x="422.5" y="1669" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="425.52" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,170,114,483 samples, 1.19%)</title><rect x="349.7" y="965" width="14.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="352.66" y="975.5" ></text>
</g>
<g >
<title>HttpConn::HttpConn (1,660,597,516 samples, 0.62%)</title><rect x="405.7" y="1461" width="7.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="408.71" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (69,981,823 samples, 0.03%)</title><rect x="106.1" y="1077" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="109.10" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (215,785,938 samples, 0.08%)</title><rect x="1054.2" y="1189" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.25" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_do_relocate (62,138,615 samples, 0.02%)</title><rect x="859.7" y="1093" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="862.68" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (33,248,071 samples, 0.01%)</title><rect x="965.8" y="1157" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="968.81" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,598,624,253 samples, 1.35%)</title><rect x="631.2" y="1093" width="15.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="634.21" y="1103.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (23,968,308 samples, 0.01%)</title><rect x="370.7" y="965" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="373.68" y="975.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (33,240,015 samples, 0.01%)</title><rect x="408.0" y="949" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="411.05" y="959.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (23,941,159 samples, 0.01%)</title><rect x="727.0" y="853" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="729.98" y="863.5" ></text>
</g>
<g >
<title>std::__search&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (34,817,996 samples, 0.01%)</title><rect x="684.7" y="1381" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="687.71" y="1391.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (158,536,727 samples, 0.06%)</title><rect x="553.7" y="1189" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="556.68" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,703,658 samples, 0.01%)</title><rect x="684.1" y="325" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="687.06" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (68,948,377 samples, 0.03%)</title><rect x="1108.6" y="1045" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1111.56" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (46,699,214 samples, 0.02%)</title><rect x="730.8" y="1077" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="733.80" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,743,933 samples, 0.01%)</title><rect x="1054.7" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.68" y="383.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::reference (57,831,194 samples, 0.02%)</title><rect x="80.3" y="965" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="83.32" y="975.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (26,553,989 samples, 0.01%)</title><rect x="909.6" y="1253" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="912.64" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (769,137,242 samples, 0.29%)</title><rect x="88.8" y="1045" width="3.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="91.84" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (248,139,000 samples, 0.09%)</title><rect x="63.1" y="1269" width="1.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="66.06" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (90,885,249 samples, 0.03%)</title><rect x="154.8" y="1237" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="157.78" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (34,883,391 samples, 0.01%)</title><rect x="823.6" y="1237" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="826.56" y="1247.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::ModChannel (70,737,264 samples, 0.03%)</title><rect x="153.0" y="1365" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="155.96" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (54,056,448 samples, 0.02%)</title><rect x="397.3" y="1093" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="400.29" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,956,120,275 samples, 1.48%)</title><rect x="1089.9" y="1269" width="17.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1092.88" y="1279.5" ></text>
</g>
<g >
<title>destroy_inode (31,321,950 samples, 0.01%)</title><rect x="268.2" y="1013" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="271.24" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (205,697,656 samples, 0.08%)</title><rect x="487.8" y="1093" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="490.82" y="1103.5" ></text>
</g>
<g >
<title>EventLoop::Loop (27,365,608,838 samples, 10.25%)</title><rect x="858.8" y="1573" width="120.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="861.80" y="1583.5" >EventLoop::Loop</text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (31,010,049 samples, 0.01%)</title><rect x="198.6" y="1109" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="201.63" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator+= (47,560,313 samples, 0.02%)</title><rect x="1038.9" y="1029" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1041.95" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (35,666,857 samples, 0.01%)</title><rect x="1121.1" y="1429" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1124.13" y="1439.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt; &gt;::erase (31,077,512 samples, 0.01%)</title><rect x="548.8" y="1301" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="551.75" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (54,043,329 samples, 0.02%)</title><rect x="962.8" y="1093" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="965.81" y="1103.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (23,869,073 samples, 0.01%)</title><rect x="1028.8" y="949" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1031.77" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (261,360,582 samples, 0.10%)</title><rect x="246.0" y="1061" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="249.00" y="1071.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (45,049,407 samples, 0.02%)</title><rect x="398.7" y="1125" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="401.70" y="1135.5" ></text>
</g>
<g >
<title>Channel::OnEvents (27,112,522,844 samples, 10.15%)</title><rect x="858.8" y="1557" width="119.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="861.81" y="1567.5" >Channel::OnEve..</text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (964,767,867 samples, 0.36%)</title><rect x="989.5" y="1669" width="4.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="992.48" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (51,954,895 samples, 0.02%)</title><rect x="365.1" y="1173" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="368.09" y="1183.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt;::~shared_ptr (127,269,266 samples, 0.05%)</title><rect x="61.8" y="1365" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="64.76" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (66,590,270 samples, 0.02%)</title><rect x="954.4" y="1077" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="957.37" y="1087.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (35,877,854 samples, 0.01%)</title><rect x="412.3" y="1029" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="415.26" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (29,105,734 samples, 0.01%)</title><rect x="754.8" y="1045" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="757.77" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (61,823,212 samples, 0.02%)</title><rect x="1002.8" y="1157" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1005.80" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (44,787,875 samples, 0.02%)</title><rect x="903.6" y="1077" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="906.60" y="1087.5" ></text>
</g>
<g >
<title>std::function&lt;void  (116,253,287 samples, 0.04%)</title><rect x="1120.9" y="1541" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1123.93" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,846,303 samples, 0.02%)</title><rect x="771.0" y="677" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.96" y="687.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (194,752,892 samples, 0.07%)</title><rect x="656.7" y="965" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="659.67" y="975.5" ></text>
</g>
<g >
<title>__close (342,766,863 samples, 0.13%)</title><rect x="692.1" y="1205" width="1.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="695.14" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (596,616,035 samples, 0.22%)</title><rect x="638.3" y="917" width="2.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="641.28" y="927.5" ></text>
</g>
<g >
<title>tcp_close (183,374,235 samples, 0.07%)</title><rect x="1117.5" y="1045" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1120.45" y="1055.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (28,946,724 samples, 0.01%)</title><rect x="735.8" y="981" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="738.81" y="991.5" ></text>
</g>
<g >
<title>ip_local_out (92,032,158 samples, 0.03%)</title><rect x="127.1" y="917" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="130.09" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,406,651,747 samples, 4.27%)</title><rect x="153.5" y="1349" width="50.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="156.47" y="1359.5" >std::..</text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (23,606,544 samples, 0.01%)</title><rect x="1085.3" y="1013" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1088.33" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (36,999,161 samples, 0.01%)</title><rect x="205.8" y="629" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.78" y="639.5" ></text>
</g>
<g >
<title>handle_softirqs (34,833,740 samples, 0.01%)</title><rect x="303.1" y="1029" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="306.09" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,687,341 samples, 0.01%)</title><rect x="771.2" y="261" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="774.20" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (191,141,412 samples, 0.07%)</title><rect x="63.2" y="997" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="66.17" y="1007.5" ></text>
</g>
<g >
<title>new_inode_pseudo (397,083,870 samples, 0.15%)</title><rect x="1172.7" y="1333" width="1.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1175.72" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (50,952,445 samples, 0.02%)</title><rect x="597.8" y="1061" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="600.78" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::str (25,902,119 samples, 0.01%)</title><rect x="769.9" y="1365" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="772.92" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (332,967,337 samples, 0.12%)</title><rect x="121.0" y="1365" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="123.98" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::base (26,914,185 samples, 0.01%)</title><rect x="726.8" y="1077" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="729.83" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (42,346,110 samples, 0.02%)</title><rect x="629.5" y="645" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.50" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_State&lt;char&gt;::~_State (48,627,489 samples, 0.02%)</title><rect x="62.0" y="1157" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="65.03" y="1167.5" ></text>
</g>
<g >
<title>ip_finish_output (49,084,305 samples, 0.02%)</title><rect x="409.8" y="885" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="412.81" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (73,089,614 samples, 0.03%)</title><rect x="1019.1" y="1013" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1022.06" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (25,028,593 samples, 0.01%)</title><rect x="791.0" y="1061" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="793.98" y="1071.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (35,141,138 samples, 0.01%)</title><rect x="105.6" y="1077" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="108.61" y="1087.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (27,127,276,324 samples, 10.16%)</title><rect x="294.2" y="1685" width="119.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="297.15" y="1695.5" >[libstdc++.so...</text>
</g>
<g >
<title>std::_Destroy&lt;char*&gt; (43,458,233 samples, 0.02%)</title><rect x="466.7" y="1045" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="469.73" y="1055.5" ></text>
</g>
<g >
<title>HttpConn::HandleWrite (1,063,212,694 samples, 0.40%)</title><rect x="123.5" y="1445" width="4.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="126.47" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,791,082,885 samples, 4.42%)</title><rect x="207.1" y="1349" width="52.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="210.10" y="1359.5" >std::..</text>
</g>
<g >
<title>x64_sys_call (102,936,495 samples, 0.04%)</title><rect x="828.5" y="1397" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="831.50" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,838,723,007 samples, 1.44%)</title><rect x="207.1" y="1237" width="17.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="210.12" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,936,957 samples, 0.01%)</title><rect x="770.7" y="373" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.73" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_writev (456,141,787 samples, 0.17%)</title><rect x="976.6" y="1381" width="2.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="979.55" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (467,222,426 samples, 0.17%)</title><rect x="273.6" y="1669" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="276.58" y="1679.5" ></text>
</g>
<g >
<title>task_work_run (48,794,958 samples, 0.02%)</title><rect x="124.7" y="1109" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="127.75" y="1119.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (69,137,672 samples, 0.03%)</title><rect x="556.5" y="1653" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="559.53" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (78,668,195 samples, 0.03%)</title><rect x="194.7" y="1093" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="197.67" y="1103.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (36,869,559 samples, 0.01%)</title><rect x="769.5" y="1125" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="772.55" y="1135.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (60,284,924 samples, 0.02%)</title><rect x="922.1" y="805" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="925.05" y="815.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (35,405,895 samples, 0.01%)</title><rect x="1053.3" y="1125" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1056.27" y="1135.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (210,234,621 samples, 0.08%)</title><rect x="921.7" y="869" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="924.66" y="879.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (129,925,101 samples, 0.05%)</title><rect x="331.3" y="1061" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="334.35" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;HttpConn&gt;::destroy&lt;HttpConn&gt; (831,506,198 samples, 0.31%)</title><rect x="265.9" y="1221" width="3.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="268.86" y="1231.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::AddChannel (105,014,334 samples, 0.04%)</title><rect x="130.3" y="1509" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="133.35" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (33,449,637 samples, 0.01%)</title><rect x="838.6" y="1637" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (105,242,064 samples, 0.04%)</title><rect x="488.2" y="805" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="491.17" y="815.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (103,820,974 samples, 0.04%)</title><rect x="454.7" y="1077" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="457.75" y="1087.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (60,175,146 samples, 0.02%)</title><rect x="1067.9" y="917" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1070.93" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (118,615,559 samples, 0.04%)</title><rect x="166.2" y="1077" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="169.19" y="1087.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (42,057,990 samples, 0.02%)</title><rect x="125.5" y="997" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="128.47" y="1007.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (133,889,837 samples, 0.05%)</title><rect x="674.4" y="981" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="677.38" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (35,156,425 samples, 0.01%)</title><rect x="63.2" y="565" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.25" y="575.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (25,817,446 samples, 0.01%)</title><rect x="1178.3" y="1317" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1181.27" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (54,106,135 samples, 0.02%)</title><rect x="477.1" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="480.06" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (104,350,794 samples, 0.04%)</title><rect x="205.7" y="773" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="208.75" y="783.5" ></text>
</g>
<g >
<title>__GI___libc_open (126,515,724 samples, 0.05%)</title><rect x="982.2" y="1669" width="0.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="985.22" y="1679.5" ></text>
</g>
<g >
<title>__napi_poll (24,934,780 samples, 0.01%)</title><rect x="993.6" y="1541" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="996.58" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (128,051,141 samples, 0.05%)</title><rect x="1157.5" y="1237" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1160.53" y="1247.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (24,769,620 samples, 0.01%)</title><rect x="549.8" y="1045" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="552.76" y="1055.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*&gt; (42,629,012 samples, 0.02%)</title><rect x="890.4" y="1045" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="893.38" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (43,151,600 samples, 0.02%)</title><rect x="118.4" y="757" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="121.36" y="767.5" ></text>
</g>
<g >
<title>[unknown] (26,426,802 samples, 0.01%)</title><rect x="556.9" y="1461" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1471.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, EventLoop::DelChannel (160,746,521 samples, 0.06%)</title><rect x="1113.8" y="1349" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1116.75" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (3,677,682,654 samples, 1.38%)</title><rect x="65.0" y="1045" width="16.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="67.96" y="1055.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (44,281,843 samples, 0.02%)</title><rect x="716.3" y="1669" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="719.27" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,230,901 samples, 0.02%)</title><rect x="118.3" y="917" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.34" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (185,722,551 samples, 0.07%)</title><rect x="911.6" y="933" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.58" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (51,839,120 samples, 0.02%)</title><rect x="629.5" y="805" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.49" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (86,926,747 samples, 0.03%)</title><rect x="295.0" y="1125" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="298.04" y="1135.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (41,729,890 samples, 0.02%)</title><rect x="154.9" y="1093" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="157.87" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (51,481,775 samples, 0.02%)</title><rect x="808.1" y="1093" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="811.13" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,605,414 samples, 0.01%)</title><rect x="205.5" y="501" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.53" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (101,902,153 samples, 0.04%)</title><rect x="683.9" y="1301" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="686.94" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (284,025,540 samples, 0.11%)</title><rect x="1148.7" y="1413" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1151.73" y="1423.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (31,622,553 samples, 0.01%)</title><rect x="265.5" y="1285" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="268.53" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,815,982 samples, 0.01%)</title><rect x="629.5" y="341" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="632.54" y="351.5" ></text>
</g>
<g >
<title>Channel::OnWrite (1,647,572,772 samples, 0.62%)</title><rect x="1113.6" y="1541" width="7.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1116.63" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main (109,364,367 samples, 0.04%)</title><rect x="824.0" y="1317" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="826.95" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (196,512,252 samples, 0.07%)</title><rect x="229.1" y="997" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="232.11" y="1007.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (130,753,748 samples, 0.05%)</title><rect x="498.2" y="837" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="501.18" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_end (59,359,534 samples, 0.02%)</title><rect x="684.0" y="901" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="686.99" y="911.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (229,120,627 samples, 0.09%)</title><rect x="32.9" y="1061" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="35.91" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,857,237,780 samples, 4.44%)</title><rect x="64.8" y="1301" width="52.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="67.82" y="1311.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_Executor (41,305,566 samples, 0.02%)</title><rect x="629.1" y="1333" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="632.12" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (30,918,967 samples, 0.01%)</title><rect x="488.4" y="309" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="491.39" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (31,173,416 samples, 0.01%)</title><rect x="809.6" y="1077" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="812.58" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_openat (96,296,606 samples, 0.04%)</title><rect x="416.8" y="1605" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="419.79" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,627,818,806 samples, 1.36%)</title><rect x="772.4" y="1141" width="16.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="775.40" y="1151.5" ></text>
</g>
<g >
<title>EventLoop::ModChannel (91,557,730 samples, 0.03%)</title><rect x="434.8" y="1429" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="437.79" y="1439.5" ></text>
</g>
<g >
<title>std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (302,543,660 samples, 0.11%)</title><rect x="76.1" y="949" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="79.13" y="959.5" ></text>
</g>
<g >
<title>[unknown] (24,929,266 samples, 0.01%)</title><rect x="838.6" y="1461" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.57" y="1471.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (32,511,675 samples, 0.01%)</title><rect x="404.5" y="1253" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="407.45" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_main_dispatch (99,453,061 samples, 0.04%)</title><rect x="543.1" y="1301" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="546.13" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (48,378,908 samples, 0.02%)</title><rect x="788.6" y="1189" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="791.59" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10,830,542,339 samples, 4.06%)</title><rect x="1003.7" y="1269" width="47.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1006.66" y="1279.5" >std:..</text>
</g>
<g >
<title>__fput (28,598,233 samples, 0.01%)</title><rect x="549.5" y="1077" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="552.45" y="1087.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const,  (61,274,935 samples, 0.02%)</title><rect x="965.7" y="1349" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="968.73" y="1359.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (273,321,508 samples, 0.10%)</title><rect x="276.3" y="1669" width="1.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="279.28" y="1679.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (23,689,514 samples, 0.01%)</title><rect x="1069.0" y="949" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1072.02" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (27,658,982 samples, 0.01%)</title><rect x="1087.3" y="1061" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1090.27" y="1071.5" ></text>
</g>
<g >
<title>[web-server] (24,993,036 samples, 0.01%)</title><rect x="351.6" y="933" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="354.62" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (33,221,409 samples, 0.01%)</title><rect x="649.7" y="1061" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="652.68" y="1071.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (66,099,119 samples, 0.02%)</title><rect x="267.5" y="1077" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="270.54" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,386,061 samples, 0.02%)</title><rect x="487.9" y="629" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="490.92" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (22,810,330 samples, 0.01%)</title><rect x="99.1" y="1189" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="102.05" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (59,625,290 samples, 0.02%)</title><rect x="259.8" y="1093" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="262.85" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (250,428,171 samples, 0.09%)</title><rect x="205.3" y="1221" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.35" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,864,079,588 samples, 1.45%)</title><rect x="382.4" y="1221" width="17.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="385.37" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (45,378,289 samples, 0.02%)</title><rect x="193.3" y="1029" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="196.34" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (69,249,524 samples, 0.03%)</title><rect x="1108.6" y="1077" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1111.56" y="1087.5" ></text>
</g>
<g >
<title>nf_hook_slow (40,484,596 samples, 0.02%)</title><rect x="833.2" y="885" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="836.20" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (81,570,850 samples, 0.03%)</title><rect x="626.0" y="1205" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="629.00" y="1215.5" ></text>
</g>
<g >
<title>tcp_sendmsg (394,510,092 samples, 0.15%)</title><rect x="976.7" y="1269" width="1.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="979.70" y="1279.5" ></text>
</g>
<g >
<title>ip_list_rcv (27,620,378 samples, 0.01%)</title><rect x="727.0" y="917" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="729.97" y="927.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (26,649,591 samples, 0.01%)</title><rect x="178.7" y="1045" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="181.69" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (211,782,623 samples, 0.08%)</title><rect x="952.8" y="1045" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="955.76" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (936,029,996 samples, 0.35%)</title><rect x="423.7" y="1669" width="4.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="426.74" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (3,969,593,294 samples, 1.49%)</title><rect x="241.2" y="1285" width="17.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="244.18" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (35,252,143 samples, 0.01%)</title><rect x="801.5" y="997" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="804.54" y="1007.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, char&gt; (235,992,036 samples, 0.09%)</title><rect x="780.3" y="901" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="783.28" y="911.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (165,032,121 samples, 0.06%)</title><rect x="254.5" y="1093" width="0.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="257.55" y="1103.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate (212,400,723 samples, 0.08%)</title><rect x="185.6" y="1045" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="188.57" y="1055.5" ></text>
</g>
<g >
<title>_raw_spin_lock (25,970,178 samples, 0.01%)</title><rect x="1172.2" y="1317" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1175.24" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (79,283,852 samples, 0.03%)</title><rect x="494.6" y="869" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="497.58" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (320,864,811 samples, 0.12%)</title><rect x="1115.3" y="1125" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1118.30" y="1135.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (23,801,422 samples, 0.01%)</title><rect x="143.6" y="1621" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="146.56" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (115,635,510 samples, 0.04%)</title><rect x="982.2" y="1653" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="985.24" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (260,651,206 samples, 0.10%)</title><rect x="205.3" y="1253" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.31" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (28,174,472 samples, 0.01%)</title><rect x="257.0" y="1093" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="259.99" y="1103.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (336,335,827 samples, 0.13%)</title><rect x="121.0" y="1381" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="123.96" y="1391.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (27,524,466 samples, 0.01%)</title><rect x="406.9" y="1157" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="409.91" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (86,441,868 samples, 0.03%)</title><rect x="1054.7" y="709" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.65" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (28,117,935 samples, 0.01%)</title><rect x="380.5" y="1061" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="383.46" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (48,135,353 samples, 0.02%)</title><rect x="618.9" y="1077" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="621.92" y="1087.5" ></text>
</g>
<g >
<title>__tcp_close (168,299,753 samples, 0.06%)</title><rect x="692.7" y="1029" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="695.70" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data (161,202,285 samples, 0.06%)</title><rect x="738.7" y="1077" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="741.71" y="1087.5" ></text>
</g>
<g >
<title>tcp_write_xmit (132,292,445 samples, 0.05%)</title><rect x="975.3" y="981" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="978.31" y="991.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@@GLIBC_2.2.5 (33,935,864 samples, 0.01%)</title><rect x="1157.1" y="1221" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1160.06" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (54,202,515 samples, 0.02%)</title><rect x="449.8" y="1061" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="452.78" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (10,377,270,820 samples, 3.89%)</title><rect x="155.9" y="1173" width="45.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="158.87" y="1183.5" >std:..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (25,215,957 samples, 0.01%)</title><rect x="320.5" y="1029" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="323.52" y="1039.5" ></text>
</g>
<g >
<title>security_file_permission (23,816,358 samples, 0.01%)</title><rect x="828.6" y="1317" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="831.57" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (37,746,855 samples, 0.01%)</title><rect x="736.0" y="1013" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="738.98" y="1023.5" ></text>
</g>
<g >
<title>epoll_ctl (87,668,705 samples, 0.03%)</title><rect x="829.3" y="1301" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="832.31" y="1311.5" ></text>
</g>
<g >
<title>HttpResponse::~HttpResponse (36,541,496 samples, 0.01%)</title><rect x="1114.8" y="1189" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1117.75" y="1199.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (166,171,154 samples, 0.06%)</title><rect x="548.2" y="1365" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="551.17" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (97,428,478 samples, 0.04%)</title><rect x="488.2" y="773" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="491.18" y="783.5" ></text>
</g>
<g >
<title>EventLoop::DoPendingFunctors (124,160,179 samples, 0.05%)</title><rect x="696.0" y="1557" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="698.96" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,658,248 samples, 0.02%)</title><rect x="543.2" y="789" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="546.22" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (47,603,121 samples, 0.02%)</title><rect x="434.9" y="1285" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="437.85" y="1295.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (104,192,619 samples, 0.04%)</title><rect x="314.1" y="1077" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="317.06" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (56,529,161 samples, 0.02%)</title><rect x="506.4" y="1189" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="509.39" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (26,822,558 samples, 0.01%)</title><rect x="678.8" y="1077" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="681.81" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (329,285,638 samples, 0.12%)</title><rect x="826.6" y="1333" width="1.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="829.59" y="1343.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (38,313,681 samples, 0.01%)</title><rect x="77.2" y="901" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="80.24" y="911.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (66,726,360 samples, 0.02%)</title><rect x="718.2" y="1381" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="721.21" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,127,571 samples, 0.01%)</title><rect x="543.3" y="517" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.26" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (78,500,364 samples, 0.03%)</title><rect x="726.0" y="1093" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="728.96" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::~vector (36,292,114 samples, 0.01%)</title><rect x="542.7" y="1237" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="545.72" y="1247.5" ></text>
</g>
<g >
<title>x64_sys_call (25,970,298 samples, 0.01%)</title><rect x="1121.5" y="1493" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1124.51" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (381,295,841 samples, 0.14%)</title><rect x="635.0" y="933" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="637.98" y="943.5" ></text>
</g>
<g >
<title>get_unmapped_area (39,571,008 samples, 0.01%)</title><rect x="262.5" y="1269" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="265.45" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (25,399,689 samples, 0.01%)</title><rect x="1011.5" y="1045" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1014.48" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; (24,223,307 samples, 0.01%)</title><rect x="1091.8" y="1093" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1094.80" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt; (35,846,679 samples, 0.01%)</title><rect x="684.5" y="1349" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="687.48" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end (25,312,204 samples, 0.01%)</title><rect x="787.0" y="949" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="789.97" y="959.5" ></text>
</g>
<g >
<title>[libc.so.6] (33,269,649 samples, 0.01%)</title><rect x="848.1" y="1653" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="851.06" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (139,278,659 samples, 0.05%)</title><rect x="860.0" y="1221" width="0.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="863.04" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,654,060,637 samples, 4.36%)</title><rect x="1055.9" y="1301" width="51.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1058.87" y="1311.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (27,231,285 samples, 0.01%)</title><rect x="1054.7" y="389" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.68" y="399.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (23,316,224 samples, 0.01%)</title><rect x="683.6" y="1141" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="686.57" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (68,023,424 samples, 0.03%)</title><rect x="761.4" y="1093" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="764.38" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (26,855,217 samples, 0.01%)</title><rect x="811.5" y="1013" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="814.46" y="1023.5" ></text>
</g>
<g >
<title>__handle_mm_fault (30,879,878 samples, 0.01%)</title><rect x="1119.3" y="1141" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1122.33" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,563,390,841 samples, 1.33%)</title><rect x="631.3" y="1029" width="15.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="634.29" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (22,810,330 samples, 0.01%)</title><rect x="99.1" y="1205" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="102.05" y="1215.5" ></text>
</g>
<g >
<title>TimerManager::DelTimer (25,856,382 samples, 0.01%)</title><rect x="689.2" y="1301" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="692.18" y="1311.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (27,268,964 samples, 0.01%)</title><rect x="740.2" y="1061" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="743.21" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,714,968 samples, 0.02%)</title><rect x="1054.4" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.42" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (35,342,344 samples, 0.01%)</title><rect x="654.7" y="1045" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="657.68" y="1055.5" ></text>
</g>
<g >
<title>[web-server] (85,440,080 samples, 0.03%)</title><rect x="728.9" y="1077" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="731.88" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (35,952,205 samples, 0.01%)</title><rect x="436.0" y="1157" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="439.03" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (3,851,927,750 samples, 1.44%)</title><rect x="1090.0" y="1173" width="17.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1092.98" y="1183.5" ></text>
</g>
<g >
<title>__schedule (478,115,109 samples, 0.18%)</title><rect x="1183.4" y="1461" width="2.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1186.37" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (239,144,579 samples, 0.09%)</title><rect x="205.4" y="1141" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.37" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11,479,278,998 samples, 4.30%)</title><rect x="772.3" y="1317" width="50.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="775.33" y="1327.5" >std::..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::isctype (51,041,629 samples, 0.02%)</title><rect x="932.8" y="1061" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="935.76" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size (23,698,837 samples, 0.01%)</title><rect x="901.6" y="1093" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="904.56" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (25,988,206 samples, 0.01%)</title><rect x="556.9" y="1445" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1455.5" ></text>
</g>
<g >
<title>epoll_ctl (87,232,516 samples, 0.03%)</title><rect x="123.7" y="1301" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="126.66" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,256,300 samples, 0.01%)</title><rect x="347.6" y="533" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="350.55" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,533,401,652 samples, 1.32%)</title><rect x="507.2" y="1093" width="15.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="510.22" y="1103.5" ></text>
</g>
<g >
<title>do_syscall_64 (340,619,212 samples, 0.13%)</title><rect x="968.9" y="1365" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="971.85" y="1375.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (27,122,733,743 samples, 10.16%)</title><rect x="294.2" y="1669" width="119.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="297.17" y="1679.5" >std::thread::_..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (26,502,578 samples, 0.01%)</title><rect x="266.0" y="1157" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="268.96" y="1167.5" ></text>
</g>
<g >
<title>EventLoop::RunInLoop (80,847,395 samples, 0.03%)</title><rect x="294.3" y="1413" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="297.29" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (192,393,333 samples, 0.07%)</title><rect x="952.8" y="1029" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="955.85" y="1039.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (315,940,163 samples, 0.12%)</title><rect x="968.9" y="1301" width="1.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="971.95" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (50,903,205 samples, 0.02%)</title><rect x="720.0" y="1141" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="722.97" y="1151.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (68,208,785 samples, 0.03%)</title><rect x="1142.3" y="1653" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1145.30" y="1663.5" ></text>
</g>
<g >
<title>init_file (92,310,644 samples, 0.03%)</title><rect x="1174.9" y="1285" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1177.87" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,784,294,063 samples, 1.42%)</title><rect x="224.2" y="1221" width="16.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="227.16" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (66,289,686 samples, 0.02%)</title><rect x="395.9" y="1045" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="398.87" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,196,645 samples, 0.02%)</title><rect x="205.5" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.51" y="623.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (27,814,352 samples, 0.01%)</title><rect x="1020.0" y="1077" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1023.03" y="1087.5" ></text>
</g>
<g >
<title>HttpResponse::Serialize (78,208,378 samples, 0.03%)</title><rect x="260.8" y="1413" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="263.81" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (189,882,959 samples, 0.07%)</title><rect x="607.1" y="1029" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="610.05" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (25,939,376 samples, 0.01%)</title><rect x="1032.1" y="1013" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1035.10" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (59,380,532 samples, 0.02%)</title><rect x="820.7" y="1093" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="823.71" y="1103.5" ></text>
</g>
<g >
<title>netvsc_xmit (31,891,438 samples, 0.01%)</title><rect x="977.9" y="997" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="980.88" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3,749,159,121 samples, 1.40%)</title><rect x="772.3" y="1237" width="16.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="775.34" y="1247.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (55,580,907 samples, 0.02%)</title><rect x="89.1" y="1013" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="92.12" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (26,608,394 samples, 0.01%)</title><rect x="344.8" y="1301" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="347.78" y="1311.5" ></text>
</g>
<g >
<title>x64_sys_call (42,462,773 samples, 0.02%)</title><rect x="978.9" y="1413" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="981.86" y="1423.5" ></text>
</g>
<g >
<title>down_write_killable (52,720,325 samples, 0.02%)</title><rect x="974.3" y="1093" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="977.27" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (36,506,875 samples, 0.01%)</title><rect x="221.6" y="949" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="224.61" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (62,554,332 samples, 0.02%)</title><rect x="876.5" y="1013" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="879.53" y="1023.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (103,992,768 samples, 0.04%)</title><rect x="554.9" y="1525" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="557.88" y="1535.5" ></text>
</g>
<g >
<title>epoll_ctl (58,994,827 samples, 0.02%)</title><rect x="696.1" y="1461" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="699.14" y="1471.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (182,777,570 samples, 0.07%)</title><rect x="95.1" y="1061" width="0.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="98.07" y="1071.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;ProtocolHandler&gt;::operator= (872,908,708 samples, 0.33%)</title><rect x="972.3" y="1333" width="3.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="975.28" y="1343.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (844,870,178 samples, 0.32%)</title><rect x="265.8" y="1269" width="3.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="268.81" y="1279.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (25,334,547 samples, 0.01%)</title><rect x="542.8" y="1141" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="545.75" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (36,574,906 samples, 0.01%)</title><rect x="1054.4" y="389" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.43" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (24,470,878 samples, 0.01%)</title><rect x="1054.4" y="165" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.45" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::locale const&amp;, std::regex_constants::syntax_option_type&amp;&gt; (23,329,273 samples, 0.01%)</title><rect x="1052.5" y="1237" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1055.54" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (49,948,689 samples, 0.02%)</title><rect x="966.3" y="837" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="969.30" y="847.5" ></text>
</g>
<g >
<title>EventLoop::Loop (27,457,533,611 samples, 10.28%)</title><rect x="434.6" y="1573" width="121.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="437.62" y="1583.5" >EventLoop::Loop</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (46,690,357 samples, 0.02%)</title><rect x="347.7" y="437" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="350.75" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (268,468,595 samples, 0.10%)</title><rect x="770.5" y="1253" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="773.50" y="1263.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (35,385,670 samples, 0.01%)</title><rect x="129.6" y="1029" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="132.58" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (28,644,638 samples, 0.01%)</title><rect x="116.9" y="1205" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="119.90" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (51,954,895 samples, 0.02%)</title><rect x="365.1" y="1189" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="368.09" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (23,081,204 samples, 0.01%)</title><rect x="344.9" y="1301" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="347.94" y="1311.5" ></text>
</g>
<g >
<title>inet_sendmsg (384,733,731 samples, 0.14%)</title><rect x="1119.0" y="1285" width="1.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1122.03" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (2,234,039,885 samples, 0.84%)</title><rect x="1022.9" y="1077" width="9.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1025.90" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (420,133,072 samples, 0.16%)</title><rect x="1145.1" y="1429" width="1.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1148.14" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (38,359,824 samples, 0.01%)</title><rect x="206.0" y="405" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="208.97" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,614,553 samples, 0.01%)</title><rect x="259.9" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.92" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (244,927,075 samples, 0.09%)</title><rect x="629.4" y="1173" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.36" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_S_relocate (24,751,336 samples, 0.01%)</title><rect x="81.6" y="1061" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="84.58" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (62,867,650 samples, 0.02%)</title><rect x="433.8" y="1685" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="436.84" y="1695.5" ></text>
</g>
<g >
<title>HttpResponse::~HttpResponse (34,108,524 samples, 0.01%)</title><rect x="972.4" y="1189" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="975.44" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (49,552,041 samples, 0.02%)</title><rect x="260.9" y="1397" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="263.94" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (251,616,334 samples, 0.09%)</title><rect x="169.3" y="1013" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="172.33" y="1023.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;HttpConn, std::allocator&lt;HttpConn&gt;,  (793,541,543 samples, 0.30%)</title><rect x="124.3" y="1253" width="3.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="127.33" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (60,833,367 samples, 0.02%)</title><rect x="971.7" y="1237" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="974.65" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (29,963,573 samples, 0.01%)</title><rect x="504.6" y="949" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="507.60" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; (24,608,694 samples, 0.01%)</title><rect x="226.3" y="1061" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="229.29" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (50,765,146 samples, 0.02%)</title><rect x="259.9" y="933" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="262.87" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (92,072,298 samples, 0.03%)</title><rect x="488.2" y="709" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.20" y="719.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (41,220,123 samples, 0.02%)</title><rect x="727.0" y="1045" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="729.97" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_any_matcher_ecma&lt;false, false&gt; (32,787,546 samples, 0.01%)</title><rect x="860.2" y="1141" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="863.21" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (601,218,100 samples, 0.23%)</title><rect x="497.0" y="917" width="2.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="500.02" y="927.5" ></text>
</g>
<g >
<title>vfs_read (70,876,739 samples, 0.03%)</title><rect x="405.3" y="1349" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="408.27" y="1359.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (86,977,570 samples, 0.03%)</title><rect x="1144.3" y="1381" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1147.32" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (11,881,151,286 samples, 4.45%)</title><rect x="913.1" y="1349" width="52.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="916.10" y="1359.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,605,281 samples, 0.02%)</title><rect x="1108.6" y="997" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1111.57" y="1007.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (46,648,664 samples, 0.02%)</title><rect x="832.1" y="1077" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="835.06" y="1087.5" ></text>
</g>
<g >
<title>__GI___writev (496,166,711 samples, 0.19%)</title><rect x="269.8" y="1445" width="2.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="272.81" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (214,009,419 samples, 0.08%)</title><rect x="1054.3" y="1157" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.26" y="1167.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (27,564,644 samples, 0.01%)</title><rect x="124.1" y="1285" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="127.08" y="1295.5" ></text>
</g>
<g >
<title>down_write_killable (100,269,842 samples, 0.04%)</title><rect x="404.2" y="1285" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="407.20" y="1295.5" ></text>
</g>
<g >
<title>__dynamic_cast (82,366,896 samples, 0.03%)</title><rect x="560.1" y="1637" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="563.07" y="1647.5" ></text>
</g>
<g >
<title>tcp_write_xmit (211,667,511 samples, 0.08%)</title><rect x="977.4" y="1205" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="980.37" y="1215.5" ></text>
</g>
<g >
<title>__vm_munmap (292,408,785 samples, 0.11%)</title><rect x="549.6" y="1109" width="1.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="552.64" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (73,512,473 samples, 0.03%)</title><rect x="400.7" y="1093" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="403.70" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (74,204,036 samples, 0.03%)</title><rect x="684.0" y="1109" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="686.97" y="1119.5" ></text>
</g>
<g >
<title>__ip_local_out (50,506,315 samples, 0.02%)</title><rect x="553.7" y="1125" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="556.74" y="1135.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (535,935,605 samples, 0.20%)</title><rect x="321.0" y="997" width="2.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="323.98" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (117,388,974 samples, 0.04%)</title><rect x="770.9" y="805" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="773.93" y="815.5" ></text>
</g>
<g >
<title>malloc (45,407,667 samples, 0.02%)</title><rect x="460.4" y="1013" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="463.36" y="1023.5" ></text>
</g>
<g >
<title>do_epoll_wait (23,749,883 samples, 0.01%)</title><rect x="1121.5" y="1461" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1124.52" y="1471.5" ></text>
</g>
<g >
<title>HttpConn::OnProcess (25,178,294,405 samples, 9.43%)</title><rect x="859.3" y="1429" width="111.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="862.33" y="1439.5" >HttpConn::OnP..</text>
</g>
<g >
<title>[unknown] (23,735,330 samples, 0.01%)</title><rect x="556.9" y="1125" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1135.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (34,061,675 samples, 0.01%)</title><rect x="486.0" y="1269" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="488.98" y="1279.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (125,405,940 samples, 0.05%)</title><rect x="837.7" y="1669" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="840.68" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62,169,679 samples, 0.02%)</title><rect x="966.3" y="949" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="969.29" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (23,573,980 samples, 0.01%)</title><rect x="47.0" y="1045" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="49.97" y="1055.5" ></text>
</g>
<g >
<title>epoll_ctl (58,129,109 samples, 0.02%)</title><rect x="859.0" y="1317" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="861.99" y="1327.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, Server::HandlerNewConn (828,354,615 samples, 0.31%)</title><rect x="124.3" y="1365" width="3.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="127.29" y="1375.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, char&gt; (26,702,687 samples, 0.01%)</title><rect x="110.2" y="1061" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="113.23" y="1071.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, EventLoop::AddChannel (105,014,334 samples, 0.04%)</title><rect x="130.3" y="1493" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="133.35" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (53,418,629 samples, 0.02%)</title><rect x="259.9" y="965" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="262.87" y="975.5" ></text>
</g>
<g >
<title>[unknown] (28,959,552 samples, 0.01%)</title><rect x="556.8" y="1605" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;char&gt; &gt; (23,969,886 samples, 0.01%)</title><rect x="822.7" y="1141" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="825.68" y="1151.5" ></text>
</g>
<g >
<title>nf_hook_slow (31,894,612 samples, 0.01%)</title><rect x="127.1" y="885" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="130.11" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (53,612,821 samples, 0.02%)</title><rect x="863.1" y="1109" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="866.08" y="1119.5" ></text>
</g>
<g >
<title>irq_exit_rcu (41,607,118 samples, 0.02%)</title><rect x="973.7" y="965" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="976.69" y="975.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (64,603,742 samples, 0.02%)</title><rect x="498.3" y="821" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="501.33" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (55,476,981 samples, 0.02%)</title><rect x="951.8" y="1077" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="954.76" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (27,165,179 samples, 0.01%)</title><rect x="684.1" y="357" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="687.05" y="367.5" ></text>
</g>
<g >
<title>malloc (24,666,114 samples, 0.01%)</title><rect x="814.1" y="1013" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="817.08" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (43,639,649 samples, 0.02%)</title><rect x="63.7" y="565" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.68" y="575.5" ></text>
</g>
<g >
<title>sock_read_iter (70,187,644 samples, 0.03%)</title><rect x="971.0" y="1333" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="973.95" y="1343.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (31,129,000 samples, 0.01%)</title><rect x="265.5" y="1269" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="268.53" y="1279.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base (121,452,075 samples, 0.05%)</title><rect x="799.6" y="1029" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="802.65" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (418,401,759 samples, 0.16%)</title><rect x="830.4" y="1173" width="1.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="833.44" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (51,183,335 samples, 0.02%)</title><rect x="12.7" y="1253" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="15.68" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::transform (45,944,247 samples, 0.02%)</title><rect x="510.7" y="1045" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="513.66" y="1055.5" ></text>
</g>
<g >
<title>do_syscall_64 (85,150,919 samples, 0.03%)</title><rect x="405.2" y="1413" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="408.21" y="1423.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt; (241,098,182 samples, 0.09%)</title><rect x="536.7" y="1077" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="539.71" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3,887,299,358 samples, 1.46%)</title><rect x="947.7" y="1253" width="17.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="950.72" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (90,205,741 samples, 0.03%)</title><rect x="839.8" y="1653" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="842.81" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (25,191,035 samples, 0.01%)</title><rect x="155.7" y="1221" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="158.65" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (46,734,045 samples, 0.02%)</title><rect x="684.5" y="1397" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="687.47" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (28,236,163 samples, 0.01%)</title><rect x="1107.1" y="1189" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1110.06" y="1199.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (56,380,162 samples, 0.02%)</title><rect x="799.8" y="997" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="802.83" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (89,414,629 samples, 0.03%)</title><rect x="762.3" y="1093" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="765.33" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_read (95,520,758 samples, 0.04%)</title><rect x="122.9" y="1381" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="125.93" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (23,906,994 samples, 0.01%)</title><rect x="1054.5" y="149" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1057.45" y="159.5" ></text>
</g>
<g >
<title>__stpncpy_avx2 (304,631,601 samples, 0.11%)</title><rect x="283.8" y="1653" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="286.82" y="1663.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (100,783,285 samples, 0.04%)</title><rect x="266.8" y="1045" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="269.84" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (40,331,711 samples, 0.02%)</title><rect x="227.9" y="1045" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="230.95" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (84,722,562 samples, 0.03%)</title><rect x="282.6" y="1669" width="0.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="285.60" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_check_init_len (124,394,677 samples, 0.05%)</title><rect x="657.7" y="1013" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="660.74" y="1023.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (57,460,495 samples, 0.02%)</title><rect x="523.2" y="1093" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="526.16" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (59,061,629 samples, 0.02%)</title><rect x="118.3" y="965" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="121.33" y="975.5" ></text>
</g>
<g >
<title>filename_lookup (33,450,265 samples, 0.01%)</title><rect x="545.1" y="1269" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="548.12" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator (44,710,533 samples, 0.02%)</title><rect x="339.3" y="1077" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="342.28" y="1087.5" ></text>
</g>
<g >
<title>x64_sys_call (62,600,444 samples, 0.02%)</title><rect x="1114.0" y="1253" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1116.96" y="1263.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base (239,808,397 samples, 0.09%)</title><rect x="599.0" y="1061" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="602.02" y="1071.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (30,330,338 samples, 0.01%)</title><rect x="657.1" y="901" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="660.12" y="911.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (63,202,142 samples, 0.02%)</title><rect x="43.6" y="1013" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="46.65" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (23,251,990 samples, 0.01%)</title><rect x="803.4" y="1061" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="806.38" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (51,415,419 samples, 0.02%)</title><rect x="167.7" y="1061" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="170.67" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,336,762 samples, 0.01%)</title><rect x="543.3" y="405" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.27" y="415.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (23,473,922 samples, 0.01%)</title><rect x="575.1" y="1461" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="578.10" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (58,959,567 samples, 0.02%)</title><rect x="629.9" y="677" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="632.93" y="687.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (66,329,233 samples, 0.02%)</title><rect x="972.7" y="1125" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="975.69" y="1135.5" ></text>
</g>
<g >
<title>__strlen_avx2 (216,316,086 samples, 0.08%)</title><rect x="143.7" y="1653" width="0.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="146.68" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,574,906 samples, 0.01%)</title><rect x="1054.4" y="373" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.43" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (53,979,279 samples, 0.02%)</title><rect x="117.8" y="1317" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="120.80" y="1327.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (30,911,045 samples, 0.01%)</title><rect x="867.7" y="1045" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="870.73" y="1055.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (23,727,578 samples, 0.01%)</title><rect x="267.0" y="741" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="270.02" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (23,096,253 samples, 0.01%)</title><rect x="936.2" y="981" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="939.17" y="991.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (193,278,104 samples, 0.07%)</title><rect x="639.3" y="869" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="642.31" y="879.5" ></text>
</g>
<g >
<title>_int_free (367,315,808 samples, 0.14%)</title><rect x="278.9" y="1669" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="281.91" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (22,643,153 samples, 0.01%)</title><rect x="259.9" y="309" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="262.93" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (78,312,852 samples, 0.03%)</title><rect x="1040.4" y="1077" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1043.44" y="1087.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (36,304,985 samples, 0.01%)</title><rect x="1113.3" y="1269" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1116.32" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,496,785 samples, 0.02%)</title><rect x="543.2" y="709" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="546.23" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,005,951 samples, 0.01%)</title><rect x="63.5" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="66.52" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (54,217,409 samples, 0.02%)</title><rect x="813.0" y="1045" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="815.99" y="1055.5" ></text>
</g>
<g >
<title>[web-server] (35,011,231 samples, 0.01%)</title><rect x="84.8" y="1045" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="87.77" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin (35,557,239 samples, 0.01%)</title><rect x="1070.2" y="949" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1073.20" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_add_char (27,893,997 samples, 0.01%)</title><rect x="297.3" y="1157" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="300.28" y="1167.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (80,797,331 samples, 0.03%)</title><rect x="373.3" y="997" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="376.29" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (49,939,551 samples, 0.02%)</title><rect x="347.3" y="677" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="350.27" y="687.5" ></text>
</g>
<g >
<title>[unknown] (68,871,494 samples, 0.03%)</title><rect x="717.3" y="1669" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="720.28" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (42,384,911 samples, 0.02%)</title><rect x="1054.7" y="645" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1057.65" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_match (103,084,245 samples, 0.04%)</title><rect x="683.9" y="1333" width="0.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="686.94" y="1343.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::operator[] (70,407,534 samples, 0.03%)</title><rect x="540.8" y="1125" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="543.82" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (29,383,645 samples, 0.01%)</title><rect x="768.3" y="1317" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="771.29" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_add_char (35,827,651 samples, 0.01%)</title><rect x="861.9" y="1157" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="864.88" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="757" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="767.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (134,414,055 samples, 0.05%)</title><rect x="118.2" y="1349" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="121.15" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (22,683,579 samples, 0.01%)</title><rect x="556.9" y="581" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (35,420,173 samples, 0.01%)</title><rect x="118.4" y="629" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="121.37" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (10,383,693,838 samples, 3.89%)</title><rect x="721.0" y="1189" width="45.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="724.03" y="1199.5" >std:..</text>
</g>
<g >
<title>__napi_poll (29,601,028 samples, 0.01%)</title><rect x="867.7" y="997" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="870.74" y="1007.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (317,209,668 samples, 0.12%)</title><rect x="403.4" y="1317" width="1.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="406.37" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (261,540,629 samples, 0.10%)</title><rect x="935.3" y="1029" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="938.27" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (23,735,330 samples, 0.01%)</title><rect x="556.9" y="1109" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.85" y="1119.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (258,055,578 samples, 0.10%)</title><rect x="192.5" y="1061" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="195.46" y="1071.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (624,898,516 samples, 0.23%)</title><rect x="603.1" y="1029" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="606.12" y="1039.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt; (24,044,333 samples, 0.01%)</title><rect x="331.1" y="1061" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="334.06" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (86,232,113 samples, 0.03%)</title><rect x="1002.2" y="1189" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1005.17" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (3,701,058,707 samples, 1.39%)</title><rect x="1073.0" y="1125" width="16.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1075.98" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_S_max_size (64,949,870 samples, 0.02%)</title><rect x="1065.5" y="885" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1068.49" y="895.5" ></text>
</g>
<g >
<title>__fput_sync (290,653,986 samples, 0.11%)</title><rect x="692.2" y="1125" width="1.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="695.24" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (84,626,700 samples, 0.03%)</title><rect x="118.3" y="1189" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="121.29" y="1199.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (79,575,096 samples, 0.03%)</title><rect x="107.8" y="1029" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="110.80" y="1039.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__detail::_State&lt;char&gt;*, std::__detail::_State&lt;char&gt;*, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt; (27,868,298 samples, 0.01%)</title><rect x="223.8" y="1013" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="226.77" y="1023.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (28,165,606 samples, 0.01%)</title><rect x="1148.9" y="1333" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1151.89" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (70,969,228 samples, 0.03%)</title><rect x="333.3" y="1077" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="336.33" y="1087.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (33,672,815 samples, 0.01%)</title><rect x="610.4" y="1045" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="613.40" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3,902,092,211 samples, 1.46%)</title><rect x="382.3" y="1269" width="17.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="385.31" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (35,474,892 samples, 0.01%)</title><rect x="818.6" y="1029" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="821.59" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (93,564,448 samples, 0.04%)</title><rect x="719.3" y="1205" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="722.33" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::push_back (38,128,976 samples, 0.01%)</title><rect x="788.6" y="1109" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="791.60" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin (33,937,094 samples, 0.01%)</title><rect x="1105.5" y="1093" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1108.49" y="1103.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (52,588,411 samples, 0.02%)</title><rect x="683.5" y="1317" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="686.47" y="1327.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::tolower (32,197,663 samples, 0.01%)</title><rect x="671.5" y="1077" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="674.45" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_match (42,710,932 samples, 0.02%)</title><rect x="911.6" y="597" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="914.62" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (3,421,705,540 samples, 1.28%)</title><rect x="383.0" y="1109" width="15.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="386.01" y="1119.5" ></text>
</g>
<g >
<title>std::bitset&lt;256ul&gt;::reference::operator= (140,934,653 samples, 0.05%)</title><rect x="624.2" y="1125" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="627.19" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (800,062,649 samples, 0.30%)</title><rect x="513.8" y="1045" width="3.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="516.77" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (98,105,658 samples, 0.04%)</title><rect x="629.8" y="693" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="632.76" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (64,628,199 samples, 0.02%)</title><rect x="1108.6" y="1029" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1111.57" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,828,941 samples, 0.01%)</title><rect x="206.0" y="133" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="208.98" y="143.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (27,414,883,306 samples, 10.27%)</title><rect x="1000.9" y="1685" width="121.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1003.90" y="1695.5" >[libstdc++.so.6..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,923,047 samples, 0.01%)</title><rect x="488.4" y="357" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="491.38" y="367.5" ></text>
</g>
</g>
</svg>
